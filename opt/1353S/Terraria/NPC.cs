using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using ReLogic.Utilities;
using Terraria.Audio;
using Terraria.DataStructures;
using Terraria.Enums;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.UI;
using Terraria.ID;
using Terraria.Localization;
using Terraria.Utilities;
using Terraria.World.Generation;

namespace Terraria
{
	// Token: 0x02000028 RID: 40
	public class NPC : Entity
	{
 
		// Token: 0x0600027B RID: 635 RVA: 0x001CC378 File Offset: 0x001CA578
		public void AddBuff(int type, int time, bool quiet = false)
		{
			if (this.buffImmune[type])
			{
				return;
			}
			if (!quiet)
			{
				if (Main.netMode == 1)
				{
					NetMessage.SendData(53, -1, -1, null, this.whoAmI, (float)type, (float)time, 0f, 0, 0, 0);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(54, -1, -1, null, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			int num = -1;
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] == type)
				{
					if (this.buffTime[i] < time)
					{
						this.buffTime[i] = time;
					}
					return;
				}
			}
			while (num == -1)
			{
				int num2 = -1;
				for (int j = 0; j < 5; j++)
				{
					if (!Main.debuff[this.buffType[j]])
					{
						num2 = j;
						break;
					}
				}
				if (num2 == -1)
				{
					return;
				}
				for (int k = num2; k < 5; k++)
				{
					if (this.buffType[k] == 0)
					{
						num = k;
						break;
					}
				}
				if (num == -1)
				{
					this.DelBuff(num2);
				}
			}
			this.buffType[num] = type;
			this.buffTime[num] = time;
		}

        public void AI()
        {
            NpcAI.AI(this);
        }
		// Token: 0x06000269 RID: 617 RVA: 0x001A75E8 File Offset: 0x001A57E8
		public static bool AnyDanger()
		{
			bool flag = false;
            if (NpcMgr.MoonLordCountdown > 0)
			{
				flag = true;
			}
			if (Main.invasionType > 0)
			{
				flag = true;
			}
			if (!flag)
			{
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && (Main.npc[i].boss || NPCID.Sets.TechnicallyABoss[Main.npc[i].type]))
					{
						flag = true;
					}
				}
			}
			return flag;
		}

		// Token: 0x0600025D RID: 605 RVA: 0x0018E1C0 File Offset: 0x0018C3C0
		public bool AnyInteractions()
		{
			if (Main.netMode == 0)
			{
				if (this.playerInteraction[Main.myPlayer])
				{
					return true;
				}
			}
			else
			{
				for (int i = 0; i < 255; i++)
				{
					if (this.playerInteraction[i])
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x06000277 RID: 631 RVA: 0x001CC220 File Offset: 0x001CA420
		public static bool AnyNPCs(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x0600026A RID: 618 RVA: 0x001A7654 File Offset: 0x001A5854
		public static bool AnyoneNearCultists()
		{
			int num = NPC.FindFirstNPC(437);
			if (num == -1)
			{
				return false;
			}
			Rectangle rectangle = Utils.CenteredRectangle(Main.npc[num].Center, new Vector2(2500f, 1500f));
			Rectangle r = new Rectangle(0, 0, 2500, 1500);
			Vector2 vector = r.Size() / 2f;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					r.X = (int)Main.player[i].Center.X - (int)vector.X;
					r.Y = (int)Main.player[i].Center.Y - (int)vector.Y;
					if (rectangle.Intersects(r))
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x06000263 RID: 611 RVA: 0x0019AD4C File Offset: 0x00198F4C
		public void ApplyInteraction(int player)
		{
			if (this.realLife >= 0)
			{
				Main.npc[this.realLife].playerInteraction[player] = true;
			}
			else
			{
				this.playerInteraction[player] = true;
			}
			if (player < 255)
			{
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].lastInteraction = player;
					return;
				}
				this.lastInteraction = player;
			}
		}

		// Token: 0x06000292 RID: 658 RVA: 0x001CFD8C File Offset: 0x001CDF8C
		private void ApplyTileCollision(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			if (this.type == 72)
			{
				this.Collision_MoveBlazingWheel();
				return;
			}
			if (this.type >= 542 && this.type <= 545)
			{
				this.Collision_MoveSandshark(fall, cPosition, cWidth, cHeight);
				return;
			}
			if (this.type == 405 || this.type == 406)
			{
				this.Collision_MoveStardustCell(fall, cPosition, cWidth, cHeight);
				return;
			}
			if (this.type == 417)
			{
				this.Collision_MoveSolarSroller(fall, cPosition, cWidth, cHeight);
				return;
			}
			this.Collision_MoveNormal(fall, cPosition, cWidth, cHeight);
		}

		// Token: 0x0600022D RID: 557 RVA: 0x000ED8DE File Offset: 0x000EBADE
		public int BannerID()
		{
			if (this.netID >= -10)
			{
				return this.netID;
			}
			return this.type;
		}

		// Token: 0x06000252 RID: 594 RVA: 0x0018BCC8 File Offset: 0x00189EC8
		public void BigMimicSpawnSmoke()
		{
			if (Main.netMode == 2)
			{
				NetMessage.SendData(51, -1, -1, null, this.whoAmI, 4f, 0f, 0f, 0, 0, 0);
				return;
			}
			for (int i = 0; i < 20; i++)
			{
				int num = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
				Main.dust[num].velocity *= 2f;
				Main.dust[num].noGravity = true;
			}
			for (int j = 0; j < 3; j++)
			{
				for (int k = 0; k < 2; k++)
				{
					int num2 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width * j) * 0.45f - 20f, this.position.Y + (float)(this.height * k) * 0.5f + 10f), new Vector2(0f, 0f), 99, 1.1f);
					Main.gore[num2].velocity *= 0.3f;
				}
			}
		}

		// Token: 0x06000253 RID: 595 RVA: 0x0018BE14 File Offset: 0x0018A014
		public static bool BigMimicSummonCheck(int x, int y)
		{
			if (Main.netMode == 1 || !Main.hardMode)
			{
				return false;
			}
			int num = Chest.FindChest(x, y);
			if (num < 0)
			{
				return false;
			}
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 40; i++)
			{
				ushort num5 = Main.tile[Main.chest[num].x, Main.chest[num].y].type;
				int num6 = (int)(Main.tile[Main.chest[num].x, Main.chest[num].y].frameX / 36);
				if (TileID.Sets.BasicChest[(int)num5] && (num5 != 21 || num6 < 5 || num6 > 6) && Main.chest[num].item[i] != null && Main.chest[num].item[i].type > 0)
				{
					if (Main.chest[num].item[i].type == 3092)
					{
						num2 += Main.chest[num].item[i].stack;
					}
					else if (Main.chest[num].item[i].type == 3091)
					{
						num3 += Main.chest[num].item[i].stack;
					}
					else
					{
						num4++;
					}
				}
			}
			if (num4 == 0 && num2 + num3 == 1)
			{
				if (num2 != 1)
				{
				}
				if (TileID.Sets.BasicChest[(int)Main.tile[x, y].type])
				{
					if (Main.tile[x, y].frameX % 36 != 0)
					{
						x--;
					}
					if (Main.tile[x, y].frameY % 36 != 0)
					{
						y--;
					}
					int number = Chest.FindChest(x, y);
					for (int j = x; j <= x + 1; j++)
					{
						for (int k = y; k <= y + 1; k++)
						{
							if (TileID.Sets.BasicChest[(int)Main.tile[j, k].type])
							{
								Main.tile[j, k].active(false);
							}
						}
					}
					for (int l = 0; l < 40; l++)
					{
						Main.chest[num].item[l] = new Item();
					}
					Chest.DestroyChest(x, y);
					int number2 = 1;
					if (Main.tile[x, y].type == 467)
					{
						number2 = 5;
					}
					NetMessage.SendData(34, -1, -1, null, number2, (float)x, (float)y, 0f, number, 0, 0);
					NetMessage.SendTileSquare(-1, x, y, 3, TileChangeType.None);
				}
				int num7 = 475;
				if (num3 == 1)
				{
					if (WorldGen.crimson)
					{
						num7 = 474;
					}
					else
					{
						num7 = 473;
					}
				}
				int num8 = NPC.NewNPC(x * 16 + 16, y * 16 + 32, num7, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num8].whoAmI = num8;
				NetMessage.SendData(23, -1, -1, null, num8, 0f, 0f, 0f, 0, 0, 0);
				Main.npc[num8].BigMimicSpawnSmoke();
			}
			return false;
		}

		// Token: 0x0600021A RID: 538 RVA: 0x000EBD66 File Offset: 0x000E9F66
		public static bool BusyWithAnyInvasionOfSorts()
		{
			return Main.slimeRainTime != 0.0 || Main.bloodMoon || Main.eclipse || Main.snowMoon || Main.pumpkinMoon || Main.invasionType != 0 || DD2Event.Ongoing;
		}

		// Token: 0x0600027E RID: 638 RVA: 0x001CC529 File Offset: 0x001CA729
		public bool CanBeChasedBy(object attacker = null, bool ignoreDontTakeDamage = false)
		{
			return this.active && this.chaseable && this.lifeMax > 5 && (!this.dontTakeDamage | ignoreDontTakeDamage) && !this.friendly && !this.immortal;
		}

		// Token: 0x06000264 RID: 612 RVA: 0x0019ADAC File Offset: 0x00198FAC
		public static bool CanReleaseNPCs(int who)
		{
			float num = 0.7f;
			if (Main.netMode != 1)
			{
				num += 0.05f;
			}
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					num3++;
					if ((int)Main.npc[i].releaseOwner == who)
					{
						num2++;
					}
				}
			}
			int num4 = 0;
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					num4++;
				}
			}
			int num5 = (int)(200f * num / (float)num4);
			return (float)num3 < 200f * num && num2 < num5;
		}

		// Token: 0x0600025F RID: 607 RVA: 0x0019A57C File Offset: 0x0019877C
		public static void CatchNPC(int i, int who = -1)
		{
			if (!Main.npc[i].active)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				Main.npc[i].active = false;
				NetMessage.SendData(70, -1, -1, null, i, (float)who, 0f, 0f, 0, 0, 0);
				return;
			}
			if (Main.npc[i].catchItem > 0)
			{
				if (Main.npc[i].SpawnedFromStatue)
				{
					Vector2 vector = Main.npc[i].Center - new Vector2(20f);
					Utils.PoofOfSmoke(vector);
					Main.npc[i].active = false;
					NetMessage.SendData(23, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
					NetMessage.SendData(106, -1, -1, null, (int)vector.X, vector.Y, 0f, 0f, 0, 0, 0);
					return;
				}
				new Item().SetDefaults((int)Main.npc[i].catchItem, false);
				Item.NewItem((int)Main.player[who].Center.X, (int)Main.player[who].Center.Y, 0, 0, (int)Main.npc[i].catchItem, 1, false, 0, true, false);
				Main.npc[i].active = false;
				NetMessage.SendData(23, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		// Token: 0x06000258 RID: 600 RVA: 0x0018CBB0 File Offset: 0x0018ADB0
		public void CheckActive()
		{
			if (this.active)
			{
				int num = this.type;
				if (num <= 267)
				{
					if (num <= 119)
					{
						if (num <= 41)
						{
							switch (num)
							{
								case 8:
								case 9:
								case 11:
								case 12:
								case 14:
								case 15:
									break;
								case 10:
								case 13:
									goto IL_246;
								default:
									if (num - 40 > 1)
									{
										goto IL_246;
									}
									break;
							}
						}
						else
						{
							switch (num)
							{
								case 88:
								case 89:
								case 90:
								case 91:
								case 92:
								case 96:
								case 97:
								case 99:
								case 100:
									break;
								case 93:
								case 94:
								case 95:
								case 98:
									goto IL_246;
								default:
									if (num - 113 > 2 && num - 118 > 1)
									{
										goto IL_246;
									}
									break;
							}
						}
					}
					else if (num <= 139)
					{
						if (num - 134 > 2)
						{
							if (num != 139)
							{
								goto IL_246;
							}
							if (NPC.npcsFoundForCheckActive[134])
							{
								return;
							}
							goto IL_246;
						}
					}
					else if (num - 246 > 3 && num != 263 && num != 267)
					{
						goto IL_246;
					}
				}
				else if (num <= 422)
				{
					if (num <= 380)
					{
						if (num != 328 && num - 379 > 1)
						{
							goto IL_246;
						}
					}
					else if (num - 396 > 2 && num != 400 && num != 422)
					{
						goto IL_246;
					}
				}
				else if (num <= 493)
				{
					if (num - 437 > 3 && num != 488 && num != 493)
					{
						goto IL_246;
					}
				}
				else if (num != 507 && num != 517)
				{
					switch (num)
					{
						case 548:
						case 549:
						case 551:
						case 564:
						case 565:
							break;
						case 550:
							goto IL_246;
						case 552:
						case 553:
						case 554:
						case 555:
						case 556:
						case 557:
						case 558:
						case 559:
						case 560:
						case 561:
						case 562:
						case 563:
						case 566:
						case 567:
						case 568:
						case 569:
						case 570:
						case 571:
						case 572:
						case 573:
						case 574:
						case 575:
						case 576:
						case 577:
						case 578:
							if (NPC.npcsFoundForCheckActive[548])
							{
								return;
							}
							goto IL_246;
						default:
							goto IL_246;
					}
				}
				return;
				IL_246:
				if (this.townNPC)
				{
                    Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NpcMgr.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NpcMgr.townRangeY), NpcMgr.townRangeX * 2, NpcMgr.townRangeY * 2);
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && rectangle.Intersects(new Rectangle((int)Main.player[i].position.X, (int)Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
						{
							Main.player[i].townNPCs += this.npcSlots;
						}
					}
					return;
				}
				bool flag = false;
				Rectangle rectangle2 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.activeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
				Rectangle rectangle3 = new Rectangle((int)((double)(this.position.X + (float)(this.width / 2)) - (double)NpcMgr.sWidth * 0.5 - (double)this.width), (int)((double)(this.position.Y + (float)(this.height / 2)) - (double)NpcMgr.sHeight * 0.5 - (double)this.height), NpcMgr.sWidth + this.width * 2, NpcMgr.sHeight + this.height * 2);
				for (int j = 0; j < 255; j++)
				{
					if (Main.player[j].active)
					{
						if (rectangle2.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							flag = true;
							if (this.type != 25 && this.type != 30 && this.type != 33 && this.releaseOwner == 255 && this.lifeMax > 0)
							{
								if (Main.slimeRain && Main.slimeRainNPC[this.type])
								{
									Main.player[j].activeNPCs += this.npcSlots * Main.slimeRainNPCSlots;
								}
								else
								{
									Main.player[j].activeNPCs += this.npcSlots;
								}
							}
						}
						if (rectangle3.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							this.timeLeft = NPC.activeTime;
						}
						if (this.boss)
						{
							flag = true;
						}
						num = this.type;
						if (num <= 39)
						{
							if (num <= 10)
							{
								if (num != 7 && num != 10)
								{
									goto IL_5E8;
								}
							}
							else if (num != 13 && num - 35 > 1 && num != 39)
							{
								goto IL_5E8;
							}
						}
						else if (num <= 131)
						{
							if (num != 87 && num - 127 > 4)
							{
								goto IL_5E8;
							}
						}
						else if (num - 392 > 2)
						{
							if (num == 399)
							{
								if (this.ai[0] == 2f || this.ai[0] == 1f)
								{
									this.timeLeft = NPC.activeTime;
								}
								flag = true;
								goto IL_5E8;
							}
							if (num - 491 > 1)
							{
								goto IL_5E8;
							}
						}
						flag = true;
					}
					IL_5E8:;
				}
				this.timeLeft--;
				if (this.timeLeft <= 0)
				{
					flag = false;
				}
				if (!flag && Main.netMode != 1)
				{
					NpcMgr.noSpawnCycle = true;
					this.active = false;
					if (Main.netMode == 2)
					{
						this.netSkip = -1;
						this.life = 0;
						NetMessage.SendData(23, -1, -1, null, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					}
					if (this.aiStyle == 6)
					{
						for (int k = (int)this.ai[0]; k > 0; k = (int)Main.npc[k].ai[0])
						{
							if (Main.npc[k].active)
							{
								Main.npc[k].active = false;
								if (Main.netMode == 2)
								{
									Main.npc[k].life = 0;
									Main.npc[k].netSkip = -1;
									NetMessage.SendData(23, -1, -1, null, k, 0f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x06000272 RID: 626 RVA: 0x001A9033 File Offset: 0x001A7233
		public int checkArmorPenetration(int armorPenetration)
		{
			if (armorPenetration <= 0)
			{
				return 0;
			}
			if (armorPenetration > this.defense && this.defense >= 0)
			{
				return this.defense / 2;
			}
			return armorPenetration / 2;
		}

		// Token: 0x06000259 RID: 601 RVA: 0x0018D2B8 File Offset: 0x0018B4B8
		public void checkDead()
		{
			if (!this.active)
			{
				return;
			}
			if (this.realLife >= 0 && this.realLife != this.whoAmI)
			{
				return;
			}
			if (this.life <= 0)
			{
				if (this.type == 397 || this.type == 396)
				{
					if (this.ai[0] != -2f)
					{
						this.ai[0] = -2f;
						this.life = this.lifeMax;
						this.netUpdate = true;
						this.dontTakeDamage = true;
						if (Main.netMode != 1)
						{
							int num = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 400, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num].ai[3] = this.ai[3];
							Main.npc[num].netUpdate = true;
						}
					}
					return;
				}
				if (this.type == 398 && this.ai[0] != 2f)
				{
					this.ai[0] = 2f;
					this.life = this.lifeMax;
					this.netUpdate = true;
					this.dontTakeDamage = true;
					return;
				}
				if ((this.type == 517 || this.type == 422 || this.type == 507 || this.type == 493) && this.ai[2] != 1f)
				{
					this.ai[2] = 1f;
					this.ai[1] = 0f;
					this.life = this.lifeMax;
					this.dontTakeDamage = true;
					this.netUpdate = true;
					return;
				}
				if (this.type == 548 && this.ai[1] != 1f)
				{
					this.ai[1] = 1f;
					this.ai[0] = 0f;
					this.life = this.lifeMax;
					this.dontTakeDamageFromHostiles = true;
					this.netUpdate = true;
					return;
				}
				NpcMgr.noSpawnCycle = true;
				if (this.townNPC && this.type != 37 && this.type != 453)
				{
					NetworkText fullNetName = this.GetFullNetName();
					NetworkText networkText = NetworkText.FromKey(Lang.misc[(this.type == 369) ? 36 : 19].Key, new object[]
					{
						fullNetName
					});
					if (Main.netMode == 0)
					{
						Main.NewText(networkText.ToString(), 255, 25, 25, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.BroadcastChatMessage(networkText, new Color(255, 25, 25), -1);
					}
				}
				if (Main.netMode != 1 && !Main.dayTime && this.type == 54 && !NPC.AnyNPCs(35))
				{
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && !Main.player[i].dead && Main.player[i].killClothier)
						{
							NpcMgr.SpawnSkeletron();
							break;
						}
					}
				}
				if (this.townNPC && Main.netMode != 1 && this.homeless && WorldGen.prioritizedTownNPC == this.type)
				{
					WorldGen.prioritizedTownNPC = 0;
				}
				if (this.DeathSound != null)
				{
					Main.PlaySound(this.DeathSound, this.position);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					bool flag = true;
					for (int j = 0; j < 200; j++)
					{
						if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 13 || Main.npc[j].type == 14 || Main.npc[j].type == 15))
						{
							flag = false;
							break;
						}
					}
					if (flag)
					{
						this.boss = true;
						this.NPCLoot();
					}
					else
					{
						this.NPCLoot();
					}
				}
				else if (this.type == 134)
				{
					Vector2 position = this.position;
					Vector2 center = Main.player[this.target].Center;
					float num2 = 1E+08f;
					Vector2 position2 = this.position;
					for (int k = 0; k < 200; k++)
					{
						if (Main.npc[k].active && (Main.npc[k].type == 134 || Main.npc[k].type == 135 || Main.npc[k].type == 136))
						{
							float num3 = Math.Abs(Main.npc[k].Center.X - center.X) + Math.Abs(Main.npc[k].Center.Y - center.Y);
							if (num3 < num2)
							{
								num2 = num3;
								position2 = Main.npc[k].position;
							}
						}
					}
					this.position = position2;
					this.NPCLoot();
					this.position = position;
				}
				else
				{
					this.NPCLoot();
				}
				this.active = false;
				DD2Event.CheckProgress(this.type);
				this.CheckProgressFrostMoon();
				this.CheckProgressPumpkinMoon();
				int num4 = 0;
				int num5 = this.type;
				if (num5 > 145)
				{
					if (num5 <= 395)
					{
						if (num5 - 212 > 4)
						{
							switch (num5)
							{
								case 381:
								case 382:
								case 383:
								case 385:
								case 386:
								case 388:
								case 389:
								case 390:
								case 391:
								case 395:
									num4 = 4;
									goto IL_5DA;
								case 384:
								case 387:
								case 392:
								case 393:
								case 394:
									goto IL_5DA;
								default:
									goto IL_5DA;
							}
						}
					}
					else
					{
						if (num5 == 471)
						{
							goto IL_5CC;
						}
						if (num5 != 491)
						{
							goto IL_5DA;
						}
					}
					num4 = 3;
					goto IL_5DA;
				}
				if (num5 - 26 > 3 && num5 != 111)
				{
					if (num5 - 143 > 2)
					{
						goto IL_5DA;
					}
					num4 = 2;
					goto IL_5DA;
				}
				IL_5CC:
				num4 = 1;
				IL_5DA:
				if (num4 != 0 && num4 == Main.invasionType)
				{
					int num6 = 1;
					num5 = this.type;
					if (num5 <= 395)
					{
						if (num5 != 216)
						{
							if (num5 == 395)
							{
								num6 = 10;
							}
						}
						else
						{
							num6 = 5;
						}
					}
					else if (num5 != 471)
					{
						if (num5 == 491)
						{
							num6 = 10;
						}
					}
					else
					{
						num6 = 10;
					}
					Main.invasionSize -= num6;
					if (Main.invasionSize < 0)
					{
						Main.invasionSize = 0;
					}
					if (Main.netMode != 1)
					{
						Main.ReportInvasionProgress(Main.invasionSizeStart - Main.invasionSize, Main.invasionSizeStart, num4 + 3, 0);
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(78, -1, -1, null, Main.invasionProgress, (float)Main.invasionProgressMax, (float)Main.invasionProgressIcon, 0f, 0, 0, 0);
					}
				}
			}
		}

		// Token: 0x060002A9 RID: 681 RVA: 0x001D49C8 File Offset: 0x001D2BC8
		public void CheckDrowning()
		{
			bool flag = Collision.DrownCollision(this.position, this.width, this.height, 1f);
			if (Main.netMode != 1)
			{
				if (flag)
				{
					int num = this.breathCounter + 1;
					this.breathCounter = num;
					if (num >= 7)
					{
						this.breathCounter = 0;
						this.breath--;
						if (this.breath <= 0)
						{
							this.friendlyRegen = 0;
							this.breath = 0;
							this.life -= 2;
							if (this.life % 24 < 2)
							{
								this.netUpdate = true;
							}
							if (this.life <= 0)
							{
								this.life = 1;
								this.StrikeNPCNoInteraction(2, 0f, 0, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, null, this.whoAmI, 2f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
				else
				{
					this.breath += 3;
					if (this.breath > 200)
					{
						this.breath = 200;
					}
					this.breathCounter = 0;
				}
			}
			if (flag && Main.rand.Next(20) == 0 && !this.lavaWet && !this.honeyWet)
			{
				int num2 = 0;
				int num3 = 0;
				if (this.type == 369)
				{
					num3 = 8;
				}
				Dust.NewDust(new Vector2(this.position.X + (float)((10 + num2) * this.direction), this.position.Y + (float)num3 + 4f), this.width - 8, 8, 34, 0f, 0f, 0, default(Color), 1.2f);
			}
		}

		// Token: 0x0600028F RID: 655 RVA: 0x001CFB28 File Offset: 0x001CDD28
		private void CheckLifeRegen()
		{
			if (this.life < this.lifeMax)
			{
				this.friendlyRegen++;
				if (this.dryadWard)
				{
					this.friendlyRegen += 10;
				}
				if (this.friendlyRegen > 180)
				{
					this.friendlyRegen = 0;
					this.life++;
					this.netUpdate = true;
				}
			}
		}

		// Token: 0x0600028E RID: 654 RVA: 0x001CF960 File Offset: 0x001CDB60
		private void CheckMeleeCollision()
		{
			if (this.dontTakeDamageFromHostiles)
			{
				return;
			}
			int num = 1;
			if (this.immune[255] == 0)
			{
				int num2 = 30;
				if (this.type == 548)
				{
					num2 = 20;
				}
				Rectangle hitbox = base.Hitbox;
				for (int i = 0; i < 200; i++)
				{
					NPC nPC = Main.npc[i];
					if (nPC.active && !nPC.friendly && nPC.damage > 0)
					{
						Rectangle hitbox2 = nPC.Hitbox;
						float num3 = 1f;
						NPC.GetMeleeCollisionData(hitbox, i, ref num, ref num3, ref hitbox2);
						if (hitbox.Intersects(hitbox2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(nPC.netID)))
						{
							int num4 = nPC.damage;
							int num5 = 6;
							int num6 = 1;
							if (nPC.position.X + (float)(nPC.width / 2) > this.position.X + (float)(this.width / 2))
							{
								num6 = -1;
							}
							double num7 = this.StrikeNPCNoInteraction(num4, (float)num5, num6, false, false, false);
							if (Main.netMode != 0)
							{
								NetMessage.SendData(28, -1, -1, null, this.whoAmI, (float)num4, (float)num5, (float)num6, 0, 0, 0);
							}
							this.netUpdate = true;
							this.immune[255] = num2;
							if (this.dryadWard)
							{
								num4 = (int)num7 / 3;
								num5 = 6;
								num6 *= -1;
								nPC.StrikeNPCNoInteraction(num4, (float)num5, num6, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, null, i, (float)num4, (float)num5, (float)num6, 0, 0, 0);
								}
								nPC.netUpdate = true;
								nPC.immune[255] = num2;
							}
						}
					}
				}
			}
		}

		// Token: 0x0600025A RID: 602 RVA: 0x0018D968 File Offset: 0x0018BB68
		private void CheckProgressFrostMoon()
		{
			if (Main.snowMoon)
			{
				NetworkText networkText = NetworkText.Empty;
				int[] array = new int[]
				{
					0,
					25,
					15,
					10,
					30,
					100,
					160,
					180,
					200,
					250,
					300,
					375,
					450,
					525,
					675,
					850,
					1025,
					1325,
					1550,
					2000,
					0
				};
				int num = array[NpcMgr.waveNumber];
				switch (NpcMgr.waveNumber)
				{
					case 1:
						networkText = Lang.GetInvasionWaveText(2, new short[]
						{
						338,
						350
						});
						break;
					case 2:
						networkText = Lang.GetInvasionWaveText(3, new short[]
						{
						338,
						350,
						342,
						348
						});
						break;
					case 3:
						networkText = Lang.GetInvasionWaveText(4, new short[]
						{
						344,
						338,
						350,
						342
						});
						break;
					case 4:
						networkText = Lang.GetInvasionWaveText(5, new short[]
						{
						344,
						338,
						350,
						348
						});
						break;
					case 5:
						networkText = Lang.GetInvasionWaveText(6, new short[]
						{
						344,
						350,
						348,
						347
						});
						break;
					case 6:
						networkText = Lang.GetInvasionWaveText(7, new short[]
						{
						346,
						342,
						350,
						338
						});
						break;
					case 7:
						networkText = Lang.GetInvasionWaveText(8, new short[]
						{
						346,
						347,
						350,
						348,
						351
						});
						break;
					case 8:
						networkText = Lang.GetInvasionWaveText(9, new short[]
						{
						346,
						344,
						348,
						347,
						342
						});
						break;
					case 9:
						networkText = Lang.GetInvasionWaveText(10, new short[]
						{
						346,
						344,
						351,
						338,
						347
						});
						break;
					case 10:
						networkText = Lang.GetInvasionWaveText(11, new short[]
						{
						345,
						352,
						338,
						342
						});
						break;
					case 11:
						networkText = Lang.GetInvasionWaveText(12, new short[]
						{
						345,
						344,
						342,
						343,
						338
						});
						break;
					case 12:
						networkText = Lang.GetInvasionWaveText(13, new short[]
						{
						345,
						346,
						342,
						352,
						343,
						347
						});
						break;
					case 13:
						networkText = Lang.GetInvasionWaveText(14, new short[]
						{
						345,
						346,
						344,
						343,
						351
						});
						break;
					case 14:
						networkText = Lang.GetInvasionWaveText(15, new short[]
						{
						345,
						346,
						344,
						343,
						347
						});
						break;
					case 15:
						networkText = Lang.GetInvasionWaveText(16, new short[]
						{
						345,
						346,
						344,
						343,
						352
						});
						break;
					case 16:
						networkText = Lang.GetInvasionWaveText(17, new short[]
						{
						345,
						346,
						344,
						343,
						351,
						347
						});
						break;
					case 17:
						networkText = Lang.GetInvasionWaveText(18, new short[]
						{
						345,
						346,
						344,
						343,
						348,
						351
						});
						break;
					case 18:
						networkText = Lang.GetInvasionWaveText(19, new short[]
						{
						345,
						346,
						344,
						343
						});
						break;
					case 19:
						networkText = Lang.GetInvasionWaveText(-1, new short[]
						{
						345,
						346,
						344
						});
						break;
				}
				float num2 = 0f;
				switch (this.type)
				{
					case 338:
					case 339:
					case 340:
						num2 = 1f;
						break;
					case 341:
						num2 = 20f;
						break;
					case 342:
						num2 = 2f;
						break;
					case 343:
						num2 = 18f;
						break;
					case 344:
						num2 = 50f;
						break;
					case 345:
						num2 = 150f;
						break;
					case 346:
						num2 = 100f;
						break;
					case 347:
						num2 = 8f;
						break;
					case 348:
					case 349:
						num2 = 4f;
						break;
					case 350:
						num2 = 3f;
						break;
				}
				if (Main.expertMode)
				{
					num2 *= 2f;
				}
				float num3 = NpcMgr.waveKills;
				NpcMgr.waveKills += num2;
				if (NpcMgr.waveKills >= (float)num && num != 0)
				{
					NpcMgr.waveKills = 0f;
					NpcMgr.waveNumber++;
					num = array[NpcMgr.waveNumber];
					if (networkText != NetworkText.Empty)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(networkText.ToString(), 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.BroadcastChatMessage(networkText, new Color(175, 75, 255), -1);
						}
						if (NpcMgr.waveNumber == 15)
						{
							AchievementsHelper.NotifyProgressionEvent(14);
						}
					}
				}
				if (NpcMgr.waveKills != num3 && num2 != 0f)
				{
					if (Main.netMode != 1)
					{
						Main.ReportInvasionProgress((int)NpcMgr.waveKills, num, 1, NpcMgr.waveNumber);
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(78, -1, -1, null, Main.invasionProgress, (float)Main.invasionProgressMax, 1f, (float)NpcMgr.waveNumber, 0, 0, 0);
					}
				}
			}
		}

		// Token: 0x0600025B RID: 603 RVA: 0x0018DDC4 File Offset: 0x0018BFC4
		private void CheckProgressPumpkinMoon()
		{
			if (Main.pumpkinMoon)
			{
				NetworkText networkText = NetworkText.Empty;
				int[] array = new int[]
				{
					0,
					25,
					40,
					50,
					80,
					100,
					160,
					180,
					200,
					250,
					300,
					375,
					450,
					525,
					675,
					0
				};
				int num = array[NpcMgr.waveNumber];
				switch (NpcMgr.waveNumber)
				{
					case 1:
						networkText = Lang.GetInvasionWaveText(2, new short[]
						{
						305,
						326
						});
						break;
					case 2:
						networkText = Lang.GetInvasionWaveText(3, new short[]
						{
						305,
						326,
						329
						});
						break;
					case 3:
						networkText = Lang.GetInvasionWaveText(4, new short[]
						{
						305,
						326,
						329,
						325
						});
						break;
					case 4:
						networkText = Lang.GetInvasionWaveText(5, new short[]
						{
						305,
						326,
						329,
						330,
						325
						});
						break;
					case 5:
						networkText = Lang.GetInvasionWaveText(6, new short[]
						{
						326,
						329,
						330,
						325
						});
						break;
					case 6:
						networkText = Lang.GetInvasionWaveText(7, new short[]
						{
						305,
						329,
						330,
						327
						});
						break;
					case 7:
						networkText = Lang.GetInvasionWaveText(8, new short[]
						{
						326,
						329,
						330,
						327
						});
						break;
					case 8:
						networkText = Lang.GetInvasionWaveText(9, new short[]
						{
						305,
						315,
						325,
						327
						});
						break;
					case 9:
						networkText = Lang.GetInvasionWaveText(10, new short[]
						{
						326,
						329,
						330,
						315,
						325,
						327
						});
						break;
					case 10:
						networkText = Lang.GetInvasionWaveText(11, new short[]
						{
						305,
						326,
						329,
						330,
						315,
						325,
						327
						});
						break;
					case 11:
						networkText = Lang.GetInvasionWaveText(12, new short[]
						{
						326,
						329,
						330,
						315,
						325,
						327
						});
						break;
					case 12:
						networkText = Lang.GetInvasionWaveText(13, new short[]
						{
						329,
						330,
						315,
						325,
						327
						});
						break;
					case 13:
						networkText = Lang.GetInvasionWaveText(14, new short[]
						{
						315,
						325,
						327
						});
						break;
					case 14:
						networkText = Lang.GetInvasionWaveText(-1, new short[]
						{
						325,
						327
						});
						break;
				}
				float num2 = 0f;
				switch (this.type)
				{
					case 305:
					case 306:
					case 307:
					case 308:
					case 309:
					case 310:
					case 311:
					case 312:
					case 313:
					case 314:
						num2 = 1f;
						break;
					case 315:
						num2 = 25f;
						break;
					case 325:
						num2 = 75f;
						break;
					case 326:
						num2 = 2f;
						break;
					case 327:
						num2 = 150f;
						break;
					case 329:
						num2 = 4f;
						break;
					case 330:
						num2 = 8f;
						break;
				}
				if (Main.expertMode)
				{
					num2 *= 2f;
				}
				float num3 = NpcMgr.waveKills;
				NpcMgr.waveKills += num2;
				if (NpcMgr.waveKills >= (float)num && num != 0)
				{
					NpcMgr.waveKills = 0f;
					NpcMgr.waveNumber++;
					num = array[NpcMgr.waveNumber];
					if (networkText != NetworkText.Empty)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(networkText.ToString(), 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.BroadcastChatMessage(networkText, new Color(175, 75, 255), -1);
						}
						if (NpcMgr.waveNumber == 15)
						{
							AchievementsHelper.NotifyProgressionEvent(15);
						}
					}
				}
				if (NpcMgr.waveKills != num3 && num2 != 0f)
				{
					if (Main.netMode != 1)
					{
						Main.ReportInvasionProgress((int)NpcMgr.waveKills, num, 2, NpcMgr.waveNumber);
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(78, -1, -1, null, Main.invasionProgress, (float)Main.invasionProgressMax, 2f, (float)NpcMgr.waveNumber, 0, 0, 0);
					}
				}
			}
		}

		// Token: 0x0600021D RID: 541 RVA: 0x000EBDDC File Offset: 0x000E9FDC
		public static void ClearFoundActiveNPCs()
		{
			for (int i = 0; i < NPC.npcsFoundForCheckActive.Length; i++)
			{
				NPC.npcsFoundForCheckActive[i] = false;
			}
		}

		// Token: 0x060002A8 RID: 680 RVA: 0x00003C56 File Offset: 0x00001E56
		public object Clone()
		{
			return base.MemberwiseClone();
		}

		// Token: 0x0600029F RID: 671 RVA: 0x001D08F8 File Offset: 0x001CEAF8
		private bool Collision_DecideFallThroughPlatforms()
		{
			bool result = false;
			if (this.type == 2 || this.type == -43 || this.type == 317 || this.type == 318 || this.type == 133)
			{
				result = true;
			}
			if (this.aiStyle == 10)
			{
				result = true;
			}
			if (this.aiStyle == 40)
			{
				result = true;
			}
			if (this.type == 467)
			{
				result = true;
			}
			if (this.type == 477)
			{
				result = true;
			}
			if (this.aiStyle == 14)
			{
				result = true;
			}
			if (this.type == 173)
			{
				result = true;
			}
			if (this.type == 469 && this.ai[2] == 1f)
			{
				result = true;
			}
			if (this.aiStyle == 3 && this.directionY == 1)
			{
				result = true;
			}
			if (this.type == 210 || this.type == 211)
			{
				result = true;
			}
			if (this.type == 50 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
			{
				result = true;
			}
			if (this.type == 247 || this.type == 248)
			{
				result = true;
			}
			if (this.type == 245 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
			{
				result = true;
			}
			if (this.type >= 542 && this.type <= 545)
			{
				result = true;
			}
			if (this.aiStyle == 107 && this.directionY == 1)
			{
				result = true;
			}
			if (this.type == 418)
			{
				result = true;
			}
			if (this.aiStyle == 87 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
			{
				result = true;
			}
			if (this.aiStyle == 7)
			{
				int num = 16;
				bool flag = false;
				if (!Main.dayTime || Main.invasionType > 0 || Main.eclipse)
				{
					flag = true;
				}
				else
				{
					int num2 = (int)(this.position.Y + (float)this.height) / 16;
					if (this.homeTileY - num2 > num)
					{
						result = true;
					}
				}
				if (flag && (this.position.Y + (float)this.height - 8f) / 16f < (float)(this.homeTileY - 1))
				{
					result = true;
				}
			}
			return result;
		}

		// Token: 0x060002A1 RID: 673 RVA: 0x001D161C File Offset: 0x001CF81C
		private bool Collision_LavaCollision()
		{
			bool expr_17 = Collision.LavaCollision(this.position, this.width, this.height);
			if (expr_17)
			{
				this.lavaWet = true;
				if (!this.lavaImmune && !this.dontTakeDamage && Main.netMode != 1 && this.immune[255] == 0)
				{
					this.AddBuff(24, 420, false);
					this.immune[255] = 30;
					this.StrikeNPCNoInteraction(50, 0f, 0, false, false, false);
					if (Main.netMode == 2 && Main.netMode != 0)
					{
						NetMessage.SendData(28, -1, -1, null, this.whoAmI, 50f, 0f, 0f, 0, 0, 0);
					}
				}
			}
			return expr_17;
		}

		// Token: 0x06000299 RID: 665 RVA: 0x001D0390 File Offset: 0x001CE590
		private void Collision_MoveBlazingWheel()
		{
			Vector2 position = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
			int num = 12;
			int num2 = 12;
			position.X -= (float)(num / 2);
			position.Y -= (float)(num2 / 2);
			this.velocity = Collision.noSlopeCollision(position, this.velocity, num, num2, true, true);
		}

		// Token: 0x0600029B RID: 667 RVA: 0x001D04E0 File Offset: 0x001CE6E0
		private void Collision_MoveHoneyOld(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			Vector2 velocity = this.velocity;
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			Vector2 value = this.velocity * 0.25f;
			if (this.velocity.X != velocity.X)
			{
				value.X = this.velocity.X;
				this.collideX = true;
			}
			if (this.velocity.Y != velocity.Y)
			{
				value.Y = this.velocity.Y;
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += value;
		}

		// Token: 0x06000295 RID: 661 RVA: 0x001D015C File Offset: 0x001CE35C
		private void Collision_MoveNormal(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
		}

		// Token: 0x06000296 RID: 662 RVA: 0x001D0178 File Offset: 0x001CE378
		private void Collision_MoveSandshark(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.AdvancedTileCollision(TileID.Sets.ForAdvancedCollision.ForSandshark, cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
		}

		// Token: 0x06000293 RID: 659 RVA: 0x001CFE1C File Offset: 0x001CE01C
		private void Collision_MoveSlopesAndStairFall(bool fall)
		{
			if (fall)
			{
				this.stairFall = true;
			}
			if (this.aiStyle == 7)
			{
				int num = (int)base.Center.X / 16;
				int num2 = (int)this.position.Y / 16;
				if (WorldGen.InWorld(num, num2, 0))
				{
					int num3 = 16;
					bool flag = false;
					if (Main.tile[num, num2] != null && Main.tile[num, num2].active() && Main.tileSolid[(int)Main.tile[num, num2].type])
					{
						flag = true;
					}
					if (!Main.dayTime || Main.eclipse)
					{
						flag = true;
					}
					else
					{
						int num4 = (int)(this.position.Y + (float)this.height) / 16;
						if (this.homeTileY - num4 > num3)
						{
							flag = true;
						}
					}
					if (flag)
					{
						if ((this.position.Y + (float)this.height - 8f) / 16f < (float)this.homeTileY)
						{
							this.stairFall = true;
						}
						else
						{
							this.stairFall = false;
						}
					}
				}
			}
			Vector2 vector;
			int width;
			int height;
			this.GetTileCollisionParameters(out vector, out width, out height);
			Vector2 value = this.position - vector;
			Vector4 vector2 = Collision.SlopeCollision(vector, this.velocity, width, height, NPC.gravity, this.stairFall);
			if (Collision.stairFall)
			{
				this.stairFall = true;
			}
			else if (!fall)
			{
				this.stairFall = false;
			}
			if (Collision.stair && Math.Abs(vector2.Y - this.position.Y) > 8f)
			{
				this.gfxOffY -= vector2.Y - this.position.Y;
				this.stepSpeed = 2f;
			}
			this.position.X = vector2.X;
			this.position.Y = vector2.Y;
			this.velocity.X = vector2.Z;
			this.velocity.Y = vector2.W;
			this.position += value;
		}

		// Token: 0x06000294 RID: 660 RVA: 0x001D002C File Offset: 0x001CE22C
		private void Collision_MoveSnailOnSlopes()
		{
			Vector4 vector = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, false);
			if (this.position.X != vector.X || this.position.Y != vector.Y)
			{
				if (this.ai[2] == 0f && this.velocity.Y > 0f && ((this.direction < 0 && this.rotation == 1.57f && this.spriteDirection == 1) || (this.direction > 0 && this.rotation == 4.71f && this.spriteDirection == -1)))
				{
					this.direction *= -this.direction;
				}
				this.ai[2] = 2f;
				this.directionY = 1;
				this.rotation = 0f;
			}
			this.position.X = vector.X;
			this.position.Y = vector.Y;
			this.velocity.X = vector.Z;
			this.velocity.Y = vector.W;
		}

		// Token: 0x06000297 RID: 663 RVA: 0x001D01A4 File Offset: 0x001CE3A4
		private void Collision_MoveSolarSroller(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (this.ai[0] == 6f && this.velocity != this.oldVelocity)
			{
				this.ai[2] -= 1f;
				this.ai[3] = 1f;
				if (this.ai[2] > 0f)
				{
					if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
					{
						this.velocity.X = -this.oldVelocity.X * 0.9f;
						this.direction *= -1;
					}
					if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
					{
						this.velocity.Y = -this.oldVelocity.Y * 0.9f;
					}
				}
			}
		}

		// Token: 0x06000298 RID: 664 RVA: 0x001D02C4 File Offset: 0x001CE4C4
		private void Collision_MoveStardustCell(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (this.velocity != this.oldVelocity)
			{
				if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
				{
					this.velocity.X = -this.oldVelocity.X * 0.8f;
				}
				if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
				{
					this.velocity.Y = -this.oldVelocity.Y * 0.8f;
				}
			}
		}

		// Token: 0x0600029A RID: 666 RVA: 0x001D0408 File Offset: 0x001CE608
		private void Collision_MoveWaterOrLavaOld(bool fall, Vector2 cPosition, int cWidth, int cHeight)
		{
			Vector2 velocity = this.velocity;
			this.velocity = Collision.TileCollision(cPosition, this.velocity, cWidth, cHeight, fall, fall, 1);
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			Vector2 value = this.velocity * 0.5f;
			if (this.velocity.X != velocity.X)
			{
				value.X = this.velocity.X;
				this.collideX = true;
			}
			if (this.velocity.Y != velocity.Y)
			{
				value.Y = this.velocity.Y;
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += value;
		}

		// Token: 0x06000291 RID: 657 RVA: 0x001CFCF8 File Offset: 0x001CDEF8
		private void Collision_MoveWhileDry()
		{
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			if (this.oldVelocity.X != this.velocity.X)
			{
				this.collideX = true;
			}
			if (this.oldVelocity.Y != this.velocity.Y)
			{
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += this.velocity;
		}

		// Token: 0x0600029C RID: 668 RVA: 0x001D05B8 File Offset: 0x001CE7B8
		private void Collision_MoveWhileWet(Vector2 oldDryVelocity, float Slowdown = 0.5f)
		{
			if (Collision.up)
			{
				this.velocity.Y = 0.01f;
			}
			Vector2 value = this.velocity * Slowdown;
			if (this.velocity.X != oldDryVelocity.X)
			{
				value.X = this.velocity.X;
				this.collideX = true;
			}
			if (this.velocity.Y != oldDryVelocity.Y)
			{
				value.Y = this.velocity.Y;
				this.collideY = true;
			}
			this.oldPosition = this.position;
			this.oldDirection = this.direction;
			this.position += value;
		}

		// Token: 0x060002A2 RID: 674 RVA: 0x001D16D4 File Offset: 0x001CF8D4
		private void Collision_WalkDownSlopes()
		{
			Vector2 arg_06_0 = this.velocity;
			Vector4 vector = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
			this.position.X = vector.X;
			this.position.Y = vector.Y;
			this.velocity.X = vector.Z;
			this.velocity.Y = vector.W;
		}

		// Token: 0x060002A0 RID: 672 RVA: 0x001D0B78 File Offset: 0x001CED78
		private bool Collision_WaterCollision(bool lava)
		{
			bool flag;
			if (this.type == 72 || this.aiStyle == 21 || this.aiStyle == 67 || this.type == 376 || this.type == 579 || this.type == 541)
			{
				flag = false;
				this.wetCount = 0;
				lava = false;
			}
			else
			{
				flag = Collision.WetCollision(this.position, this.width, this.height);
				if (Collision.honey)
				{
					this.honeyWet = true;
				}
			}
			if (flag)
			{
				if (this.onFire && !this.lavaWet && Main.netMode != 1)
				{
					for (int i = 0; i < 5; i++)
					{
						if (this.buffType[i] == 24)
						{
							this.DelBuff(i);
						}
					}
				}
				if (!this.wet && this.wetCount == 0)
				{
					this.wetCount = 10;
					if (!lava)
					{
						if (this.honeyWet)
						{
							for (int j = 0; j < 10; j++)
							{
								int num = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
								Dust expr_160_cp_0_cp_0 = Main.dust[num];
								expr_160_cp_0_cp_0.velocity.Y = expr_160_cp_0_cp_0.velocity.Y - 1f;
								Dust expr_17A_cp_0_cp_0 = Main.dust[num];
								expr_17A_cp_0_cp_0.velocity.X = expr_17A_cp_0_cp_0.velocity.X * 2.5f;
								Main.dust[num].scale = 1.3f;
								Main.dust[num].alpha = 100;
								Main.dust[num].noGravity = true;
							}
							if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
						}
						else
						{
							for (int k = 0; k < 30; k++)
							{
								int num2 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
								Dust expr_2D1_cp_0_cp_0 = Main.dust[num2];
								expr_2D1_cp_0_cp_0.velocity.Y = expr_2D1_cp_0_cp_0.velocity.Y - 4f;
								Dust expr_2EC_cp_0_cp_0 = Main.dust[num2];
								expr_2EC_cp_0_cp_0.velocity.X = expr_2EC_cp_0_cp_0.velocity.X * 2.5f;
								Main.dust[num2].scale *= 0.8f;
								Main.dust[num2].alpha = 100;
								Main.dust[num2].noGravity = true;
							}
							if (this.type != 376 && this.type != 579 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && this.type != 445 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
							}
						}
					}
					else
					{
						for (int l = 0; l < 10; l++)
						{
							int num3 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
							Dust expr_4BA_cp_0_cp_0 = Main.dust[num3];
							expr_4BA_cp_0_cp_0.velocity.Y = expr_4BA_cp_0_cp_0.velocity.Y - 1.5f;
							Dust expr_4D5_cp_0_cp_0 = Main.dust[num3];
							expr_4D5_cp_0_cp_0.velocity.X = expr_4D5_cp_0_cp_0.velocity.X * 2.5f;
							Main.dust[num3].scale = 1.3f;
							Main.dust[num3].alpha = 100;
							Main.dust[num3].noGravity = true;
						}
						if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
						{
							Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
					}
				}
				this.wet = true;
			}
			else if (this.wet)
			{
				this.velocity.X = this.velocity.X * 0.5f;
				this.wet = false;
				if (this.wetCount == 0)
				{
					this.wetCount = 10;
					if (!this.lavaWet)
					{
						if (this.honeyWet)
						{
							for (int m = 0; m < 10; m++)
							{
								int num4 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
								Dust expr_670_cp_0_cp_0 = Main.dust[num4];
								expr_670_cp_0_cp_0.velocity.Y = expr_670_cp_0_cp_0.velocity.Y - 1f;
								Dust expr_68B_cp_0_cp_0 = Main.dust[num4];
								expr_68B_cp_0_cp_0.velocity.X = expr_68B_cp_0_cp_0.velocity.X * 2.5f;
								Main.dust[num4].scale = 1.3f;
								Main.dust[num4].alpha = 100;
								Main.dust[num4].noGravity = true;
							}
							if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 300 && this.type != 59 && this.aiStyle != 39 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
						}
						else
						{
							for (int n = 0; n < 30; n++)
							{
								int num5 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
								Dust expr_7E8_cp_0_cp_0 = Main.dust[num5];
								expr_7E8_cp_0_cp_0.velocity.Y = expr_7E8_cp_0_cp_0.velocity.Y - 4f;
								Dust expr_803_cp_0_cp_0 = Main.dust[num5];
								expr_803_cp_0_cp_0.velocity.X = expr_803_cp_0_cp_0.velocity.X * 2.5f;
								Main.dust[num5].scale *= 0.8f;
								Main.dust[num5].alpha = 100;
								Main.dust[num5].noGravity = true;
							}
							if (this.type != 376 && this.type != 579 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && this.type != 445 && !this.noGravity)
							{
								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
							}
						}
					}
					else
					{
						for (int num6 = 0; num6 < 10; num6++)
						{
							int num7 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
							Dust expr_9C1_cp_0_cp_0 = Main.dust[num7];
							expr_9C1_cp_0_cp_0.velocity.Y = expr_9C1_cp_0_cp_0.velocity.Y - 1.5f;
							Dust expr_9DC_cp_0_cp_0 = Main.dust[num7];
							expr_9DC_cp_0_cp_0.velocity.X = expr_9DC_cp_0_cp_0.velocity.X * 2.5f;
							Main.dust[num7].scale = 1.3f;
							Main.dust[num7].alpha = 100;
							Main.dust[num7].noGravity = true;
						}
						if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
						{
							Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
					}
				}
			}
			return lava;
		}

		// Token: 0x06000276 RID: 630 RVA: 0x001CC1DC File Offset: 0x001CA3DC
		public static int CountNPCS(int Type)
		{
			int num = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					num++;
				}
			}
			return num;
		}

		// Token: 0x0600027C RID: 636 RVA: 0x001CC47C File Offset: 0x001CA67C
		public void DelBuff(int b)
		{
			this.buffTime[b] = 0;
			this.buffType[b] = 0;
			for (int i = 0; i < 4; i++)
			{
				if (this.buffTime[i] == 0 || this.buffType[i] == 0)
				{
					for (int j = i + 1; j < 5; j++)
					{
						this.buffTime[j - 1] = this.buffTime[j];
						this.buffType[j - 1] = this.buffType[j];
						this.buffTime[j] = 0;
						this.buffType[j] = 0;
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(54, -1, -1, null, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		// Token: 0x06000260 RID: 608 RVA: 0x0019A6D8 File Offset: 0x001988D8
		public void DropBossBags()
		{
			int itemType = -1;
			if (this.type == 50)
			{
				itemType = 3318;
			}
			if (this.type == 4)
			{
				itemType = 3319;
			}
			if (this.type >= 13 && this.type <= 15)
			{
				itemType = 3320;
			}
			if (this.type == 266)
			{
				itemType = 3321;
			}
			if (this.type == 222)
			{
				itemType = 3322;
			}
			if (this.type == 35)
			{
				itemType = 3323;
			}
			if (this.type == 113)
			{
				itemType = 3324;
			}
			if (this.type == 134)
			{
				itemType = 3325;
			}
			if (this.type == 125 || this.type == 126)
			{
				itemType = 3326;
			}
			if (this.type == 127)
			{
				itemType = 3327;
			}
			if (this.type == 262)
			{
				itemType = 3328;
			}
			if (this.type == 245)
			{
				itemType = 3329;
			}
			if (this.type == 370)
			{
				itemType = 3330;
			}
			if (this.type == 439)
			{
				itemType = 3331;
			}
			if (this.type == 398)
			{
				itemType = 3332;
			}
			if (this.type == 551)
			{
				itemType = 3860;
			}
			this.DropItemInstanced(this.position, base.Size, itemType, 1, true);
		}

		// Token: 0x06000261 RID: 609 RVA: 0x0019A82C File Offset: 0x00198A2C
		public void DropItemInstanced(Vector2 Position, Vector2 HitboxSize, int itemType, int itemStack = 1, bool interactionRequired = true)
		{
			if (itemType > 0)
			{
				if (Main.netMode == 2)
				{
					int num = Item.NewItem((int)Position.X, (int)Position.Y, (int)HitboxSize.X, (int)HitboxSize.Y, itemType, itemStack, true, 0, false, false);
					Main.itemLockoutTime[num] = 54000;
					for (int i = 0; i < 255; i++)
					{
						if ((this.playerInteraction[i] || !interactionRequired) && Main.player[i].active)
						{
							NetMessage.SendData(90, i, -1, null, num, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					Main.item[num].active = false;
				}
				else if (Main.netMode == 0)
				{
					Item.NewItem((int)Position.X, (int)Position.Y, (int)HitboxSize.X, (int)HitboxSize.Y, itemType, itemStack, false, 0, false, false);
				}
				this.value = 0f;
			}
		}

		// Token: 0x06000255 RID: 597 RVA: 0x0018C1FC File Offset: 0x0018A3FC
		public void FaceTarget()
		{
			this.direction = (((float)this.targetRect.Center.X < base.Center.X) ? -1 : 1);
			this.directionY = (((float)this.targetRect.Center.Y < base.Center.Y) ? -1 : 1);
		}

		// Token: 0x0600027A RID: 634 RVA: 0x001CC338 File Offset: 0x001CA538
		public int FindBuffIndex(int type)
		{
			if (this.buffImmune[type])
			{
				return -1;
			}
			for (int i = 0; i < 5; i++)
			{
				if (this.buffTime[i] >= 1 && this.buffType[i] == type)
				{
					return i;
				}
			}
			return -1;
		}

		// Token: 0x06000250 RID: 592 RVA: 0x0018BBF8 File Offset: 0x00189DF8
		public int FindClosestPlayer()
		{
			float num;
			return this.FindClosestPlayer(out num);
		}

		// Token: 0x06000251 RID: 593 RVA: 0x0018BC10 File Offset: 0x00189E10
		public int FindClosestPlayer(out float distanceToPlayer)
		{
			Vector2 center = base.Center;
			float num = 3.40282347E+38f;
			int num2 = -1;
			for (int i = 0; i < 255; i++)
			{
				Player player = Main.player[i];
				if (player.active && !player.dead && !player.ghost)
				{
					float num3 = Vector2.DistanceSquared(center, player.Center);
					if (num3 < num)
					{
						num = num3;
						num2 = i;
					}
				}
			}
			if (num2 < 0)
			{
				for (int j = 0; j < 255; j++)
				{
					Player player = Main.player[j];
					if (player.active)
					{
						float num4 = Vector2.DistanceSquared(center, player.Center);
						if (num4 < num)
						{
							num = num4;
							num2 = j;
						}
					}
				}
			}
			distanceToPlayer = (float)Math.Sqrt((double)num);
			return num2;
		}

		// Token: 0x06000278 RID: 632 RVA: 0x001CC260 File Offset: 0x001CA460
		public static int FindFirstNPC(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return i;
				}
			}
			return -1;
		}

		// Token: 0x0600024C RID: 588 RVA: 0x0017962C File Offset: 0x0017782C
		public void FindFrame()
		{
			int num = 1;
			if (!Main.dedServ)
			{
				if (!Main.NPCLoaded[this.type] || Main.npcTexture[this.type] == null)
				{
					return;
				}
				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
			}
			int num2 = 0;
			if (this.aiAction == 0)
			{
				if (this.velocity.Y < 0f)
				{
					num2 = 2;
				}
				else if (this.velocity.Y > 0f)
				{
					num2 = 3;
				}
				else if (this.velocity.X != 0f)
				{
					num2 = 1;
				}
				else
				{
					num2 = 0;
				}
			}
			else if (this.aiAction == 1)
			{
				num2 = 4;
			}
			if (this.type == 568 || this.type == 569)
			{
				if (this.ai[0] > 0f)
				{
					int num3 = this.frame.Y / this.frame.Height;
					this.spriteDirection = this.direction;
					if (num3 < 5 || num3 > 16)
					{
						this.frameCounter = 0.0;
					}
					num3 = 7;
					this.frameCounter += 1.0;
					int num4 = 0;
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 8;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 9;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 10;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 7;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 8;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 9;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 10;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 7;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 8;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 9;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 10;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 7;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 8;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 9;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 10;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 7;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 8;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 9;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 10;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 7;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 8;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 9;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 10;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 11;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 12;
					}
					if (this.frameCounter >= (double)(5 * ++num4))
					{
						num3 = 13;
					}
					if (this.frameCounter >= (double)(5 * (num4 + 1)))
					{
						num3 = 14;
					}
					if (this.frameCounter >= 270.0)
					{
						num3 = 14;
						this.frameCounter -= 10.0;
					}
					this.frame.Y = num * num3;
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 6;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 56.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * (int)(this.frameCounter / 8.0);
					}
				}
			}
			else if (this.type == 551)
			{
				int num5 = this.frame.Y / num;
				if (this.ai[0] == 4f)
				{
					float num6 = 60f;
					int num7 = 10;
					int num8 = 6 * num7;
					if (num5 < 5)
					{
						this.frameCounter = 0.0;
					}
					num5 = 5;
					this.frameCounter = (double)((int)this.ai[1]);
					int num9 = 0;
					if (this.frameCounter >= (double)(5 * (num9 + 1)))
					{
						num5 = 6;
					}
					if (this.frameCounter >= (double)(num6 - 6f))
					{
						num5 = 7;
					}
					if (this.frameCounter >= (double)(num6 - 3f))
					{
						num5 = 8;
					}
					if (this.frameCounter >= (double)num6)
					{
						num5 = 9 + (int)this.frameCounter / 3 % 2;
					}
					num9 = 0;
					if (this.frameCounter >= (double)(num6 + (float)num8 + 3f))
					{
						num5 = 8;
					}
					if (this.frameCounter >= (double)(num6 + (float)num8 + 3f + (float)(5 * ++num9)))
					{
						num5 = 7;
					}
					if (this.frameCounter >= (double)(num6 + (float)num8 + 3f + (float)(5 * (num9 + 1))))
					{
						num5 = 0;
					}
				}
				else if (this.ai[0] == 3f)
				{
					float num10 = 40f;
					float num11 = 80f;
					float num12 = num10 + num11;
					float num13 = 25f;
					if (num5 < 5)
					{
						this.frameCounter = 0.0;
					}
					num5 = 5;
					this.frameCounter = (double)((int)this.ai[1]);
					int num14 = 0;
					if (this.frameCounter >= (double)(5 * (num14 + 1)))
					{
						num5 = 6;
					}
					if (this.frameCounter >= (double)(num10 - 6f))
					{
						num5 = 7;
					}
					if (this.frameCounter >= (double)(num10 - 3f))
					{
						num5 = 8;
					}
					if (this.frameCounter >= (double)num10)
					{
						num5 = 9 + (int)this.frameCounter / 3 % 2;
					}
					num14 = 0;
					if (this.frameCounter >= (double)(num12 - num13 + 3f))
					{
						num5 = 8;
					}
					if (this.frameCounter >= (double)(num12 - num13 + 3f + (float)(5 * ++num14)))
					{
						num5 = 7;
					}
					if (this.frameCounter >= (double)(num12 - num13 + 3f + (float)(5 * (num14 + 1))))
					{
						num5 = 0;
					}
				}
				else if (this.ai[0] == 5f)
				{
					num5 = 3;
				}
				else if (this.ai[0] == 6f)
				{
					if (num5 > 4)
					{
						this.frameCounter = 0.0;
					}
					num5 = 1;
					this.frameCounter = (double)((int)this.ai[1]);
					int num15 = 0;
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 2;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 3;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 4;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 3;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 4;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 3;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 2;
					}
					if (this.frameCounter >= (double)(8 * ++num15))
					{
						num5 = 1;
					}
					if (this.frameCounter >= (double)(8 * (num15 + 1)))
					{
						num5 = 0;
					}
				}
				else
				{
					num5 = 0;
				}
				this.frame.Y = num * num5;
			}
			if (this.type == 552 || this.type == 553 || this.type == 554)
			{
				if (this.ai[0] > 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 10 || this.frame.Y > num * 13 || this.ai[1] == 29f)
					{
						this.frame.Y = num * 10;
						this.frameCounter = 0.0;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 6.0 && this.frame.Y < num * 13)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 8;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 9;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * (int)(this.frameCounter / 8.0);
					}
				}
			}
			if (this.type == 572 || this.type == 573)
			{
				if (this.ai[0] > 0f && this.ai[1] == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y != num * 8 || this.frameCounter > 2.0)
					{
						this.frame.Y = num * 8;
						this.frameCounter = 0.0;
					}
					if (this.frameCounter == 0.0)
					{
						this.frameCounter = 1.0;
						EmoteBubble.NewBubble(3, new WorldUIAnchor(this), 60);
					}
				}
				else if (this.ai[1] == 1f)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 17;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 8;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * ((int)(this.frameCounter / 8.0) + 8);
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 16;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * (int)(this.frameCounter / 8.0);
					}
				}
			}
			if (this.type == 566 || this.type == 567)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = num * (int)(this.frameCounter / 8.0);
				}
			}
			if (this.type == 576 || this.type == 577)
			{
				int num17 = this.frame.Y;
				this.frame.Width = 80;
				if (this.ai[0] > 0f && this.ai[1] == 0f)
				{
					this.spriteDirection = this.direction;
					if (num17 < 11 || num17 > 20)
					{
						num17 = 11;
						this.frameCounter = 0.0;
					}
					int num18 = 4;
					if (num17 == 13 || num17 == 19)
					{
						num18 = 8;
					}
					if (num17 == 14 || num17 == 18)
					{
						num18 = 2;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= (double)num18 && num17 < 20)
					{
						this.frameCounter = 0.0;
						num17++;
					}
				}
				else if (this.ai[0] > 0f && this.ai[1] == 2f)
				{
					this.spriteDirection = this.direction;
					if (num17 < 37 || num17 > 47)
					{
						num17 = 39;
						this.frameCounter = 0.0;
					}
					int num19 = 5;
					if (num17 == 42)
					{
						num19 = 6;
					}
					if (num17 == 45)
					{
						num19 = 8;
					}
					if (num17 == 46)
					{
						num19 = 4;
					}
					if (num17 == 47)
					{
						num19 = 26;
					}
					if (num17 == 37 || num17 == 38)
					{
						num19 = 7;
					}
					bool flag = true;
					if (num17 == 46 && this.velocity.Y != 0f)
					{
						flag = false;
					}
					if (num17 == 38)
					{
						flag = false;
					}
					if (flag)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= (double)num19)
					{
						if (num17 < 47)
						{
							this.frameCounter = 0.0;
							num17++;
						}
						else
						{
							num17 = 37;
							this.frameCounter = 0.0;
						}
					}
				}
				else if (this.ai[0] > 0f && this.ai[1] == 1f)
				{
					this.spriteDirection = this.direction;
					if (num17 < 21 || num17 > 38)
					{
						num17 = 21;
						this.frameCounter = 0.0;
					}
					int num20 = 5;
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= (double)num20 && num17 < 38)
					{
						this.frameCounter = 0.0;
						num17++;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						num17 = 43;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						num17 = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 60.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						num17 = 1 + (int)(this.frameCounter / 6.0);
					}
				}
				this.frame.Y = num17;
			}
			if (this.type == 570 || this.type == 571)
			{
				if (this.ai[1] > 0f && this.ai[0] > 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 10 || this.frame.Y > num * 15 || this.ai[1] == 59f)
					{
						this.frame.Y = num * 10;
						this.frameCounter = 0.0;
					}
					int num21 = 5;
					if (this.frame.Y == num * 14)
					{
						num21 = 35;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= (double)num21 && this.frame.Y < num * 15)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 9;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * (int)(this.frameCounter / 8.0 + 2.0);
					}
				}
			}
			if (this.type == 561 || this.type == 562 || this.type == 563)
			{
				if (this.justHit)
				{
					this.justHit = this.justHit;
				}
				if (this.ai[1] > 0f && this.ai[0] > 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 10 || this.frame.Y > num * 13 || this.ai[1] == 89f)
					{
						this.frame.Y = num * 10;
						this.frameCounter = 0.0;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 6.0 && this.frame.Y < num * 13)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 8;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 9;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * (int)(this.frameCounter / 8.0);
					}
				}
			}
			if (this.type == 555 || this.type == 556 || this.type == 557)
			{
				if (this.ai[1] > 0f && this.ai[0] > 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 10 || this.frame.Y > num * 16 || this.ai[1] == 41f)
					{
						this.frame.Y = num * 10;
						this.frameCounter = 0.0;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 6.0 && this.frame.Y < num * 16)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter >= 64.0 || this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						this.frame.Y = num * ((int)(this.frameCounter / 8.0) + 2);
					}
				}
			}
			if (this.type == 558 || this.type == 559 || this.type == 560)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				float num22 = this.velocity.ToRotation();
				if (this.velocity.X < 0f)
				{
					num22 += 3.14159274f;
				}
				if (this.ai[0] != 2f)
				{
					num22 = this.velocity.X * 0.1f;
				}
				this.rotation = num22;
				if (this.ai[0] == 2f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 578)
			{
				this.rotation = this.velocity.X * 0.1f;
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 574 || this.type == 575)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				float num23 = this.velocity.ToRotation();
				if (this.velocity.X < 0f)
				{
					num23 += 3.14159274f;
				}
				this.rotation = this.rotation.AngleTowards(num23, 0.02f);
				if (this.ai[0] != 0f)
				{
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					int num24 = 4;
					if (this.frame.Y >= num * 5)
					{
						num24 = 8;
					}
					Vector2 vector = base.Center + new Vector2((float)(56 * this.spriteDirection), -30f).RotatedBy((double)this.rotation, default(Vector2));
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= (double)num24 && this.frame.Y < num * 9)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y == num * 9)
						{
							for (int i = 0; i < 8; i++)
							{
								Dust expr_1C06 = Dust.NewDustDirect(vector, 0, 0, 6, 0f, 0f, 100, default(Color), 1f);
								expr_1C06.velocity *= 3f;
								expr_1C06.scale = 0.6f;
								expr_1C06.fadeIn = 1.2f;
								expr_1C06.noGravity = true;
								expr_1C06.noLight = true;
							}
						}
					}
					if (this.frame.Y >= num * 9 && this.ai[0] < 3f)
					{
						Vector2 value = vector;
						Vector2 value2 = vector + (this.oldPos[3] - this.position);
						int maxValue = 5;
						if (this.frameCounter > 60.0)
						{
							maxValue = 4;
						}
						if (this.frameCounter > 180.0)
						{
							maxValue = 3;
						}
						if (this.frameCounter > 300.0)
						{
							maxValue = 2;
						}
						if (this.frameCounter > 600.0)
						{
							maxValue = 1;
						}
						for (int j = 0; j < 2; j++)
						{
							if (Main.rand.Next(maxValue) == 0)
							{
								Dust expr_1D35 = Dust.NewDustDirect(Vector2.Lerp(value2, value, (float)j / 10f + 0.1f), 0, 0, 6, 0f, 0f, 50, default(Color), 1f);
								expr_1D35.scale = 0.3f;
								expr_1D35.fadeIn = 1.5f;
								expr_1D35.noGravity = true;
								expr_1D35.noLight = true;
							}
						}
					}
				}
				else
				{
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 549)
			{
				this.spriteDirection = 1;
				this.rotation = 0f;
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 564 || this.type == 565)
			{
				int num25 = this.frame.Y;
				this.frame.Width = 80;
				this.frame.Height = 80;
				if (this.ai[0] > 0f && this.ai[1] == 0f)
				{
					this.spriteDirection = this.direction;
					if (num25 < 5 || num25 > 13)
					{
						this.frameCounter = 0.0;
					}
					num25 = 5;
					this.frameCounter += 1.0;
					int num26 = 0;
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 6;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 7;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 5;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 6;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 7;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 5;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 6;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 7;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 8;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 9;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 10;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 11;
					}
					if (this.frameCounter >= (double)(7 * ++num26))
					{
						num25 = 12;
					}
					if (this.frameCounter >= (double)(7 * (num26 + 1)))
					{
						num25 = 5;
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] > 0f && this.ai[1] == 1f)
				{
					this.spriteDirection = this.direction;
					if (num25 < 13 || num25 > 25)
					{
						this.frameCounter = 0.0;
					}
					num25 = 13;
					this.frameCounter += 1.0;
					int num27 = 0;
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 14;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 15;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 16;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 17;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 18;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 19;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 20;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 18;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 19;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 20;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 21;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 22;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 23;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 24;
					}
					if (this.frameCounter >= (double)(8 * ++num27))
					{
						num25 = 25;
					}
					if (this.frameCounter >= (double)(8 * (num27 + 1)))
					{
						num25 = 14;
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] > 0f && this.ai[1] == 2f)
				{
					this.spriteDirection = this.direction;
					if (num25 < 26 || num25 > 40)
					{
						this.frameCounter = 0.0;
					}
					num25 = 26;
					this.frameCounter += 1.0;
					int num28 = 0;
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 27;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 28;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 29;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 26;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 27;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 28;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 29;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 26;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 27;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 28;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 29;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 30;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 31;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 32;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 33;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 34;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 35;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 36;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 37;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 38;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 39;
					}
					if (this.frameCounter >= (double)(8 * ++num28))
					{
						num25 = 40;
					}
					if (this.frameCounter >= (double)(8 * (num28 + 1)))
					{
						num25 = 26;
						this.frameCounter = 0.0;
					}
				}
				else
				{
					this.frameCounter = this.frameCounter + (double)(this.velocity.Length() * 0.1f) + 1.0;
					if (this.frameCounter >= 40.0 || this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					num25 = (int)(this.frameCounter / 8.0);
				}
				this.frame.Y = num25;
			}
			if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 17 || this.type == 18 || this.type == 19 || this.type == 20 || this.type == 22 || this.type == 142 || this.type == 353 || this.type == 178 || this.type == 38 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 21 || this.type == 44 || this.type == 54 || this.type == 37 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 104 || this.type == 107 || this.type == 108 || this.type == 120 || this.type == 124 || this.type == 140 || this.type == 159 || this.type == 160 || this.type == 167 || this.type == 181 || this.type == 185 || this.type == 196 || this.type == 197 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 207 || this.type == 208 || this.type == 209 || this.type == 212 || this.type == 213 || this.type == 227 || this.type == 228 || this.type == 229 || this.type == 287 || (this.type >= 310 && this.type <= 314) || (this.type >= 322 && this.type <= 324) || this.type == 326 || this.type == 368 || this.type == 369 || this.type == 453 || this.type == 460 || this.type == 462 || this.type == 463 || this.type == 489 || this.type == 441 || this.type == 534 || this.type == 550)
			{
				int num29 = (this.townNPC || this.type == 453) ? NPCID.Sets.ExtraFramesCount[this.type] : 0;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					int num30 = Main.npcFrameCount[this.type] - NPCID.Sets.AttackFrameCount[this.type];
					if (this.ai[0] == 2f)
					{
						this.frameCounter += 1.0;
						if (this.frame.Y / num == num30 - 1 && this.frameCounter >= 5.0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						else if (this.frame.Y / num == 0 && this.frameCounter >= 40.0)
						{
							this.frame.Y = num * (num30 - 1);
							this.frameCounter = 0.0;
						}
						else if (this.frame.Y != 0 && this.frame.Y != num * (num30 - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 11f)
					{
						this.frameCounter += 1.0;
						if (this.frame.Y / num == num30 - 1 && this.frameCounter >= 20.0)
						{
							if (this.frameCounter == 20.0)
							{
								int num31 = Main.rand.Next(4);
								for (int k = 0; k < 3 + num31; k++)
								{
									int num32 = Dust.NewDust(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f - Vector2.One * 5f + Vector2.UnitY * 8f, 3, 6, 216, (float)(-(float)this.direction), 1f, 0, default(Color), 1f);
									Main.dust[num32].velocity /= 2f;
									Main.dust[num32].scale = 0.8f;
								}
								if (Main.rand.Next(30) == 0)
								{
									int num33 = Gore.NewGore(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f, Vector2.Zero, Main.rand.Next(580, 583), 1f);
									Main.gore[num33].velocity /= 2f;
									Main.gore[num33].velocity.Y = Math.Abs(Main.gore[num33].velocity.Y);
									Main.gore[num33].velocity.X = -Math.Abs(Main.gore[num33].velocity.X) * (float)this.direction;
								}
							}
							if (this.frameCounter >= 40.0 && Main.rand.Next(20) == 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
						}
						else if (this.frame.Y / num == 0 && this.frameCounter >= 20.0)
						{
							this.frame.Y = num * (num30 - 1);
							this.frameCounter = 0.0;
							if (Main.netMode != 1)
							{
								EmoteBubble.NewBubble(89, new WorldUIAnchor(this), 30);
							}
						}
						else if (this.frame.Y != 0 && this.frame.Y != num * (num30 - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 5f)
					{
						this.frame.Y = num * (num30 - 3);
						this.frameCounter = 0.0;
					}
					else if (this.ai[0] == 6f)
					{
						this.frameCounter += 1.0;
						int num34 = this.frame.Y / num;
						int num35 = num30 - num34;
						if (num35 - 1 > 1 && num35 - 4 > 1 && num34 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num36;
						if (this.frameCounter < 10.0)
						{
							num36 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 46.0)
						{
							num36 = num30 - 4;
						}
						else if (this.frameCounter < 60.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 66.0)
						{
							num36 = 0;
						}
						else if (this.frameCounter < 72.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 102.0)
						{
							num36 = num30 - 4;
						}
						else if (this.frameCounter < 108.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 114.0)
						{
							num36 = 0;
						}
						else if (this.frameCounter < 120.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 150.0)
						{
							num36 = num30 - 4;
						}
						else if (this.frameCounter < 156.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 162.0)
						{
							num36 = 0;
						}
						else if (this.frameCounter < 168.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 198.0)
						{
							num36 = num30 - 4;
						}
						else if (this.frameCounter < 204.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 210.0)
						{
							num36 = 0;
						}
						else if (this.frameCounter < 216.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 246.0)
						{
							num36 = num30 - 4;
						}
						else if (this.frameCounter < 252.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 258.0)
						{
							num36 = 0;
						}
						else if (this.frameCounter < 264.0)
						{
							num36 = num30 - 5;
						}
						else if (this.frameCounter < 294.0)
						{
							num36 = num30 - 4;
						}
						else if (this.frameCounter < 300.0)
						{
							num36 = num30 - 5;
						}
						else
						{
							num36 = 0;
						}
						if (num36 == num30 - 4 && num34 == num30 - 5)
						{
							Vector2 position = base.Center + new Vector2((float)(10 * this.direction), -4f);
							for (int l = 0; l < 8; l++)
							{
								int num37 = Main.rand.Next(139, 143);
								int num38 = Dust.NewDust(position, 0, 0, num37, this.velocity.X + (float)this.direction, this.velocity.Y - 2.5f, 0, default(Color), 1.2f);
								Dust expr_311F_cp_0_cp_0 = Main.dust[num38];
								expr_311F_cp_0_cp_0.velocity.X = expr_311F_cp_0_cp_0.velocity.X + (float)this.direction * 1.5f;
								Main.dust[num38].position -= new Vector2(4f);
								Main.dust[num38].velocity *= 2f;
								Main.dust[num38].scale = 0.7f + Main.rand.NextFloat() * 0.3f;
							}
						}
						this.frame.Y = num * num36;
						if (this.frameCounter >= 300.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 7f)
					{
						this.frameCounter += 1.0;
						int num39 = this.frame.Y / num;
						int num35 = num30 - num39;
						if (num35 - 1 > 1 && num35 - 4 > 1 && num39 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num40 = 0;
						if (this.frameCounter < 16.0)
						{
							num40 = 0;
						}
						else if (this.frameCounter == 16.0 && Main.netMode != 1)
						{
							EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 112, null);
						}
						else if (this.frameCounter < 128.0)
						{
							num40 = ((this.frameCounter % 16.0 < 8.0) ? (num30 - 2) : 0);
						}
						else if (this.frameCounter < 160.0)
						{
							num40 = 0;
						}
						else if (this.frameCounter == 160.0 && Main.netMode != 1)
						{
							EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 60, null);
						}
						else if (this.frameCounter < 220.0)
						{
							num40 = ((this.frameCounter % 12.0 < 6.0) ? (num30 - 2) : 0);
						}
						else
						{
							num40 = 0;
						}
						this.frame.Y = num * num40;
						if (this.frameCounter >= 220.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 9f)
					{
						this.frameCounter += 1.0;
						int num41 = this.frame.Y / num;
						int num35 = num30 - num41;
						if (num35 - 1 > 1 && num35 - 4 > 1 && num41 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num42;
						if (this.frameCounter < 10.0)
						{
							num42 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num42 = num30 - 5;
						}
						else
						{
							num42 = num30 - 4;
						}
						if (this.ai[1] < 16f)
						{
							num42 = num30 - 5;
						}
						if (this.ai[1] < 10f)
						{
							num42 = 0;
						}
						this.frame.Y = num * num42;
					}
					else if (this.ai[0] == 18f)
					{
						this.frameCounter += 1.0;
						int num43 = this.frame.Y / num;
						int num35 = num30 - num43;
						if (num35 - 1 > 1 && num35 - 4 > 1 && num43 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num44;
						if (this.frameCounter >= 10.0)
						{
							if (this.frameCounter < 16.0)
							{
								num44 = num30 - 1;
							}
							else
							{
								num44 = num30 - 2;
							}
						}
						if (this.ai[1] < 16f)
						{
							num44 = num30 - 1;
						}
						if (this.ai[1] < 10f)
						{
						}
						num44 = Main.npcFrameCount[this.type] - 2;
						this.frame.Y = num * num44;
					}
					else if (this.ai[0] == 10f || this.ai[0] == 13f)
					{
						this.frameCounter += 1.0;
						int num45 = this.frame.Y / num;
						int num35 = num45 - num30;
						if (num35 > 3 && num45 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num46 = 10;
						int num47 = 6;
						int num48;
						if (this.frameCounter < (double)num46)
						{
							num48 = 0;
						}
						else if (this.frameCounter < (double)(num46 + num47))
						{
							num48 = num30;
						}
						else if (this.frameCounter < (double)(num46 + num47 * 2))
						{
							num48 = num30 + 1;
						}
						else if (this.frameCounter < (double)(num46 + num47 * 3))
						{
							num48 = num30 + 2;
						}
						else if (this.frameCounter < (double)(num46 + num47 * 4))
						{
							num48 = num30 + 3;
						}
						else
						{
							num48 = 0;
						}
						this.frame.Y = num * num48;
					}
					else if (this.ai[0] == 15f)
					{
						this.frameCounter += 1.0;
						int num49 = this.frame.Y / num;
						int num35 = num49 - num30;
						if (num35 > 3 && num49 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						float num50 = this.ai[1] / (float)NPCID.Sets.AttackTime[this.type];
						int num51;
						if (num50 > 0.65f)
						{
							num51 = num30;
						}
						else if (num50 > 0.5f)
						{
							num51 = num30 + 1;
						}
						else if (num50 > 0.35f)
						{
							num51 = num30 + 2;
						}
						else if (num50 > 0f)
						{
							num51 = num30 + 3;
						}
						else
						{
							num51 = 0;
						}
						this.frame.Y = num * num51;
					}
					else if (this.ai[0] == 12f)
					{
						this.frameCounter += 1.0;
						int num52 = this.frame.Y / num;
						int num35 = num52 - num30;
						if (num35 > 4 && num52 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num53 = num30 + this.GetShootingFrame(this.ai[2]);
						this.frame.Y = num * num53;
					}
					else if (this.ai[0] == 14f)
					{
						this.frameCounter += 1.0;
						int num54 = this.frame.Y / num;
						int num35 = num54 - num30;
						if (num35 > 1 && num54 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						int num55 = 12;
						int num56 = (this.frameCounter % (double)num55 * 2.0 < (double)num55) ? num30 : (num30 + 1);
						this.frame.Y = num * num56;
					}
					else if (this.ai[0] == 3f || this.ai[0] == 4f)
					{
						this.frameCounter += 1.0;
						int num57 = this.frame.Y / num;
						int num35 = num30 - num57;
						if (num35 - 1 > 1 && num35 - 4 > 1 && num57 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						bool flag2 = this.ai[0] == 3f;
						int num58 = 0;
						int num59 = 0;
						int num60 = -1;
						int num61 = -1;
						if (this.frameCounter < 10.0)
						{
							num58 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num58 = num30 - 5;
						}
						else if (this.frameCounter < 46.0)
						{
							num58 = num30 - 4;
						}
						else if (this.frameCounter < 60.0)
						{
							num58 = num30 - 5;
						}
						else if (this.frameCounter < 216.0)
						{
							num58 = 0;
						}
						else if (this.frameCounter == 216.0 && Main.netMode != 1)
						{
							num60 = 70;
						}
						else if (this.frameCounter < 286.0)
						{
							num58 = ((this.frameCounter % 12.0 < 6.0) ? (num30 - 2) : 0);
						}
						else if (this.frameCounter < 320.0)
						{
							num58 = 0;
						}
						else if (this.frameCounter == 320.0 && Main.netMode != 1)
						{
							num60 = 100;
						}
						else if (this.frameCounter < 420.0)
						{
							num58 = ((this.frameCounter % 16.0 < 8.0) ? (num30 - 2) : 0);
						}
						else
						{
							num58 = 0;
						}
						if (this.frameCounter < 70.0)
						{
							num59 = 0;
						}
						else if (this.frameCounter == 70.0 && Main.netMode != 1)
						{
							num61 = 90;
						}
						else if (this.frameCounter < 160.0)
						{
							num59 = ((this.frameCounter % 16.0 < 8.0) ? (num30 - 2) : 0);
						}
						else if (this.frameCounter < 166.0)
						{
							num59 = num30 - 5;
						}
						else if (this.frameCounter < 186.0)
						{
							num59 = num30 - 4;
						}
						else if (this.frameCounter < 200.0)
						{
							num59 = num30 - 5;
						}
						else if (this.frameCounter < 320.0)
						{
							num59 = 0;
						}
						else if (this.frameCounter < 326.0)
						{
							num59 = num30 - 1;
						}
						else
						{
							num59 = 0;
						}
						if (flag2)
						{
							if (num60 != -1)
							{
								EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), num60, new WorldUIAnchor(Main.npc[(int)this.ai[2]]));
							}
							if (num61 != -1)
							{
								EmoteBubble.NewBubbleNPC(new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num61, new WorldUIAnchor(this));
							}
						}
						this.frame.Y = num * (flag2 ? num58 : num59);
						if (this.frameCounter >= 420.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 16f || this.ai[0] == 17f)
					{
						this.frameCounter += 1.0;
						int num62 = this.frame.Y / num;
						int num35 = num30 - num62;
						if (num35 - 1 > 1 && num35 - 4 > 1 && num62 != 0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						bool flag3 = this.ai[0] == 16f;
						int num63 = 0;
						int num64 = -1;
						if (this.frameCounter < 10.0)
						{
							num63 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter < 22.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 28.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter < 34.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 40.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter == 40.0 && Main.netMode != 1)
						{
							num64 = 45;
						}
						else if (this.frameCounter < 70.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 76.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter < 82.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 88.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter < 94.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 100.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter == 100.0 && Main.netMode != 1)
						{
							num64 = 45;
						}
						else if (this.frameCounter < 130.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 136.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter < 142.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 148.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter < 154.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 160.0)
						{
							num63 = num30 - 5;
						}
						else if (this.frameCounter == 160.0 && Main.netMode != 1)
						{
							num64 = 75;
						}
						else if (this.frameCounter < 220.0)
						{
							num63 = num30 - 4;
						}
						else if (this.frameCounter < 226.0)
						{
							num63 = num30 - 5;
						}
						else
						{
							num63 = 0;
						}
						if (flag3 && num64 != -1)
						{
							int num65 = (int)this.localAI[2];
							int num66 = (int)this.localAI[3];
							int num67 = (int)Main.npc[(int)this.ai[2]].localAI[3];
							int num68 = (int)Main.npc[(int)this.ai[2]].localAI[2];
							int num69 = 3 - num65 - num66;
							int num70 = 0;
							if (this.frameCounter == 40.0)
							{
								num70 = 1;
							}
							if (this.frameCounter == 100.0)
							{
								num70 = 2;
							}
							if (this.frameCounter == 160.0)
							{
								num70 = 3;
							}
							int num71 = 3 - num70;
							int num72 = -1;
							int num73 = 0;
							while (num72 < 0 && ++num73 < 100)
							{
								num72 = Main.rand.Next(2);
								if (num72 == 0 && num68 >= num66)
								{
									num72 = -1;
								}
								if (num72 == 1 && num67 >= num65)
								{
									num72 = -1;
								}
								if (num72 == -1 && num71 <= num69)
								{
									num72 = 2;
								}
							}
							if (num72 == 0)
							{
								Main.npc[(int)this.ai[2]].localAI[3] += 1f;
								num67++;
							}
							if (num72 == 1)
							{
								Main.npc[(int)this.ai[2]].localAI[2] += 1f;
								num68++;
							}
							int num74 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								38,
								37,
								36
							});
							int num75 = num74;
							if (num72 == 0)
							{
								switch (num74)
								{
									case 36:
										num75 = 38;
										break;
									case 37:
										num75 = 36;
										break;
									case 38:
										num75 = 37;
										break;
								}
							}
							else if (num72 == 1)
							{
								switch (num74)
								{
									case 36:
										num75 = 37;
										break;
									case 37:
										num75 = 38;
										break;
									case 38:
										num75 = 36;
										break;
								}
							}
							if (num71 == 0)
							{
								if (num67 >= 2)
								{
									num74 -= 3;
								}
								if (num68 >= 2)
								{
									num75 -= 3;
								}
							}
							EmoteBubble.NewBubble(num74, new WorldUIAnchor(this), num64);
							EmoteBubble.NewBubble(num75, new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num64);
						}
						this.frame.Y = num * (flag3 ? num63 : num63);
						if (this.frameCounter >= 420.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.velocity.X == 0f)
					{
						if (this.type == 140 || this.type == 287 || this.type == 489)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						int num76 = 6;
						if (this.type == 534)
						{
							num76 = 12;
						}
						if (this.type == 489)
						{
							num76 = 8;
							this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
							this.frameCounter += 0.5;
						}
						else
						{
							this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
							this.frameCounter += 1.0;
						}
						if (this.type == 462)
						{
							num76 = 9;
						}
						if (this.frameCounter > (double)num76)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - num29)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else if (this.type == 462)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					if (this.type == 489 || this.type == 21 || this.type == 31 || this.type == 294 || this.type == 326 || this.type == 295 || this.type == 296 || this.type == 44 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 120 || this.type == 140 || this.type == 159 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || (this.type >= 322 && this.type <= 324))
					{
						this.frame.Y = 0;
					}
					if (this.type == 181)
					{
						this.frame.Y = num * 14;
					}
				}
			}
			if (this.type >= 494 && this.type <= 495)
			{
				if (this.ai[2] > 0f)
				{
					if (this.ai[2] < 7f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[2] < 14f)
					{
						this.frame.Y = num * 6;
					}
					else if (this.ai[2] < 20f)
					{
						this.frame.Y = num * 7;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 2;
						}
						else
						{
							this.frame.Y = num * 3;
						}
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8.0)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							this.frame.Y = num;
						}
						else if (this.frameCounter < 24.0)
						{
							this.frame.Y = num * 2;
						}
						else if (this.frameCounter < 32.0)
						{
							this.frame.Y = num * 3;
						}
						else if (this.frameCounter < 39.0)
						{
							this.frame.Y = num * 4;
						}
						else
						{
							this.frame.Y = num * 4;
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 541)
			{
				if (this.ai[0] > 0f)
				{
					float num77 = this.ai[0];
					if (num77 < 6f)
					{
						this.frame.Y = num * 4;
					}
					else if (num77 < 105f)
					{
						this.frame.Y = num * (int)(num77 / 8f % 4f + 5f);
					}
					else if (num77 < 114f)
					{
						this.frame.Y = num * 9;
					}
					else if (num77 < 135f)
					{
						this.frame.Y = num * (int)((num77 - 99f - 15f) / 7f + 10f);
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else
				{
					this.frameCounter = this.frameCounter + (double)(this.velocity.Length() * 0.1f) + 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type >= 498 && this.type <= 506)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						if (this.ai[1] < 12f)
						{
							this.frame.Y = num * 8;
						}
						else if (this.ai[1] < 34f)
						{
							this.frame.Y = num * 9;
						}
						else
						{
							this.frame.Y = num * 8;
						}
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter > 4.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 10;
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						this.frameCounter += 1.0;
						if (this.frameCounter > 9.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						this.frameCounter += 1.0;
						if (this.frameCounter > 9.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 533)
			{
				if (this.velocity.Y == 0f && this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 48.0)
				{
					this.frameCounter = 0.0;
				}
				this.frame.Y = (int)(this.frameCounter / 6.0) * num;
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 8;
				}
			}
			if (this.type >= 496 && this.type <= 497)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 10;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 11;
					}
					else
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			else if (this.aiStyle == 39 && this.type != 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 7;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			else if (this.type == 508 || this.type == 532)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.direction < 0 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					if (this.direction > 0 && this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 509)
			{
				if ((this.velocity.X > 0f && this.direction > 0) || (this.velocity.X < 0f && this.direction < 0))
				{
					this.spriteDirection = this.direction;
				}
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 415)
			{
				if (this.ai[2] < 0f)
				{
					if (this.frame.Y / num != 8 && this.frame.Y / num != 9 && this.frame.Y / num != 0)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					int num78 = 0;
					int num79 = 18;
					int num80 = 4;
					if (this.frameCounter > (double)(num79 - num80 * 2))
					{
						num78 = 8 + (int)this.frameCounter / 4 % 2;
					}
					if (this.frameCounter > (double)(num79 + num80 * 6))
					{
						num78 = 0;
						this.frameCounter = 0.0;
					}
					this.frame.Y = num * num78;
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 416)
			{
				int num81 = (int)this.ai[0];
				if (Main.npc[num81].active && Main.npc[num81].type == 415 && Main.npcTexture[415] != null)
				{
					this.frame.Y = Main.npc[num81].frame.Y / (Main.npcTexture[415].Height / Main.npcFrameCount[415]) * num;
				}
			}
			else if (this.type == 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					this.frame.Y = (int)(this.frameCounter / 6.0) * num;
					if (this.frameCounter >= 48.0)
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (9 + (int)(this.ai[1] / 6f));
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (13 - (int)(this.ai[1] / 6f));
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 14;
				}
			}
			else if (this.type == 518)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 419)
			{
				if (this.ai[2] < 0f)
				{
					int num82 = 1;
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y / num >= 9)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= (double)(num82 * 4 + 6))
					{
						this.frameCounter = 8.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * (int)(2.0 + this.frameCounter / 3.0);
					}
					else
					{
						this.frame.Y = num * (int)(4.0 + (this.frameCounter - 6.0) / (double)num82);
					}
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num < 9)
						{
							this.frame.Y = num * 9;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 425)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 12 || this.frame.Y < num * 10)
					{
						this.frame.Y = num * 10;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 9 || this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 427)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 9 || this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 426)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[1] >= 45f)
				{
					if (this.velocity.Y == 0f)
					{
						this.frame.Y = num * 8;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter >= 2.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y >= num * 15 || this.frame.Y < num * 12)
						{
							this.frame.Y = num * 12;
						}
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 12 || this.frame.Y < num * 9)
					{
						this.frame.Y = num * 9;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 7 || this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 429)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 428)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						double num16 = this.frameCounter + 1.0;
						this.frameCounter = num16;
						if (num16 > 10.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else if (this.frame.Y / num != 4)
				{
					if (this.frameCounter > 0.0)
					{
						this.frameCounter = 0.0;
					}
					double num16 = this.frameCounter - 1.0;
					this.frameCounter = num16;
					if (num16 < -10.0 || this.velocity.Y > 0.6f)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 423)
			{
				if (this.ai[2] == 1f)
				{
					int num83 = 2;
					if (this.ai[1] >= 30f && this.ai[1] < 45f)
					{
						num83 = 3;
					}
					this.frame.Y = num83 * num;
				}
				else if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.velocity.X != 0f)
					{
						this.spriteDirection = Math.Sign(-this.velocity.X);
					}
					if (this.frame.Y / num < 4)
					{
						this.frame.Y = num * 4;
					}
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 421)
			{
				if (this.ai[0] == 5f)
				{
					this.frameCounter += 1.0;
				}
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 5.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 424)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.ai[2] > 0f)
					{
						this.frame.Y = num * ((this.ai[1] > 90f) ? (Main.npcFrameCount[this.type] - 2) : (Main.npcFrameCount[this.type] - 1));
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			else if (this.type == 420)
			{
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 5.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 411)
			{
				if (this.ai[1] >= 90f && this.ai[1] < 180f)
				{
					this.spriteDirection = -this.direction;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 409)
			{
				if (this.velocity.Y == 0f && this.ai[1] <= 30f && this.ai[1] > 0f)
				{
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 410)
			{
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter -= 10.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 407)
			{
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 405 || this.type == 406)
			{
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 4.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 516)
			{
				if (this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					this.frame.Y = num * Main.rand.Next(3);
					this.frameCounter += (double)Main.rand.Next(3);
				}
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 418)
			{
				if (this.ai[0] == 0f || this.ai[0] == 1f || this.ai[0] == -1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 2f)
				{
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == -2f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 1 || this.type == 537 || this.type == 16 || this.type == 59 || this.type == 71 || this.type == 81 || this.type == 138 || this.type == 147 || this.type == 183 || this.type == 184 || this.type == 204 || this.type == 225 || this.type == 302 || this.type == 304 || (this.type >= 333 && this.type <= 336) || this.type == 535)
			{
				if (this.type == 302 || this.type == 304)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 488)
			{
				int num84 = (int)this.localAI[1];
				if (Framing.GetTileSafely((int)this.ai[0], (int)this.ai[1]).frameX >= 36)
				{
					num84 *= -1;
				}
				if (this.localAI[0] > 24f)
				{
					this.localAI[0] = 24f;
				}
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] -= 1f;
				}
				if (this.localAI[0] < 0f)
				{
					this.localAI[0] = 0f;
				}
				int num85 = (num84 == -1) ? 4 : 6;
				int num86 = (int)this.localAI[0] / num85;
				if (this.localAI[0] % (float)num85 != 0f)
				{
					num86++;
				}
				if (num86 != 0 && num84 == 1)
				{
					num86 += 5;
				}
				this.frame.Y = num86 * num;
			}
			if (this.type >= 430 && this.type <= 436)
			{
				if (this.ai[2] > 0f)
				{
					if (this.ai[2] < 5f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[2] < 15f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8.0)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							this.frame.Y = num;
						}
						else if (this.frameCounter < 24.0)
						{
							this.frame.Y = num * 2;
						}
						else if (this.frameCounter < 32.0)
						{
							this.frame.Y = num;
						}
						else
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 454)
			{
				int num87 = (int)(this.frameCounter / 2.0);
				this.frame.Y = num * num87;
			}
			if (this.type == 377 || this.type == 446)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 378)
			{
				if (this.velocity.Y != 0f && this.frame.Y < num * 2)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
				if (this.velocity.Y == 0f && this.frame.Y > num * 2)
				{
					this.frame.Y = this.frame.Y - num * 2;
				}
				this.frameCounter += 1.0;
				int num88 = 6;
				if (this.frameCounter >= (double)num88)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.velocity.Y != 0f && this.frame.Y >= num * 4)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.Y == 0f && this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 376)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 30.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 375)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 374)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y >= num * 4)
							{
								this.frame.Y = num;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			if (this.type == 492)
			{
				this.frame.Y = num * (int)this.ai[2];
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[0] == 0f || this.ai[0] == 7f)
				{
					this.rotation = 0f;
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (this.ai[0] == 1f)
				{
					this.rotation = 0f;
					this.frameCounter = 0.0;
					int num89 = 6;
					if (this.ai[1] < (float)num89)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < (float)(num89 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < (float)(num89 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < (float)(num89 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[1] < (float)(num89 * 5))
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 6f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						int num90 = 6;
						this.frameCounter += 1.0;
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 12;
						}
						if (this.frame.Y < num * 10)
						{
							if (this.frameCounter > 8.0)
							{
								this.frame.Y = this.frame.Y + num;
								this.frameCounter = 0.0;
								if (this.frame.Y == num * 10)
								{
									this.frameCounter = (double)(num90 * 2);
								}
							}
						}
						else if (this.frameCounter < (double)num90)
						{
							this.frame.Y = num * 12;
						}
						else if (this.frameCounter < (double)(num90 * 2))
						{
							this.frame.Y = num * 11;
						}
						else if (this.frameCounter < (double)(num90 * 3))
						{
							this.frame.Y = num * 10;
						}
						else
						{
							this.frame.Y = num * 11;
							if (this.frameCounter >= (double)(num90 * 4 - 1))
							{
								this.frameCounter = 0.0;
							}
						}
					}
					else
					{
						this.frame.Y = num * 13;
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 3f)
				{
					this.rotation = 0f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.ai[0] == 4f || this.ai[0] == 5f)
				{
					if (this.ai[0] == 4f && this.ai[2] == 1f)
					{
						this.rotation = 0f;
					}
					this.frame.Y = num * 13;
					this.frameCounter = 0.0;
				}
				else if (this.ai[0] == 4.1f)
				{
					this.rotation = 0f;
					if (this.frame.Y > num * 6)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					int num91 = 4;
					if (this.frameCounter < (double)num91)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < (double)(num91 * 2))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num91 * 3))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num91 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num91 * 5))
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num91 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 477)
			{
				this.frameCounter += (double)(this.velocity.Length() / 4f);
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.frame.Y / num > 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 479)
			{
				this.frameCounter += 1.0;
				int num92 = 4;
				if (this.frameCounter < (double)num92)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num92 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num92 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num92 * 4 - 1))
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 472)
			{
				if (this.velocity.X < 0f)
				{
					this.direction = -1;
				}
				else
				{
					this.direction = 1;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= 6)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type >= 449 && this.type <= 452)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num93 = 0;
						if (this.ai[1] < 22f)
						{
							num93 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num93 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num93 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num93 = 1;
						}
						this.frame.Y = num * (15 + num93);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 481)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num94 = 0;
						if (this.ai[1] < 22f)
						{
							num94 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num94 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num94 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num94 = 1;
						}
						this.frame.Y = num * (15 + num94);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 468)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num95 = 0;
						if (this.ai[1] < 22f)
						{
							num95 = -15;
						}
						else if (this.ai[1] < 28f)
						{
							num95 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num95 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num95 = 1;
						}
						this.frame.Y = num * (15 + num95);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 379 || this.type == 380)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * ((int)this.ai[2] - 1 + 2);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 7;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 7;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 389)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					if (this.type == 389 || this.type == 385)
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.2;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					}
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 387)
			{
				if (this.ai[0] > 0f)
				{
					this.frameCounter += 1.0;
					if (this.ai[0] >= 20f)
					{
						this.frameCounter += 1.0;
					}
					if (this.ai[0] >= 40f)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 386)
			{
				if (this.ai[2] > 0f)
				{
					int num96 = (int)this.ai[2] / 12;
					this.frame.Y = num * (9 + num96 % 2);
				}
				else if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= 9)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 388)
			{
				this.frameCounter += 1.0;
				int num97 = 6;
				if (this.frameCounter >= (double)num97)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 391)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = -1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 390)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] > 0f)
				{
					this.frame.Y = num * ((int)this.ai[2] - 1);
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 393)
			{
				Vector2 vector2 = this.ai[2].ToRotationVector2();
				int num98;
				if (vector2.Y > Math.Abs(vector2.X) * 2f)
				{
					num98 = 4;
				}
				else if (vector2.Y > Math.Abs(vector2.X) * 1.5f)
				{
					num98 = ((vector2.X > 0f) ? 5 : 3);
				}
				else if (Math.Abs(vector2.X) > vector2.Y * 2f)
				{
					num98 = ((vector2.X > 0f) ? 8 : 0);
				}
				else if (Math.Abs(vector2.X) > vector2.Y * 1.5f)
				{
					num98 = ((vector2.X > 0f) ? 7 : 1);
				}
				else
				{
					num98 = ((vector2.X > 0f) ? 6 : 2);
				}
				this.frame.Y = num * num98;
				float num99 = 280f;
				float num100 = 140f;
				if (this.ai[3] >= num99 && this.ai[3] < num99 + num100 && (int)this.ai[3] % 6 <= 2)
				{
					this.frame.Y = this.frame.Y + num * 9;
				}
			}
			if (this.type == 394)
			{
				int num101 = (int)this.ai[3] - 300;
				if (num101 >= 120)
				{
					num101 -= 120;
					if (num101 >= 160)
					{
						this.frame.Y = num * (7 - (num101 - 160) / 5);
					}
					else if (num101 >= 20)
					{
						this.frame.Y = num * (num101 / 4 % 4);
					}
					else
					{
						this.frame.Y = num * (4 + num101 / 5);
					}
				}
				else
				{
					this.frame.Y = num * 4;
				}
			}
			if (this.type == 395)
			{
				float num102 = 20f;
				float num103 = 240f;
				bool arg_8BEB_0 = this.ai[3] >= num102 && this.ai[3] < num102 + num103;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 66.0)
				{
					this.frameCounter = 0.0;
				}
				if (arg_8BEB_0)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 54.0 || this.frameCounter < 36.0)
					{
						this.frameCounter = 36.0;
					}
				}
				int num104 = (int)this.frameCounter % 66;
				num104 /= 6;
				this.frame.Y = num * num104;
			}
			if (this.type == 392)
			{
				float num105 = 20f;
				float num106 = 240f;
				bool arg_8CA7_0 = this.ai[3] >= num105 && this.ai[3] < num105 + num106;
				this.frameCounter += 1.0;
				if (arg_8CA7_0)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 12.0)
				{
					this.frameCounter = 0.0;
				}
				int num107 = (int)this.frameCounter % 12;
				num107 /= 3;
				this.frame.Y = num * num107;
			}
			if (this.type == 399)
			{
				this.frameCounter = (this.frameCounter + 0.25) % 4.0 + (double)((this.ai[0] == 0f) ? 0 : 4);
				this.frame.Y = num * (int)this.frameCounter;
			}
			else if (this.type == 520)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6.0)
					{
						if (Math.Abs(this.velocity.X) < 0.2f)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 398)
			{
				if (this.ai[0] <= 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.frame.Y == 0)
					{
						Gore.NewGore(this.position + new Vector2(-10f, -15f), this.velocity, 619, 1f);
						Gore.NewGore(this.position + new Vector2(10f, -15f), this.velocity, 620, 1f);
						Gore.NewGore(this.position + new Vector2(-10f, 15f), this.velocity, 621, 1f);
						Gore.NewGore(this.position + new Vector2(10f, 15f), this.velocity, 622, 1f);
						for (int m = 0; m < 50; m++)
						{
							this.frame.Y = num;
							Dust.NewDust(this.position, this.width, this.height, 209, 0f, 0f, 0, default(Color), 1f);
						}
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 30.0)
					{
						this.frameCounter = 6.0;
					}
					int num108 = (int)this.frameCounter % 30;
					num108 /= 6;
					this.frame.Y = num * num108;
				}
			}
			if (this.type == 397)
			{
				int num109 = (int)this.frameCounter / 7;
				this.frame.Y = num * num109;
			}
			if (this.type == 400)
			{
				this.frameCounter += 1.0;
				if (this.ai[0] == 0f || this.ai[0] == 3f)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frameCounter = 0.0;
				}
				int num110 = (int)this.frameCounter % 16;
				num110 /= 4;
				this.frame.Y = num * num110;
			}
			if (this.type == 437)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 20.0)
				{
					this.frameCounter = 0.0;
				}
				int num111 = (int)this.frameCounter % 20;
				num111 /= 5;
				this.frame.Y = num * num111;
			}
			if (this.type == 438)
			{
				this.frameCounter += 1.0;
				if (this.ai[1] == 1f)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 49.0)
				{
					this.frameCounter = 0.0;
				}
				int num112 = (int)this.frameCounter % 49;
				num112 /= 7;
				if (num112 >= 4)
				{
					num112 = 6 - num112;
				}
				this.frame.Y = num * num112;
			}
			if (this.type == 439 || this.type == 440)
			{
				int num113 = (int)this.localAI[2];
				if (num113 == 0)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frame.Y != 0)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 4) * num;
					}
				}
				else if (num113 == 10)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 4) * num;
				}
				else if (num113 == 1)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
					}
					else if (this.frame.Y != num)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 10) * num;
					}
				}
				else if (num113 == 11)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 10) * num;
				}
				else if (num113 == 2)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
					}
					else if (this.frame.Y != num * 2)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 7) * num;
					}
				}
				else if (num113 == 12)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 7) * num;
				}
				else if (num113 == 13)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 13) * num;
				}
				this.frameCounter += 1.0;
			}
			if (this.type == 521)
			{
				if (this.velocity.X < 0f)
				{
					this.direction = -1;
				}
				else
				{
					this.direction = 1;
				}
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.spriteDirection), (double)(this.velocity.X * (float)this.spriteDirection)) + this.velocity.X * 0.1f;
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 523)
			{
				double num16 = this.frameCounter + 1.0;
				this.frameCounter = num16;
				if (num16 >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				this.frame.Y = num;
			}
			if (this.type == 370)
			{
				if (this.ai[0] == 0f || this.ai[0] == 5f)
				{
					int num114 = 5;
					if (this.ai[0] == 5f)
					{
						num114 = 4;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter > (double)num114)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y >= num * 6)
					{
						this.frame.Y = 0;
					}
				}
				if (this.ai[0] == 1f || this.ai[0] == 6f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 2f || this.ai[0] == 7f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 3f || this.ai[0] == 8f || this.ai[0] == -1f)
				{
					int num115 = 90;
					if (this.ai[2] < (float)(num115 - 30) || this.ai[2] > (float)(num115 - 10))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num115 - 20) && this.ai[2] < (float)(num115 - 15))
						{
							this.frame.Y = num * 7;
						}
					}
				}
				if (this.ai[0] == 4f || this.ai[0] == 9f)
				{
					int num116 = 180;
					if (this.ai[2] < (float)(num116 - 60) || this.ai[2] > (float)(num116 - 20))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num116 - 50) && this.ai[2] < (float)(num116 - 25))
						{
							this.frame.Y = num * 7;
						}
					}
				}
			}
			if (this.type == 359 || this.type == 360)
			{
				if (this.velocity.Y > 1f)
				{
					this.frameCounter += 1.0;
					int num117 = 6;
					if (this.frameCounter < (double)num117)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num117 * 2 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					int num118 = 10;
					if (this.frameCounter < (double)num118)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < (double)(num118 * 2))
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num118 * 3))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num118 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num118 * 5))
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frame.Y = num;
						if (this.frameCounter >= (double)(num118 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 327)
			{
				if (this.ai[3] == 0f)
				{
					if (this.frame.Y > num * 5)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > 0)
					{
						this.frameCounter -= 1.0;
					}
				}
				else if (this.ai[3] == 1f)
				{
					if (this.frame.Y > num * 10)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > num * 4)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 4)
					{
						this.frameCounter += 1.0;
					}
				}
				else if (this.ai[3] == 2f)
				{
					if (this.frame.Y < num * 2)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y > num * 8)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 8)
					{
						this.frameCounter += 1.0;
					}
				}
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 11)
					{
						this.frame.Y = 0;
					}
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 6.0;
					this.frame.Y = this.frame.Y - num;
					if (this.frame.Y < 0)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			if (this.type == 347)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 1.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 3)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 346)
			{
				if (this.ai[0] == 1f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = this.frame.Y;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			if (this.type == 352)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 345)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[3] >= 0f)
					{
						this.frame.Y = 0;
					}
					else if (this.velocity.X < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 5.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
				else if (this.ai[0] == 2f)
				{
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 344)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y < num * 5)
					{
						this.frame.Y = num * 5;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 490)
			{
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 266)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.ai[0] >= 0f)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 262)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.life > this.lifeMax / 2)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type >= 305 && this.type <= 309)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y < -3f)
				{
					this.frame.Y = num * 5;
				}
				else if (this.velocity.Y <= 0f)
				{
					this.frame.Y = 0;
				}
				else if (this.velocity.Y < 2f)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num;
				}
				this.rotation = this.velocity.X * 0.1f;
			}
			else if (this.type == 263)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.frame.Y > 0)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.frame.Y < 2)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
			}
			else if (this.type == 244)
			{
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 289)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 3.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				if (this.ai[3] == 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			else if (this.type == 288)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 355 || this.type == 358)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter < 4.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 7.0)
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.localAI[2] <= 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			else if (this.type == 356 || this.type == 444)
			{
				int num119 = 7;
				this.rotation = this.velocity.X * 0.3f;
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1.0 + (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f);
				if (this.frameCounter < (double)num119)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num119 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num119 * 3))
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= (double)(num119 * 4 - 1))
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.type != 444)
				{
					this.frame.Y = this.frame.Y + (int)((float)(num * 3) * (this.ai[2] - 1f));
				}
			}
			else if (this.type == 357 || this.type == 448 || this.type == 484)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 12.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num120 = (int)base.Center.X / 16;
				int num121 = (int)this.position.Y / 16;
				if (WorldGen.InWorld(num120, num121, 0) && Main.tile[num120, num121] != null)
				{
					if (Main.tile[num120, num121].slope() == 0)
					{
						num121++;
					}
					if (Main.tile[num120, num121].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num120, num121].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type >= 485 && this.type <= 487)
			{
				this.spriteDirection = this.direction;
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X * 5f);
						if (this.frameCounter > 10.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num * 3)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num122 = (int)base.Center.X / 16;
				int num123 = (int)this.position.Y / 16;
				if (Main.tile[num122, num123] != null)
				{
					if (Main.tile[num122, num123].slope() == 0)
					{
						num123++;
					}
					if (Main.tile[num122, num123].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num122, num123].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type == 250 || this.type == 264 || this.type == 268)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 245)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] < -16f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[1] < -12f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < -8f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < -4f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frame.Y = 1;
				}
			}
			else if (this.type == 246)
			{
				if (this.ai[0] == 0f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
					if (this.localAI[1] == -1f)
					{
						this.frame.Y = this.frame.Y + num * 4;
					}
					if (this.localAI[1] == 1f)
					{
						this.frame.Y = this.frame.Y + num * 2;
					}
				}
			}
			else if (this.type == 249)
			{
				if (this.localAI[0] == 1f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 141)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 243)
			{
				if (this.frameCounter < 0.0)
				{
					if (this.velocity.Y == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter < -12.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
						else if (this.frameCounter < -6.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 12;
							}
						}
						else if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
					}
					else
					{
						this.frameCounter = -18.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 14;
						}
						else
						{
							this.frame.Y = num * 13;
						}
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.X * 1.1f);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = 0;
						}
					}
					if (this.velocity.Y < -2f || this.velocity.Y > 5f)
					{
						this.frameCounter = -18.0;
					}
				}
			}
			else if (this.type == 222)
			{
				this.frameCounter += 1.0;
				if (this.localAI[0] == 1f)
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y >= num * 12)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 164 || this.type == 239 || this.type == 530)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 236)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num || this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 165 || this.type == 237 || this.type == 238 || this.type == 240 || this.type == 531)
			{
				float num124 = 0.5f;
				if (this.type == 531)
				{
					num124 = 0.4f;
				}
				this.frameCounter += (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * num124);
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 195)
			{
				if (this.ai[0] < 3f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[0] < 6f)
				{
					this.frame.Y = num;
				}
				else if (this.ai[0] < 9f)
				{
					this.frame.Y = num * 2;
				}
				else if (this.ai[0] < 12f)
				{
					this.frame.Y = num * 3;
				}
				else if (this.ai[0] < 15f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frame.Y = num * 5;
				}
			}
			else if (this.type == 174)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else if ((double)this.velocity.Y < -1.5)
				{
					this.frame.Y = num;
				}
				else if ((double)this.velocity.Y > 1.5)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 177)
			{
				if (this.velocity.Y == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 30.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 163)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = -12.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < -6.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 0.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 143)
			{
				if (this.velocity.Y > 0f)
				{
					this.frameCounter += 1.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter -= 1.0;
				}
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 3;
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 0.0;
				}
				if (this.frameCounter > 17.0)
				{
					this.frameCounter = 17.0;
				}
			}
			else if (this.type == 144)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.localAI[3] += 1f;
					if (this.localAI[3] < 6f)
					{
						this.frame.Y = 0;
					}
					else if (this.localAI[3] < 12f)
					{
						this.frame.Y = num;
					}
					if (this.localAI[3] >= 11f)
					{
						this.localAI[3] = 0f;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 4;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			else if (this.type == 145)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.ai[2] < 4f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[2] < 8f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[2] < 12f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[2] < 16f)
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 6;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			else if (this.type == 50)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
					double num16 = this.frameCounter + 1.0;
					this.frameCounter = num16;
					if (num16 >= 4.0)
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					if (this.frame.Y >= num * 5)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (num2 > 0)
					{
						this.frameCounter += 1.0;
					}
					if (num2 == 4)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 170 || this.type == 171 || this.type == 180)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 14)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 135)
			{
				if (this.ai[2] == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
				}
			}
			else if (this.type == 85 || this.type == 341)
			{
				if (this.ai[0] == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					int num125 = 3;
					if (this.velocity.Y == 0f)
					{
						this.frameCounter -= 1.0;
					}
					else
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > (double)(num125 * 4))
					{
						this.frameCounter = (double)(num125 * 4);
					}
					if (this.frameCounter < (double)num125)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num125 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num125 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num125 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num125 * 5))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num125 * 6))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num125 * 7))
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= (double)(num125 * 8))
						{
							this.frameCounter = (double)num125;
						}
					}
				}
				if (this.ai[3] == 2f)
				{
					this.frame.Y = this.frame.Y + num * 6;
				}
				else if (this.ai[3] == 3f)
				{
					this.frame.Y = this.frame.Y + num * 12;
				}
				else if (this.ai[3] == 4f)
				{
					this.frame.Y = this.frame.Y + num * 18;
				}
			}
			else if (this.type == 113 || this.type == 114)
			{
				if (this.ai[2] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = -60.0;
				}
			}
			else if (this.type == 61)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter < 4.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= 7.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			else if (this.type == 252 || this.type == 301)
			{
				if (this.type == 301)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = -this.direction;
					}
					else
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
				}
				else
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = 1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = -1;
					}
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4 || this.frame.Y == 0)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 122)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				if (this.ai[3] > 0f)
				{
					int num126 = (int)(this.ai[3] / 8f);
					this.frameCounter = 0.0;
					this.frame.Y = (num126 + 3) * num;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298 || this.type == 442)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 362 || this.type == 364)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 10)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
			}
			else if (this.type == 363 || this.type == 365)
			{
				this.spriteDirection = this.direction;
				if (this.wet)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 2)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.rotation = 0f;
				}
				else if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
					this.rotation = 0f;
				}
				else
				{
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 11;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			else if (this.type == 62 || this.type == 66)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 11.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 156)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 20.0)
				{
					this.frameCounter = 0.0;
				}
				int num127 = (int)this.frameCounter / 4;
				this.frame.Y = num127 * num;
			}
			else if (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242 || this.type == 256)
			{
				if ((this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242) && this.ai[1] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 6)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					return;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num * 3;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 221)
			{
				if (this.localAI[2] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = 0;
						this.localAI[0] = 0f;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * Main.npcFrameCount[this.type] - num;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 13.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 2 || this.type == 23 || this.type == 121 || this.type == 169 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
			{
				if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
				}
				else if (this.type == 2 || this.type == 121)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 133)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				if ((double)this.life < (double)this.lifeMax * 0.5)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			else if (this.type == 116)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 75)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				else
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 157)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (!this.wet)
				{
					this.frameCounter += 1.0;
				}
				int num128 = 5;
				if (this.frameCounter < (double)num128)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num128 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num128 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num128 * 4))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num128 * 5))
				{
					this.frame.Y = num * 3;
				}
				else if (this.frameCounter < (double)(num128 * 6))
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < (double)(num128 * 7))
				{
					this.frame.Y = num * 5;
				}
				else if (this.frameCounter < (double)(num128 * 8))
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 55 || this.type == 57 || this.type == 58 || this.type == 102 || this.type == 241 || this.type == 465)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 5;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 69)
			{
				if (this.ai[0] < 190f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
				}
			}
			else if (this.type == 155)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 6;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 8.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 329)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 3;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = num * 2;
						}
					}
				}
			}
			else if (this.type == 86)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -2f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 2f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 15;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (Math.Abs(this.velocity.X) < 3f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 9)
						{
							this.frame.Y = num;
						}
						if (this.frame.Y / num <= 0)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num <= 8)
						{
							this.frame.Y = num * 9;
						}
					}
				}
			}
			else if (this.type == 315)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -1f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 1f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num > 10)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			else if (this.type == 127)
			{
				if (this.ai[1] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 129)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 2.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 130)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 67 || this.type == 217 || this.type == 218 || this.type == 219)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 220)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 109)
			{
				if (this.velocity.Y == 0f && ((this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 7.0)
				{
					this.frameCounter -= 7.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 83 || this.type == 84 || this.type == 179)
			{
				if (this.ai[0] == 2f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 72)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 65)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet && this.type == 65)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type >= 542 && this.type <= 545)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 16.0)
				{
					this.frameCounter = 0.0;
				}
				this.frame.Y = num * (int)(this.frameCounter / 4.0);
			}
			else if (this.type == 224)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = this.velocity.Y * 0.2f;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = -this.velocity.Y * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 150 || this.type == 151 || this.type == 152 || this.type == 158 || this.type == 226)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 48 || this.type == 49 || this.type == 51 || this.type == 60 || this.type == 82 || this.type == 93 || this.type == 137 || this.type == 182 || this.type == 210 || this.type == 211 || this.type == 253 || this.type == 316)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.type == 210 || this.type == 211)
				{
					this.frameCounter += 1.0;
					this.rotation = this.velocity.X * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 330)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 205)
			{
				this.frameCounter += 0.5;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 176)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 43 || this.type == 56 || this.type == 175)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 23.0)
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 115)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 3.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 15.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 15.0)
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 101)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num * 2;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 2)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 199)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.frame.Y < num * 3)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						return;
					}
				}
				else if (this.velocity.Y == 0f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = num * 3;
							return;
						}
					}
				}
			}
			else if (this.type == 467)
			{
				if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
							return;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y > num * 3)
						{
							this.frame.Y = num * 3;
						}
						if (this.frame.Y > 0)
						{
							this.frame.Y = this.frame.Y - num;
							this.frameCounter = 0.0;
							return;
						}
					}
				}
			}
			else if (this.type == 480)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * num)
					{
						this.frame.Y = num * 21;
						return;
					}
					if (this.frame.Y < num * 21)
					{
						this.frame.Y = num * 21;
						return;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 7)
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 4)
					{
						this.frame.Y = num * 10;
						return;
					}
					if (this.frame.Y / num < 10)
					{
						this.frame.Y = num * 10;
						return;
					}
				}
			}
			else if (this.type == 483)
			{
				if (this.ai[0] == -1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 21)
					{
						this.frame.Y = num * 21;
					}
					else if (this.frame.Y < num * 13)
					{
						this.frame.Y = num * 13;
					}
					this.rotation += this.velocity.X * 0.2f;
					return;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 11)
				{
					this.frame.Y = 0;
				}
				this.rotation = this.velocity.X * 0.1f;
				return;
			}
			else if (this.type == 482)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * num)
					{
						this.frame.Y = num * 11;
						return;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
						return;
					}
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)(0.2f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 10)
					{
						this.frame.Y = num * 2;
						return;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 461)
			{
				if (this.wet)
				{
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					if (this.spriteDirection != this.direction)
					{
						this.rotation *= -1f;
						this.spriteDirection = this.direction;
					}
					float num129 = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
					if ((double)Math.Abs(this.rotation - num129) >= 3.14)
					{
						if (num129 < this.rotation)
						{
							this.rotation -= 6.28f;
						}
						else
						{
							this.rotation += 6.28f;
						}
					}
					this.rotation = (this.rotation * 4f + num129) / 5f;
					this.frameCounter += (double)Math.Abs(this.velocity.Length());
					this.frameCounter += 1.0;
					if (this.frameCounter > 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 20)
					{
						this.frame.Y = num * 16;
						return;
					}
					if (this.frame.Y / num < 16)
					{
						this.frame.Y = num * 19;
						return;
					}
				}
				else
				{
					if ((double)this.rotation > 3.14)
					{
						this.rotation -= 6.28f;
					}
					if ((double)this.rotation > -0.01 && (double)this.rotation < 0.01)
					{
						this.rotation = 0f;
					}
					else
					{
						this.rotation *= 0.9f;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 15)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 466)
			{
				if (this.ai[2] <= 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] == 0f)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.ai[2] < -8f)
					{
						this.frame.Y = num;
						return;
					}
					this.frame.Y = num * 2;
					return;
				}
				else
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 3;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 17)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y / num < 4)
					{
						this.frame.Y = num * 4;
						return;
					}
				}
			}
			else if (this.type == 471)
			{
				bool flag4 = false;
				if (this.ai[3] < 0f)
				{
					flag4 = true;
				}
				if (flag4)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.Length()) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 17;
						return;
					}
					if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 18;
						return;
					}
					if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 19;
						return;
					}
					if (this.frameCounter < 23.0)
					{
						this.frame.Y = num * 18;
						return;
					}
					this.frame.Y = num * 18;
					this.frameCounter = 0.0;
					return;
				}
				else
				{
					if (this.ai[3] == 1f)
					{
						this.frame.Y = num * 16;
						this.frameCounter = 0.0;
						return;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 15)
					{
						this.frame.Y = num * 2;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 166)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 2.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 5)
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 9.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 12)
					{
						this.frame.Y = num * 7;
					}
					if (this.frame.Y / num < 7)
					{
						this.frame.Y = num * 7;
						return;
					}
				}
			}
			else if (this.type == 469)
			{
				if (this.ai[2] == 1f)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.Length());
					if (this.frameCounter > 11.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 5)
					{
						this.frame.Y = num * 2;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
				else
				{
					this.rotation = 0f;
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 9.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 11)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y / num < 6)
					{
						this.frame.Y = num * 6;
						return;
					}
				}
			}
			else if (this.type == 351)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 2;
					return;
				}
			}
			else if (this.type == 343)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 2;
					return;
				}
			}
			else if (this.type >= 269 && this.type <= 280)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					if (this.type == 140)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
						return;
					}
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 230)
			{
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 10.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					if (this.velocity.Y > 4f)
					{
						this.rotation -= this.velocity.Y * 0.01f;
						return;
					}
				}
			}
			else if (this.type == 290)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 11;
						return;
					}
					if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 10;
						return;
					}
					this.frame.Y = num * 9;
					return;
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 110 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 291 || this.type == 292 || this.type == 293)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * (int)this.ai[2];
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 6)
				{
					this.frame.Y = num * 6;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)this.velocity.X;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 6;
					return;
				}
			}
			else if (this.type == 206)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * (int)this.ai[2];
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 6)
				{
					this.frame.Y = num * 6;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)this.velocity.X;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 6;
					return;
				}
			}
			else if (this.type == 350)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 5;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * ((int)this.ai[2] - 1);
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 7)
				{
					this.frame.Y = num * 7;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)(this.velocity.X * 1.3f);
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 7;
					return;
				}
			}
			else if (this.type == 111)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * ((int)this.ai[2] - 1);
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 7)
				{
					this.frame.Y = num * 7;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)(this.velocity.X * 1.3f);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 7;
					return;
				}
			}
			else if (this.type == 257)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter < 8.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 16.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				if (this.frameCounter < 32.0)
				{
					this.frame.Y = num * 3;
					return;
				}
				this.frameCounter = 0.0;
				return;
			}
			else if (this.type == 258)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 1.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
						return;
					}
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
						return;
					}
					if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
						return;
					}
					this.frameCounter = 0.0;
					return;
				}
			}
			else if (this.type == 348)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = num;
					return;
				}
			}
			else if (this.type == 349)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 3 || this.type == 342 || this.type == 331 || this.type == 332 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 254 || this.type == 255 || (this.type >= 319 && this.type <= 321))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter < 8.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 16.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				if (this.frameCounter < 32.0)
				{
					this.frame.Y = num;
					return;
				}
				this.frameCounter = 0.0;
				return;
			}
			else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
			{
				int num130 = 0;
				if (this.localAI[0] == 2f)
				{
					num130 = 3;
				}
				if (this.localAI[0] == 3f)
				{
					num130 = 6;
				}
				if (this.localAI[0] == 4f)
				{
					num130 = 9;
				}
				num130 *= num;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num130;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num130;
						return;
					}
					if (this.frameCounter < 12.0)
					{
						this.frame.Y = num + num130;
						return;
					}
					if (this.frameCounter < 15.0)
					{
						this.frame.Y = num * 2 + num130;
						return;
					}
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num130;
					return;
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2 + num130;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2 + num130;
						return;
					}
				}
			}
			else if (this.type == 299 || this.type == 538 || this.type == 539)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
					{
						this.frame.Y = num;
						return;
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
						return;
					}
				}
			}
			else if (this.type == 300 || this.type == 447)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 8.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num > 1)
						{
							this.frame.Y = 0;
							return;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
							return;
						}
					}
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 361 || this.type == 445)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y == 0f)
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y > num * 5)
						{
							this.frame.Y = 0;
							return;
						}
					}
					else
					{
						this.frameCounter += 1.0;
						int num131 = 6;
						if (this.frameCounter < (double)num131)
						{
							this.frame.Y = 0;
							return;
						}
						if (this.frameCounter < (double)(num131 * 2))
						{
							this.frame.Y = num * 6;
							return;
						}
						if (this.frameCounter < (double)(num131 * 3))
						{
							this.frame.Y = num * 8;
							return;
						}
						this.frame.Y = num * 9;
						if (this.frameCounter >= (double)(num131 * 4 - 1))
						{
							this.frameCounter = 0.0;
							return;
						}
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frame.Y = num * 9;
						return;
					}
					this.frame.Y = num * 8;
					return;
				}
			}
			else if (this.type == 366 || this.type == 367)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 46 || this.type == 47 || this.type == 303 || this.type == 337 || this.type == 443 || this.type == 464 || this.type == 540)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 6;
						return;
					}
				}
			}
			else if (this.type == 4 || this.type == 125 || this.type == 126)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 7.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 14.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 21.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				if (this.ai[0] > 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
					return;
				}
			}
			else if (this.type == 5)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 94)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				this.frame.Y = num;
				if (this.frameCounter >= 23.0)
				{
					this.frameCounter = 0.0;
					return;
				}
			}
			else if (this.type == 6 || this.type == 173)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 24)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.ai[1] > 0f)
				{
					if (this.frame.Y < 4)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = num * 4;
						return;
					}
					if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num * 5;
						return;
					}
					if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 6;
						return;
					}
					if (this.frameCounter <= 16.0)
					{
						this.frame.Y = num * 7;
						return;
					}
					if (this.frameCounter <= 20.0)
					{
						this.frame.Y = num * 8;
						return;
					}
					this.frame.Y = num * 9;
					this.frameCounter = 100.0;
					return;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num;
						return;
					}
					if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 2;
						return;
					}
					this.frame.Y = num * 3;
					if (this.frameCounter >= 16.0)
					{
						this.frameCounter = 0.0;
						return;
					}
				}
			}
			else if (this.type == 29 || this.type == 32 || this.type == 45 || this.type == 172 || (this.type >= 281 && this.type <= 286))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				this.frame.Y = 0;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = this.frame.Y + num;
					return;
				}
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
					return;
				}
			}
			else if (this.type == 34)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
		}

		// Token: 0x06000225 RID: 549 RVA: 0x000ED408 File Offset: 0x000EB608
		public static string firstNPCName(int npcType)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					return Main.npc[i].GivenOrTypeName;
				}
			}
			return NPC.getNewNPCName(npcType);
		}

		// Token: 0x0600029E RID: 670 RVA: 0x001D0818 File Offset: 0x001CEA18
		private void FishTransformationDuringRain()
		{
			if (Main.netMode != 1)
			{
				if (this.type == 230 && this.wet)
				{
					int direction = this.direction;
					Vector2 velocity = this.velocity;
					this.Transform(55);
					this.direction = direction;
					this.velocity = velocity;
					this.wet = true;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else if (this.type == 55 && !this.wet && Main.raining)
				{
					int direction2 = this.direction;
					Vector2 velocity2 = this.velocity;
					this.Transform(230);
					this.direction = direction2;
					this.velocity = velocity2;
					this.homeTileX = (int)(this.position.X / 16f) + 10 * this.direction;
				}
			}
		}

		// Token: 0x060002A4 RID: 676 RVA: 0x001D1850 File Offset: 0x001CFA50
		public Color GetAlpha(Color newColor)
		{
			float num = (float)(255 - this.alpha) / 255f;
			int num2 = (int)((float)newColor.R * num);
			int num3 = (int)((float)newColor.G * num);
			int num4 = (int)((float)newColor.B * num);
			int num5 = (int)newColor.A - this.alpha;
			if (this.type == 402)
			{
				return new Color(255, 255, 255, 255);
			}
			if (this.type == 484)
			{
				return new Color(250, 250, 250, 200);
			}
			if (this.type >= 542 && this.type <= 545 && num2 + num3 + num4 > 10 && num2 + num3 + num4 >= 60)
			{
				num2 *= 2;
				num3 *= 2;
				num4 *= 2;
				if (num2 > 255)
				{
					num2 = 255;
				}
				if (num3 > 255)
				{
					num3 = 255;
				}
				if (num4 > 255)
				{
					num4 = 255;
				}
			}
			if ((this.type >= 454 && this.type <= 459) || this.type == 521)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				newColor.A = 150;
				newColor *= (float)num5 / 255f;
				return newColor;
			}
			if (this.type == 440)
			{
				byte b = 180;
				if (Main.expertMode)
				{
					b = 210;
				}
				b = (byte)((float)b * num);
				return new Color((int)b, (int)b, (int)b, (int)b);
			}
			if (this.type == 516)
			{
				return new Color(this.alpha, this.alpha, this.alpha, this.alpha);
			}
			if (this.type == 522)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 523)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 395 || this.type == 519)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				return newColor;
			}
			if (this.type == 370 && this.ai[0] != -1f && this.ai[0] < 9f)
			{
				float num6 = MathHelper.Lerp(num, 1f, 0.25f);
				if (num6 > 1f)
				{
					num6 = 1f;
				}
				num4 = (int)((float)newColor.B * num6);
			}
			if (this.type == 30)
			{
				return new Color(250, 250, 250, 100);
			}
			if (this.type == 25 || this.type == 30 || this.type == 59 || this.type == 60)
			{
				return new Color(200, 200, 200, 0);
			}
			if (this.type == 360)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
				if (num2 < 75)
				{
					num2 = 75;
				}
				if (num3 < 175)
				{
					num3 = 175;
				}
				if (num4 < 255)
				{
					num4 = 255;
				}
				return new Color(num2, num3, num4, 255);
			}
			if (this.type == 352)
			{
				return new Color(255, 255, 255, 200);
			}
			if (this.type == 72)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
			}
			else
			{
				if (this.type == 288)
				{
					return new Color(200, 200, 200, 0);
				}
				if (this.type == 289)
				{
					return new Color(250, 250, 250, 50);
				}
				if (this.type >= 254 && this.type <= 261)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 374)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else
				{
					if (this.type == 549)
					{
						newColor = Color.Lerp(newColor, Color.White, 0.4f);
						newColor *= (float)num5 / 255f;
						return newColor;
					}
					if (this.type == 64 || this.type == 63 || this.type == 75 || this.type == 103 || this.type == 400)
					{
						num2 = (int)((double)newColor.R * 1.5);
						num3 = (int)((double)newColor.G * 1.5);
						num4 = (int)((double)newColor.B * 1.5);
						if (num2 > 255)
						{
							num2 = 255;
						}
						if (num3 > 255)
						{
							num3 = 255;
						}
						if (num4 > 255)
						{
							num4 = 255;
						}
					}
				}
			}
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num5 > 255)
			{
				num5 = 255;
			}
			return new Color(num2, num3, num4, num5);
		}

		// Token: 0x060002A6 RID: 678 RVA: 0x001D1E98 File Offset: 0x001D0098
		private string GetBirthdayDialog()
		{
			int num = this.type;
			if (num <= 142)
			{
				if (num <= 54)
				{
					switch (num)
					{
						case 17:
							return Language.SelectRandom(Lang.CreateDialogFilter("MerchantSpecialText.Party"), null).Value;
						case 18:
							return Language.SelectRandom(Lang.CreateDialogFilter("NurseSpecialText.Party"), null).Value;
						case 19:
							return Language.SelectRandom(Lang.CreateDialogFilter("ArmsDealerSpecialText.Party"), null).Value;
						case 20:
							return Language.SelectRandom(Lang.CreateDialogFilter("DryadSpecialText.Party"), null).Value;
						case 21:
							break;
						case 22:
							return Language.SelectRandom(Lang.CreateDialogFilter("GuideSpecialText.Party"), null).Value;
						default:
							if (num == 38)
							{
								return Language.SelectRandom(Lang.CreateDialogFilter("DemolitionistSpecialText.Party"), null).Value;
							}
							if (num == 54)
							{
								return Language.SelectRandom(Lang.CreateDialogFilter("ClothierSpecialText.Party"), null).Value;
							}
							break;
					}
				}
				else if (num <= 108)
				{
					if (num == 107)
					{
						return Language.SelectRandom(Lang.CreateDialogFilter("GoblinTinkererSpecialText.Party"), null).Value;
					}
					if (num == 108)
					{
						return Language.SelectRandom(Lang.CreateDialogFilter("WizardSpecialText.Party"), null).Value;
					}
				}
				else
				{
					if (num == 124)
					{
						return Language.SelectRandom(Lang.CreateDialogFilter("MechanicSpecialText.Party"), null).Value;
					}
					if (num == 142)
					{
						return Language.SelectRandom(Lang.CreateDialogFilter("SantaClausSpecialText.Party"), null).Value;
					}
				}
			}
			else if (num <= 229)
			{
				if (num <= 178)
				{
					if (num == 160)
					{
						return Language.SelectRandom(Lang.CreateDialogFilter("TruffleSpecialText.Party"), null).Value;
					}
					if (num == 178)
					{
						return Language.SelectRandom(Lang.CreateDialogFilter("SteampunkerSpecialText.Party"), null).Value;
					}
				}
				else
				{
					switch (num)
					{
						case 207:
							return Language.SelectRandom(Lang.CreateDialogFilter("DyeTraderSpecialText.Party"), null).Value;
						case 208:
							return Language.SelectRandom(Lang.CreateDialogFilter("PartyGirlSpecialText.Party"), null).Value;
						case 209:
							return Language.SelectRandom(Lang.CreateDialogFilter("CyborgSpecialText.Party"), null).Value;
						default:
							switch (num)
							{
								case 227:
									return Language.SelectRandom(Lang.CreateDialogFilter("PainterSpecialText.Party"), null).Value;
								case 228:
									return Language.SelectRandom(Lang.CreateDialogFilter("WitchDoctorSpecialText.Party"), null).Value;
								case 229:
									return Language.SelectRandom(Lang.CreateDialogFilter("PirateSpecialText.Party"), null).Value;
							}
							break;
					}
				}
			}
			else if (num <= 368)
			{
				if (num == 353)
				{
					return Language.SelectRandom(Lang.CreateDialogFilter("StylistSpecialText.Party"), null).Value;
				}
				if (num == 368)
				{
					return Language.SelectRandom(Lang.CreateDialogFilter("TravellingMerchantSpecialText.Party"), null).Value;
				}
			}
			else
			{
				if (num == 369)
				{
					return Language.SelectRandom(Lang.CreateDialogFilter("AnglerSpecialText.Party"), null).Value;
				}
				if (num == 550)
				{
					return Language.SelectRandom(Lang.CreateDialogFilter("DD2BartenderSpecialText.Party"), null).Value;
				}
			}
			return "";
		}

		// Token: 0x0600022B RID: 555 RVA: 0x000ED828 File Offset: 0x000EBA28
		public float GetBossHeadRotation()
		{
			float result = 0f;
			int num = this.type;
			if (num <= 68)
			{
				if (num == 35)
				{
					goto IL_3E;
				}
				if (num != 68)
				{
					return result;
				}
			}
			else
			{
				if (num == 127)
				{
					goto IL_3E;
				}
				if (num != 262)
				{
					if (num != 345)
					{
						return result;
					}
					if (this.ai[0] == 2f)
					{
						result = this.rotation;
						return result;
					}
					return result;
				}
			}
			result = this.rotation;
			return result;
			IL_3E:
			if (this.ai[1] == 1f || this.ai[1] == 2f)
			{
				result = this.rotation;
			}
			return result;
		}

		// Token: 0x0600022C RID: 556 RVA: 0x000ED8B4 File Offset: 0x000EBAB4
		public SpriteEffects GetBossHeadSpriteEffects()
		{
			SpriteEffects result = SpriteEffects.None;
			int num = this.type;
			if (num == 491 && this.spriteDirection == 1)
			{
				result = SpriteEffects.FlipHorizontally;
			}
			return result;
		}

		// Token: 0x0600022A RID: 554 RVA: 0x000ED740 File Offset: 0x000EB940
		public int GetBossHeadTextureIndex()
		{
			int result = NPCID.Sets.BossHeadTextures[this.type];
			int num = this.type;
			if (num <= 126)
			{
				if (num != 4)
				{
					if (num != 125)
					{
						if (num == 126)
						{
							if (this.ai[0] >= 3f)
							{
								result = 21;
							}
						}
					}
					else if (this.ai[0] >= 3f)
					{
						result = 20;
					}
				}
				else if (this.ai[0] >= 2f)
				{
					result = 1;
				}
			}
			else if (num != 262)
			{
				if (num != 439)
				{
					if (num == 440)
					{
						if (this.ai[0] != 5f || this.alpha == 255)
						{
							result = -1;
						}
					}
				}
				else if (this.ai[0] == 5f && this.alpha == 255)
				{
					result = -1;
				}
			}
			else if (this.life <= this.lifeMax / 2)
			{
				result = 12;
			}
			return result;
		}

		// Token: 0x060002A7 RID: 679 RVA: 0x001D21C0 File Offset: 0x001D03C0
		public string GetChat()
		{
			Recipe.FindRecipes();
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			bool flag8 = false;
			bool flag9 = false;
			bool flag10 = false;
			bool flag11 = false;
			bool flag12 = false;
			bool flag13 = false;
			bool flag14 = false;
			bool flag15 = false;
			bool flag16 = false;
			object obj = Lang.CreateDialogSubstitutionObject(this);
			bool flag17 = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 17)
					{
						flag = true;
					}
					else if (Main.npc[i].type == 18)
					{
						flag2 = true;
					}
					else if (Main.npc[i].type == 19)
					{
						flag3 = true;
					}
					else if (Main.npc[i].type == 20)
					{
						flag4 = true;
					}
					else if (Main.npc[i].type == 37)
					{
						flag5 = true;
					}
					else if (Main.npc[i].type == 38)
					{
						flag6 = true;
					}
					else if (Main.npc[i].type == 124)
					{
						flag7 = true;
					}
					else if (Main.npc[i].type == 107)
					{
						flag8 = true;
					}
					else if (Main.npc[i].type == 54)
					{
						flag9 = true;
					}
					else if (Main.npc[i].type == 160)
					{
						flag10 = true;
					}
					else if (Main.npc[i].type == 178)
					{
						flag11 = true;
					}
					else if (Main.npc[i].type == 229)
					{
						flag12 = true;
					}
					else if (Main.npc[i].type == 209)
					{
						flag13 = true;
					}
					else if (Main.npc[i].type == 208)
					{
						flag14 = true;
					}
					else if (Main.npc[i].type == 353)
					{
						flag15 = true;
					}
					else if (Main.npc[i].type == 22)
					{
						flag16 = true;
					}
					else if (Main.npc[i].type == 2)
					{
						flag17 = true;
					}
					else
					{
						int arg_210_0 = Main.npc[i].type;
					}
				}
			}
			string result = "";
			if (this.type == 17)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (!NpcMgr.downedBoss1 && Main.rand.Next(3) == 0)
				{
					if (Main.player[Main.myPlayer].statLifeMax < 200)
					{
						result = Lang.dialog(1, false);
					}
					else if (Main.player[Main.myPlayer].statDefense <= 10)
					{
						result = Lang.dialog(2, false);
					}
					else
					{
						result = Lang.dialog(3, false);
					}
				}
				else if (Main.dayTime)
				{
					if (Main.time < 16200.0)
					{
						int num = Main.rand.Next(3);
						if (num == 0)
						{
							result = Lang.dialog(4, false);
						}
						else if (num == 1)
						{
							result = Lang.dialog(5, false);
						}
						else
						{
							result = Lang.dialog(6, false);
						}
					}
					else if (Main.time > 37800.0)
					{
						int num2 = Main.rand.Next(3);
						if (num2 == 0)
						{
							result = Lang.dialog(7, false);
						}
						else if (num2 == 1)
						{
							result = Lang.dialog(8, false);
						}
						else
						{
							result = Lang.dialog(9, false);
						}
					}
					else
					{
						int num3 = Main.rand.Next(3);
						if (num3 == 0)
						{
							result = Lang.dialog(10, false);
						}
						else if (num3 == 1)
						{
							result = Lang.dialog(11, false);
						}
						else
						{
							result = Lang.dialog(12, false);
						}
					}
				}
				else if (Main.bloodMoon)
				{
					if ((flag2 & flag7) && Main.rand.Next(3) == 0)
					{
						result = Lang.dialog(13, false);
					}
					else
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							result = Lang.dialog(14, false);
						}
						else if (num4 == 1)
						{
							result = Lang.dialog(15, false);
						}
						else if (num4 == 2)
						{
							result = Lang.dialog(16, false);
						}
						else
						{
							result = Lang.dialog(17, false);
						}
					}
				}
				else if (Main.time < 9720.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(18, false);
					}
					else
					{
						result = Lang.dialog(19, false);
					}
				}
				else if (Main.time > 22680.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(20, false);
					}
					else
					{
						result = Lang.dialog(21, false);
					}
				}
				else
				{
					int num5 = Main.rand.Next(3);
					if (num5 == 0)
					{
						result = Lang.dialog(22, false);
					}
					else if (num5 == 1)
					{
						result = Lang.dialog(23, false);
					}
					else
					{
						result = Lang.dialog(24, false);
					}
				}
			}
			else if (this.type == 18)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.bloodMoon)
				{
					if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
					{
						int num6 = Main.rand.Next(3);
						if (num6 == 0)
						{
							result = Lang.dialog(25, false);
						}
						else if (num6 == 1)
						{
							result = Lang.dialog(26, false);
						}
						else
						{
							result = Lang.dialog(27, false);
						}
					}
					else
					{
						int num7 = Main.rand.Next(4);
						if (num7 == 0)
						{
							result = Lang.dialog(28, false);
						}
						else if (num7 == 1)
						{
							result = Lang.dialog(29, false);
						}
						else if (num7 == 2)
						{
							result = Lang.dialog(30, false);
						}
						else
						{
							result = Lang.dialog(31, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0 && !NpcMgr.downedBoss3)
				{
					result = Lang.dialog(32, false);
				}
				else if (flag6 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(33, false);
				}
				else if (flag3 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(34, false);
				}
				else if (flag17 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(35, false);
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.33)
				{
					int num8 = Main.rand.Next(5);
					if (num8 == 0)
					{
						result = Lang.dialog(36, false);
					}
					else if (num8 == 1)
					{
						result = Lang.dialog(37, false);
					}
					else if (num8 == 2)
					{
						result = Lang.dialog(38, false);
					}
					else if (num8 == 3)
					{
						result = Lang.dialog(39, false);
					}
					else
					{
						result = Lang.dialog(40, false);
					}
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
				{
					int num9 = Main.rand.Next(7);
					if (num9 == 0)
					{
						result = Lang.dialog(41, false);
					}
					else if (num9 == 1)
					{
						result = Lang.dialog(42, false);
					}
					else if (num9 == 2)
					{
						result = Lang.dialog(43, false);
					}
					else if (num9 == 3)
					{
						result = Lang.dialog(44, false);
					}
					else if (num9 == 4)
					{
						result = Lang.dialog(45, false);
					}
					else if (num9 == 5)
					{
						result = Lang.dialog(46, false);
					}
					else
					{
						result = Lang.dialog(47, false);
					}
				}
				else
				{
					LocalizedText[] array = Language.FindAll(Lang.CreateDialogFilter("NurseChatter.", obj));
					int num10 = Main.rand.Next(4 + array.Length);
					if (num10 >= 4)
					{
						result = array[num10 - 4].FormatWith(obj);
					}
					else if (num10 == 0)
					{
						result = Lang.dialog(48, false);
					}
					else if (num10 == 1)
					{
						result = Lang.dialog(49, false);
					}
					else if (num10 == 2)
					{
						result = Lang.dialog(50, false);
					}
					else
					{
						result = Lang.dialog(51, false);
					}
				}
			}
			else if (this.type == 19)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (NpcMgr.downedBoss3 && !Main.hardMode)
				{
					result = Lang.dialog(58, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(59, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(60, false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(61, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(62, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(63, false);
				}
				else if (Main.bloodMoon)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(64, false);
					}
					else
					{
						result = Lang.dialog(65, false);
					}
				}
				else
				{
					int num11 = Main.rand.Next(3);
					if (num11 == 0)
					{
						result = Lang.dialog(66, false);
					}
					else if (num11 == 1)
					{
						result = Lang.dialog(67, false);
					}
					else
					{
						result = Lang.dialog(68, false);
					}
				}
			}
			else if (this.type == 20)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (DD2Event.DownedInvasionT1 && Main.rand.Next(6) == 0)
				{
					if (DD2Event.DownedInvasionT2)
					{
						result = Language.GetTextValueWith("DryadSpecialText.AfterDD2Tier2", obj);
					}
					else
					{
						result = Language.GetTextValueWith("DryadSpecialText.AfterDD2Tier1", obj);
					}
				}
				else if (!NpcMgr.downedBoss2 && Main.rand.Next(3) == 0)
				{
					if (WorldGen.crimson)
					{
						result = Lang.dialog(332, false);
					}
					else
					{
						result = Lang.dialog(69, false);
					}
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(70, false);
				}
				else if (flag && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(71, false);
				}
				else if (flag5 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(72, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(238, false);
				}
				else if (Main.bloodMoon)
				{
					int num12 = Main.rand.Next(4);
					if (num12 == 0)
					{
						result = Lang.dialog(73, false);
					}
					else if (num12 == 1)
					{
						result = Lang.dialog(74, false);
					}
					else if (num12 == 2)
					{
						result = Lang.dialog(75, false);
					}
					else
					{
						result = Lang.dialog(76, false);
					}
				}
				else
				{
					int num13 = Main.rand.Next(5);
					if (num13 == 0)
					{
						if (WorldGen.crimson)
						{
							result = Lang.dialog(333, false);
						}
						else
						{
							result = Lang.dialog(77, false);
						}
					}
					else if (num13 == 1)
					{
						result = Lang.dialog(78, false);
					}
					else if (num13 == 2)
					{
						result = Lang.dialog(79, false);
					}
					else if (num13 == 3)
					{
						result = Lang.dialog(80, false);
					}
					else
					{
						result = Lang.dialog(81, false);
					}
				}
			}
			else if (this.type == 37)
			{
				if (Main.dayTime)
				{
					int num14 = Main.rand.Next(3);
					if (num14 == 0)
					{
						result = Lang.dialog(82, false);
					}
					else if (num14 == 1)
					{
						result = Lang.dialog(83, false);
					}
					else
					{
						result = Lang.dialog(84, false);
					}
				}
				else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
				{
					int num15 = Main.rand.Next(4);
					if (num15 == 0)
					{
						result = Lang.dialog(85, false);
					}
					else if (num15 == 1)
					{
						result = Lang.dialog(86, false);
					}
					else if (num15 == 2)
					{
						result = Lang.dialog(87, false);
					}
					else
					{
						result = Lang.dialog(88, false);
					}
				}
				else
				{
					int num16 = Main.rand.Next(4);
					if (num16 == 0)
					{
						result = Lang.dialog(89, false);
					}
					else if (num16 == 1)
					{
						result = Lang.dialog(90, false);
					}
					else if (num16 == 2)
					{
						result = Lang.dialog(91, false);
					}
					else
					{
						result = Lang.dialog(92, false);
					}
				}
			}
			else if (this.type == 38)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (!NpcMgr.downedBoss2 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(93, false);
				}
				else if (Main.bloodMoon)
				{
					int num17 = Main.rand.Next(3);
					if (num17 == 0)
					{
						result = Lang.dialog(94, false);
					}
					else if (num17 == 1)
					{
						result = Lang.dialog(95, false);
					}
					else
					{
						result = Lang.dialog(96, false);
					}
				}
				else if ((DD2Event.DownedInvasionT1 || DD2Event.Ongoing) && Main.rand.Next(5) == 0)
				{
					result = Language.GetTextValueWith("DemolitionistSpecialText.AfterDD2Start", obj);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(97, false);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(98, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(99, false);
				}
				else if (flag4 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(100, false);
				}
				else if (!Main.dayTime)
				{
					int num18 = Main.rand.Next(4);
					if (num18 == 0)
					{
						result = Lang.dialog(101, false);
					}
					else if (num18 == 1)
					{
						result = Lang.dialog(102, false);
					}
					else if (num18 == 2)
					{
						result = Lang.dialog(103, false);
					}
					else
					{
						result = Lang.dialog(104, false);
					}
				}
				else
				{
					int num19 = Main.rand.Next(5);
					if (num19 == 0)
					{
						result = Lang.dialog(105, false);
					}
					else if (num19 == 1)
					{
						result = Lang.dialog(106, false);
					}
					else if (num19 == 2)
					{
						result = Lang.dialog(107, false);
					}
					else if (num19 == 3)
					{
						result = Lang.dialog(108, false);
					}
					else
					{
						result = Lang.dialog(109, false);
					}
				}
			}
			else if (this.type == 54)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (!flag7 && Main.rand.Next(2) == 0)
				{
					result = Lang.dialog(110, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(237, false);
				}
				else if (Main.bloodMoon)
				{
					result = Lang.dialog(111, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(112, false);
				}
				else if (Main.player[Main.myPlayer].head == 24)
				{
					result = Lang.dialog(113, false);
				}
				else
				{
					int num20 = Main.rand.Next(6);
					if (num20 == 0)
					{
						result = Lang.dialog(114, false);
					}
					else if (num20 == 1)
					{
						result = Lang.dialog(115, false);
					}
					else if (num20 == 2)
					{
						result = Lang.dialog(116, false);
					}
					else if (num20 == 3)
					{
						result = Lang.dialog(117, false);
					}
					else if (num20 == 4)
					{
						result = Lang.dialog(118, false);
					}
					else
					{
						result = Lang.dialog(119, false);
					}
				}
			}
			else if (this.type == 105)
			{
				result = Lang.dialog(120, false);
			}
			else if (this.type == 107)
			{
				if (this.homeless)
				{
					int num21 = Main.rand.Next(5);
					if (num21 == 0)
					{
						result = Lang.dialog(121, false);
					}
					else if (num21 == 1)
					{
						result = Lang.dialog(122, false);
					}
					else if (num21 == 2)
					{
						result = Lang.dialog(123, false);
					}
					else if (num21 == 3)
					{
						result = Lang.dialog(124, false);
					}
					else
					{
						result = Lang.dialog(125, false);
					}
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (flag7 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(126, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(309, false);
				}
				else
				{
					LocalizedText[] array2 = Language.FindAll(Lang.CreateDialogFilter("GoblinTinkererChatter.", obj));
					int num22 = Main.rand.Next(array2.Length + 5);
					if (num22 >= 5)
					{
						result = array2[num22 - 5].FormatWith(obj);
					}
					else if (!Main.dayTime)
					{
						if (num22 == 0)
						{
							result = Lang.dialog(127, false);
						}
						else if (num22 == 1)
						{
							result = Lang.dialog(128, false);
						}
						else if (num22 == 2)
						{
							result = Lang.dialog(129, false);
						}
						else if (num22 == 3)
						{
							result = Lang.dialog(130, false);
						}
						else
						{
							result = Lang.dialog(131, false);
						}
					}
					else if (num22 == 0)
					{
						result = Lang.dialog(132, false);
					}
					else if (num22 == 1)
					{
						result = Lang.dialog(133, false);
					}
					else if (num22 == 2)
					{
						result = Lang.dialog(134, false);
					}
					else if (num22 == 3)
					{
						result = Lang.dialog(135, false);
					}
					else
					{
						result = Lang.dialog(136, false);
					}
				}
			}
			else if (this.type == 106)
			{
				result = Lang.dialog(137, false);
			}
			else if (this.type == 108)
			{
				if (this.homeless)
				{
					int num23 = Main.rand.Next(3);
					if (num23 == 0)
					{
						result = Lang.dialog(138, false);
					}
					else if (num23 == 1 && !Main.player[Main.myPlayer].Male)
					{
						result = Lang.dialog(139, false);
					}
					else if (num23 == 1)
					{
						result = Lang.dialog(140, false);
					}
					else if (num23 == 2)
					{
						result = Lang.dialog(141, false);
					}
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (DD2Event.DownedInvasionT1 && Main.rand.Next(6) == 0)
				{
					result = Language.GetTextValueWith("WizardSpecialText.AfterDD2Tier1", obj);
				}
				else if ((Main.player[Main.myPlayer].Male & flag17) && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(142, false);
				}
				else if ((Main.player[Main.myPlayer].Male & flag6) && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(143, false);
				}
				else if ((Main.player[Main.myPlayer].Male & flag8) && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(144, false);
				}
				else if ((!Main.player[Main.myPlayer].Male & flag2) && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(145, false);
				}
				else if ((!Main.player[Main.myPlayer].Male & flag7) && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(146, false);
				}
				else if ((!Main.player[Main.myPlayer].Male & flag4) && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(147, false);
				}
				else if (!Main.dayTime)
				{
					int num24 = Main.rand.Next(3);
					if (num24 == 0)
					{
						result = Lang.dialog(148, false);
					}
					else if (num24 == 1)
					{
						result = Lang.dialog(149, false);
					}
					else if (num24 == 2)
					{
						result = Lang.dialog(150, false);
					}
				}
				else
				{
					int num25 = Main.rand.Next(5);
					if (num25 == 0)
					{
						result = Lang.dialog(151, false);
					}
					else if (num25 == 1)
					{
						result = Lang.dialog(152, false);
					}
					else if (num25 == 2)
					{
						result = Lang.dialog(153, false);
					}
					else if (num25 == 3)
					{
						result = Lang.dialog(154, false);
					}
					else
					{
						result = Lang.dialog(155, false);
					}
				}
			}
			else if (this.type == 123)
			{
				result = Lang.dialog(156, false);
			}
			else if (this.type == 124)
			{
				if (this.homeless)
				{
					int num26 = Main.rand.Next(4);
					if (num26 == 0)
					{
						result = Lang.dialog(157, false);
					}
					else if (num26 == 1)
					{
						result = Lang.dialog(158, false);
					}
					else if (num26 == 2)
					{
						result = Lang.dialog(159, false);
					}
					else
					{
						result = Lang.dialog(160, false);
					}
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.bloodMoon)
				{
					int num27 = Main.rand.Next(4);
					if (num27 == 0)
					{
						result = Lang.dialog(161, false);
					}
					else if (num27 == 1)
					{
						result = Lang.dialog(162, false);
					}
					else if (num27 == 2)
					{
						result = Lang.dialog(163, false);
					}
					else
					{
						result = Lang.dialog(164, false);
					}
				}
				else if (flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(165, false);
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(166, false);
				}
				else
				{
					LocalizedText[] array3 = Language.FindAll(Lang.CreateDialogFilter("MechanicChatter.", obj));
					int num28 = Main.rand.Next(3 + array3.Length);
					if (num28 >= 3)
					{
						result = array3[num28 - 3].FormatWith(obj);
					}
					else if (num28 == 0)
					{
						result = Lang.dialog(167, false);
					}
					else if (num28 == 1)
					{
						result = Lang.dialog(168, false);
					}
					else
					{
						result = Lang.dialog(169, false);
					}
				}
			}
			else if (this.type == 22)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.bloodMoon)
				{
					int num29 = Main.rand.Next(3);
					if (num29 == 0)
					{
						result = Lang.dialog(170, false);
					}
					else if (num29 == 1)
					{
						result = Lang.dialog(171, false);
					}
					else
					{
						result = Lang.dialog(172, false);
					}
				}
				else if (!Main.dayTime)
				{
					result = Lang.dialog(173, false);
				}
				else
				{
					int num30 = Main.rand.Next(3);
					if (num30 == 0)
					{
						result = Lang.dialog(174, false);
					}
					else if (num30 == 1)
					{
						result = Lang.dialog(175, false);
					}
					else
					{
						result = Lang.dialog(176, false);
					}
				}
			}
			else if (this.type == 142)
			{
				int num31 = Main.rand.Next(3);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (num31 == 0)
				{
					result = Lang.dialog(224, false);
				}
				else if (num31 == 1)
				{
					result = Lang.dialog(225, false);
				}
				else if (num31 == 2)
				{
					result = Lang.dialog(226, false);
				}
			}
			else if (this.type == 160)
			{
				int num32 = Main.rand.Next(6);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(232, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(236, false);
				}
				else if (num32 == 0)
				{
					result = Lang.dialog(231, false);
				}
				else if (num32 == 1)
				{
					result = Lang.dialog(233, false);
				}
				else if (num32 == 2)
				{
					result = Lang.dialog(234, false);
				}
				else if (num32 == 3)
				{
					result = Lang.dialog(235, false);
				}
				else if (num32 == 4)
				{
					result = Lang.dialog(240, false);
				}
				else if (num32 == 5)
				{
					result = Lang.dialog(241, false);
				}
			}
			else if (this.type == 178)
			{
				int num33 = Main.rand.Next(5);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.bloodMoon && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(245, false);
				}
				else if (flag13 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(246, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(247, false);
				}
				else if (num33 == 0)
				{
					result = Lang.dialog(242, false);
				}
				else if (num33 == 1)
				{
					result = Lang.dialog(243, false);
				}
				else if (num33 == 2)
				{
					result = Lang.dialog(244, false);
				}
				else if (num33 == 3)
				{
					result = Lang.dialog(248, false);
				}
				else if (num33 == 4)
				{
					result = Lang.dialog(249, false);
				}
			}
			else if (this.type == 207)
			{
				int num34 = Main.rand.Next(3);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(260, false);
				}
				else if (num34 == 0)
				{
					result = Lang.dialog(257, false);
				}
				else if (num34 == 1)
				{
					result = Lang.dialog(258, false);
				}
				else if (num34 == 2)
				{
					result = Lang.dialog(259, false);
				}
			}
			else if (this.type == 208)
			{
				int num35 = Main.rand.Next(7);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (DD2Event.DownedInvasionT1 && Main.rand.Next(5) == 0)
				{
					result = Language.GetTextValueWith("PartyGirlSpecialText.AfterDD2Tier1", obj);
				}
				else if (Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(268, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(310, false);
				}
				else if (num35 == 0)
				{
					result = Lang.dialog(265, false);
				}
				else if (num35 == 1)
				{
					result = Lang.dialog(266, false);
				}
				else if (num35 == 2)
				{
					result = Lang.dialog(267, false);
				}
				else if (num35 == 3)
				{
					result = Lang.dialog(269, false);
				}
				else if (num35 == 4)
				{
					result = Lang.dialog(270, false);
				}
				else if (num35 == 5)
				{
					result = Lang.dialog(271, false);
				}
				else if (num35 == 6)
				{
					result = Lang.dialog(272, false);
				}
			}
			else if (this.type == 209)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(284, false);
				}
				else if (flag11 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(283, false);
				}
				else
				{
					LocalizedText[] array4 = Language.FindAll(Lang.CreateDialogFilter("CyborgChatter.", obj));
					int num36 = Main.rand.Next(5 + array4.Length);
					if (num36 >= 5)
					{
						result = array4[num36 - 5].FormatWith(obj);
					}
					else if (num36 == 0)
					{
						result = Lang.dialog(280, false);
					}
					else if (num36 == 1)
					{
						result = Lang.dialog(281, false);
					}
					else if (num36 == 2)
					{
						result = Lang.dialog(282, false);
					}
					else if (num36 == 3)
					{
						result = Lang.dialog(285, false);
					}
					else if (num36 == 4)
					{
						result = Lang.dialog(286, false);
					}
				}
			}
			else if (this.type == 227)
			{
				int num37 = Main.rand.Next(5);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.hardMode && Main.rand.Next(7) == 0)
				{
					result = Lang.dialog(250, false);
				}
				else if (flag14 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(251, false);
				}
				else if (num37 == 0)
				{
					result = Lang.dialog(252, false);
				}
				else if (num37 == 1)
				{
					result = Lang.dialog(253, false);
				}
				else if (num37 == 2)
				{
					result = Lang.dialog(254, false);
				}
				else if (num37 == 3)
				{
					result = Lang.dialog(255, false);
				}
				else if (num37 == 4)
				{
					result = Lang.dialog(256, false);
				}
			}
			else if (this.type == 228)
			{
				int num38 = Main.rand.Next(4);
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(263, false);
				}
				else if (num38 == 0)
				{
					result = Lang.dialog(261, false);
				}
				else if (num38 == 1)
				{
					result = Lang.dialog(262, false);
				}
				else if (num38 == 2)
				{
					result = Lang.dialog(264, false);
				}
				else if (num38 == 3)
				{
					result = Language.GetTextValueWith("WitchDoctorSpecialText.AfterDD2Tier1", obj);
				}
			}
			else if (this.type == 229)
			{
				LocalizedText[] array5 = Language.FindAll(Lang.CreateDialogFilter("PirateChatter.", obj));
				int num39 = Main.rand.Next(6 + array5.Length);
				if (num39 >= 6)
				{
					result = array5[num39 - 6].FormatWith(obj);
				}
				else if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(276, false);
				}
				else if (num39 == 0)
				{
					result = Lang.dialog(273, false);
				}
				else if (num39 == 1)
				{
					result = Lang.dialog(274, false);
				}
				else if (num39 == 2)
				{
					result = Lang.dialog(275, false);
				}
				else if (num39 == 3)
				{
					result = Lang.dialog(277, false);
				}
				else if (num39 == 4)
				{
					result = Lang.dialog(278, false);
				}
				else if (num39 == 5)
				{
					result = Lang.dialog(279, false);
				}
			}
			else if (this.type == 354)
			{
				result = Lang.dialog(Main.rand.Next(315, 319), false);
			}
			else if (this.type == 353)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.bloodMoon)
				{
					int num40 = Main.rand.Next(3);
					if (num40 == 0)
					{
						result = Lang.dialog(304, false);
					}
					else if (num40 == 1)
					{
						result = Lang.dialog(305, false);
					}
					else if (num40 == 2)
					{
						result = Lang.dialog(306, false);
					}
				}
				else if (Main.dayTime && Main.time < 16200.0 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(311, false);
				}
				else if (Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
				{
					int num41 = Main.rand.Next(2);
					if (num41 == 0)
					{
						result = Lang.dialog(293, false);
					}
					else if (num41 == 1)
					{
						result = Lang.dialog(300, false);
					}
				}
				else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
				{
					int num42 = Main.rand.Next(3);
					if (num42 == 0)
					{
						result = Lang.dialog(291, false);
					}
					else if (num42 == 1)
					{
						result = Lang.dialog(292, false);
					}
					else if (num42 == 2)
					{
						result = Lang.dialog(312, false);
					}
				}
				else if ((flag14 & flag7 & flag2 & flag3) && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(307, false);
				}
				else if (flag14 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(302, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(303, false);
				}
				else if (flag13 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(308, false);
				}
				else
				{
					LocalizedText[] array6 = Language.FindAll(Lang.CreateDialogFilter("StylistChatter.", obj));
					int num43 = (Main.moonPhase < 3) ? 5 : 4;
					int num44 = Main.rand.Next(num43 + array6.Length);
					if (num44 >= num43)
					{
						result = array6[num44 - num43].FormatWith(obj);
					}
					else if (Main.moonPhase < 3)
					{
						if (num44 == 0)
						{
							result = Lang.dialog(287, false);
						}
						else if (num44 == 1)
						{
							result = Lang.dialog(288, false);
						}
						else if (num44 == 2)
						{
							result = Lang.dialog(289, false);
						}
						else if (num44 == 3)
						{
							result = Lang.dialog(290, false);
						}
						else if (num44 == 4)
						{
							result = Lang.dialog(294, false);
						}
					}
					else if (Main.moonPhase < 6)
					{
						if (num44 == 0)
						{
							result = Lang.dialog(295, false);
						}
						else if (num44 == 1)
						{
							result = Lang.dialog(296, false);
						}
						else if (num44 == 2)
						{
							result = Lang.dialog(297, false);
						}
						else if (num44 == 3)
						{
							result = Lang.dialog(298, false);
						}
					}
					else if (num44 == 0)
					{
						result = Lang.dialog(299, false);
					}
					else if (num44 == 1)
					{
						result = Lang.dialog(301, false);
					}
					else if (num44 == 2)
					{
						result = Lang.dialog(313, false);
					}
					else if (num44 == 3)
					{
						result = Lang.dialog(314, false);
					}
				}
			}
			else if (this.type == 368)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (flag16 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(319, false);
				}
				else if (flag && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(320, false);
				}
				else if (flag9 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(321, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(322, 331), false);
				}
			}
			else if (this.type == 376)
			{
				result = Lang.dialog(Main.rand.Next(353, 356), false);
			}
			else if (this.type == 369)
			{
				if (BirthdayParty.PartyIsUp && Main.rand.Next(3) == 0)
				{
					result = this.GetBirthdayDialog();
				}
				else if (Main.bloodMoon)
				{
					if (!Main.anglerQuestFinished)
					{
						result = Lang.dialog(Main.rand.Next(348, 350), false);
					}
					else
					{
						result = Lang.dialog(Main.rand.Next(350, 353), false);
					}
				}
				else if (!Main.anglerQuestFinished)
				{
					result = Lang.dialog(Main.rand.Next(334, 338), false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(347, false);
				}
				else
				{
					LocalizedText[] array7 = Language.FindAll(Lang.CreateDialogFilter("AnglerChatter.", obj));
					int num45 = Main.rand.Next(array7.Length + 9);
					if (num45 >= 9)
					{
						result = array7[num45 - 9].FormatWith(obj);
					}
					else
					{
						result = Lang.dialog(338 + num45, false);
					}
				}
			}
			else if (this.type == 453)
			{
				result = Lang.dialog(Main.rand.Next(356, 364), false);
			}
			else if (this.type == 441)
			{
				if (Main.rand.Next(6) == 0 & flag4)
				{
					result = Lang.dialog(371, false);
				}
				else if (Main.rand.Next(6) == 0 & flag3)
				{
					result = Lang.dialog(372, false);
				}
				else if (Main.rand.Next(6) == 0 & flag6)
				{
					result = Lang.dialog(373, false);
				}
				else if (Main.rand.Next(6) == 0 & flag)
				{
					result = Lang.dialog(374, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(364, 370), false);
				}
			}
			else if (this.type == 579)
			{
				result = Language.GetTextValue("BartenderSpecialText.FirstMeeting");
			}
			else if (this.type == 550)
			{
				result = Lang.BartenderChat(this);
			}
			return result;
		}

		// Token: 0x060002A5 RID: 677 RVA: 0x001D1DC8 File Offset: 0x001CFFC8
		public Color GetColor(Color newColor)
		{
			int num = (int)(this.color.R - (255 - newColor.R));
			int num2 = (int)(this.color.G - (255 - newColor.G));
			int num3 = (int)(this.color.B - (255 - newColor.B));
			int num4 = (int)(this.color.A - (255 - newColor.A));
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}

		// Token: 0x06000226 RID: 550 RVA: 0x000ED458 File Offset: 0x000EB658
		public static string GetFirstNPCNameOrNull(int npcType)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					return Main.npc[i].GivenOrTypeName;
				}
			}
			return null;
		}

		// Token: 0x06000221 RID: 545 RVA: 0x000ED346 File Offset: 0x000EB546
		public NetworkText GetFullNetName()
		{
			if (!this.HasGivenName)
			{
				return this.GetTypeNetName();
			}
			return NetworkText.FromKey("Game.NPCTitle", new object[]
			{
				this.GetGivenNetName(),
				this.GetTypeNetName()
			});
		}

		// Token: 0x06000223 RID: 547 RVA: 0x000ED390 File Offset: 0x000EB590
		public NetworkText GetGivenNetName()
		{
			return NetworkText.FromLiteral(this._givenName);
		}

		// Token: 0x06000222 RID: 546 RVA: 0x000ED379 File Offset: 0x000EB579
		public NetworkText GetGivenOrTypeNetName()
		{
			if (!this.HasGivenName)
			{
				return this.GetTypeNetName();
			}
			return this.GetGivenNetName();
		}

		// Token: 0x060002AB RID: 683 RVA: 0x001D4B90 File Offset: 0x001D2D90
		public static void GetMeleeCollisionData(Rectangle victimHitbox, int enemyIndex, ref int specialHitSetter, ref float damageMultiplier, ref Rectangle npcRect)
		{
			NPC nPC = Main.npc[enemyIndex];
			if (nPC.type >= 430 && nPC.type <= 436 && nPC.ai[2] > 5f)
			{
				int num = 34;
				if (nPC.spriteDirection < 0)
				{
					npcRect.X -= num;
					npcRect.Width += num;
				}
				else
				{
					npcRect.Width += num;
				}
				damageMultiplier *= 1.25f;
				return;
			}
			if (nPC.type >= 494 && nPC.type <= 495 && nPC.ai[2] > 5f)
			{
				int num2 = 18;
				if (nPC.spriteDirection < 0)
				{
					npcRect.X -= num2;
					npcRect.Width += num2;
				}
				else
				{
					npcRect.Width += num2;
				}
				damageMultiplier *= 1.25f;
				return;
			}
			if (nPC.type == 460)
			{
				Rectangle rectangle = new Rectangle(0, 0, 30, 14);
				rectangle.X = (int)nPC.Center.X;
				if (nPC.direction < 0)
				{
					rectangle.X -= rectangle.Width;
				}
				rectangle.Y = (int)nPC.position.Y + nPC.height - 20;
				if (victimHitbox.Intersects(rectangle))
				{
					npcRect = rectangle;
					damageMultiplier *= 1.35f;
					return;
				}
			}
			else if (nPC.type == 417 && nPC.ai[0] == 6f && nPC.ai[3] > 0f && nPC.ai[3] < 4f)
			{
				Rectangle rectangle2 = Utils.CenteredRectangle(nPC.Center, new Vector2(100f));
				if (victimHitbox.Intersects(rectangle2))
				{
					npcRect = rectangle2;
					damageMultiplier *= 1.35f;
					return;
				}
			}
			else if (nPC.type == 466)
			{
				Rectangle rectangle3 = new Rectangle(0, 0, 30, 8);
				rectangle3.X = (int)nPC.Center.X;
				if (nPC.direction < 0)
				{
					rectangle3.X -= rectangle3.Width;
				}
				rectangle3.Y = (int)nPC.position.Y + nPC.height - 32;
				if (victimHitbox.Intersects(rectangle3))
				{
					npcRect = rectangle3;
					damageMultiplier *= 1.75f;
					return;
				}
			}
			else if (nPC.type == 576 || nPC.type == 577)
			{
				NPC nPC2 = nPC;
				bool flag = true;
				int y = nPC2.frame.Y;
				int num3 = 0;
				int num4 = 0;
				Rectangle rectangle4 = new Rectangle(0, 0, 30, 8);
				switch (y)
				{
					case 15:
						specialHitSetter = 2;
						rectangle4.Width = 120;
						rectangle4.Height = 30;
						num4 = 24;
						break;
					case 16:
						specialHitSetter = 2;
						rectangle4.Width = 120;
						rectangle4.Height = 60;
						num3 = 10;
						break;
					case 17:
						specialHitSetter = 2;
						rectangle4.Width = 100;
						rectangle4.Height = 90;
						num3 = 50;
						break;
					case 18:
						specialHitSetter = 2;
						rectangle4.Width = 100;
						rectangle4.Height = 50;
						num3 = 90;
						num4 = 10;
						break;
					default:
						flag = false;
						break;
				}
				if (flag)
				{
					rectangle4.X = (int)nPC2.Center.X - num3 * nPC2.direction;
					if (nPC2.direction < 0)
					{
						rectangle4.X -= rectangle4.Width;
					}
					rectangle4.Y = (int)nPC2.Center.Y - rectangle4.Height + num4;
					if (victimHitbox.Intersects(rectangle4))
					{
						npcRect = rectangle4;
						damageMultiplier *= 1.75f;
						return;
					}
				}
			}
			else if ((nPC.type == 552 || nPC.type == 553 || nPC.type == 554) && nPC.ai[0] > 0f && nPC.ai[0] < 24f)
			{
				Rectangle rectangle5 = new Rectangle(0, 0, 34, 14);
				rectangle5.X = (int)nPC.Center.X;
				if (nPC.direction < 0)
				{
					rectangle5.X -= rectangle5.Width;
				}
				rectangle5.Y = (int)nPC.position.Y + nPC.height - 20;
				if (victimHitbox.Intersects(rectangle5))
				{
					npcRect = rectangle5;
					damageMultiplier *= 1.35f;
				}
			}
		}

		// Token: 0x0600021F RID: 543 RVA: 0x000EBE54 File Offset: 0x000EA054
		public static string getNewNPCName(int npcType)
		{
			if (npcType <= 178)
			{
				if (npcType <= 107)
				{
					if (npcType <= 38)
					{
						switch (npcType)
						{
							case 17:
								switch (WorldGen.genRand.Next(23))
								{
									case 0:
										return "Alfred";
									case 1:
										return "Barney";
									case 2:
										return "Calvin";
									case 3:
										return "Edmund";
									case 4:
										return "Edwin";
									case 5:
										return "Eugene";
									case 6:
										return "Frank";
									case 7:
										return "Frederick";
									case 8:
										return "Gilbert";
									case 9:
										return "Gus";
									case 10:
										return "Wilbur";
									case 11:
										return "Seymour";
									case 12:
										return "Louis";
									case 13:
										return "Humphrey";
									case 14:
										return "Harold";
									case 15:
										return "Milton";
									case 16:
										return "Mortimer";
									case 17:
										return "Howard";
									case 18:
										return "Walter";
									case 19:
										return "Finn";
									case 20:
										return "Isaac";
									case 21:
										return "Joseph";
									default:
										return "Ralph";
								}
								break;
							case 18:
								switch (WorldGen.genRand.Next(24))
								{
									case 0:
										return "Molly";
									case 1:
										return "Amy";
									case 2:
										return "Claire";
									case 3:
										return "Emily";
									case 4:
										return "Katie";
									case 5:
										return "Madeline";
									case 6:
										return "Katelyn";
									case 7:
										return "Emma";
									case 8:
										return "Abigail";
									case 9:
										return "Carly";
									case 10:
										return "Jenna";
									case 11:
										return "Heather";
									case 12:
										return "Katherine";
									case 13:
										return "Caitlin";
									case 14:
										return "Kaitlin";
									case 15:
										return "Holly";
									case 16:
										return "Kaitlyn";
									case 17:
										return "Hannah";
									case 18:
										return "Kathryn";
									case 19:
										return "Lorraine";
									case 20:
										return "Helen";
									case 21:
										return "Kayla";
									case 22:
										return "Lisa";
									default:
										return "Allison";
								}
								break;
							case 19:
								switch (WorldGen.genRand.Next(24))
								{
									case 0:
										return "DeShawn";
									case 1:
										return "DeAndre";
									case 2:
										return "Marquis";
									case 3:
										return "Darnell";
									case 4:
										return "Terrell";
									case 5:
										return "Malik";
									case 6:
										return "Trevon";
									case 7:
										return "Tyrone";
									case 8:
										return "Willie";
									case 9:
										return "Dominique";
									case 10:
										return "Demetrius";
									case 11:
										return "Reginald";
									case 12:
										return "Jamal";
									case 13:
										return "Maurice";
									case 14:
										return "Jalen";
									case 15:
										return "Darius";
									case 16:
										return "Xavier";
									case 17:
										return "Terrance";
									case 18:
										return "Andre";
									case 19:
										return "Dante";
									case 20:
										return "Brimst";
									case 21:
										return "Bronson";
									case 22:
										return "Tony";
									default:
										return "Darryl";
								}
								break;
							case 20:
								switch (WorldGen.genRand.Next(22))
								{
									case 0:
										return "Alalia";
									case 1:
										return "Alalia";
									case 2:
										return "Alura";
									case 3:
										return "Ariella";
									case 4:
										return "Caelia";
									case 5:
										return "Calista";
									case 6:
										return "Chryseis";
									case 7:
										return "Emerenta";
									case 8:
										return "Elysia";
									case 9:
										return "Evvie";
									case 10:
										return "Faye";
									case 11:
										return "Felicitae";
									case 12:
										return "Lunette";
									case 13:
										return "Nata";
									case 14:
										return "Nissa";
									case 15:
										return "Tatiana";
									case 16:
										return "Rosalva";
									case 17:
										return "Shea";
									case 18:
										return "Tania";
									case 19:
										return "Isis";
									case 20:
										return "Celestia";
									default:
										return "Xylia";
								}
								break;
							case 21:
								break;
							case 22:
								switch (WorldGen.genRand.Next(35))
								{
									case 0:
										return "Joe";
									case 1:
										return "Connor";
									case 2:
										return "Tanner";
									case 3:
										return "Wyatt";
									case 4:
										return "Cody";
									case 5:
										return "Levi";
									case 6:
										return "Luke";
									case 7:
										return "Jack";
									case 8:
										return "Scott";
									case 9:
										return "Logan";
									case 10:
										return "Cole";
									case 11:
										return "Asher";
									case 12:
										return "Bradley";
									case 13:
										return "Jacob";
									case 14:
										return "Garrett";
									case 15:
										return "Dylan";
									case 16:
										return "Maxwell";
									case 17:
										return "Steve";
									case 18:
										return "Brett";
									case 19:
										return "Andrew";
									case 20:
										return "Harley";
									case 21:
										return "Kyle";
									case 22:
										return "Jake";
									case 23:
										return "Ryan";
									case 24:
										return "Jeffrey";
									case 25:
										return "Seth";
									case 26:
										return "Marty";
									case 27:
										return "Brandon";
									case 28:
										return "Zach";
									case 29:
										return "Jeff";
									case 30:
										return "Daniel";
									case 31:
										return "Trent";
									case 32:
										return "Kevin";
									case 33:
										return "Brian";
									default:
										return "Colin";
								}
								break;
							default:
								if (npcType == 38)
								{
									switch (WorldGen.genRand.Next(22))
									{
										case 0:
											return "Dolbere";
										case 1:
											return "Bazdin";
										case 2:
											return "Durim";
										case 3:
											return "Tordak";
										case 4:
											return "Garval";
										case 5:
											return "Morthal";
										case 6:
											return "Oten";
										case 7:
											return "Dolgen";
										case 8:
											return "Gimli";
										case 9:
											return "Gimut";
										case 10:
											return "Duerthen";
										case 11:
											return "Beldin";
										case 12:
											return "Jarut";
										case 13:
											return "Ovbere";
										case 14:
											return "Norkas";
										case 15:
											return "Dolgrim";
										case 16:
											return "Boften";
										case 17:
											return "Norsun";
										case 18:
											return "Dias";
										case 19:
											return "Fikod";
										case 20:
											return "Urist";
										default:
											return "Darur";
									}
								}
								break;
						}
					}
					else if (npcType != 54)
					{
						if (npcType == 107)
						{
							switch (WorldGen.genRand.Next(25))
							{
								case 0:
									return "Grodax";
								case 1:
									return "Sarx";
								case 2:
									return "Xon";
								case 3:
									return "Mrunok";
								case 4:
									return "Nuxatk";
								case 5:
									return "Tgerd";
								case 6:
									return "Darz";
								case 7:
									return "Smador";
								case 8:
									return "Stazen";
								case 9:
									return "Mobart";
								case 10:
									return "Knogs";
								case 11:
									return "Tkanus";
								case 12:
									return "Negurk";
								case 13:
									return "Nort";
								case 14:
									return "Durnok";
								case 15:
									return "Trogem";
								case 16:
									return "Stezom";
								case 17:
									return "Gnudar";
								case 18:
									return "Ragz";
								case 19:
									return "Fahd";
								case 20:
									return "Xanos";
								case 21:
									return "Arback";
								case 22:
									return "Fjell";
								case 23:
									return "Dalek";
								default:
									return "Knub";
							}
						}
					}
					else
					{
						switch (WorldGen.genRand.Next(26))
						{
							case 0:
								return "Sebastian";
							case 1:
								return "Rupert";
							case 2:
								return "Clive";
							case 3:
								return "Nigel";
							case 4:
								return "Mervyn";
							case 5:
								return "Cedric";
							case 6:
								return "Pip";
							case 7:
								return "Cyril";
							case 8:
								return "Fitz";
							case 9:
								return "Lloyd";
							case 10:
								return "Arthur";
							case 11:
								return "Rodney";
							case 12:
								return "Graham";
							case 13:
								return "Edward";
							case 14:
								return "Alfred";
							case 15:
								return "Edmund";
							case 16:
								return "Henry";
							case 17:
								return "Herald";
							case 18:
								return "Roland";
							case 19:
								return "Lincoln";
							case 20:
								return "Lloyd";
							case 21:
								return "Edgar";
							case 22:
								return "Eustace";
							case 23:
								return "Benjamin";
							case 24:
								return "James";
							default:
								return "Rodrick";
						}
					}
				}
				else if (npcType <= 124)
				{
					if (npcType != 108)
					{
						if (npcType == 124)
						{
							switch (WorldGen.genRand.Next(24))
							{
								case 0:
									return "Shayna";
								case 1:
									return "Korrie";
								case 2:
									return "Ginger";
								case 3:
									return "Brooke";
								case 4:
									return "Jenny";
								case 5:
									return "Autumn";
								case 6:
									return "Nancy";
								case 7:
									return "Ella";
								case 8:
									return "Kayla";
								case 9:
									return "Selah";
								case 10:
									return "Sophia";
								case 11:
									return "Marshanna";
								case 12:
									return "Lauren";
								case 13:
									return "Trisha";
								case 14:
									return "Shirlena";
								case 15:
									return "Sheena";
								case 16:
									return "Ellen";
								case 17:
									return "Amy";
								case 18:
									return "Dawn";
								case 19:
									return "Susana";
								case 20:
									return "Meredith";
								case 21:
									return "Selene";
								case 22:
									return "Terra";
								default:
									return "Sally";
							}
						}
					}
					else
					{
						switch (WorldGen.genRand.Next(22))
						{
							case 0:
								return "Dalamar";
							case 1:
								return "Dulais";
							case 2:
								return "Elric";
							case 3:
								return "Arddun";
							case 4:
								return "Maelor";
							case 5:
								return "Leomund";
							case 6:
								return "Hirael";
							case 7:
								return "Gwentor";
							case 8:
								return "Greum";
							case 9:
								return "Gearroid";
							case 10:
								return "Fizban";
							case 11:
								return "Ningauble";
							case 12:
								return "Seonag";
							case 13:
								return "Sargon";
							case 14:
								return "Merlyn";
							case 15:
								return "Magius";
							case 16:
								return "Berwyn";
							case 17:
								return "Arwyn";
							case 18:
								return "Alasdair";
							case 19:
								return "Tagar";
							case 20:
								return "Abram";
							default:
								return "Xanadu";
						}
					}
				}
				else if (npcType != 160)
				{
					if (npcType == 178)
					{
						switch (WorldGen.genRand.Next(20))
						{
							case 0:
								return "Whitney";
							case 1:
								return "Verity";
							case 2:
								return "Ada";
							case 3:
								return "Cornelia";
							case 4:
								return "Lydia";
							case 5:
								return "Leila";
							case 6:
								return "Minerva";
							case 7:
								return "Emeline";
							case 8:
								return "Cynthia";
							case 9:
								return "Fidelia";
							case 10:
								return "Lilly";
							case 11:
								return "Phoebe";
							case 12:
								return "Zylphia";
							case 13:
								return "Zelda";
							case 14:
								return "Selina";
							case 15:
								return "Hope";
							case 16:
								return "Isabella";
							case 17:
								return "Judith";
							case 18:
								return "Savannah";
							default:
								return "Vivian";
						}
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(12))
					{
						case 0:
							return "Reishi";
						case 1:
							return "Maitake";
						case 2:
							return "Chanterelle";
						case 3:
							return "Porcini";
						case 4:
							return "Shimeji";
						case 5:
							return "Amanita";
						case 6:
							return "Muscaria";
						case 7:
							return "Agaric";
						case 8:
							return "Cremini";
						case 9:
							return "Morel";
						case 10:
							return "Enoki";
						default:
							return "Shiitake";
					}
				}
			}
			else if (npcType <= 368)
			{
				if (npcType <= 229)
				{
					switch (npcType)
					{
						case 207:
							switch (WorldGen.genRand.Next(16))
							{
								case 0:
									return "Abdosir";
								case 1:
									return "Akbar";
								case 2:
									return "Bodashtart";
								case 3:
									return "Danel";
								case 4:
									return "Hanno";
								case 5:
									return "Hiram";
								case 6:
									return "Kanmi";
								case 7:
									return "Philosir";
								case 8:
									return "Tabnit";
								case 9:
									return "Yutpan";
								case 10:
									return "Ahirom";
								case 11:
									return "Batnoam";
								case 12:
									return "Sikarbaal";
								case 13:
									return "Hannibal";
								case 14:
									return "Yehomilk";
								default:
									return "Ahinadab";
							}
							break;
						case 208:
							switch (WorldGen.genRand.Next(17))
							{
								case 0:
									return "Candy";
								case 1:
									return "Isis";
								case 2:
									return "Trixy";
								case 3:
									return "Destiny";
								case 4:
									return "Lexus";
								case 5:
									return "Bambi";
								case 6:
									return "Bailey";
								case 7:
									return "Glitter";
								case 8:
									return "Sparkle";
								case 9:
									return "Paris";
								case 10:
									return "Dazzle";
								case 11:
									return "Fantasy";
								case 12:
									return "Bunny";
								case 13:
									return "Sugar";
								case 14:
									return "Fantasia";
								case 15:
									return "Star";
								default:
									return "Cherry";
							}
							break;
						case 209:
							switch (WorldGen.genRand.Next(23))
							{
								case 0:
									return "Alpha";
								case 1:
									return "Beta";
								case 2:
									return "Delta";
								case 3:
									return "Omega";
								case 4:
									return "Gamma";
								case 5:
									return "Theta";
								case 6:
									return "Kappa";
								case 7:
									return "Omicron";
								case 8:
									return "Sigma";
								case 9:
									return "Upsilon";
								case 10:
									return "Phi";
								case 11:
									return "Zeta";
								case 12:
									return "Lambda";
								case 13:
									return "Nu";
								case 14:
									return "Ci";
								case 15:
									return "Rho";
								case 16:
									return "Phi";
								case 17:
									return "Fender";
								case 18:
									return "T-3E0";
								case 19:
									return "Niner-7";
								case 20:
									return "A.N.D.Y";
								case 21:
									return "Syn-X";
								default:
									return "Mu";
							}
							break;
						default:
							switch (npcType)
							{
								case 227:
									switch (WorldGen.genRand.Next(18))
									{
										case 0:
											return "Marco";
										case 1:
											return "Guido";
										case 2:
											return "Enzo";
										case 3:
											return "Martino";
										case 4:
											return "Mauro";
										case 5:
											return "Lorenzo";
										case 6:
											return "Ludo";
										case 7:
											return "Luciano";
										case 8:
											return "Carlo";
										case 9:
											return "Bruno";
										case 10:
											return "Mario";
										case 11:
											return "Leonardo";
										case 12:
											return "Raphael";
										case 13:
											return "Luigi";
										case 14:
											return "Luca";
										case 15:
											return "Darren";
										case 16:
											return "Esreadel";
										default:
											return "Stefano";
									}
									break;
								case 228:
									switch (WorldGen.genRand.Next(10))
									{
										case 0:
											return "Abibe";
										case 1:
											return "Jamundi";
										case 2:
											return "U'wa";
										case 3:
											return "Tairona";
										case 4:
											return "Xirigua";
										case 5:
											return "Zop'a";
										case 6:
											return "Opuni";
										case 7:
											return "Kogi-ghi";
										case 8:
											return "Konah";
										default:
											return "Gboto";
									}
									break;
								case 229:
									switch (WorldGen.genRand.Next(11))
									{
										case 0:
											return "David";
										case 1:
											return "Red Beard";
										case 2:
											return "Jack";
										case 3:
											return "Black Beard";
										case 4:
											return "Captain Morgan";
										case 5:
											return "Wet Beard";
										case 6:
											return "James T. Beard";
										case 7:
											return "Gunpowder Garry";
										case 8:
											return "Captain Stoney Dirt";
										case 9:
											return "Jake";
										default:
											return "Captain Bullywort";
									}
									break;
							}
							break;
					}
				}
				else if (npcType != 353)
				{
					if (npcType == 368)
					{
						switch (WorldGen.genRand.Next(13))
						{
							case 0:
								return "Abraham";
							case 1:
								return "Bohemas";
							case 2:
								return "Eladon";
							case 3:
								return "Aphraim";
							case 4:
								return "Gallius";
							case 5:
								return "Llewellyn";
							case 6:
								return "Riley";
							case 7:
								return "Rawleigh";
							case 8:
								return "Shipton";
							case 9:
								return "Romeo";
							case 10:
								return "Aedan";
							case 11:
								return "Mercer";
							default:
								return "Willy";
						}
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(20))
					{
						case 0:
							return "Bri";
						case 1:
							return "Brianne";
						case 2:
							return "Flora";
						case 3:
							return "Iris";
						case 4:
							return "Scarlett";
						case 5:
							return "Lola";
						case 6:
							return "Hazel";
						case 7:
							return "Stella";
						case 8:
							return "Pearl";
						case 9:
							return "Tallulah";
						case 10:
							return "Ruby";
						case 11:
							return "Esmeralda";
						case 12:
							return "Kylie";
						case 13:
							return "Kati";
						case 14:
							return "Biah";
						case 15:
							return "Meliyah";
						case 16:
							return "Petra";
						case 17:
							return "Rox";
						case 18:
							return "Roxanne";
						default:
							return "Annabel";
					}
				}
			}
			else if (npcType <= 441)
			{
				if (npcType != 369)
				{
					if (npcType == 441)
					{
						switch (WorldGen.genRand.Next(20))
						{
							case 0:
								return "McKinly";
							case 1:
								return "Millard";
							case 2:
								return "Fillmore";
							case 3:
								return "Rutherford";
							case 4:
								return "Chester";
							case 5:
								return "Grover";
							case 6:
								return "Cleveland";
							case 7:
								return "Theodore";
							case 8:
								return "Herbert";
							case 9:
								return "Warren";
							case 10:
								return "Lyndon";
							case 11:
								return "Ronald";
							case 12:
								return "Harrison";
							case 13:
								return "Woodrow";
							case 14:
								return "Tweed";
							case 15:
								return "Blanton";
							case 16:
								return "Dwyer";
							case 17:
								return "Carroll";
							default:
								return "Agnew";
						}
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(22))
					{
						case 0:
							return "Bobby";
						case 1:
							return "Sammy";
						case 2:
							return "Jimmy";
						case 3:
							return "Danny";
						case 4:
							return "Timmy";
						case 5:
							return "Simon";
						case 6:
							return "Johnny";
						case 7:
							return "Billy";
						case 8:
							return "Matty";
						case 9:
							return "Bart";
						case 10:
							return "Phillip";
						case 11:
							return "Spencer";
						case 12:
							return "Nathan";
						case 13:
							return "Grayson";
						case 14:
							return "Bryce";
						case 15:
							return "Miles";
						case 16:
							return "Charles";
						case 17:
							return "Adam";
						case 18:
							return "Tyler";
						case 19:
							return "Jey";
						case 20:
							return "Ivan";
						default:
							return "Izzy";
					}
				}
			}
			else if (npcType != 453)
			{
				if (npcType == 550)
				{
					return Language.RandomFromCategory("BartenderNames", WorldGen.genRand).Value;
				}
			}
			else
			{
				switch (WorldGen.genRand.Next(10))
				{
					case 0:
						return "Skellington";
					case 1:
						return "Bones McGee";
					case 2:
						return "Gloomy Mays";
					case 3:
						return "Jack Sellington";
					case 4:
						return "Billy Marrows";
					case 5:
						return "Tom";
					case 6:
						return "Rattles Magoo";
					case 7:
						return "Mandible Calavera";
					case 8:
						return "Mika";
					default:
						return "No-Eyed Wiley";
				}
			}
			return "";
		}

		// Token: 0x06000234 RID: 564 RVA: 0x00102A8C File Offset: 0x00100C8C
		public static bool GetNPCLocation(int i, bool seekHead, bool averageDirection, out int index, out Vector2 pos)
		{
			int num = Main.npc[i].type;
			int num2 = -1;
			int num3 = -1;
			if (num <= 117)
			{
				if (num <= 39)
				{
					switch (num)
					{
						case 7:
							num3 = 9;
							num2 = 0;
							break;
						case 8:
						case 9:
							num3 = 7;
							num2 = 1;
							break;
						case 10:
							num3 = 12;
							num2 = 0;
							break;
						case 11:
						case 12:
							num3 = 10;
							num2 = 1;
							break;
						case 13:
							num3 = 15;
							num2 = 0;
							break;
						case 14:
						case 15:
							num3 = 13;
							num2 = 1;
							break;
						default:
							if (num == 39)
							{
								num3 = 41;
								num2 = 0;
							}
							break;
					}
				}
				else if (num - 40 > 1)
				{
					switch (num)
					{
						case 87:
							num3 = 92;
							num2 = 0;
							break;
						case 88:
						case 89:
						case 90:
						case 91:
						case 92:
							num3 = 87;
							num2 = 1;
							break;
						case 93:
						case 94:
							break;
						case 95:
							num3 = 97;
							num2 = 0;
							break;
						case 96:
						case 97:
							num3 = 95;
							num2 = 1;
							break;
						case 98:
							num3 = 100;
							num2 = 0;
							break;
						case 99:
						case 100:
							num3 = 98;
							num2 = 1;
							break;
						default:
							if (num == 117)
							{
								num3 = 119;
								num2 = 0;
							}
							break;
					}
				}
				else
				{
					num3 = 39;
					num2 = 1;
				}
			}
			else if (num <= 136)
			{
				if (num - 118 > 1)
				{
					if (num != 134)
					{
						if (num - 135 <= 1)
						{
							num3 = 134;
							num2 = 1;
						}
					}
					else
					{
						num3 = 136;
						num2 = 0;
					}
				}
				else
				{
					num3 = 117;
					num2 = 1;
				}
			}
			else if (num != 454)
			{
				if (num - 455 > 4)
				{
					switch (num)
					{
						case 510:
							num3 = 512;
							num2 = 0;
							break;
						case 511:
						case 512:
							num3 = 510;
							num2 = 1;
							break;
						case 513:
							num3 = 515;
							num2 = 0;
							break;
						case 514:
						case 515:
							num3 = 513;
							num2 = 1;
							break;
					}
				}
				else
				{
					num3 = 454;
					num2 = 1;
				}
			}
			else
			{
				num3 = 459;
				num2 = 0;
			}
			if (num2 == -1)
			{
				pos = Main.npc[i].Center;
				index = i;
				return true;
			}
			if (seekHead && num2 == 1)
			{
				index = -1;
				pos = Vector2.Zero;
				return false;
			}
			Vector2 value = Main.npc[i].Center;
			int num4 = -1;
			float num5 = -1f;
			int num6 = -1;
			Vector2 center = Main.player[Main.myPlayer].Center;
			int num7 = (int)Main.npc[i].ai[num2];
			int num8 = 0;
			while (num7 >= 0 && num7 < 200 && ++num8 < 100 && Main.npc[num7].active)
			{
				if (!averageDirection && (num6 == -1 || Main.npc[num7].Distance(center) < num5))
				{
					num5 = Main.npc[num7].Distance(center);
					num6 = num7;
				}
				if (Main.npc[num7].type == num3)
				{
					num4 = num7;
					break;
				}
				num7 = (int)Main.npc[num7].ai[num2];
			}
			if (num4 >= 0)
			{
				if (!averageDirection)
				{
					pos = Main.npc[num6].Center;
					index = num6;
				}
				else
				{
					value += Main.npc[num4].Center;
					pos = value / 2f;
					index = num4;
				}
				return true;
			}
			pos = Vector2.Zero;
			index = -1;
			return false;
		}

		// Token: 0x0600024B RID: 587 RVA: 0x001795B0 File Offset: 0x001777B0
		public PartyHatColor GetPartyHatColor()
		{
			if (!this.UsesPartyHat() || string.IsNullOrEmpty(this.GivenOrTypeName))
			{
				return PartyHatColor.None;
			}
			int num = this.GivenOrTypeName.Length + (int)this.GivenOrTypeName[0];
			int num2 = Main.moonPhase;
			if (Main.dayTime)
			{
				num2--;
			}
			num += this.whoAmI;
			num += num2 * (this.whoAmI % 2 == 0).ToDirectionInt();
			if (num < 0)
			{
				num += 5;
			}
			return (PartyHatColor)(num % 5);
		}

		// Token: 0x0600027D RID: 637 RVA: 0x000089B0 File Offset: 0x00006BB0
		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		// Token: 0x06000247 RID: 583 RVA: 0x001791B0 File Offset: 0x001773B0
		public int GetShootingFrame(float circleY)
		{
			int num = -4;
			if (circleY < -0.3f)
			{
				num = 1;
			}
			if (circleY < -0.1f)
			{
				num = 0;
			}
			if (circleY > 0.1f)
			{
				num = 2;
			}
			if (circleY > 0.3f)
			{
				num = 3;
			}
			if (this.type == 228 || this.type == 229 || this.type == 209 || this.type == 22 || this.type == 368)
			{
				if (num == -4)
				{
					num = 1;
				}
				if (circleY >= -0.1f)
				{
					num++;
				}
			}
			return num;
		}

		// Token: 0x06000248 RID: 584 RVA: 0x0017923C File Offset: 0x0017743C
		public Tuple<Vector2, float> GetSwingStats(int swingMax, int swingCurrent, int aimDir, int itemWidth, int itemHeight)
		{
			Vector2 zero = Vector2.Zero;
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				float num = 10f;
				if (itemWidth > 32)
				{
					num = 14f;
				}
				if (itemWidth >= 52)
				{
					num = 24f;
				}
				if (itemWidth >= 64)
				{
					num = 28f;
				}
				if (itemWidth >= 92)
				{
					num = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - num) * (float)aimDir;
				zero.Y = this.position.Y + 24f;
			}
			else if ((double)swingCurrent < (double)swingMax * 0.666)
			{
				float num2 = 10f;
				if (itemWidth > 32)
				{
					num2 = 18f;
				}
				if (itemWidth >= 52)
				{
					num2 = 24f;
				}
				if (itemWidth >= 64)
				{
					num2 = 28f;
				}
				if (itemWidth >= 92)
				{
					num2 = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - num2) * (float)aimDir;
				num2 = 10f;
				if (itemHeight > 32)
				{
					num2 = 8f;
				}
				if (itemHeight > 52)
				{
					num2 = 12f;
				}
				if (itemHeight > 64)
				{
					num2 = 14f;
				}
				zero.Y = this.position.Y + num2;
			}
			else
			{
				float num3 = 6f;
				if (itemWidth > 32)
				{
					num3 = 14f;
				}
				if (itemWidth >= 48)
				{
					num3 = 18f;
				}
				if (itemWidth >= 52)
				{
					num3 = 24f;
				}
				if (itemWidth >= 64)
				{
					num3 = 28f;
				}
				if (itemWidth >= 92)
				{
					num3 = 38f;
				}
				zero.X = base.Center.X - ((float)itemWidth * 0.5f - num3) * (float)aimDir;
				num3 = 10f;
				if (itemHeight > 32)
				{
					num3 = 10f;
				}
				if (itemHeight > 52)
				{
					num3 = 12f;
				}
				if (itemHeight > 64)
				{
					num3 = 14f;
				}
				zero.Y = this.position.Y + num3;
			}
			float item = ((float)swingCurrent / (float)swingMax - 0.5f) * (float)(-(float)aimDir) * 3.5f - (float)aimDir * 0.3f;
			return Tuple.Create<Vector2, float>(zero, item);
		}

		// Token: 0x0600020E RID: 526 RVA: 0x000EB6AC File Offset: 0x000E98AC
		public NPCAimedTarget GetTargetData(bool ignorePlayerTankPets = true)
		{
			if (!this.HasValidTarget)
			{
				return default(NPCAimedTarget);
			}
			if (this.SupportsNPCTargets && this.HasNPCTarget)
			{
				return new NPCAimedTarget(Main.npc[this.TranslatedTargetIndex]);
			}
			return new NPCAimedTarget(Main.player[this.target], ignorePlayerTankPets);
		}

		// Token: 0x0600029D RID: 669 RVA: 0x001D066C File Offset: 0x001CE86C
		public void GetTileCollisionParameters(out Vector2 cPosition, out int cWidth, out int cHeight)
		{
			cPosition = this.position;
			cWidth = this.width;
			cHeight = this.height;
			if (this.type == 243)
			{
				cHeight = 90;
			}
			if (this.type == 290)
			{
				cHeight = 40;
			}
			if (this.type == 351)
			{
				cHeight = 40;
			}
			if (this.type == 482)
			{
				cHeight = 40;
			}
			if (this.type == 351 || this.type == 343 || this.type == 348 || this.type == 349)
			{
				cHeight = 40;
			}
			if (this.type == 391)
			{
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && Main.npc[i].type == 390 && Main.npc[i].ai[0] == (float)this.whoAmI)
					{
						cHeight = 62;
						break;
					}
				}
			}
			if (this.type == 415)
			{
				for (int j = 0; j < 200; j++)
				{
					if (Main.npc[j].active && Main.npc[j].type == 416 && Main.npc[j].ai[0] == (float)this.whoAmI)
					{
						cHeight = 62;
						break;
					}
				}
			}
			if (this.type == 576 || this.type == 577)
			{
				cPosition.X += 32f;
				cWidth -= 64;
			}
			if (cHeight != this.height)
			{
				cPosition.Y += (float)(this.height - cHeight);
			}
		}

		// Token: 0x06000220 RID: 544 RVA: 0x000ED329 File Offset: 0x000EB529
		public NetworkText GetTypeNetName()
		{
			return NetworkText.FromKey(Lang.GetNPCName(this.netID).Key, new object[0]);
		}

		// Token: 0x06000229 RID: 553 RVA: 0x000ED650 File Offset: 0x000EB850
		public static int HeadIndexToType(int type)
		{
			if (type == 2)
			{
				return 17;
			}
			if (type == 3)
			{
				return 18;
			}
			if (type == 6)
			{
				return 19;
			}
			if (type == 5)
			{
				return 20;
			}
			if (type == 1)
			{
				return 22;
			}
			if (type == 4)
			{
				return 38;
			}
			if (type == 7)
			{
				return 54;
			}
			if (type == 9)
			{
				return 107;
			}
			if (type == 10)
			{
				return 108;
			}
			if (type == 8)
			{
				return 124;
			}
			if (type == 11)
			{
				return 142;
			}
			if (type == 12)
			{
				return 160;
			}
			if (type == 13)
			{
				return 178;
			}
			if (type == 14)
			{
				return 207;
			}
			if (type == 15)
			{
				return 208;
			}
			if (type == 16)
			{
				return 209;
			}
			if (type == 17)
			{
				return 227;
			}
			if (type == 18)
			{
				return 228;
			}
			if (type == 19)
			{
				return 229;
			}
			if (type == 20)
			{
				return 353;
			}
			if (type == 21)
			{
				return 368;
			}
			if (type == 22)
			{
				return 369;
			}
			if (type == 23)
			{
				return 441;
			}
			if (type == 24)
			{
				return 550;
			}
			return -1;
		}

		// Token: 0x0600024E RID: 590 RVA: 0x0018BB08 File Offset: 0x00189D08
		public void HealEffect(int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.HealLife, healAmount, false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, null, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, (float)healAmount, 0, 0, 0);
			}
		}

		// Token: 0x0600024F RID: 591 RVA: 0x0018BB94 File Offset: 0x00189D94
		public static void HealEffect(Rectangle r, int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(r, CombatText.HealLife, healAmount, false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, null, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, (float)healAmount, 0, 0, 0);
			}
		}

		// Token: 0x06000275 RID: 629 RVA: 0x001A98BC File Offset: 0x001A7ABC
		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
		{
			if (!this.active)
			{
				return;
			}
			int num;
			if (this.townNPC && this.life <= 0 && this.UsesPartyHat())
			{
				bool flag = true;
				num = this.type;
				if (num <= 178)
				{
					if (num <= 38)
					{
						if (num == 17)
						{
							Gore.NewGore(this.position, this.velocity, 929, 1f);
							goto IL_24E;
						}
						if (num == 18)
						{
							Gore.NewGore(this.position, this.velocity, 930, 1f);
							goto IL_24E;
						}
						if (num == 38)
						{
							Gore.NewGore(this.position, this.velocity, 927, 1f);
							goto IL_24E;
						}
					}
					else
					{
						if (num == 108)
						{
							Gore.NewGore(this.position, this.velocity, 938, 1f);
							goto IL_24E;
						}
						if (num == 142)
						{
							Gore.NewGore(this.position, this.velocity, 933, 1f);
							goto IL_24E;
						}
						if (num == 178)
						{
							Gore.NewGore(this.position, this.velocity, 935, 1f);
							goto IL_24E;
						}
					}
				}
				else if (num <= 229)
				{
					if (num == 207)
					{
						Gore.NewGore(this.position, this.velocity, 928, 1f);
						goto IL_24E;
					}
					if (num == 227)
					{
						Gore.NewGore(this.position, this.velocity, 931, 1f);
						goto IL_24E;
					}
					if (num == 229)
					{
						Gore.NewGore(this.position, this.velocity, 932, 1f);
						goto IL_24E;
					}
				}
				else
				{
					if (num == 353)
					{
						Gore.NewGore(this.position, this.velocity, 936, 1f);
						goto IL_24E;
					}
					if (num == 368)
					{
						Gore.NewGore(this.position, this.velocity, 937, 1f);
						goto IL_24E;
					}
					if (num == 453)
					{
						Gore.NewGore(this.position, this.velocity, 934, 1f);
						goto IL_24E;
					}
				}
				flag = false;
				IL_24E:
				if (flag)
				{
					int num2 = 926;
					switch (this.GetPartyHatColor())
					{
						case PartyHatColor.Pink:
							num2 = 939;
							break;
						case PartyHatColor.Cyan:
							num2 = 940;
							break;
						case PartyHatColor.Purple:
							num2 = 941;
							break;
						case PartyHatColor.White:
							num2 = 942;
							break;
					}
					Gore.NewGore(this.position, this.velocity, num2, 1f);
				}
			}
			if (this.daybreak && this.life <= 0)
			{
				Rectangle hitbox = base.Hitbox;
				for (int i = 0; i < 20; i = num + 1)
				{
					int num3 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						6,
						259,
						158
					});
					int num4 = Dust.NewDust(hitbox.TopLeft(), this.width, this.height, num3, 0f, -2.5f, 0, default(Color), 1f);
					Main.dust[num4].alpha = 200;
					Dust dust = Main.dust[num4];
					dust.velocity *= 1.4f;
					dust = Main.dust[num4];
					dust.scale += Main.rand.NextFloat();
					num = i;
				}
				if (Main.netMode != 1)
				{
					for (int j = 0; j < 200; j = num + 1)
					{
						NPC nPC = Main.npc[j];
						if (nPC.active && !nPC.buffImmune[189] && base.Distance(nPC.Center) < 100f && !nPC.dontTakeDamage && nPC.lifeMax > 5 && !nPC.friendly && !nPC.townNPC)
						{
							nPC.AddBuff(189, 300, false);
						}
						num = j;
					}
				}
			}
			if (this.type == 552 || this.type == 553 || this.type == 554)
			{
				if (this.life > 0)
				{
					int num5 = 0;
					while ((double)num5 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num5;
						num5 = num + 1;
					}
				}
				else
				{
					int num6 = 0;
					while ((float)num6 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num6;
						num6 = num + 1;
					}
					int num7 = 983;
					if (this.type == 553)
					{
						num7 = 1067;
					}
					else if (this.type == 554)
					{
						num7 = 1071;
					}
					Gore.NewGore(this.position, this.velocity, num7, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num7 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num7 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num7 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num7 + 1, this.scale);
				}
			}
			else if (this.type == 561 || this.type == 562 || this.type == 563)
			{
				if (this.life > 0)
				{
					int num8 = 0;
					while ((double)num8 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num8;
						num8 = num + 1;
					}
				}
				else
				{
					int num9 = 0;
					while ((float)num9 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num9;
						num9 = num + 1;
					}
					int num10 = 987;
					if (this.type == 562)
					{
						num10 = 1055;
					}
					else if (this.type == 563)
					{
						num10 = 1061;
					}
					Gore.NewGore(this.position, this.velocity, num10 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num10, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num10 + 4, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num10 + 5, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num10 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num10 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num10 + 1, this.scale);
				}
			}
			else if (this.type == 555 || this.type == 556 || this.type == 557)
			{
				if (this.life > 0)
				{
					int num11 = 0;
					while ((double)num11 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num11;
						num11 = num + 1;
					}
				}
				else
				{
					int num12 = 1031;
					if (this.type == 556)
					{
						num12 = 1034;
					}
					if (this.type == 557)
					{
						num12 = 1037;
					}
					int num13 = 0;
					while ((float)num13 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num13;
						num13 = num + 1;
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, num12, this.scale);
					Gore.NewGore(new Vector2(this.position.X + 10f, this.position.Y + 20f), this.velocity, num12 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X + 10f, this.position.Y + 30f), this.velocity, num12 + 2, this.scale);
				}
			}
			else if (this.type == 551)
			{
				int num14 = (int)((float)this.life / (float)this.lifeMax * 100f);
				int num15 = (int)(((double)this.life + dmg) / (double)((float)this.lifeMax) * 100.0);
				if (num14 != num15 && this.life > 0 && Main.netMode != 1)
				{
					DD2Event.CheckProgress(this.type);
				}
				if (this.life > 0)
				{
					int num16 = 0;
					while ((double)num16 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num16;
						num16 = num + 1;
					}
				}
				else
				{
					int num17 = 0;
					while ((float)num17 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num17;
						num17 = num + 1;
					}
					if (this.spriteDirection != -1)
					{
						Gore.NewGore(this.position + new Vector2(0f, 54f), this.velocity, 1079, this.scale);
						Gore.NewGore(this.position + new Vector2(72f, 90f), this.velocity, 1080, this.scale);
						Gore.NewGore(this.position + new Vector2(102f, 94f), this.velocity, 1080, this.scale);
						Gore.NewGore(this.position + new Vector2(178f, 0f), this.velocity, 1081, this.scale);
						Gore.NewGore(this.position + new Vector2(136f, 12f), this.velocity, 1082, this.scale);
						Gore.NewGore(this.position + new Vector2(82f, 18f), this.velocity, 1083, this.scale);
						Gore.NewGore(this.position + new Vector2(100f, 26f), this.velocity, 1084, this.scale);
						Gore.NewGore(this.position + new Vector2(170f, 16f), this.velocity, 1085, this.scale);
						Gore.NewGore(this.position + new Vector2(190f, 10f), this.velocity, 1085, this.scale);
						Gore.NewGore(this.position + new Vector2(100f, 36f), this.velocity, 1086, this.scale);
					}
					else
					{
						Gore.NewGore(this.position + new Vector2(176f, 54f), this.velocity, 1079, this.scale);
						Gore.NewGore(this.position + new Vector2(158f, 90f), this.velocity, 1080, this.scale);
						Gore.NewGore(this.position + new Vector2(128f, 94f), this.velocity, 1080, this.scale);
						Gore.NewGore(this.position + new Vector2(0f, 0f), this.velocity, 1081, this.scale);
						Gore.NewGore(this.position + new Vector2(60f, 12f), this.velocity, 1082, this.scale);
						Gore.NewGore(this.position + new Vector2(88f, 18f), this.velocity, 1083, this.scale);
						Gore.NewGore(this.position + new Vector2(86f, 26f), this.velocity, 1084, this.scale);
						Gore.NewGore(this.position + new Vector2(40f, 16f), this.velocity, 1085, this.scale);
						Gore.NewGore(this.position + new Vector2(20f, 10f), this.velocity, 1085, this.scale);
						Gore.NewGore(this.position + new Vector2(142f, 36f), this.velocity, 1086, this.scale);
					}
				}
			}
			else if (this.type == 572 || this.type == 573)
			{
				if (this.life > 0)
				{
					int num18 = 0;
					while ((double)num18 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num18;
						num18 = num + 1;
					}
				}
				else
				{
					ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(this.localAI[0]));
					if (activeSound != null)
					{
						activeSound.Stop();
					}
					ActiveSound activeSound2 = Main.GetActiveSound(SlotId.FromFloat(this.localAI[1]));
					if (activeSound2 != null)
					{
						activeSound2.Stop();
					}
					int num19 = 0;
					while ((float)num19 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num19;
						num19 = num + 1;
					}
					Vector2 vector = base.Center - new Vector2(10f, 10f);
					Gore.NewGore(vector, this.velocity, 993, this.scale);
					Gore.NewGore(new Vector2(vector.X, vector.Y + 20f), this.velocity, 996, this.scale);
					Gore.NewGore(new Vector2(vector.X, vector.Y + 20f), this.velocity, 995, this.scale);
					Gore.NewGore(new Vector2(vector.X, vector.Y + 34f), this.velocity, 994, this.scale);
					Gore.NewGore(new Vector2(vector.X, vector.Y + 34f), this.velocity, 994, this.scale);
				}
			}
			else if (this.type == 574 || this.type == 575)
			{
				if (this.life > 0)
				{
					int num20 = 0;
					while ((double)num20 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num20;
						num20 = num + 1;
					}
				}
				else
				{
					ActiveSound activeSound3 = Main.GetActiveSound(SlotId.FromFloat(this.localAI[2]));
					if (activeSound3 != null)
					{
						activeSound3.Stop();
					}
					int num21 = 0;
					while ((float)num21 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num21;
						num21 = num + 1;
					}
					int num22 = 1050;
					Vector2 vector2 = base.Center - new Vector2(30f, 10f);
					Gore.NewGore(new Vector2(vector2.X, vector2.Y + 10f), this.velocity, num22, this.scale);
					Gore.NewGore(new Vector2(vector2.X, vector2.Y + 30f), this.velocity, num22 + 1, this.scale);
					Gore.NewGore(new Vector2(vector2.X, vector2.Y + 30f), this.velocity, num22 + 2, this.scale);
					Gore.NewGore(new Vector2(vector2.X, vector2.Y + 0f), this.velocity, num22 + 3, this.scale);
					Gore.NewGore(new Vector2(vector2.X, vector2.Y + 0f), this.velocity, num22 + 4, this.scale);
				}
			}
			else if (this.type == 570 || this.type == 571)
			{
				if (this.life > 0)
				{
					int num23 = 0;
					while ((double)num23 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num23;
						num23 = num + 1;
					}
				}
				else
				{
					int num24 = 0;
					while ((float)num24 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num24;
						num24 = num + 1;
					}
					int num25 = (this.type == 570) ? 1075 : 979;
					Gore.NewGore(this.position, this.velocity, num25, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num25 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num25 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num25 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num25 + 1, this.scale);
				}
			}
			else if (this.type == 568 || this.type == 569)
			{
				if (this.life > 0)
				{
					int num26 = 0;
					while ((double)num26 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num26;
						num26 = num + 1;
					}
				}
				else
				{
					int num27 = 0;
					while ((float)num27 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num27;
						num27 = num + 1;
					}
					Gore.NewGore(this.position, this.velocity, 1020, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 1021, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 1023, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 1022, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 1022, this.scale);
				}
			}
			else if (this.type == 558 || this.type == 559 || this.type == 560)
			{
				if (this.life > 0)
				{
					int num28 = 0;
					while ((double)num28 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num28;
						num28 = num + 1;
					}
				}
				else
				{
					int num29 = 0;
					while ((float)num29 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num29;
						num29 = num + 1;
					}
					int num30 = 974;
					if (this.type == 559)
					{
						num30 = 1040;
					}
					if (this.type == 560)
					{
						num30 = 1045;
					}
					Gore.NewGore(this.position, this.velocity, num30 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, num30, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, num30, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, num30 + 4, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 24f), this.velocity, num30 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 24f), this.velocity, num30 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 24f), this.velocity, num30 + 3, this.scale);
				}
			}
			else if (this.type == 566 || this.type == 567)
			{
				if (this.life > 0)
				{
					int num31 = 0;
					while ((double)num31 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 236, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num31;
						num31 = num + 1;
					}
				}
				else
				{
					int num32 = 0;
					while ((float)num32 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 236, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num32;
						num32 = num + 1;
					}
					Gore.NewGore(this.position, this.velocity, 970, this.scale);
					if (Main.rand.Next(2) == 0)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 972, this.scale);
					}
					if (Main.rand.Next(2) == 0)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 972, this.scale);
					}
					if (Main.rand.Next(2) == 0)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 973, this.scale);
					}
					if (Main.rand.Next(2) == 0)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 973, this.scale);
					}
					if (Main.rand.Next(2) == 0)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 971, this.scale);
					}
					if (Main.rand.Next(2) == 0)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 971, this.scale);
					}
				}
			}
			else if (this.type == 576 || this.type == 577)
			{
				if (this.life > 0)
				{
					int num33 = 0;
					while ((double)num33 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 273, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num33;
						num33 = num + 1;
					}
				}
				else
				{
					int num34 = 0;
					while ((float)num34 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 273, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num34;
						num34 = num + 1;
					}
					if (this.spriteDirection == -1)
					{
						Gore.NewGore(this.position + new Vector2(0f, 0f), this.velocity, 1005 + ((Main.rand.Next(5) == 0) ? 1 : 0), this.scale);
						Gore.NewGore(this.position + new Vector2(18f, 28f), this.velocity, 1000, this.scale);
						int num35 = Gore.NewGore(this.position + new Vector2(-40f, 70f), this.velocity, 1001, this.scale);
						Main.gore[num35].rotation = 3.14159274f;
						num35 = Gore.NewGore(this.position + new Vector2(4f, 28f), this.velocity, 1002, this.scale);
						Main.gore[num35].rotation = 3.14159274f;
						Gore.NewGore(this.position + new Vector2(36f, 90f), this.velocity, 1003, this.scale);
						Gore.NewGore(this.position + new Vector2(32f, 90f), this.velocity, 1004, this.scale);
					}
					else
					{
						Gore.NewGore(this.position + new Vector2(48f, 0f), this.velocity, 1005 + ((Main.rand.Next(5) == 0) ? 1 : 0), this.scale);
						Gore.NewGore(this.position + new Vector2(22f, 28f), this.velocity, 1000, this.scale);
						Gore.NewGore(this.position + new Vector2(48f, 70f), this.velocity, 1001, this.scale);
						Gore.NewGore(this.position + new Vector2(4f, 28f), this.velocity, 1002, this.scale);
						Gore.NewGore(this.position + new Vector2(36f, 90f), this.velocity, 1003, this.scale);
						Gore.NewGore(this.position + new Vector2(32f, 90f), this.velocity, 1004, this.scale);
					}
				}
			}
			else if (this.type == 564 || this.type == 565)
			{
				if (this.life > 0)
				{
					int num36 = 0;
					while ((double)num36 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num36;
						num36 = num + 1;
					}
				}
				else
				{
					int num37 = 0;
					while ((float)num37 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num37;
						num37 = num + 1;
					}
					int num38 = 1009;
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, num38, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 15f), this.velocity, num38 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 15f), this.velocity, num38 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 15f), this.velocity, num38 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X - 20f, this.position.Y + 35f), this.velocity, num38 + 4, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 35f), this.velocity, num38 + 5, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 35f), this.velocity, num38 + 6, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 35f), this.velocity, num38 + 10, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 25f), this.velocity, num38 + 7, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 25f), this.velocity, num38 + 8, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 25f), this.velocity, num38 + 9, this.scale);
				}
			}
			else if (this.type == 578)
			{
				if (this.life > 0)
				{
					int num39 = 0;
					while ((double)num39 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num39;
						num39 = num + 1;
					}
				}
				else
				{
					int num40 = 0;
					while ((float)num40 < 20f)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num40;
						num40 = num + 1;
					}
					Gore.NewGore(this.position, this.velocity, 999, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 998, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 998, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 997, this.scale);
				}
			}
			else if (this.type == 541)
			{
				Color color = new Color(222, 108, 48) * 0.7f;
				if (this.life > 0)
				{
					int num41 = 0;
					while ((double)num41 < dmg / (double)this.lifeMax * 200.0)
					{
						Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust2.color = color;
						dust2.noGravity = true;
						dust2.scale = 1.5f;
						dust2.fadeIn = 0.7f;
						Dust dust = dust2;
						dust.velocity *= 3f;
						dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust2.color = color;
						dust2.noGravity = true;
						dust2.scale = 1.5f;
						dust2.fadeIn = 0.7f;
						dust = dust2;
						dust.velocity *= 3f;
						num = num41;
						num41 = num + 1;
					}
				}
				else
				{
					for (int k = 0; k < 30; k = num + 1)
					{
						Dust dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust3.color = color;
						dust3.noGravity = true;
						dust3.scale = 1.5f;
						dust3.fadeIn = 0.7f;
						Dust dust = dust3;
						dust.velocity *= 3f;
						dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust3.color = color;
						dust3.noGravity = true;
						dust3.scale = 1.5f;
						dust3.fadeIn = 0.7f;
						dust = dust3;
						dust.velocity *= 3f;
						num = k;
					}
					Gore.NewGore(this.position, this.velocity, 960, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 961, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 963, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), this.velocity, 962, this.scale);
				}
			}
			else if (this.type == 546)
			{
				Color color2 = new Color(150, 108, 78) * 0.7f;
				if (this.life > 0)
				{
					int num42 = 0;
					while ((double)num42 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust4.color = color2;
						dust4.noGravity = true;
						dust4.scale = 1.5f;
						dust4.fadeIn = 0.7f;
						Dust dust = dust4;
						dust.velocity *= 3f;
						dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust4.color = color2;
						dust4.noGravity = true;
						dust4.scale = 1.5f;
						dust4.fadeIn = 0.7f;
						dust = dust4;
						dust.velocity *= 3f;
						num = num42;
						num42 = num + 1;
					}
				}
				else
				{
					for (int l = 0; l < 20; l = num + 1)
					{
						Dust dust5 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust5.color = color2;
						dust5.noGravity = true;
						dust5.scale = 1.5f;
						dust5.fadeIn = 0.7f;
						Dust dust = dust5;
						dust.velocity *= 3f;
						dust5 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 268, 0f, 0f, 0, default(Color), 1f)];
						dust5.color = color2;
						dust5.noGravity = true;
						dust5.scale = 1.5f;
						dust5.fadeIn = 0.7f;
						dust = dust5;
						dust.velocity *= 3f;
						num = l;
					}
					for (int m = 0; m < 20; m = num + 1)
					{
						int num43 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
						Dust dust = Main.dust[num43];
						dust.velocity *= 2f;
						Main.dust[num43].noGravity = true;
						num = m;
					}
					Gore.NewGore(this.position, this.velocity, 964, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 965, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 966, this.scale);
				}
			}
			if (this.type == 378)
			{
				if (this.life > 0)
				{
					int num44 = 0;
					while ((double)num44 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
						num = num44;
						num44 = num + 1;
					}
				}
				else
				{
					for (int n = 0; n < 20; n = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
						num = n;
					}
				}
			}
			if (this.type == 437 && dmg == 9999.0)
			{
				for (int num45 = 0; num45 < 6; num45 = num + 1)
				{
					Gore.NewGore(base.Center - new Vector2(10f), Vector2.UnitY.RotatedByRandom(6.2831854820251465) * 5f, 728 + num45, 1f);
					num = num45;
				}
			}
			if (this.type == 398 && dmg == 1337.0)
			{
				MoonlordDeathDrama.ThrowPieces(base.Center, Main.rand.Next(100));
			}
			if (this.type == 488)
			{
				this.localAI[0] = (float)((int)dmg);
				if (this.localAI[0] < 20f)
				{
					this.localAI[0] = 20f;
				}
				if (this.localAI[0] > 120f)
				{
					this.localAI[0] = 120f;
				}
				this.localAI[1] = (float)hitDirection;
			}
			else if (this.type >= 513 && this.type <= 515)
			{
				if (this.life > 0)
				{
					int num46 = 0;
					while ((double)num46 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
						num = num46;
						num46 = num + 1;
					}
				}
				else
				{
					for (int num47 = 0; num47 < 50; num47 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num47;
					}
					int num48 = Gore.NewGore(this.position, this.velocity, this.type - 513 + 822, 1f);
					Main.gore[num48].alpha = this.alpha;
				}
			}
			else if (this.type >= 510 && this.type <= 512)
			{
				if (this.life > 0)
				{
					int num49 = 0;
					while ((double)num49 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
						num = num49;
						num49 = num + 1;
					}
				}
				else
				{
					for (int num50 = 0; num50 < 50; num50 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num50;
					}
					int num51 = Gore.NewGore(this.position, this.velocity, this.type - 510 + 819, 1f);
					Main.gore[num51].alpha = this.alpha;
				}
			}
			else if (this.type == 518 || this.type == 416)
			{
				if (this.life > 0)
				{
					int num52 = 0;
					while ((double)num52 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust6 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust6.noGravity = true;
							dust6.scale = 1.5f;
							dust6.fadeIn = 1f;
							Dust dust = dust6;
							dust.velocity *= 3f;
						}
						num = num52;
						num52 = num + 1;
					}
				}
				else
				{
					for (int num53 = 0; num53 < 20; num53 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust7 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust7.noGravity = true;
							dust7.scale = 1.5f;
							dust7.fadeIn = 1f;
							Dust dust = dust7;
							dust.velocity *= 3f;
						}
						num = num53;
					}
					Gore.NewGore(this.position, this.velocity, 844, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 845, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 835, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 836, this.scale);
				}
			}
			else if (this.type == 419)
			{
				if (this.life > 0)
				{
					int num54 = 0;
					while ((double)num54 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust8 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust8.noGravity = true;
							dust8.scale = 1.5f;
							dust8.fadeIn = 1f;
							Dust dust = dust8;
							dust.velocity *= 3f;
						}
						num = num54;
						num54 = num + 1;
					}
				}
				else
				{
					for (int num55 = 0; num55 < 20; num55 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust9 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust9.noGravity = true;
							dust9.scale = 1.5f;
							dust9.fadeIn = 1f;
							Dust dust = dust9;
							dust.velocity *= 3f;
						}
						num = num55;
					}
					Gore.NewGore(this.position, this.velocity, 844, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 845, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 846, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 846, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
				}
			}
			else if (this.type == 412 || this.type == 413 || this.type == 414)
			{
				if (this.life > 0)
				{
					int num56 = 0;
					while ((double)num56 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num56;
						num56 = num + 1;
					}
				}
				else
				{
					for (int num57 = 0; num57 < 6; num57 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num57;
					}
					for (int num58 = 0; num58 < 2; num58 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 6, 2.5f * (float)hitDirection, -2.5f, 100, Color.Transparent, 2f);
						num = num58;
					}
					Gore.NewGore(this.position, this.velocity, this.type - 412 + 828, 1f);
				}
			}
			else if (this.type == 415)
			{
				if (this.life > 0)
				{
					int num59 = 0;
					while ((double)num59 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust10 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust10.noGravity = true;
							dust10.scale = 1.5f;
							dust10.fadeIn = 1f;
							Dust dust = dust10;
							dust.velocity *= 3f;
						}
						num = num59;
						num59 = num + 1;
					}
				}
				else
				{
					for (int num60 = 0; num60 < 40; num60 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust11 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
						dust11.noGravity = true;
						dust11.scale = 1.5f;
						dust11.fadeIn = 1f;
						Dust dust = dust11;
						dust.velocity *= 3f;
						num = num60;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 831, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 832, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 833, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 834, 1f);
				}
			}
			else if (this.type == 417)
			{
				if (this.life > 0)
				{
					int num61 = 0;
					while ((double)num61 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust12 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust12.noGravity = true;
							dust12.scale = 1.5f;
							dust12.fadeIn = 1f;
							Dust dust = dust12;
							dust.velocity *= 3f;
						}
						num = num61;
						num61 = num + 1;
					}
				}
				else
				{
					for (int num62 = 0; num62 < 30; num62 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust13 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust13.noGravity = true;
							dust13.scale = 1.5f;
							dust13.fadeIn = 1f;
							Dust dust = dust13;
							dust.velocity *= 3f;
						}
						num = num62;
					}
					Gore.NewGore(this.position, this.velocity, 837, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 839, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 839, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 38f), this.velocity, 840, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 38f), this.velocity, 840, this.scale);
				}
			}
			else if (this.type == 418)
			{
				if (this.life > 0)
				{
					int num63 = 0;
					while ((double)num63 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust14 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
							dust14.noGravity = true;
							dust14.scale = 1.5f;
							dust14.fadeIn = 1f;
							Dust dust = dust14;
							dust.velocity *= 3f;
						}
						num = num63;
						num63 = num + 1;
					}
				}
				else
				{
					for (int num64 = 0; num64 < 20; num64 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust15 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
						dust15.noGravity = true;
						dust15.scale = 1.5f;
						dust15.fadeIn = 1f;
						Dust dust = dust15;
						dust.velocity *= 3f;
						num = num64;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 841, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 842, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 842, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 843, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 843, 1f);
				}
			}
			if (this.type == 516)
			{
				for (int num65 = 0; num65 < 20; num65 = num + 1)
				{
					int num66 = Dust.NewDust(this.position, this.width, this.height, 6, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
					Dust dust = Main.dust[num66];
					dust.velocity *= 3f;
					dust = Main.dust[num66];
					dust.scale += Main.rand.NextFloat();
					if (Main.rand.Next(2) == 0)
					{
						num66 = Dust.NewDust(this.position, this.width, this.height, 259, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num66].noGravity = true;
					}
					num = num65;
				}
			}
			if (this.type == 519)
			{
				Rectangle hitbox2 = base.Hitbox;
				for (int num67 = 0; num67 < this.oldPos.Length; num67 += 3)
				{
					hitbox2.X = (int)this.oldPos[num67].X;
					hitbox2.Y = (int)this.oldPos[num67].Y;
					for (int num68 = 0; num68 < 5; num68 = num + 1)
					{
						int num69 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							6,
							259,
							158
						});
						int num70 = Dust.NewDust(hitbox2.TopLeft(), this.width, this.height, num69, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num70].alpha = 200;
						Dust dust = Main.dust[num70];
						dust.velocity *= 2.4f;
						dust = Main.dust[num70];
						dust.scale += Main.rand.NextFloat();
						num = num68;
					}
				}
			}
			if (this.type == 522)
			{
				Vector2 spinningpoint = new Vector2(0f, -3f).RotatedByRandom(3.1415927410125732);
				float num71 = 24f;
				Vector2 value = new Vector2(1.05f, 1f);
				float num74;
				for (float num72 = 0f; num72 < num71; num72 = num74 + 1f)
				{
					int num73 = Dust.NewDust(base.Center, 0, 0, 66, 0f, 0f, 0, Color.Transparent, 1f);
					Main.dust[num73].position = base.Center;
					Main.dust[num73].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num72 / num71), default(Vector2)) * value * (0.8f + Main.rand.NextFloat() * 0.4f) * 2f;
					Main.dust[num73].color = Color.SkyBlue;
					Main.dust[num73].noGravity = true;
					Dust dust = Main.dust[num73];
					dust.scale += 0.5f + Main.rand.NextFloat();
					num74 = num72;
				}
			}
			else if (this.type == 426)
			{
				if (this.life > 0)
				{
					int num75 = 0;
					while ((double)num75 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust16 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust16.noGravity = true;
							dust16.scale = 1.5f;
							dust16.fadeIn = 1f;
							Dust dust = dust16;
							dust.velocity *= 3f;
						}
						num = num75;
						num75 = num + 1;
					}
				}
				else
				{
					for (int num76 = 0; num76 < 20; num76 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num76;
					}
					for (int num77 = 0; num77 < 30; num77 = num + 1)
					{
						int num78 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							229,
							240,
							161
						});
						Dust dust17 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num78, 0f, 0f, 0, default(Color), 1f)];
						dust17.noGravity = true;
						dust17.scale = 1.25f + Main.rand.NextFloat();
						dust17.fadeIn = 0.25f;
						Dust dust = dust17;
						dust.velocity *= 2f;
						dust17.noLight = true;
						num = num77;
					}
					Gore.NewGore(base.Top, this.velocity * 0.7f, 799, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 800, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 801, 1f);
					if (Main.netMode != 1)
					{
						for (int num79 = 0; num79 < 3; num79 = num + 1)
						{
							int num80 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 428, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num80].velocity = -Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (float)Main.rand.Next(3, 6) - Vector2.UnitY * 2f;
							Main.npc[num80].netUpdate = true;
							num = num79;
						}
					}
				}
			}
			else if (this.type == 427)
			{
				if (this.life > 0)
				{
					int num81 = 0;
					while ((double)num81 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust18 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust18.noGravity = true;
							dust18.scale = 1.5f;
							dust18.fadeIn = 1f;
							Dust dust = dust18;
							dust.velocity *= 3f;
						}
						num = num81;
						num81 = num + 1;
					}
				}
				else
				{
					for (int num82 = 0; num82 < 10; num82 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num82;
					}
					for (int num83 = 0; num83 < 20; num83 = num + 1)
					{
						int num84 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							229,
							229,
							240
						});
						Dust dust19 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num84, 0f, 0f, 0, default(Color), 1f)];
						dust19.noGravity = true;
						dust19.scale = 1.25f + Main.rand.NextFloat();
						dust19.fadeIn = 0.25f;
						Dust dust = dust19;
						dust.velocity *= 3f;
						dust19.noLight = true;
						num = num83;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 802, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 803, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 804, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 805, 1f);
				}
			}
			else if (this.type == 429)
			{
				if (this.life > 0)
				{
					int num85 = 0;
					while ((double)num85 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust20 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust20.noGravity = true;
							dust20.scale = 1.5f;
							dust20.fadeIn = 1f;
							Dust dust = dust20;
							dust.velocity *= 3f;
						}
						num = num85;
						num85 = num + 1;
					}
				}
				else
				{
					for (int num86 = 0; num86 < 20; num86 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust21 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust21.noGravity = true;
							dust21.scale = 1.5f;
							dust21.fadeIn = 1f;
							Dust dust = dust21;
							dust.velocity *= 3f;
						}
						num = num86;
					}
					Gore.NewGore(this.position, this.velocity, 808, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					if (Main.netMode != 1)
					{
						Point point = base.Center.ToTileCoordinates();
						Point point2 = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 vector3 = Main.player[this.target].Center - base.Center;
						int num87 = 20;
						int num88 = 3;
						int num89 = 7;
						int num90 = 2;
						int num91 = 0;
						bool flag2 = false;
						if (vector3.Length() > 2000f)
						{
							flag2 = true;
						}
						while (!flag2)
						{
							if (num91 >= 100)
							{
								break;
							}
							num91++;
							int num92 = Main.rand.Next(point2.X - num87, point2.X + num87 + 1);
							int num93 = Main.rand.Next(point2.Y - num87, point2.Y - Math.Abs(num92 - point2.X) + 1);
							if ((num93 < point2.Y - num89 || num93 > point2.Y + num89 || num92 < point2.X - num89 || num92 > point2.X + num89) && (num93 < point.Y - num88 || num93 > point.Y + num88 || num92 < point.X - num88 || num92 > point.X + num88) && !Main.tile[num92, num93].nactive())
							{
								bool flag3 = true;
								if (flag3 && Main.tile[num92, num93].lava())
								{
									flag3 = false;
								}
								if (flag3 && Collision.SolidTiles(num92 - num90, num92 + num90, num93 - num90, num93 + num90))
								{
									flag3 = false;
								}
								if (flag3 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
								{
									flag3 = false;
								}
								if (flag3)
								{
									Projectile.NewProjectile((float)(num92 * 16 + 8), (float)(num93 * 16 + 8), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
									break;
								}
							}
						}
					}
				}
			}
			else if (this.type == 425)
			{
				if (this.life > 0)
				{
					int num94 = 0;
					while ((double)num94 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust22 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust22.noGravity = true;
							dust22.scale = 1.5f;
							dust22.fadeIn = 1f;
							Dust dust = dust22;
							dust.velocity *= 3f;
						}
						num = num94;
						num94 = num + 1;
					}
				}
				else
				{
					for (int num95 = 0; num95 < 20; num95 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust23 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust23.noGravity = true;
							dust23.scale = 1.5f;
							dust23.fadeIn = 1f;
							Dust dust = dust23;
							dust.velocity *= 3f;
						}
						num = num95;
					}
					Gore.NewGore(this.position, this.velocity, 796, this.scale);
					Gore.NewGore(base.Center, this.velocity, 797, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 798, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
				}
			}
			else if (this.type == 428)
			{
				if (this.life > 0)
				{
					int num96 = 0;
					while ((double)num96 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num96;
						num96 = num + 1;
					}
				}
				else
				{
					for (int num97 = 0; num97 < 10; num97 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 241, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f);
						}
						else
						{
							Dust.NewDust(this.position, this.width, this.height, 240, 0f, 0f, 0, default(Color), 1f);
						}
						num = num97;
					}
					Gore.NewGore(this.position, this.velocity * 0.8f, 806, 1f);
					Gore.NewGore(this.position, this.velocity * 0.8f, 807, 1f);
				}
			}
			else if (this.type == 424)
			{
				if (this.life > 0)
				{
					int num98 = 0;
					while ((double)num98 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust24 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust24.noGravity = true;
							dust24.scale = 1.5f;
							dust24.fadeIn = 1f;
							Dust dust = dust24;
							dust.velocity *= 3f;
						}
						num = num98;
						num98 = num + 1;
					}
				}
				else
				{
					for (int num99 = 0; num99 < 20; num99 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust dust25 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust25.noGravity = true;
							dust25.scale = 1.5f;
							dust25.fadeIn = 1f;
							Dust dust = dust25;
							dust.velocity *= 3f;
						}
						num = num99;
					}
					Gore.NewGore(this.position, this.velocity, 793, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 794, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 794, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 795, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 795, this.scale);
				}
			}
			else if (this.type == 423)
			{
				if (this.life > 0)
				{
					int num100 = 0;
					while ((double)num100 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust26 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust26.noGravity = true;
							dust26.scale = 1.5f;
							dust26.fadeIn = 1f;
							Dust dust = dust26;
							dust.velocity *= 3f;
						}
						num = num100;
						num100 = num + 1;
					}
				}
				else
				{
					for (int num101 = 0; num101 < 20; num101 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust27 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
						dust27.noGravity = true;
						dust27.scale = 1.5f;
						dust27.fadeIn = 1f;
						Dust dust = dust27;
						dust.velocity *= 3f;
						num = num101;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 790, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 791, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 792, 1f);
				}
			}
			else if (this.type == 421)
			{
				if (this.life > 0)
				{
					int num102 = 0;
					while ((double)num102 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust28 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust28.noGravity = true;
							dust28.scale = 1.5f;
							dust28.fadeIn = 1f;
							Dust dust = dust28;
							dust.velocity *= 3f;
						}
						num = num102;
						num102 = num + 1;
					}
				}
				else
				{
					for (int num103 = 0; num103 < 10; num103 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust29 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
						dust29.noGravity = true;
						dust29.scale = 1.5f;
						dust29.fadeIn = 1f;
						Dust dust = dust29;
						dust.velocity *= 3f;
						num = num103;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 785, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 786, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 787, 1f);
				}
			}
			else if (this.type == 420)
			{
				if (this.life > 0)
				{
					int num104 = 0;
					while ((double)num104 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust30 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
							dust30.noGravity = true;
							dust30.scale = 1.5f;
							dust30.fadeIn = 1f;
							Dust dust = dust30;
							dust.velocity *= 3f;
						}
						num = num104;
						num104 = num + 1;
					}
				}
				else
				{
					for (int num105 = 0; num105 < 10; num105 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 249, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust31 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, 0f, 0f, 0, default(Color), 1f)];
						dust31.noGravity = true;
						dust31.scale = 1.5f;
						dust31.fadeIn = 1f;
						Dust dust = dust31;
						dust.velocity *= 3f;
						num = num105;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 782, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 783, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 784, 1f);
				}
			}
			else if (this.type == 406 || this.type == 405)
			{
				if (this.life > 0)
				{
					int num106 = 0;
					while ((double)num106 < 10.0 + dmg / 10.0)
					{
						int num107 = this.width / 4;
						//TODO: 看看这是做什么的   //						((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num108 = Dust.NewDust(base.Center - Vector2.One * (float)num107, num107 * 2, num107 * 2, 229, 0f, 0f, 0, default(Color), 1f);
						Dust dust32 = Main.dust[num108];
						Vector2 vector4 = Vector2.Normalize(dust32.position - base.Center);
						dust32.position = base.Center + vector4 * (float)num107 * this.scale - new Vector2(4f);
						if (num106 < 30)
						{
							dust32.velocity = vector4 * dust32.velocity.Length() * 2f;
						}
						else
						{
							dust32.velocity = 2f * vector4 * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust32.noGravity = true;
						dust32.scale = 0.7f + Main.rand.NextFloat();
						num = num106;
						num106 = num + 1;
					}
				}
				else
				{
					for (int num109 = 0; num109 < 60; num109 = num + 1)
					{
						int num110 = this.width / 4;
						//TODO: 看看这是做什么的   //						((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num111 = Dust.NewDust(base.Center - Vector2.One * (float)num110, num110 * 2, num110 * 2, 229, 0f, 0f, 0, default(Color), 1f);
						Dust dust33 = Main.dust[num111];
						Vector2 vector5 = Vector2.Normalize(dust33.position - base.Center);
						dust33.position = base.Center + vector5 * (float)num110 * this.scale - new Vector2(4f);
						if (num109 < 30)
						{
							dust33.velocity = vector5 * dust33.velocity.Length() * 2f;
						}
						else
						{
							dust33.velocity = 2f * vector5 * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust33.noGravity = true;
						dust33.scale = 0.7f;
						num = num109;
					}
					if (this.type == 405)
					{
						int num112 = NPC.CountNPCS(406) + NPC.CountNPCS(405);
						int num113 = 4;
						if (num112 >= 4)
						{
							num113 = 3;
						}
						if (num112 >= 7)
						{
							num113 = 2;
						}
						if (num112 >= 10)
						{
							num113 = 1;
						}
						for (int num114 = 0; num114 < num113; num114 = num + 1)
						{
							Vector2 velocity = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (3f + Main.rand.NextFloat() * 4f);
							int num115 = NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, 406, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num115].velocity = velocity;
							num = num114;
						}
					}
				}
			}
			else if (this.type == 409)
			{
				if (this.life > 0)
				{
					int num116 = 0;
					while ((double)num116 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust34 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust34.noGravity = true;
						}
						num = num116;
						num116 = num + 1;
					}
				}
				else
				{
					for (int num117 = 0; num117 < 20; num117 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust35 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust35.noGravity = true;
						Dust dust = dust35;
						dust.velocity *= 3f;
						num = num117;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 775, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 776, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 777, 1f);
				}
			}
			else if (this.type == 410)
			{
				if (this.life > 0)
				{
					int num118 = 0;
					while ((double)num118 < dmg / (double)this.lifeMax * 10.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust36 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust36.noGravity = true;
						}
						num = num118;
						num118 = num + 1;
					}
				}
				else
				{
					for (int num119 = 0; num119 < 5; num119 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						Dust dust37 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust37.noGravity = true;
						Dust dust = dust37;
						dust.velocity *= 3f;
						num = num119;
					}
				}
			}
			else if (this.type == 407)
			{
				if (this.life > 0)
				{
					int num120 = 0;
					while ((double)num120 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust38 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust38.noGravity = true;
						}
						num = num120;
						num120 = num + 1;
					}
				}
				else
				{
					for (int num121 = 0; num121 < 20; num121 = num + 1)
					{
						if (Main.rand.Next(3) != 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Dust dust39 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust39.noGravity = true;
						Dust dust = dust39;
						dust.velocity *= 3f;
						num = num121;
					}
					Gore.NewGore(base.Top, this.velocity * 0.8f, 778, 1f);
					Gore.NewGore(base.Top, this.velocity * 0.8f, 779, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 780, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 781, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 780, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 781, 1f);
				}
			}
			else if (this.type == 402)
			{
				if (this.life > 0)
				{
					int num122 = 0;
					while ((double)num122 < dmg / (double)this.lifeMax * 3.0)
					{
						if (Main.rand.Next(3) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
						}
						if (Main.rand.Next(2) == 0)
						{
							Dust dust40 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust40.noGravity = true;
						}
						for (int num123 = 0; num123 < this.oldPos.Length; num123 = num + 1)
						{
							if (Main.rand.Next(4) == 0)
							{
								if (this.oldPos[num123] == Vector2.Zero)
								{
									break;
								}
								if (Main.rand.Next(3) == 0)
								{
									Dust.NewDust(this.oldPos[num123], this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
								}
								if (Main.rand.Next(2) == 0)
								{
									Dust dust41 = Main.dust[Dust.NewDust(this.oldPos[num123], this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
									dust41.noGravity = true;
								}
							}
							num = num123;
						}
						num = num122;
						num122 = num + 1;
					}
				}
				else
				{
					for (int num124 = 0; num124 < 5; num124 = num + 1)
					{
						if (Main.rand.Next(3) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Dust dust42 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust42.noGravity = true;
						Dust dust = dust42;
						dust.velocity *= 3f;
						num = num124;
					}
					for (int num125 = 0; num125 < this.oldPos.Length; num125 = num + 1)
					{
						if (Main.rand.Next(4) == 0)
						{
							if (this.oldPos[num125] == Vector2.Zero)
							{
								break;
							}
							for (int num126 = 0; num126 < 2; num126 = num + 1)
							{
								if (Main.rand.Next(3) == 0)
								{
									Dust.NewDust(this.oldPos[num125], this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								Dust dust43 = Main.dust[Dust.NewDust(this.oldPos[num125], this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
								dust43.noGravity = true;
								Dust dust = dust43;
								dust.velocity *= 3f;
								num = num126;
							}
						}
						num = num125;
					}
				}
			}
			else if (this.type == 411)
			{
				if (this.life > 0)
				{
					int num127 = 0;
					while ((double)num127 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust dust44 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust44.noGravity = true;
						}
						num = num127;
						num127 = num + 1;
					}
				}
				else
				{
					for (int num128 = 0; num128 < 20; num128 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust dust45 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
							dust45.noGravity = true;
						}
						num = num128;
					}
					Gore.NewGore(this.position, this.velocity, 772, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 773, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 773, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 774, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 774, this.scale);
				}
			}
			else if (this.type == 491)
			{
				if (this.life <= 0)
				{
					Vector2 value2 = base.Center - new Vector2(60f);
					Vector2 vector6 = new Vector2((float)((this.spriteDirection == 1) ? -1 : 1), 0f).RotatedBy((double)this.rotation, default(Vector2));
					Gore.NewGore(value2 + vector6 * (float)(this.width / 2), this.velocity, 858, this.scale);
					Gore.NewGore(value2 + vector6 * (float)(this.width / 3), this.velocity, 857, this.scale);
					for (int num129 = -1; num129 < 2; num129 = num + 1)
					{
						Gore.NewGore(value2 + vector6 * ((float)this.width * (0.45f + (float)num129 * 0.1f)), this.velocity, 859, this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * (0.4f + (float)num129 * 0.1f)), this.velocity, 859, this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * (0.35f + (float)num129 * 0.1f)), this.velocity, 859, this.scale);
						num = num129;
					}
					for (int num130 = -1; num130 < 2; num130 = num + 1)
					{
						Gore.NewGore(value2 + vector6 * ((float)this.width * 0.35f) - new Vector2(0f, 200f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
						{
							860,
							892,
							893
						}), this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * 0.15f) - new Vector2(0f, 200f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
						{
							860,
							892,
							893
						}), this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * -0.35f) - new Vector2(0f, 200f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
						{
							860,
							892,
							893
						}), this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * -0.15f) - new Vector2(0f, 300f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
						{
							860,
							892,
							893
						}), this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * -0.15f) - new Vector2(0f, 300f) + Utils.RandomVector2(Main.rand, -40f, 40f), this.velocity, Utils.SelectRandom<int>(Main.rand, new int[]
						{
							860,
							892,
							893
						}), this.scale);
						num = num130;
					}
					for (int num131 = 0; num131 < 2; num131 = num + 1)
					{
						Gore.NewGore(value2 + vector6 * ((float)this.width * 0.15f) - new Vector2(0f, (float)(160 + 60 * num131)), this.velocity, 855, this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * -0.15f) - new Vector2(0f, (float)(160 + 60 * num131)), this.velocity, 855, this.scale);
						num = num131;
					}
					for (int num132 = -1; num132 < 2; num132 = num + 1)
					{
						Gore.NewGore(value2 + vector6 * ((float)this.width * (0.25f + (float)num132 * 0.1f)) - new Vector2(0f, (float)(20 + 40 * num132)), this.velocity, 854, this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * (-0.45f + (float)num132 * 0.1f)) - new Vector2(0f, (float)(20 + 40 * num132)), this.velocity, 853, this.scale);
						Gore.NewGore(value2 + vector6 * ((float)this.width * (0.05f + (float)num132 * 0.1f)) - new Vector2(0f, (float)(20 + 40 * num132)), this.velocity, 856, this.scale);
						num = num132;
					}
					for (int num133 = 0; num133 < 30; num133 = num + 1)
					{
						int num134 = Main.rand.Next(861, 863);
						int num135 = Gore.NewGore(base.Center - new Vector2(60f), Vector2.Zero, num134, 1f);
						Main.gore[num135].alpha = 100;
						Main.gore[num135].velocity = Vector2.Transform(new Vector2(4f, 0f), Matrix.CreateRotationZ((float)(Main.rand.NextDouble() * 6.2831854820251465)));
						Main.gore[num135].position = new Vector2(this.position.X - 20f + ((float)this.width + 40f) * Main.rand.NextFloat(), this.position.Y - 240f + (float)(this.height + 240 - 20) * Main.rand.NextFloat());
						num = num133;
					}
					for (int num136 = 0; num136 < 120; num136 = num + 1)
					{
						int num137 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num137].noGravity = true;
						Dust dust = Main.dust[num137];
						dust.velocity *= 5f;
						num137 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						dust = Main.dust[num137];
						dust.velocity *= 4f;
						Main.dust[num137].noGravity = true;
						num = num136;
					}
					if (Main.netMode != 1)
					{
						for (int num138 = 0; num138 < 4; num138 = num + 1)
						{
							float num139 = (float)(num138 < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
							Vector2 vector7 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f).RotatedBy((double)num139, default(Vector2)) * 6f;
							Projectile.NewProjectile(base.Center.X, base.Center.Y, vector7.X, vector7.Y, 594, 0, 0f, Main.myPlayer, 0f, 0f);
							num = num138;
						}
					}
				}
			}
			else if (this.type == 492)
			{
				if (this.life <= 0)
				{
					for (int num140 = 0; num140 < 7; num140 = num + 1)
					{
						int num141 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Dust dust = Main.dust[num141];
						dust.velocity *= 1.4f;
						num = num140;
					}
					for (int num142 = 0; num142 < 10; num142 = num + 1)
					{
						int num143 = Main.rand.Next(61, 64);
						int num144 = Gore.NewGore(this.position, Vector2.Zero, num143, 1f);
						Main.gore[num144].alpha = 100;
						Main.gore[num144].velocity = Vector2.Transform(new Vector2(1f, 0f), Matrix.CreateRotationZ((float)(Main.rand.NextDouble() * 6.2831854820251465)));
						num = num142;
					}
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				int num145 = 0;
				int num146 = 5;
				int num147 = 863;
				if (this.type == 525)
				{
					num145 = 75;
					num147 = 867;
				}
				else if (this.type == 526)
				{
					num145 = 170;
					num147 = 871;
				}
				else if (this.type == 527)
				{
					num145 = 67;
					num147 = 879;
				}
				if (this.life > 0)
				{
					int num148 = 0;
					while ((double)num148 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, num146, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(4) == 0 && num145 > 0)
						{
							Dust dust46 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num145, 0f, 0f, 0, default(Color), 1f)];
							dust46.noGravity = true;
							dust46.scale = 1.5f;
							dust46.fadeIn = 1f;
							Dust dust = dust46;
							dust.velocity *= 3f;
						}
						num = num148;
						num148 = num + 1;
					}
				}
				else
				{
					for (int num149 = 0; num149 < 20; num149 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, num146, (float)hitDirection, -1f, 0, default(Color), 1f);
						if (Main.rand.Next(3) == 0 && num145 > 0)
						{
							Dust dust47 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num145, 0f, 0f, 0, default(Color), 1f)];
							dust47.noGravity = true;
							dust47.scale = 1.5f;
							dust47.fadeIn = 1f;
							Dust dust = dust47;
							dust.velocity *= 3f;
						}
						num = num149;
					}
					Gore.NewGore(this.position, this.velocity, num147, this.scale);
					Gore.NewGore(this.position, this.velocity, num147 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num147 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num147 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num147 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num147 + 3, this.scale);
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				int num150 = 5;
				int num151 = 875;
				if (this.type == 529)
				{
					num151 = 876;
				}
				if (this.life > 0)
				{
					int num152 = 0;
					while ((double)num152 < dmg / (double)this.lifeMax * 20.0)
					{
						Dust.NewDust(this.position, this.width, this.height, num150, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num152;
						num152 = num + 1;
					}
				}
				else
				{
					for (int num153 = 0; num153 < 20; num153 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, num150, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num153;
					}
					Gore.NewGore(this.position, this.velocity, num151, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 877, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 877, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 878, this.scale);
				}
			}
			else if (this.type == 530 || this.type == 531)
			{
				if (this.life > 0)
				{
					int num154 = 0;
					while ((double)num154 < dmg / (double)this.lifeMax * 30.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, 100, default(Color), 1f);
						num = num154;
						num154 = num + 1;
					}
				}
				else
				{
					for (int num155 = 0; num155 < 20; num155 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, 2.5f * (float)hitDirection, -2.5f, 100, default(Color), 1f);
						num = num155;
					}
					Gore.NewGore(this.position, this.velocity, 883, 1f);
					Gore.NewGore(this.position, this.velocity, 884, 1f);
					Gore.NewGore(this.position, this.velocity, 885, 1f);
					Gore.NewGore(this.position, this.velocity, 886, 1f);
					Gore.NewGore(this.position, this.velocity, 887, 1f);
				}
			}
			else if (this.type == 532)
			{
				if (this.life > 0)
				{
					int num156 = 0;
					while ((double)num156 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 100, default(Color), 1f);
						num = num156;
						num156 = num + 1;
					}
				}
				else
				{
					for (int num157 = 0; num157 < 50; num157 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 100, default(Color), 1f);
						num = num157;
					}
					Gore.NewGore(this.position, this.velocity, 888, 1f);
					Gore.NewGore(this.position, this.velocity, 889, 1f);
					Gore.NewGore(this.position, this.velocity, 890, 1f);
					Gore.NewGore(this.position, this.velocity, 891, 1f);
				}
			}
			else if (this.type == 533)
			{
				if (this.life > 0)
				{
					int num158 = 0;
					while ((double)num158 < dmg / (double)this.lifeMax * 50.0)
					{
						int num159 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 50, default(Color), 1.5f);
						Dust dust = Main.dust[num159];
						dust.velocity *= 2f;
						Main.dust[num159].noGravity = true;
						num = num158;
						num158 = num + 1;
					}
				}
				else
				{
					for (int num160 = 0; num160 < 40; num160 = num + 1)
					{
						int num161 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 50, default(Color), 1.5f);
						Dust dust = Main.dust[num161];
						dust.velocity *= 2f;
						Main.dust[num161].noGravity = true;
						Main.dust[num161].fadeIn = 1f;
						num = num160;
					}
				}
			}
			else if (this.type == 460)
			{
				if (this.life > 0)
				{
					int num162 = 0;
					while ((double)num162 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num162;
						num162 = num + 1;
					}
				}
				else
				{
					for (int num163 = 0; num163 < 50; num163 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num163;
					}
					Gore.NewGore(this.position, this.velocity, 643, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 645, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 644, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 646, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 646, this.scale);
				}
			}
			else if (this.type == 477)
			{
				if (this.life > 0)
				{
					int num164 = 0;
					while ((double)num164 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num164;
						num164 = num + 1;
					}
				}
				else
				{
					for (int num165 = 0; num165 < 50; num165 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num165;
					}
					Gore.NewGore(this.position, this.velocity, 687, this.scale);
					Gore.NewGore(this.position, this.velocity, 688, this.scale);
					Gore.NewGore(this.position, this.velocity, 689, this.scale);
					Gore.NewGore(this.position, this.velocity, 690, this.scale);
					Gore.NewGore(this.position, this.velocity, 691, this.scale);
				}
			}
			else if (this.type == 479)
			{
				if (this.life > 0)
				{
					int num166 = 0;
					while ((double)num166 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num166;
						num166 = num + 1;
					}
				}
				else
				{
					for (int num167 = 0; num167 < 50; num167 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 237, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num167;
					}
					Gore.NewGore(this.position, this.velocity, 681, this.scale);
					Gore.NewGore(this.position, this.velocity, 682, this.scale);
					Gore.NewGore(this.position, this.velocity, 683, this.scale);
				}
			}
			else if (this.type == 478)
			{
				if (this.life > 0)
				{
					for (int num168 = 0; num168 < 10; num168 = num + 1)
					{
						int num169 = Dust.NewDust(this.position, this.width, this.height, 238, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num169].noGravity = true;
						num = num168;
					}
				}
				else
				{
					for (int num170 = 0; num170 < 50; num170 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 237 + Main.rand.Next(2), 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num170;
					}
					Gore.NewGore(this.position, this.velocity, 684, this.scale);
					Gore.NewGore(this.position, this.velocity, 685, this.scale);
					Gore.NewGore(this.position, this.velocity, 686, this.scale);
					Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
				}
			}
			else if (this.type == 466)
			{
				if (this.life > 0)
				{
					int num171 = 0;
					while ((double)num171 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num171;
						num171 = num + 1;
					}
				}
				else
				{
					for (int num172 = 0; num172 < 50; num172 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num172;
					}
					Gore.NewGore(this.position, this.velocity, 656, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 657, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 659, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 658, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 658, this.scale);
				}
			}
			else if (this.type == 468)
			{
				if (this.life > 0)
				{
					int num173 = 0;
					while ((double)num173 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num173;
						num173 = num + 1;
					}
				}
				else
				{
					for (int num174 = 0; num174 < 50; num174 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num174;
					}
					Gore.NewGore(this.position, this.velocity, 662, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 663, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 663, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 664, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 664, this.scale);
				}
			}
			else if (this.type == 469)
			{
				if (this.life > 0)
				{
					int num175 = 0;
					while ((double)num175 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num175;
						num175 = num + 1;
					}
				}
				else
				{
					for (int num176 = 0; num176 < 50; num176 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num176;
					}
					Gore.NewGore(this.position, this.velocity, 665, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 666, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 666, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 667, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 667, this.scale);
				}
			}
			else if (this.type == 463)
			{
				if (this.life > 0)
				{
					int num177 = 0;
					while ((double)num177 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num177;
						num177 = num + 1;
					}
				}
				else
				{
					for (int num178 = 0; num178 < 50; num178 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num178;
					}
					Gore.NewGore(this.position, this.velocity, 653, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 654, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 654, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 655, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 655, this.scale);
				}
			}
			else if (this.type == 461)
			{
				if (this.life > 0)
				{
					int num179 = 0;
					while ((double)num179 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num179;
						num179 = num + 1;
					}
				}
				else
				{
					for (int num180 = 0; num180 < 50; num180 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num180;
					}
					Gore.NewGore(this.position, this.velocity, 647, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 648, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 648, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 649, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 649, this.scale);
				}
			}
			else if (this.type == 462)
			{
				if (this.life > 0)
				{
					int num181 = 0;
					while ((double)num181 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num181;
						num181 = num + 1;
					}
				}
				else
				{
					for (int num182 = 0; num182 < 50; num182 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num182;
					}
					Gore.NewGore(this.position, this.velocity, 650, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 651, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 651, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 652, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 652, this.scale);
				}
			}
			else if (this.type == 379 || this.type == 438)
			{
				if (this.life > 0)
				{
					int num183 = 0;
					while ((double)num183 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num183;
						num183 = num + 1;
					}
				}
				else
				{
					for (int num184 = 0; num184 < 30; num184 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num184;
					}
					Gore.NewGore(this.position, this.velocity, 900, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
				}
			}
			else if (this.type == 439)
			{
				if (this.life > 0)
				{
					int num185 = 0;
					while ((double)num185 < dmg / (double)this.lifeMax * 100.0)
					{
						int num186 = Dust.NewDust(this.position, this.width, this.height, 5, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num186];
						dust.velocity *= 1.5f;
						Main.dust[num186].noGravity = true;
						num = num185;
						num185 = num + 1;
					}
				}
				else
				{
					for (int num187 = 0; num187 < 30; num187 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num187;
					}
					for (int num188 = 0; num188 < 10; num188 = num + 1)
					{
						int num189 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num189];
						dust.velocity *= 2f;
						Main.dust[num189].noGravity = true;
						num = num188;
					}
					int num190 = Main.rand.Next(1, 4);
					for (int num191 = 0; num191 < num190; num191 = num + 1)
					{
						int num192 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore = Main.gore[num192];
						gore.velocity *= 0.8f;
						num = num191;
					}
					Gore.NewGore(this.position, this.velocity, 902, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 903, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
				}
			}
			else if (this.type == 440)
			{
				if (this.life <= 0)
				{
					for (int num193 = 0; num193 < 10; num193 = num + 1)
					{
						int num194 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num194];
						dust.velocity *= 2f;
						Main.dust[num194].noGravity = true;
						num = num193;
					}
					int num195 = Main.rand.Next(1, 4);
					for (int num196 = 0; num196 < num195; num196 = num + 1)
					{
						int num197 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore = Main.gore[num197];
						gore.velocity *= 0.8f;
						num = num196;
					}
				}
			}
			else if (this.type >= 454 && this.type <= 459)
			{
				if (this.life > 0)
				{
					int num198 = 0;
					while ((double)num198 < dmg / (double)this.lifeMax * 50.0)
					{
						int num199 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num199];
						dust.velocity *= 1.5f;
						Main.dust[num199].noGravity = true;
						num = num198;
						num198 = num + 1;
					}
				}
				else
				{
					for (int num200 = 0; num200 < 10; num200 = num + 1)
					{
						int num201 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num201];
						dust.velocity *= 2f;
						Main.dust[num201].noGravity = true;
						num = num200;
					}
					int num202 = Main.rand.Next(1, 4);
					for (int num203 = 0; num203 < num202; num203 = num + 1)
					{
						int num204 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore = Main.gore[num204];
						gore.velocity *= 0.8f;
						num = num203;
					}
				}
			}
			if (this.type == 372 || this.type == 373)
			{
				if (this.life > 0)
				{
					int num205 = 0;
					while ((double)num205 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num205;
						num205 = num + 1;
					}
				}
				else
				{
					for (int num206 = 0; num206 < 75; num206 = num + 1)
					{
						int num207 = Dust.NewDust(base.Center - Vector2.One * 25f, 50, 50, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						Dust dust = Main.dust[num207];
						dust.velocity /= 2f;
						num = num206;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 583, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 577, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 578, 1f);
					Gore.NewGore(base.Center, this.velocity, 579, 1f);
				}
			}
			if (this.type == 371)
			{
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3, 1f, 0f);
				if (this.life <= 0)
				{
					Vector2 arg_989F_0 = base.Center;
					for (int num208 = 0; num208 < 60; num208 = num + 1)
					{
						int num209 = 25;
						//TODO: 看看这是做什么的   //						((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num210 = Dust.NewDust(base.Center - Vector2.One * (float)num209, num209 * 2, num209 * 2, 212, 0f, 0f, 0, default(Color), 1f);
						Dust dust48 = Main.dust[num210];
						Vector2 vector8 = Vector2.Normalize(dust48.position - base.Center);
						dust48.position = base.Center + vector8 * 25f * this.scale;
						if (num208 < 30)
						{
							dust48.velocity = vector8 * dust48.velocity.Length();
						}
						else
						{
							dust48.velocity = vector8 * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust48.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
						dust48.color = Color.Lerp(dust48.color, Color.White, 0.3f);
						dust48.noGravity = true;
						dust48.scale = 0.7f;
						num = num208;
					}
				}
			}
			if (this.type == 370)
			{
				if (this.life > 0)
				{
					int num211 = 0;
					while ((double)num211 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num211;
						num211 = num + 1;
					}
				}
				else
				{
					for (int num212 = 0; num212 < 150; num212 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num212;
					}
					Gore.NewGore(base.Center - Vector2.UnitX * 20f * (float)this.direction, this.velocity, 576, this.scale);
					Gore.NewGore(base.Center - Vector2.UnitY * 30f, this.velocity, 574, this.scale);
					Gore.NewGore(base.Center, this.velocity, 575, this.scale);
					Gore.NewGore(base.Center + Vector2.UnitX * 20f * (float)this.direction, this.velocity, 573, this.scale);
					Gore.NewGore(base.Center - Vector2.UnitY * 30f, this.velocity, 574, this.scale);
					Gore.NewGore(base.Center, this.velocity, 575, this.scale);
				}
			}
			else if (this.type == 381)
			{
				if (this.life > 0)
				{
					int num213 = 0;
					while ((double)num213 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num213;
						num213 = num + 1;
					}
				}
				else
				{
					for (int num214 = 0; num214 < 30; num214 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num214;
					}
					Gore.NewGore(this.position, this.velocity, 587, this.scale);
					Gore.NewGore(this.position, this.velocity, 590, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 588, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 589, this.scale);
				}
			}
			else if (this.type == 382 || this.type == 390)
			{
				if (this.life > 0)
				{
					int num215 = 0;
					while ((double)num215 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num215;
						num215 = num + 1;
					}
				}
				else
				{
					for (int num216 = 0; num216 < 30; num216 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num216;
					}
					Gore.NewGore(this.position, this.velocity, 591, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 592, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 593, this.scale);
				}
			}
			else if (this.type == 383)
			{
				if (this.life > 0)
				{
					int num217 = 0;
					while ((double)num217 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num217;
						num217 = num + 1;
					}
				}
				else
				{
					for (int num218 = 0; num218 < 30; num218 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num218;
					}
					Gore.NewGore(this.position, this.velocity, 594, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 595, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 596, this.scale);
				}
			}
			else if (this.type == 384)
			{
				if (this.life > 0)
				{
					int num219 = 0;
					while ((double)num219 < dmg / (double)this.lifeMax * 50.0)
					{
						int num220 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num220].position = Vector2.Lerp(Main.dust[num220].position, base.Center, 0.25f);
						Main.dust[num220].scale = 0.5f;
						num = num219;
						num219 = num + 1;
					}
				}
				else
				{
					for (int num221 = 0; num221 < 70; num221 = num + 1)
					{
						int num222 = Dust.NewDust(this.position, this.width, this.height, 226, -2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num222].scale = 0.5f;
						num = num221;
					}
				}
			}
			else if (this.type == 385)
			{
				if (this.life > 0)
				{
					int num223 = 0;
					while ((double)num223 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num223;
						num223 = num + 1;
					}
				}
				else
				{
					for (int num224 = 0; num224 < 30; num224 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num224;
					}
					Gore.NewGore(this.position, this.velocity, 597, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 598, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 599, this.scale);
				}
			}
			else if (this.type == 386)
			{
				if (this.life > 0)
				{
					int num225 = 0;
					while ((double)num225 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num225;
						num225 = num + 1;
					}
				}
				else
				{
					for (int num226 = 0; num226 < 30; num226 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num226;
					}
					Gore.NewGore(this.position, this.velocity, 600, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 601, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 602, this.scale);
				}
			}
			if (this.type == 387)
			{
				if (this.life > 0)
				{
					int num227 = 0;
					while ((double)num227 < dmg / (double)this.lifeMax * 20.0)
					{
						int num228 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num228].position = Vector2.Lerp(Main.dust[num228].position, base.Center, 0.25f);
						Main.dust[num228].scale = 0.5f;
						num = num227;
						num227 = num + 1;
					}
				}
				else
				{
					for (int num229 = 0; num229 < 30; num229 = num + 1)
					{
						int num230 = Dust.NewDust(this.position, this.width, this.height, 226, -1.5f * (float)hitDirection, -1.5f, 0, default(Color), 1f);
						Main.dust[num230].scale = 0.5f;
						num = num229;
					}
					Gore.NewGore(this.position, this.velocity, 603, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 603, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 604, this.scale);
				}
			}
			if (this.type == 520)
			{
				if (this.life > 0)
				{
					int num231 = 0;
					while ((double)num231 < dmg / (double)this.lifeMax * 20.0)
					{
						int num232 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num232].position = Vector2.Lerp(Main.dust[num232].position, base.Center, 0.25f);
						Main.dust[num232].scale = 0.5f;
						num = num231;
						num231 = num + 1;
					}
				}
				else
				{
					for (int num233 = 0; num233 < 30; num233 = num + 1)
					{
						int num234 = Dust.NewDust(this.position, this.width, this.height, 226, -1.5f * (float)hitDirection, -1.5f, 0, default(Color), 1f);
						Main.dust[num234].scale = 0.5f;
						num = num233;
					}
					Gore.NewGore(this.position, this.velocity, 851, this.scale);
					Gore.NewGore(this.position, this.velocity, 852, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 848, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 849, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 850, this.scale);
				}
			}
			else if (this.type == 389)
			{
				if (this.life > 0)
				{
					int num235 = 0;
					while ((double)num235 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num235;
						num235 = num + 1;
					}
				}
				else
				{
					for (int num236 = 0; num236 < 30; num236 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num236;
					}
					Gore.NewGore(this.position, this.velocity, 904, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 905, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 906, this.scale);
				}
			}
			else if (this.type == 388)
			{
				if (this.life > 0)
				{
					int num237 = 0;
					while ((double)num237 < dmg / (double)(this.lifeMax * 50))
					{
						int num238 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num238].position = Vector2.Lerp(Main.dust[num238].position, base.Center, 0.25f);
						Main.dust[num238].scale = 0.5f;
						num = num237;
						num237 = num + 1;
					}
				}
				else
				{
					for (int num239 = 0; num239 < 10; num239 = num + 1)
					{
						int num240 = Dust.NewDust(this.position, this.width, this.height, 226, -2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num240].scale = 0.5f;
						num = num239;
					}
					Vector2 velocity2 = this.velocity;
					if (this.ai[0] == 3f)
					{
						velocity2 = this.rotation.ToRotationVector2();
						if (this.spriteDirection == 1)
						{
							velocity2.X *= -1f;
						}
						velocity2 *= 5f;
					}
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity2, 605, this.scale);
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity2, 606, this.scale);
				}
			}
			else if (this.type == 399)
			{
				if (this.life > 0)
				{
					int num241 = 0;
					while ((double)num241 < dmg / (double)(this.lifeMax * 50))
					{
						int num242 = Dust.NewDust(this.position, this.width, this.height, 226, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num242].position = Vector2.Lerp(Main.dust[num242].position, base.Center, 0.25f);
						Main.dust[num242].scale = 0.5f;
						num = num241;
						num241 = num + 1;
					}
				}
				else
				{
					for (int num243 = 0; num243 < 10; num243 = num + 1)
					{
						int num244 = Dust.NewDust(this.position, this.width, this.height, 226, -2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						Main.dust[num244].scale = 0.5f;
						num = num243;
					}
					Vector2 velocity3 = this.velocity;
					if (this.ai[0] == 3f)
					{
						velocity3 = this.rotation.ToRotationVector2();
						if (this.spriteDirection == 1)
						{
							velocity3.X *= -1f;
						}
						velocity3 *= 5f;
					}
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity3, 898, this.scale);
					Gore.NewGore(base.Center - new Vector2(10f, 10f), velocity3, 899, this.scale);
				}
			}
			else if (this.type == 391)
			{
				if (this.life > 0)
				{
					int num245 = 0;
					while ((double)num245 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 227, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num245;
						num245 = num + 1;
					}
				}
				else
				{
					for (int num246 = 0; num246 < 30; num246 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 227, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num246;
					}
					Gore.NewGore(this.position + Vector2.UnitX * (float)this.width / 2f, this.velocity, 607, this.scale);
					Gore.NewGore(this.position + Vector2.UnitX * (float)this.width / 2f, this.velocity, 608, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 609, this.scale);
				}
			}
			if (this.type == 392 || this.type == 394 || this.type == 393 || this.type == 395)
			{
				if (this.life > 0)
				{
					int num247 = 0;
					while ((double)num247 < dmg / (double)this.lifeMax * 20.0)
					{
						int num248 = Dust.NewDust(this.position, this.width, this.height, 228, (float)(-1 * hitDirection), -1f, 0, default(Color), 1f);
						Main.dust[num248].position = Vector2.Lerp(Main.dust[num248].position, base.Center, 0.25f);
						Main.dust[num248].scale = 0.5f;
						num = num247;
						num247 = num + 1;
					}
				}
				else
				{
					for (int num249 = 0; num249 < 30; num249 = num + 1)
					{
						int num250 = Dust.NewDust(this.position, this.width, this.height, 228, -1.5f * (float)hitDirection, -1.5f, 0, default(Color), 1f);
						Main.dust[num250].scale = 0.5f;
						num = num249;
					}
					Vector2 center = base.Center;
					if (this.type == 395)
					{
						Gore.NewGore(center + new Vector2(-20f, -10f), this.velocity, 610, this.scale);
						Gore.NewGore(center + new Vector2(20f, -10f), this.velocity, 611, this.scale);
						Gore.NewGore(center + new Vector2(-50f, 0f), this.velocity, 612, this.scale);
						Gore.NewGore(center + new Vector2(50f, 0f), this.velocity, 613, this.scale);
						Gore.NewGore(center + new Vector2(-60f, 10f), this.velocity, 614, this.scale);
						Gore.NewGore(center + new Vector2(0f, 30f), this.velocity, 615, this.scale);
					}
					if (this.type == 393)
					{
						Gore.NewGore(center, this.velocity, 616, this.scale);
					}
					if (this.type == 394)
					{
						Gore.NewGore(center, this.velocity, 617, this.scale);
					}
				}
			}
			else if (this.type == 482 || this.type == 483)
			{
				if (this.life > 0)
				{
					int num251 = 0;
					while ((double)num251 < dmg / (double)(this.lifeMax * 50))
					{
						Dust.NewDust(this.position, this.width, this.height, 240, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num251;
						num251 = num + 1;
					}
				}
				else
				{
					for (int num252 = 0; num252 < 30; num252 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 240, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num252;
					}
					if (this.type == 482)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 718, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 719, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 720, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), this.velocity, 721, this.scale);
					}
				}
			}
			if ((this.type >= 442 && this.type <= 448) || this.type == 539)
			{
				if (this.life > 0)
				{
					for (int num253 = 0; num253 < 10; num253 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(232, 234), (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num253;
					}
				}
				else
				{
					for (int num254 = 0; num254 < 20; num254 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(232, 234), (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num254;
					}
				}
			}
			if (this.type == 333 || this.type == 334 || this.type == 335 || this.type == 336)
			{
				Color white = Color.White;
				if (this.type == 333)
				{
					white = new Color(73, 147, 221, 200);
				}
				if (this.type == 334)
				{
					white = new Color(24, 146, 79, 200);
				}
				if (this.type == 335)
				{
					white = new Color(194, 46, 50, 200);
				}
				if (this.type == 336)
				{
					white = new Color(228, 200, 1, 200);
				}
				if (this.life > 0)
				{
					int num255 = 0;
					while ((double)num255 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 150, white, 1f);
						num = num255;
						num255 = num + 1;
					}
				}
				else
				{
					for (int num256 = 0; num256 < 50; num256 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 150, white, 1f);
						num = num256;
					}
				}
			}
			if (this.type == 537)
			{
				if (this.life > 0)
				{
					int num257 = 0;
					while ((double)num257 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 32, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num257;
						num257 = num + 1;
					}
				}
				else
				{
					for (int num258 = 0; num258 < 50; num258 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 32, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num258;
					}
				}
			}
			if (this.type == 1 || this.type == 16 || this.type == 71 || this.type == 244 || this.type == 535)
			{
				if (this.life > 0)
				{
					int num259 = 0;
					while ((double)num259 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, this.color, 1f);
						num = num259;
						num259 = num + 1;
					}
				}
				else
				{
					for (int num260 = 0; num260 < 50; num260 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, this.color, 1f);
						num = num260;
					}
					if (Main.netMode != 1 && this.type == 16)
					{
						int num261 = Main.rand.Next(2) + 2;
						for (int num262 = 0; num262 < num261; num262 = num + 1)
						{
							int num263 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num263].SetDefaults(-5, -1f);
							Main.npc[num263].velocity.X = this.velocity.X * 2f;
							Main.npc[num263].velocity.Y = this.velocity.Y;
							NPC var_324_BB1A_cp_0_cp_0 = Main.npc[num263];
							var_324_BB1A_cp_0_cp_0.velocity.X = var_324_BB1A_cp_0_cp_0.velocity.X + ((float)Main.rand.Next(-20, 20) * 0.1f + (float)(num262 * this.direction) * 0.3f);
							NPC var_324_BB6F_cp_0_cp_0 = Main.npc[num263];
							var_324_BB6F_cp_0_cp_0.velocity.Y = var_324_BB6F_cp_0_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num262);
							Main.npc[num263].ai[0] = (float)(-1000 * Main.rand.Next(3));
							if (Main.netMode == 2 && num263 < 200)
							{
								NetMessage.SendData(23, -1, -1, null, num263, 0f, 0f, 0f, 0, 0, 0);
							}
							num = num262;
						}
					}
				}
			}
			if (this.type == 352)
			{
				if (this.life > 0)
				{
					int num264 = 0;
					while ((double)num264 < dmg / (double)this.lifeMax * 100.0)
					{
						int num265 = Dust.NewDust(this.position, this.width, this.height, 67, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num265].noGravity = true;
						num = num264;
						num264 = num + 1;
					}
				}
				else
				{
					for (int num266 = 0; num266 < 60; num266 = num + 1)
					{
						int num267 = Dust.NewDust(this.position, this.width, this.height, 67, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						Main.dust[num267].noGravity = true;
						num = num266;
					}
				}
			}
			if (this.type >= 305 && this.type <= 314)
			{
				if (this.life > 0)
				{
					int num268 = 0;
					while ((double)num268 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num = num268;
						num268 = num + 1;
					}
				}
				else
				{
					for (int num269 = 0; num269 < 60; num269 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
						num = num269;
					}
					Gore.NewGore(this.position, this.velocity, 441, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 442, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 443, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 444, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 445, this.scale);
				}
			}
			if (this.type == 327)
			{
				if (this.life > 0)
				{
					int num270 = 0;
					while ((double)num270 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num = num270;
						num270 = num + 1;
					}
				}
				else
				{
					for (int num271 = 0; num271 < 60; num271 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
						num = num271;
					}
					for (int num272 = 476; num272 <= 484; num272 = num + 1)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num272, this.scale);
						num = num272;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.life > 0)
				{
					int num273 = 0;
					while ((double)num273 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num = num273;
						num273 = num + 1;
					}
				}
				else
				{
					for (int num274 = 0; num274 < 60; num274 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
						num = num274;
					}
					for (int num275 = 469; num275 <= 475; num275 = num + 1)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num275, this.scale);
						num = num275;
					}
				}
			}
			if (this.type == 345 && this.life <= 0)
			{
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 513, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 515, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 516, this.scale);
			}
			if (this.type == 344)
			{
				if (this.life > 0)
				{
					int num276 = 0;
					while ((double)num276 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 196, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num276;
						num276 = num + 1;
					}
				}
				else
				{
					for (int num277 = 0; num277 < 60; num277 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 196, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num277;
					}
					for (int num278 = 508; num278 <= 512; num278 = num + 1)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num278, this.scale);
						num = num278;
					}
					for (int num279 = 509; num279 <= 512; num279 = num + 1)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num279, this.scale);
						num = num279;
					}
				}
			}
			if (this.type == 326)
			{
				if (this.life > 0)
				{
					int num280 = 0;
					while ((double)num280 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num = num280;
						num280 = num + 1;
					}
				}
				else
				{
					for (int num281 = 0; num281 < 60; num281 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
						num = num281;
					}
				}
			}
			if (this.type == 304)
			{
				if (this.life > 0)
				{
					int num282 = 0;
					while ((double)num282 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.3f);
						num = num282;
						num282 = num + 1;
					}
				}
				else
				{
					for (int num283 = 0; num283 < 60; num283 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.3f);
						num = num283;
					}
				}
			}
			if (this.type == 302)
			{
				if (this.life > 0)
				{
					int num284 = 0;
					while ((double)num284 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
						num = num284;
						num284 = num + 1;
					}
				}
				else
				{
					for (int num285 = 0; num285 < 50; num285 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
						num = num285;
					}
					Gore.NewGore(this.position, this.velocity, 440, this.scale);
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				if (this.life > 0)
				{
					int num286 = 0;
					while ((double)num286 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num286;
						num286 = num + 1;
					}
				}
				else if (this.type == 246)
				{
					if (Main.netMode != 1)
					{
						NPC.NewNPC((int)base.Center.X, (int)this.position.Y + this.height, 249, this.whoAmI, 0f, 0f, 0f, 0f, 255);
					}
				}
				else
				{
					for (int num287 = 0; num287 < 50; num287 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num287;
					}
					if (this.type == 245)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 360, this.scale);
						Gore.NewGore(this.position, this.velocity, 361, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 364, this.scale);
						Gore.NewGore(this.position, this.velocity, 367, this.scale);
						Gore.NewGore(this.position, this.velocity, 366, this.scale);
					}
					else if (this.type == 249)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 365, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
					}
					else
					{
						Gore.NewGore(this.position, this.velocity, 369, this.scale);
						Gore.NewGore(this.position, this.velocity, 371, this.scale);
						Gore.NewGore(this.position, this.velocity, 370, this.scale);
					}
				}
			}
			if (this.type == 288 && this.life <= 0)
			{
				for (int num288 = 0; num288 < 50; num288 = num + 1)
				{
					int num289 = Dust.NewDust(this.position, this.width, this.height, 180, this.velocity.X, this.velocity.Y, 0, default(Color), 1f);
					Dust dust = Main.dust[num289];
					dust.velocity *= 2f;
					Main.dust[num289].noGravity = true;
					Main.dust[num289].scale = 1.4f;
					num = num288;
				}
			}
			if (this.type == 204)
			{
				if (this.life > 0)
				{
					int num290 = 0;
					while ((double)num290 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(149, 208, 104), 1f);
						num = num290;
						num290 = num + 1;
					}
				}
				else
				{
					for (int num291 = 0; num291 < 50; num291 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(149, 208, 104), 1f);
						num = num291;
					}
				}
			}
			if (this.type == 225)
			{
				if (this.life > 0)
				{
					int num292 = 0;
					while ((double)num292 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(0, 80, 255, 100), 1f);
						num = num292;
						num292 = num + 1;
					}
				}
				else
				{
					for (int num293 = 0; num293 < 50; num293 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(0, 80, 255, 100), 1f);
						num = num293;
					}
					Gore.NewGore(this.position, this.velocity, 314, this.scale);
				}
			}
			if (this.type == 243)
			{
				if (this.life > 0)
				{
					int num294 = 0;
					while ((double)num294 < dmg / (double)this.lifeMax * 150.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num294;
						num294 = num + 1;
					}
				}
				else
				{
					for (int num295 = 0; num295 < 200; num295 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num295;
					}
					Gore.NewGore(this.position, this.velocity, 359, this.scale);
				}
			}
			if ((this.type == 210 || this.type == 211) && this.life <= 0)
			{
				for (int num296 = 0; num296 < 6; num296 = num + 1)
				{
					int num297 = Dust.NewDust(this.position, this.width, this.height, 150, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num297].noGravity = true;
						Main.dust[num297].scale = 1.5f;
					}
					else
					{
						Main.dust[num297].scale = 0.8f;
					}
					num = num296;
				}
			}
			if ((this.type == 355 || this.type == 358) && this.life <= 0)
			{
				for (int num298 = 0; num298 < 6; num298 = num + 1)
				{
					int num299 = Dust.NewDust(this.position, this.width, this.height, 198, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num299].noGravity = true;
						Main.dust[num299].scale = 1.5f * this.scale;
					}
					else
					{
						Main.dust[num299].scale = 0.8f * this.scale;
					}
					num = num298;
				}
			}
			if (this.type == 356 && this.life <= 0)
			{
				for (int num300 = 0; num300 < 6; num300 = num + 1)
				{
					int num301 = Dust.NewDust(this.position, this.width, this.height, 199, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num301].noGravity = true;
						Main.dust[num301].scale = 1.5f * this.scale;
					}
					else
					{
						Main.dust[num301].scale = 0.8f * this.scale;
					}
					num = num300;
				}
			}
			if (this.type >= 484 && this.type <= 487 && this.life <= 0)
			{
				for (int num302 = 0; num302 < 6; num302 = num + 1)
				{
					int num303 = Dust.NewDust(this.position, this.width, this.height, 248 + this.type - 484, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num303].noGravity = true;
						Main.dust[num303].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num303].scale = 0.7f * this.scale;
					}
					num = num302;
				}
			}
			if (this.type == 357 && this.life <= 0)
			{
				for (int num304 = 0; num304 < 6; num304 = num + 1)
				{
					int num305 = Dust.NewDust(this.position, this.width, this.height, 200, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num305].noGravity = true;
						Main.dust[num305].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num305].scale = 0.7f * this.scale;
					}
					num = num304;
				}
			}
			if (this.type == 377 && this.life <= 0)
			{
				for (int num306 = 0; num306 < 6; num306 = num + 1)
				{
					int num307 = Dust.NewDust(this.position, this.width, this.height, 40, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num307].noGravity = true;
						Main.dust[num307].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num307].scale = 0.7f * this.scale;
					}
					num = num306;
				}
			}
			if (this.type == 374 || this.type == 375)
			{
				for (int num308 = 0; num308 < 6; num308 = num + 1)
				{
					int num309 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
					Dust dust = Main.dust[num309];
					dust.velocity *= 2f;
					Main.dust[num309].noGravity = true;
					num = num308;
				}
			}
			if (this.type == 359)
			{
				if (this.life <= 0)
				{
					for (int num310 = 0; num310 < 6; num310 = num + 1)
					{
						int num311 = Dust.NewDust(this.position, this.width, this.height, 201, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num311].noGravity = true;
							Main.dust[num311].scale = 1.2f * this.scale;
						}
						else
						{
							Main.dust[num311].scale = 0.7f * this.scale;
						}
						num = num310;
					}
				}
				Gore.NewGore(this.position, this.velocity, 547, this.scale);
				Gore.NewGore(this.position, this.velocity, 548, this.scale);
			}
			if (this.type == 360)
			{
				if (this.life <= 0)
				{
					for (int num312 = 0; num312 < 6; num312 = num + 1)
					{
						int num313 = Dust.NewDust(this.position, this.width, this.height, 202, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num313].noGravity = true;
							Main.dust[num313].scale = 1.2f * this.scale;
						}
						else
						{
							Main.dust[num313].scale = 0.7f * this.scale;
						}
						num = num312;
					}
				}
				Gore.NewGore(this.position, this.velocity, 549, this.scale);
				Gore.NewGore(this.position, this.velocity, 550, this.scale);
			}
			if (this.type == 154)
			{
				if (this.life > 0)
				{
					int num314 = 0;
					while ((double)num314 < dmg / (double)this.lifeMax * 50.0)
					{
						int num315 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num315].noGravity = true;
						Dust dust = Main.dust[num315];
						dust.velocity *= 0.2f;
						num = num314;
						num314 = num + 1;
					}
				}
				else
				{
					for (int num316 = 0; num316 < 50; num316 = num + 1)
					{
						int num317 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num317].noGravity = true;
						Dust dust = Main.dust[num317];
						dust.velocity *= 0.2f;
						num = num316;
					}
					Gore.NewGore(this.position, this.velocity, 180, this.scale);
				}
			}
			if (this.type == 147 || this.type == 184)
			{
				if (this.life > 0)
				{
					int num318 = 0;
					while ((double)num318 < dmg / (double)this.lifeMax * 50.0)
					{
						int num319 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num319].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(97, 200, 255, 100), 1f);
						num = num318;
						num318 = num + 1;
					}
				}
				else
				{
					for (int num320 = 0; num320 < 30; num320 = num + 1)
					{
						int num321 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -2f, 0, default(Color), 1f);
						Main.dust[num321].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -2f, 100, new Color(97, 200, 255, 100), 1f);
						num = num320;
					}
				}
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				if (this.life > 0)
				{
					int num322 = 0;
					while ((double)num322 < dmg / (double)this.lifeMax * 100.0)
					{
						int num323 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num323].noGravity = true;
						num = num322;
						num322 = num + 1;
					}
				}
				else
				{
					for (int num324 = 0; num324 < 50; num324 = num + 1)
					{
						int num325 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num325].noGravity = true;
						Dust dust = Main.dust[num325];
						dust.scale *= 1.2f;
						num = num324;
					}
				}
			}
			if (this.type == 141)
			{
				if (this.life > 0)
				{
					int num326 = 0;
					while ((double)num326 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, new Color(210, 230, 140), 1f);
						num = num326;
						num326 = num + 1;
					}
				}
				else
				{
					for (int num327 = 0; num327 < 50; num327 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, new Color(210, 230, 140), 1f);
						num = num327;
					}
				}
			}
			if (this.type == 112)
			{
				for (int num328 = 0; num328 < 20; num328 = num + 1)
				{
					int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 2f);
					if (Main.rand.Next(2) == 0)
					{
						Dust dust = Main.dust[num329];
						dust.scale *= 0.6f;
					}
					else
					{
						Dust dust = Main.dust[num329];
						dust.velocity *= 1.4f;
						Main.dust[num329].noGravity = true;
					}
					num = num328;
				}
			}
			if (this.type == 183)
			{
				if (this.life > 0)
				{
					int num330 = 0;
					while ((double)num330 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 136, 0f, 0f, this.alpha, this.color, 1f);
						num = num330;
						num330 = num + 1;
					}
				}
				else
				{
					for (int num331 = 0; num331 < 50; num331 = num + 1)
					{
						int num332 = Dust.NewDust(this.position, this.width, this.height, 136, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Dust dust = Main.dust[num332];
						dust.velocity *= 2f;
						num = num331;
					}
				}
			}
			if (this.type == 81 || this.type == 121)
			{
				if (this.life > 0)
				{
					int num333 = 0;
					while ((double)num333 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						num = num333;
						num333 = num + 1;
					}
				}
				else
				{
					for (int num334 = 0; num334 < 50; num334 = num + 1)
					{
						int num335 = Dust.NewDust(this.position, this.width, this.height, 14, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Dust dust = Main.dust[num335];
						dust.velocity *= 2f;
						num = num334;
					}
					if (Main.netMode != 1)
					{
						if (this.type == 121)
						{
							int num336 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 81, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num336].SetDefaults(-2, -1f);
							Main.npc[num336].velocity.X = this.velocity.X;
							Main.npc[num336].velocity.Y = this.velocity.Y;
							Gore.NewGore(this.position, this.velocity, 94, this.scale);
							if (Main.netMode == 2 && num336 < 200)
							{
								NetMessage.SendData(23, -1, -1, null, num336, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						else if (this.scale >= 1f)
						{
							int num337 = Main.rand.Next(2) + 2;
							for (int num338 = 0; num338 < num337; num338 = num + 1)
							{
								int num339 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num339].SetDefaults(-1, -1f);
								Main.npc[num339].velocity.X = this.velocity.X * 3f;
								Main.npc[num339].velocity.Y = this.velocity.Y;
								NPC var_324_E43D_cp_0_cp_0 = Main.npc[num339];
								var_324_E43D_cp_0_cp_0.velocity.X = var_324_E43D_cp_0_cp_0.velocity.X + ((float)Main.rand.Next(-10, 10) * 0.1f + (float)(num338 * this.direction) * 0.3f);
								NPC var_324_E492_cp_0_cp_0 = Main.npc[num339];
								var_324_E492_cp_0_cp_0.velocity.Y = var_324_E492_cp_0_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num338);
								Main.npc[num339].ai[1] = (float)num338;
								if (Main.netMode == 2 && num339 < 200)
								{
									NetMessage.SendData(23, -1, -1, null, num339, 0f, 0f, 0f, 0, 0, 0);
								}
								num = num338;
							}
						}
					}
				}
			}
			if (this.type == 120 || this.type == 137 || this.type == 138)
			{
				if (this.life > 0)
				{
					int num340 = 0;
					while ((double)num340 < dmg / (double)this.lifeMax * 50.0)
					{
						int num341 = Dust.NewDust(this.position, this.width, this.height, 71, 0f, 0f, 200, default(Color), 1f);
						Dust dust = Main.dust[num341];
						dust.velocity *= 1.5f;
						num = num340;
						num340 = num + 1;
					}
				}
				else
				{
					for (int num342 = 0; num342 < 50; num342 = num + 1)
					{
						int num343 = Dust.NewDust(this.position, this.width, this.height, 71, (float)hitDirection, 0f, 200, default(Color), 1f);
						Dust dust = Main.dust[num343];
						dust.velocity *= 1.5f;
						num = num342;
					}
				}
			}
			if (this.type == 122)
			{
				if (this.life > 0)
				{
					int num344 = 0;
					while ((double)num344 < dmg / (double)this.lifeMax * 50.0)
					{
						int num345 = Dust.NewDust(this.position, this.width, this.height, 72, 0f, 0f, 200, default(Color), 1f);
						Dust dust = Main.dust[num345];
						dust.velocity *= 1.5f;
						num = num344;
						num344 = num + 1;
					}
				}
				else
				{
					for (int num346 = 0; num346 < 50; num346 = num + 1)
					{
						int num347 = Dust.NewDust(this.position, this.width, this.height, 72, (float)hitDirection, 0f, 200, default(Color), 1f);
						Dust dust = Main.dust[num347];
						dust.velocity *= 1.5f;
						num = num346;
					}
				}
			}
			if (this.type == 75)
			{
				if (this.life > 0)
				{
					int num348 = 0;
					while ((double)num348 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
						num = num348;
						num348 = num + 1;
					}
				}
				else
				{
					for (int num349 = 0; num349 < 50; num349 = num + 1)
					{
						int num350 = Dust.NewDust(this.position, this.width, this.height, 55, (float)hitDirection, 0f, 200, this.color, 1f);
						Dust dust = Main.dust[num350];
						dust.velocity *= 2f;
						num = num349;
					}
				}
			}
			if (this.type != 63 && this.type != 64 && this.type != 103)
			{
				if (this.type == 59 || this.type == 60 || this.type == 151)
				{
					if (this.life > 0)
					{
						int num351 = 0;
						while ((double)num351 < dmg / (double)this.lifeMax * 80.0)
						{
							int num352 = Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
							if (Main.rand.Next(8) != 0)
							{
								Main.dust[num352].noGravity = true;
							}
							num = num351;
							num351 = num + 1;
						}
						return;
					}
					for (int num353 = 0; num353 < 40; num353 = num + 1)
					{
						int num354 = Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
						if (Main.rand.Next(8) != 0)
						{
							Main.dust[num354].noGravity = true;
						}
						num = num353;
					}
					if (!Main.expertMode || this.type != 59 || Main.netMode == 1)
					{
						return;
					}
					try
					{
						int num355 = (int)(base.Center.X / 16f);
						int num356 = (int)(base.Center.Y / 16f);
						if (!WorldGen.SolidTile(num355, num356) && Main.tile[num355, num356].liquid == 0)
						{
							Main.tile[num355, num356].liquid = (byte)Main.rand.Next(50, 150);
							Main.tile[num355, num356].lava(true);
							Main.tile[num355, num356].honey(false);
							WorldGen.SquareTileFrame(num355, num356, true);
						}
						return;
					}
					catch
					{
						return;
					}
				}
				if (this.type == 50)
				{
					if (this.life > 0)
					{
						int num357 = 0;
						while ((double)num357 < dmg / (double)this.lifeMax * 300.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 175, new Color(0, 80, 255, 100), 1f);
							num = num357;
							num357 = num + 1;
						}
						return;
					}
					for (int num358 = 0; num358 < 200; num358 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 175, new Color(0, 80, 255, 100), 1f);
						num = num358;
					}
					Gore.NewGore(base.Center + new Vector2(-40f, (float)(-(float)this.height / 2)), this.velocity, 734, 1f);
					if (Main.netMode != 1)
					{
						int num359 = Main.rand.Next(4) + 4;
						for (int num360 = 0; num360 < num359; num360 = num + 1)
						{
							int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
							int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
							int num361 = NPC.NewNPC(x, y, 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num361].SetDefaults(1, -1f);
							Main.npc[num361].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
							Main.npc[num361].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
							Main.npc[num361].ai[0] = (float)(-1000 * Main.rand.Next(3));
							Main.npc[num361].ai[1] = 0f;
							if (Main.netMode == 2 && num361 < 200)
							{
								NetMessage.SendData(23, -1, -1, null, num361, 0f, 0f, 0f, 0, 0, 0);
							}
							num = num360;
						}
						return;
					}
				}
				else if (this.type == 153)
				{
					if (this.life > 0)
					{
						int num362 = 0;
						while ((double)num362 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num362;
							num362 = num + 1;
						}
						return;
					}
					for (int num363 = 0; num363 < 15; num363 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num363;
					}
					Gore.NewGore(this.position, this.velocity, 177, 1f);
					Gore.NewGore(this.position, this.velocity, 178, 1f);
					Gore.NewGore(this.position, this.velocity, 179, 1f);
					Gore.NewGore(this.position, this.velocity, 179, 1f);
					return;
				}
				else if (this.type == 177)
				{
					if (this.life > 0)
					{
						int num364 = 0;
						while ((double)num364 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num364;
							num364 = num + 1;
						}
						return;
					}
					for (int num365 = 0; num365 < 15; num365 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num365;
					}
					Gore.NewGore(this.position, this.velocity, 234, 1f);
					Gore.NewGore(this.position, this.velocity, 235, 1f);
					Gore.NewGore(this.position, this.velocity, 236, 1f);
					Gore.NewGore(this.position, this.velocity, 236, 1f);
					return;
				}
				else if (this.type >= 494 && this.type <= 495)
				{
					if (this.life > 0)
					{
						int num366 = 0;
						while ((double)num366 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num366;
							num366 = num + 1;
						}
						return;
					}
					for (int num367 = 0; num367 < 15; num367 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num367;
					}
					int num368 = (this.type - 494) * 2;
					Gore.NewGore(this.position, this.velocity, 736 + num368, 1f);
					Gore.NewGore(this.position, this.velocity, 735 + num368, 1f);
					return;
				}
				else if (this.type >= 496 && this.type <= 497)
				{
					if (this.life > 0)
					{
						int num369 = 0;
						while ((double)num369 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num369;
							num369 = num + 1;
						}
						return;
					}
					for (int num370 = 0; num370 < 15; num370 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num370;
					}
					int num371 = this.type - 496;
					Gore.NewGore(this.position, this.velocity, 739 + num371, 1f);
					return;
				}
				else if (this.type >= 498 && this.type <= 506)
				{
					if (this.life > 0)
					{
						int num372 = 0;
						while ((double)num372 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num372;
							num372 = num + 1;
						}
						return;
					}
					for (int num373 = 0; num373 < 15; num373 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num373;
					}
					int num374 = this.type - 498;
					Gore.NewGore(this.position, this.velocity, 750 + num374, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 16f), this.velocity, 741 + num374, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 18f), this.velocity, 759 + num374, 1f);
					return;
				}
				else if (this.type == 49 || this.type == 51 || this.type == 93 || this.type == 150 || this.type == 152 || this.type == 226)
				{
					if (this.life > 0)
					{
						int num375 = 0;
						while ((double)num375 < dmg / (double)this.lifeMax * 30.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num375;
							num375 = num + 1;
						}
						return;
					}
					for (int num376 = 0; num376 < 15; num376 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num376;
					}
					if (this.type == 51)
					{
						Gore.NewGore(this.position, this.velocity, 83, 1f);
						return;
					}
					if (this.type == 93)
					{
						Gore.NewGore(this.position, this.velocity, 107, 1f);
						return;
					}
					if (this.type == 150)
					{
						Gore.NewGore(this.position, this.velocity, 164, 1f);
						Gore.NewGore(this.position, this.velocity, 165, 1f);
						return;
					}
					if (this.type == 152)
					{
						Gore.NewGore(this.position, this.velocity, 175, 1f);
						Gore.NewGore(this.position, this.velocity, 176, 1f);
						Gore.NewGore(this.position, this.velocity, 176, 1f);
						return;
					}
					if (this.type == 226)
					{
						Gore.NewGore(this.position, this.velocity, 317, 1f);
						Gore.NewGore(this.position, this.velocity, 318, 1f);
						Gore.NewGore(this.position, this.velocity, 318, 1f);
						Gore.NewGore(this.position, this.velocity, 319, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 82, 1f);
					return;
				}
				else if (this.type == 46 || this.type == 55 || this.type == 67 || this.type == 74 || this.type == 102 || this.type == 224 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 538 || this.type == 540)
				{
					if (this.life > 0)
					{
						int num377 = 0;
						while ((double)num377 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num377;
							num377 = num + 1;
						}
						return;
					}
					for (int num378 = 0; num378 < 10; num378 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num378;
					}
					if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 540)
					{
						Gore.NewGore(this.position, this.velocity, 76, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 77, 1f);
						if (this.type == 303)
						{
							for (int num379 = 0; num379 < 10; num379 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 193, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								num = num379;
							}
						}
						if (this.type == 540)
						{
							Gore.NewGore(this.position, this.velocity, 926, 1f);
							return;
						}
					}
					else
					{
						if (this.type == 67)
						{
							Gore.NewGore(this.position, this.velocity, 95, 1f);
							Gore.NewGore(this.position, this.velocity, 95, 1f);
							Gore.NewGore(this.position, this.velocity, 96, 1f);
							return;
						}
						if (this.type == 55 || this.type == 230)
						{
							Gore.NewGore(this.position, this.velocity, 553, 1f);
							Gore.NewGore(this.position, this.velocity, 554, 1f);
							return;
						}
						if (this.type == 74)
						{
							Gore.NewGore(this.position, this.velocity, 100, 1f);
							return;
						}
						if (this.type == 297)
						{
							Gore.NewGore(this.position, this.velocity, 431, 1f);
							return;
						}
						if (this.type == 298)
						{
							Gore.NewGore(this.position, this.velocity, 432, 1f);
							return;
						}
						if (this.type == 299)
						{
							Gore.NewGore(this.position, this.velocity, 433, 1f);
							return;
						}
						if (this.type == 538)
						{
							Gore.NewGore(this.position, this.velocity, 897, 1f);
							return;
						}
						if (this.type == 300)
						{
							Gore.NewGore(this.position, this.velocity, 434, 1f);
							return;
						}
						if (this.type == 102)
						{
							Gore.NewGore(this.position, this.velocity, 116, 1f);
							return;
						}
						if (this.type == 224)
						{
							Gore.NewGore(this.position, this.velocity, 312, 1f);
							Gore.NewGore(this.position, this.velocity, 313, 1f);
							return;
						}
					}
				}
				else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
				{
					if (this.life > 0)
					{
						int num380 = 0;
						while ((double)num380 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num380;
							num380 = num + 1;
						}
						return;
					}
					for (int num381 = 0; num381 < 10; num381 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num381;
					}
					if (this.type == 148)
					{
						Gore.NewGore(this.position, this.velocity, 160, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 161, 1f);
						return;
					}
					if (this.type == 149)
					{
						Gore.NewGore(this.position, this.velocity, 162, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 163, 1f);
						return;
					}
					if (this.type == 168)
					{
						Gore.NewGore(this.position, this.velocity, 215, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 216, 1f);
						return;
					}
					if (this.type == 470)
					{
						Gore.NewGore(this.position, this.velocity, 673, 1f);
						Gore.NewGore(this.position, this.velocity, 672, 1f);
						Gore.NewGore(this.position, this.velocity, 674, 1f);
						return;
					}
				}
				else if (this.type == 361)
				{
					if (this.life > 0)
					{
						int num382 = 0;
						while ((double)num382 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num382;
							num382 = num + 1;
						}
						return;
					}
					for (int num383 = 0; num383 < 10; num383 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num383;
					}
					Gore.NewGore(this.position, this.velocity, 551, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 552, 1f);
					return;
				}
				else if (this.type == 366 || this.type == 367)
				{
					if (this.life > 0)
					{
						int num384 = 0;
						while ((double)num384 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 203, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num384;
							num384 = num + 1;
						}
						return;
					}
					for (int num385 = 0; num385 < 10; num385 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 203, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num385;
					}
					if (this.type == 366)
					{
						Gore.NewGore(this.position, this.velocity, 561, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 562, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 563, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 564, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 565, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 566, 1f);
					return;
				}
				else if (this.type >= 362 && this.type <= 365)
				{
					if (this.life > 0)
					{
						int num386 = 0;
						while ((double)num386 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num386;
							num386 = num + 1;
						}
						return;
					}
					for (int num387 = 0; num387 < 10; num387 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num387;
					}
					if (this.type == 362 || this.type == 363)
					{
						Gore.NewGore(this.position, this.velocity, 555, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 556, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 557, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 558, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 559, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 560, 1f);
					return;
				}
				else if (this.type == 348 || this.type == 349)
				{
					if (this.life > 0)
					{
						int num388 = 0;
						while ((double)num388 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num388;
							num388 = num + 1;
						}
						return;
					}
					for (int num389 = 0; num389 < 10; num389 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num389;
					}
					Gore.NewGore(this.position, this.velocity, 528, 1f);
					Gore.NewGore(this.position, this.velocity, 529, 1f);
					Gore.NewGore(this.position, this.velocity, 530, 1f);
					Gore.NewGore(this.position, this.velocity, 531, 1f);
					Gore.NewGore(this.position, this.velocity, 532, 1f);
					return;
				}
				else if (this.type == 351)
				{
					if (this.life > 0)
					{
						int num390 = 0;
						while ((double)num390 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num390;
							num390 = num + 1;
						}
						return;
					}
					for (int num391 = 0; num391 < 10; num391 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num391;
					}
					Gore.NewGore(this.position, this.velocity, 538, 1f);
					Gore.NewGore(this.position, this.velocity, 539, 1f);
					Gore.NewGore(this.position, this.velocity, 540, 1f);
					Gore.NewGore(this.position, this.velocity, 541, 1f);
					Gore.NewGore(this.position, this.velocity, 542, 1f);
					return;
				}
				else if (this.type == 350)
				{
					if (this.life > 0)
					{
						int num392 = 0;
						while ((double)num392 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num392;
							num392 = num + 1;
						}
						return;
					}
					for (int num393 = 0; num393 < 10; num393 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num393;
					}
					Gore.NewGore(this.position, this.velocity, 533, 1f);
					Gore.NewGore(this.position, this.velocity, 534, 1f);
					Gore.NewGore(this.position, this.velocity, 535, 1f);
					Gore.NewGore(this.position, this.velocity, 536, 1f);
					return;
				}
				else if (this.type == 47 || this.type == 57 || this.type == 58 || this.type == 464 || this.type == 465)
				{
					if (this.life > 0)
					{
						int num394 = 0;
						while ((double)num394 < dmg / (double)this.lifeMax * 20.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num394;
							num394 = num + 1;
						}
						return;
					}
					for (int num395 = 0; num395 < 10; num395 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num395;
					}
					if (this.type == 57)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 84, 1f);
						return;
					}
					if (this.type == 58)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 85, 1f);
						return;
					}
					if (this.type == 464)
					{
						Gore.NewGore(this.position, this.velocity, 668, 1f);
						Gore.NewGore(this.position, this.velocity, 669, 1f);
						return;
					}
					if (this.type == 465)
					{
						Gore.NewGore(this.position, this.velocity, 670, 1f);
						Gore.NewGore(this.position, this.velocity, 671, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 78, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 79, 1f);
					return;
				}
				else if (this.type == 173 || this.type == 174 || this.type == 181 || this.type == 182 || this.type == 268)
				{
					if (this.life > 0)
					{
						int num396 = 0;
						while ((double)num396 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, this.alpha, default(Color), 1f);
							num = num396;
							num396 = num + 1;
						}
						return;
					}
					for (int num397 = 0; num397 < 50; num397 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, this.alpha, default(Color), 1f);
						num = num397;
					}
					if (this.type == 173)
					{
						Gore.NewGore(this.position, this.velocity, 223, 1f);
						Gore.NewGore(this.position, this.velocity, 224, 1f);
						return;
					}
					if (this.type == 174)
					{
						Gore.NewGore(this.position, this.velocity, 225, 1f);
						Gore.NewGore(this.position, this.velocity, 226, 1f);
						return;
					}
					if (this.type == 181)
					{
						Gore.NewGore(this.position, this.velocity, 237, 1f);
						return;
					}
					if (this.type == 182)
					{
						Gore.NewGore(this.position, this.velocity, 238, 1f);
						Gore.NewGore(this.position, this.velocity, 239, 1f);
						return;
					}
					if (this.type == 268)
					{
						Gore.NewGore(this.position, this.velocity, 403, 1f);
						Gore.NewGore(this.position, this.velocity, 404, 1f);
						Gore.NewGore(this.position, this.velocity, 405, 1f);
						return;
					}
				}
				else if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.life > 0)
					{
						int num398 = 0;
						while ((double)num398 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num398;
							num398 = num + 1;
						}
						return;
					}
					for (int num399 = 0; num399 < 50; num399 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num399;
					}
					if (this.type == 190)
					{
						Gore.NewGore(this.position, this.velocity, 249, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					if (this.type == 191)
					{
						Gore.NewGore(this.position, this.velocity, 248, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					if (this.type == 192)
					{
						Gore.NewGore(this.position, this.velocity, 247, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					if (this.type == 193)
					{
						Gore.NewGore(this.position, this.velocity, 252, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 253, this.scale);
						return;
					}
					if (this.type == 194)
					{
						Gore.NewGore(this.position, this.velocity, 250, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 251, this.scale);
						return;
					}
					if (this.type == 317)
					{
						Gore.NewGore(this.position, this.velocity, 447, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 448, this.scale);
						return;
					}
					if (this.type == 318)
					{
						Gore.NewGore(this.position, this.velocity, 449, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 450, this.scale);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
					return;
				}
				else if (this.type == 157)
				{
					if (this.life > 0)
					{
						int num400 = 0;
						while ((double)num400 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num400;
							num400 = num + 1;
						}
						return;
					}
					for (int num401 = 0; num401 < 50; num401 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num401;
					}
					Gore.NewGore(this.position, this.velocity, 186, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 187, 1f);
					return;
				}
				else if (this.type == 133)
				{
					if (this.life <= 0)
					{
						for (int num402 = 0; num402 < 50; num402 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							num = num402;
						}
						Gore.NewGore(this.position, this.velocity, 155, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 14f), this.velocity, 155, 1f);
						return;
					}
					int num403 = 0;
					while ((double)num403 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num403;
						num403 = num + 1;
					}
					if ((float)this.life < (float)this.lifeMax * 0.5f && this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Gore.NewGore(this.position, this.velocity, 1, 1f);
						return;
					}
				}
				else if (this.type == 69 || this.type == 509 || this.type == 508)
				{
					if (this.life > 0)
					{
						int num404 = 0;
						while ((double)num404 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num404;
							num404 = num + 1;
						}
						return;
					}
					for (int num405 = 0; num405 < 50; num405 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num405;
					}
					if (this.type == 69)
					{
						Gore.NewGore(this.position, this.velocity, 97, 1f);
						Gore.NewGore(this.position, this.velocity, 98, 1f);
						return;
					}
					if (this.type == 508)
					{
						Gore.NewGore(this.position, this.velocity, 811, 1f);
						Gore.NewGore(this.position, this.velocity, 812, 1f);
						Gore.NewGore(this.position, this.velocity, 813, 1f);
						Gore.NewGore(this.position, this.velocity, 814, 1f);
						return;
					}
					if (this.type == 509)
					{
						Gore.NewGore(this.position, this.velocity, 815, 1f);
						Gore.NewGore(this.position, this.velocity, 816, 1f);
						Gore.NewGore(this.position, this.velocity, 817, 1f);
						Gore.NewGore(this.position, this.velocity, 818, 1f);
						Gore.NewGore(this.position, this.velocity, 818, 1f);
						return;
					}
				}
				else if (this.type == 61)
				{
					if (this.life > 0)
					{
						int num406 = 0;
						while ((double)num406 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num406;
							num406 = num + 1;
						}
						return;
					}
					for (int num407 = 0; num407 < 50; num407 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num407;
					}
					Gore.NewGore(this.position, this.velocity, 86, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 87, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 88, 1f);
					return;
				}
				else if (this.type == 301)
				{
					if (this.life > 0)
					{
						int num408 = 0;
						while ((double)num408 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num408;
							num408 = num + 1;
						}
						return;
					}
					for (int num409 = 0; num409 < 50; num409 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num409;
					}
					Gore.NewGore(this.position, this.velocity, 438, 1f);
					Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 439, 1f);
					return;
				}
				else if (this.type == 252)
				{
					if (this.life > 0)
					{
						int num410 = 0;
						while ((double)num410 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num410;
							num410 = num + 1;
						}
						return;
					}
					for (int num411 = 0; num411 < 50; num411 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num411;
					}
					Gore.NewGore(this.position, this.velocity, 373, 1f);
					Gore.NewGore(this.position, this.velocity, 374, 1f);
					return;
				}
				else if (this.type == 489)
				{
					if (this.life > 0)
					{
						int num412 = 0;
						while ((double)num412 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num412;
							num412 = num + 1;
						}
						return;
					}
					for (int num413 = 0; num413 < 50; num413 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num413;
					}
					Gore.NewGore(this.position, this.velocity, 722, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 723, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 723, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 724, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 724, this.scale);
					return;
				}
				else if (this.type == 534)
				{
					if (this.life > 0)
					{
						int num414 = 0;
						while ((double)num414 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num414;
							num414 = num + 1;
						}
						return;
					}
					for (int num415 = 0; num415 < 50; num415 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num415;
					}
					Gore.NewGore(this.position, this.velocity, 894, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 895, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 895, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 896, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 896, this.scale);
					return;
				}
				else if (this.type == 490)
				{
					if (this.life > 0)
					{
						int num416 = 0;
						while ((double)num416 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num416;
							num416 = num + 1;
						}
						return;
					}
					for (int num417 = 0; num417 < 50; num417 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num417;
					}
					Gore.NewGore(this.position, this.velocity, 725, this.scale);
					Gore.NewGore(this.position, this.velocity, 726, this.scale);
					Gore.NewGore(this.position, this.velocity, 727, this.scale);
					Gore.NewGore(this.position, this.velocity, 725 + Main.rand.Next(3), this.scale);
					Gore.NewGore(this.position, this.velocity, 725 + Main.rand.Next(3), this.scale);
					return;
				}
				else if (this.type == 65 || (this.type >= 542 && this.type <= 545))
				{
					if (this.life > 0)
					{
						int num418 = 0;
						while ((double)num418 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num418;
							num418 = num + 1;
						}
						return;
					}
					for (int num419 = 0; num419 < 75; num419 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num419;
					}
					if (this.type == 65)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 89, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 90, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 91, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 92, 1f);
					}
					if (this.type == 542)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 944, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 945, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 946, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 947, 1f);
					}
					if (this.type == 543)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 948, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 949, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 950, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 951, 1f);
					}
					if (this.type == 544)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 952, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 953, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 954, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 955, 1f);
					}
					if (this.type == 545)
					{
						Gore.NewGore(this.position, this.velocity * 0.8f, 956, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 957, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 958, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 959, 1f);
						return;
					}
				}
				else if (this.type == 195 || this.type == 196)
				{
					if (this.life > 0)
					{
						int num420 = 0;
						while ((double)num420 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num420;
							num420 = num + 1;
						}
						return;
					}
					for (int num421 = 0; num421 < 75; num421 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num421;
					}
					Gore.NewGore(this.position, this.velocity, 254, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
					return;
				}
				else if (this.type == 198 || this.type == 199)
				{
					if (this.life > 0)
					{
						int num422 = 0;
						while ((double)num422 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num422;
							num422 = num + 1;
						}
						return;
					}
					for (int num423 = 0; num423 < 75; num423 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num423;
					}
					Gore.NewGore(this.position, this.velocity, 258, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 261, this.scale);
					return;
				}
				else if (this.type == 206)
				{
					if (this.life > 0)
					{
						int num424 = 0;
						while ((double)num424 < dmg / (double)this.lifeMax * 150.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 137, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num424;
							num424 = num + 1;
						}
						return;
					}
					for (int num425 = 0; num425 < 75; num425 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 137, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num425;
					}
					Gore.NewGore(this.position, this.velocity, 273, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
					return;
				}
				else if (this.type == 342)
				{
					if (this.life > 0)
					{
						int num426 = 0;
						while ((double)num426 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 0, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num426;
							num426 = num + 1;
						}
						return;
					}
					for (int num427 = 0; num427 < 50; num427 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 0, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num427;
					}
					Gore.NewGore(this.position, this.velocity, 500, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
					return;
				}
				else if (this.type >= 338 && this.type <= 340)
				{
					if (this.life > 0)
					{
						int num428 = 0;
						while ((double)num428 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num428;
							num428 = num + 1;
						}
						return;
					}
					for (int num429 = 0; num429 < 50; num429 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num429;
					}
					if (this.type == 338)
					{
						Gore.NewGore(this.position, this.velocity, 494, this.scale);
					}
					if (this.type == 339)
					{
						Gore.NewGore(this.position, this.velocity, 495, this.scale);
					}
					if (this.type == 340)
					{
						Gore.NewGore(this.position, this.velocity, 496, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 497, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 498, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 499, this.scale);
					return;
				}
				else if (this.type == 343)
				{
					if (this.life > 0)
					{
						int num430 = 0;
						while ((double)num430 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num430;
							num430 = num + 1;
						}
						return;
					}
					for (int num431 = 0; num431 < 50; num431 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num431;
					}
					Gore.NewGore(this.position, this.velocity, 503, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 504, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 505, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 506, this.scale);
					return;
				}
				else if ((this.type >= 430 && this.type <= 436) || this.type == 3 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 104 || this.type == 109 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 319 || this.type == 320 || this.type == 321)
				{
					if (this.life > 0)
					{
						int num432 = 0;
						while ((double)num432 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num432;
							num432 = num + 1;
						}
						if (this.type == 186 && Main.rand.Next(5) == 0)
						{
							Gore.NewGore(this.position, this.velocity, 242, 1f);
						}
						if (this.type == 187)
						{
							int num433 = 0;
							while ((double)num433 < dmg / (double)this.lifeMax * 200.0)
							{
								Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
								num = num433;
								num433 = num + 1;
							}
							return;
						}
					}
					else
					{
						for (int num434 = 0; num434 < 50; num434 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							num = num434;
						}
						if (this.type == 187 || this.type == 433)
						{
							for (int num435 = 0; num435 < 25; num435 = num + 1)
							{
								Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
								num = num435;
							}
						}
						if (this.type == 104)
						{
							Gore.NewGore(this.position, this.velocity, 117, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
							return;
						}
						if (this.type == 331)
						{
							Gore.NewGore(this.position, this.velocity, 488, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
							return;
						}
						if (this.type == 332)
						{
							Gore.NewGore(this.position, this.velocity, 491, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
							return;
						}
						if (this.type == 109)
						{
							Gore.NewGore(this.position, this.velocity, 121, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 46f), this.velocity, 120, this.scale);
							return;
						}
						if (this.type == 161 || this.type == 431)
						{
							Gore.NewGore(this.position, this.velocity, 191, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
							return;
						}
						if (this.type == 162)
						{
							Gore.NewGore(this.position, this.velocity, 194, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
							return;
						}
						if (this.type == 188 || this.type == 434)
						{
							Gore.NewGore(this.position, this.velocity, 243, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
							return;
						}
						if (this.type == 200 || this.type == 436)
						{
							Gore.NewGore(this.position, this.velocity, 262, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
							return;
						}
						if (this.type == 319)
						{
							Gore.NewGore(this.position, this.velocity, 451, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
							return;
						}
						if (this.type == 320)
						{
							Gore.NewGore(this.position, this.velocity, 454, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 455, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
							return;
						}
						if (this.type == 321)
						{
							Gore.NewGore(this.position, this.velocity, 457, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
							return;
						}
						if (this.type == 223)
						{
							Gore.NewGore(this.position, this.velocity, 309, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
							return;
						}
						if (this.type == 132)
						{
							Gore.NewGore(this.position, this.velocity, 154, 1f);
						}
						else if (this.type == 186 || this.type == 432)
						{
							Gore.NewGore(this.position, this.velocity, 241, 1f);
						}
						else if (this.type == 189 || this.type == 435)
						{
							Gore.NewGore(this.position, this.velocity, 246, 1f);
						}
						else if (this.type == 251)
						{
							Gore.NewGore(this.position, this.velocity, 372, 1f);
						}
						else if (this.type != 187 && this.type != 433)
						{
							Gore.NewGore(this.position, this.velocity, 3, 1f);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
						if (this.type == 186 || this.type == 432)
						{
							Gore.NewGore(this.position, this.velocity, 242, 1f);
						}
						if ((this.type == 186 || this.type == 432) && Main.rand.Next(2) == 0)
						{
							Gore.NewGore(this.position, this.velocity, 242, 1f);
							return;
						}
					}
				}
				else if (this.type == 83 || this.type == 84 || this.type == 179)
				{
					if (this.life > 0)
					{
						int num436 = 0;
						while ((double)num436 < dmg / (double)this.lifeMax * 50.0)
						{
							int num437 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num437].noGravity = true;
							num = num436;
							num436 = num + 1;
						}
						return;
					}
					for (int num438 = 0; num438 < 20; num438 = num + 1)
					{
						int num439 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num439];
						dust.velocity *= 2f;
						Main.dust[num439].noGravity = true;
						num = num438;
					}
					int num440 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
					Gore gore = Main.gore[num440];
					gore.velocity *= 0.5f;
					num440 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
					gore = Main.gore[num440];
					gore.velocity *= 0.5f;
					num440 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
					gore = Main.gore[num440];
					gore.velocity *= 0.5f;
					return;
				}
				else if (this.type == 262 || this.type == 263 || this.type == 264)
				{
					if (this.life > 0)
					{
						int num441 = 0;
						while ((double)num441 < dmg / (double)this.lifeMax * 100.0)
						{
							if (this.type == 262 && this.life > this.lifeMax / 2 && Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							else if (this.type == 265 && Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							else
							{
								Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							num = num441;
							num441 = num + 1;
						}
						return;
					}
					for (int num442 = 0; num442 < 150; num442 = num + 1)
					{
						if (this.type == 265 && Main.rand.Next(3) != 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 166, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						else
						{
							Dust.NewDust(this.position, this.width, this.height, 167, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						num = num442;
					}
					if (this.type == 262)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 381, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 382, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 383, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 384, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 385, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
					}
					if (this.type == 263)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 390, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 391, this.scale);
					}
					if (this.type == 264)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 388, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 389, this.scale);
						return;
					}
				}
				else if (this.type == 265)
				{
					if (this.life < 0)
					{
						for (int num443 = 0; num443 < 15; num443 = num + 1)
						{
							if (Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							else
							{
								Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							num = num443;
						}
						return;
					}
				}
				else if (this.type == 266)
				{
					if (this.life > 0)
					{
						int num444 = 0;
						while ((double)num444 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num444;
							num444 = num + 1;
						}
						return;
					}
					for (int num445 = 0; num445 < 150; num445 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num445;
					}
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 396, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 397, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 398, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 399, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 400, 1f);
					Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 401, 1f);
					return;
				}
				else if (this.type == 267)
				{
					if (this.life > 0)
					{
						int num446 = 0;
						while ((double)num446 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num446;
							num446 = num + 1;
						}
						return;
					}
					for (int num447 = 0; num447 < 20; num447 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num447;
					}
					Gore.NewGore(this.position, this.velocity, 402, 1f);
					return;
				}
				else if (this.type == 4 || this.type == 126 || this.type == 125)
				{
					if (this.life > 0)
					{
						int num448 = 0;
						while ((double)num448 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num448;
							num448 = num + 1;
						}
						return;
					}
					for (int num449 = 0; num449 < 150; num449 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num449;
					}
					for (int num450 = 0; num450 < 2; num450 = num + 1)
					{
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 2, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 9, 1f);
						if (this.type == 4)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 10, 1f);
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
						}
						else if (this.type == 125)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 146, 1f);
						}
						else if (this.type == 126)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 145, 1f);
						}
						num = num450;
					}
					if (this.type == 125 || this.type == 126)
					{
						for (int num451 = 0; num451 < 10; num451 = num + 1)
						{
							int num452 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num452];
							dust.velocity *= 1.4f;
							num = num451;
						}
						for (int num453 = 0; num453 < 5; num453 = num + 1)
						{
							int num454 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num454].noGravity = true;
							Dust dust = Main.dust[num454];
							dust.velocity *= 5f;
							num454 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num454];
							dust.velocity *= 3f;
							num = num453;
						}
						int num455 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Gore gore = Main.gore[num455];
						gore.velocity *= 0.4f;
						Gore var_324_1550E_cp_0_cp_0 = Main.gore[num455];
						var_324_1550E_cp_0_cp_0.velocity.X = var_324_1550E_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_1553E_cp_0_cp_0 = Main.gore[num455];
						var_324_1553E_cp_0_cp_0.velocity.Y = var_324_1553E_cp_0_cp_0.velocity.Y + 1f;
						num455 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num455];
						gore.velocity *= 0.4f;
						Gore var_324_155E3_cp_0_cp_0 = Main.gore[num455];
						var_324_155E3_cp_0_cp_0.velocity.X = var_324_155E3_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_15613_cp_0_cp_0 = Main.gore[num455];
						var_324_15613_cp_0_cp_0.velocity.Y = var_324_15613_cp_0_cp_0.velocity.Y + 1f;
						num455 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num455];
						gore.velocity *= 0.4f;
						Gore var_324_156B8_cp_0_cp_0 = Main.gore[num455];
						var_324_156B8_cp_0_cp_0.velocity.X = var_324_156B8_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_156E8_cp_0_cp_0 = Main.gore[num455];
						var_324_156E8_cp_0_cp_0.velocity.Y = var_324_156E8_cp_0_cp_0.velocity.Y - 1f;
						num455 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num455];
						gore.velocity *= 0.4f;
						Gore var_324_1578D_cp_0_cp_0 = Main.gore[num455];
						var_324_1578D_cp_0_cp_0.velocity.X = var_324_1578D_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_157BD_cp_0_cp_0 = Main.gore[num455];
						var_324_157BD_cp_0_cp_0.velocity.Y = var_324_157BD_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 5)
				{
					if (this.life > 0)
					{
						int num456 = 0;
						while ((double)num456 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num456;
							num456 = num + 1;
						}
						return;
					}
					for (int num457 = 0; num457 < 20; num457 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num457;
					}
					Gore.NewGore(this.position, this.velocity, 6, 1f);
					Gore.NewGore(this.position, this.velocity, 7, 1f);
					return;
				}
				else if (this.type == 113 || this.type == 114)
				{
					if (this.life > 0)
					{
						for (int num458 = 0; num458 < 20; num458 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num458;
						}
						return;
					}
					for (int num459 = 0; num459 < 50; num459 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -1f, 0, default(Color), 1f);
						num = num459;
					}
					if (this.type == 114)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 139, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 139, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
						return;
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 138, this.scale);
					Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 138, this.scale);
					Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
					if (Main.player[Main.myPlayer].position.Y / 16f > (float)(Main.maxTilesY - 250))
					{
						int num460 = (int)Main.screenPosition.Y;
						int num461 = num460 + Main.screenWidth;
						int num462 = (int)this.position.X;
						if (this.direction > 0)
						{
							num462 -= 80;
						}
						int num463 = num462 + 140;
						int num464 = num462;
						for (int num465 = num460; num465 < num461; num465 += 50)
						{
							while (num464 < num463)
							{
								for (int num466 = 0; num466 < 5; num466 = num + 1)
								{
									Dust.NewDust(new Vector2((float)num464, (float)num465), 32, 32, 5, (float)Main.rand.Next(-60, 61) * 0.1f, (float)Main.rand.Next(-60, 61) * 0.1f, 0, default(Color), 1f);
									num = num466;
								}
								Vector2 velocity4 = new Vector2((float)Main.rand.Next(-80, 81) * 0.1f, (float)Main.rand.Next(-60, 21) * 0.1f);
								Gore.NewGore(new Vector2((float)num464, (float)num465), velocity4, Main.rand.Next(140, 143), 1f);
								num464 += 46;
							}
							num464 = num462;
						}
						return;
					}
				}
				else if (this.type == 115 || this.type == 116)
				{
					if (this.life > 0)
					{
						for (int num467 = 0; num467 < 5; num467 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num467;
						}
						return;
					}
					if (this.type == 115 && Main.netMode != 1)
					{
						NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 116, 0, 0f, 0f, 0f, 0f, 255);
						for (int num468 = 0; num468 < 10; num468 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num468;
						}
						return;
					}
					for (int num469 = 0; num469 < 20; num469 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num469;
					}
					Gore.NewGore(this.position, this.velocity, 132, this.scale);
					Gore.NewGore(this.position, this.velocity, 133, this.scale);
					return;
				}
				else if (this.type >= 117 && this.type <= 119)
				{
					if (this.life > 0)
					{
						for (int num470 = 0; num470 < 5; num470 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num470;
						}
						return;
					}
					for (int num471 = 0; num471 < 10; num471 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num = num471;
					}
					Gore.NewGore(this.position, this.velocity, 134 + this.type - 117, this.scale);
					return;
				}
				else if (this.type == 217 || this.type == 218 || this.type == 219)
				{
					if (this.life > 0)
					{
						int num472 = 0;
						while ((double)num472 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num472;
							num472 = num + 1;
						}
						return;
					}
					for (int num473 = 0; num473 < 50; num473 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num473;
					}
					if (this.type == 217)
					{
						int num474 = Gore.NewGore(this.position, this.velocity, 292, this.scale);
						num474 = Gore.NewGore(this.position, this.velocity, 293, this.scale);
					}
					if (this.type == 218)
					{
						int num474 = Gore.NewGore(this.position, this.velocity, 295, this.scale);
						num474 = Gore.NewGore(this.position, this.velocity, 296, this.scale);
					}
					if (this.type == 219)
					{
						int num474 = Gore.NewGore(this.position, this.velocity, 294, this.scale);
						return;
					}
				}
				else if (this.type == 222)
				{
					if (this.life > 0)
					{
						int num475 = 0;
						while ((double)num475 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num475;
							num475 = num + 1;
						}
						return;
					}
					for (int num476 = 0; num476 < 50; num476 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num476;
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y - 35f), this.velocity, 303, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y - 45f), this.velocity, 304, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 305, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 306, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 307, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 308, this.scale);
					return;
				}
				else if (this.type == 6 || this.type == 94 || this.type == 166)
				{
					if (this.life > 0)
					{
						int num477 = 0;
						while ((double)num477 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num477;
							num477 = num + 1;
						}
						return;
					}
					for (int num478 = 0; num478 < 50; num478 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num478;
					}
					int num479;
					if (this.type == 94)
					{
						num479 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
						num479 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
						num479 = Gore.NewGore(this.position, this.velocity, 109, this.scale);
						num479 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
						return;
					}
					if (this.type == 166)
					{
						num479 = Gore.NewGore(this.position, this.velocity, 209, this.scale);
						num479 = Gore.NewGore(this.position, this.velocity, 210, this.scale);
						num479 = Gore.NewGore(this.position, this.velocity, 211, this.scale);
						return;
					}
					num479 = Gore.NewGore(this.position, this.velocity, 14, this.scale);
					Main.gore[num479].alpha = this.alpha;
					num479 = Gore.NewGore(this.position, this.velocity, 15, this.scale);
					Main.gore[num479].alpha = this.alpha;
					return;
				}
				else if (this.type == 101)
				{
					if (this.life > 0)
					{
						int num480 = 0;
						while ((double)num480 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num480;
							num480 = num + 1;
						}
						return;
					}
					for (int num481 = 0; num481 < 50; num481 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num481;
					}
					int num482 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
					num482 = Gore.NewGore(this.position, this.velocity, 114, this.scale);
					num482 = Gore.NewGore(this.position, this.velocity, 114, this.scale);
					num482 = Gore.NewGore(this.position, this.velocity, 115, this.scale);
					return;
				}
				else if (this.type == 7 || this.type == 8 || this.type == 9)
				{
					if (this.life > 0)
					{
						int num483 = 0;
						while ((double)num483 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num483;
							num483 = num + 1;
						}
						return;
					}
					for (int num484 = 0; num484 < 50; num484 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num484;
					}
					int num485 = Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
					Main.gore[num485].alpha = this.alpha;
					return;
				}
				else if (this.type == 98 || this.type == 99 || this.type == 100)
				{
					if (this.life > 0)
					{
						int num486 = 0;
						while ((double)num486 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num486;
							num486 = num + 1;
						}
						return;
					}
					for (int num487 = 0; num487 < 50; num487 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num487;
					}
					int num488 = Gore.NewGore(this.position, this.velocity, 110, 1f);
					Main.gore[num488].alpha = this.alpha;
					return;
				}
				else if (this.type == 10 || this.type == 11 || this.type == 12)
				{
					if (this.life > 0)
					{
						int num489 = 0;
						while ((double)num489 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num489;
							num489 = num + 1;
						}
						return;
					}
					for (int num490 = 0; num490 < 10; num490 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num490;
					}
					Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
					return;
				}
				else if (this.type == 95 || this.type == 96 || this.type == 97)
				{
					if (this.life > 0)
					{
						int num491 = 0;
						while ((double)num491 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num491;
							num491 = num + 1;
						}
						return;
					}
					for (int num492 = 0; num492 < 10; num492 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num492;
					}
					Gore.NewGore(this.position, this.velocity, this.type - 95 + 111, 1f);
					return;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					if (this.life > 0)
					{
						int num493 = 0;
						while ((double)num493 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
							num = num493;
							num493 = num + 1;
						}
						return;
					}
					for (int num494 = 0; num494 < 50; num494 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						num = num494;
					}
					if (this.type == 13)
					{
						Gore.NewGore(this.position, this.velocity, 24, 1f);
						Gore.NewGore(this.position, this.velocity, 25, 1f);
						return;
					}
					if (this.type == 14)
					{
						Gore.NewGore(this.position, this.velocity, 26, 1f);
						Gore.NewGore(this.position, this.velocity, 27, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 28, 1f);
					Gore.NewGore(this.position, this.velocity, 29, 1f);
					return;
				}
				else if (this.type == 17)
				{
					if (this.life > 0)
					{
						int num495 = 0;
						while ((double)num495 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num495;
							num495 = num + 1;
						}
						return;
					}
					for (int num496 = 0; num496 < 50; num496 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num496;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 30, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
					return;
				}
				else if (this.type == 441)
				{
					if (this.life > 0)
					{
						int num497 = 0;
						while ((double)num497 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num497;
							num497 = num + 1;
						}
						return;
					}
					for (int num498 = 0; num498 < 50; num498 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num498;
					}
					Gore.NewGore(this.position, this.velocity, 768, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 769, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 770, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					return;
				}
				else if (this.type == 86)
				{
					if (this.life > 0)
					{
						int num499 = 0;
						while ((double)num499 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num499;
							num499 = num + 1;
						}
						return;
					}
					for (int num500 = 0; num500 < 50; num500 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num500;
					}
					Gore.NewGore(this.position, this.velocity, 101, 1f);
					Gore.NewGore(this.position, this.velocity, 102, 1f);
					Gore.NewGore(this.position, this.velocity, 103, 1f);
					Gore.NewGore(this.position, this.velocity, 103, 1f);
					Gore.NewGore(this.position, this.velocity, 104, 1f);
					Gore.NewGore(this.position, this.velocity, 104, 1f);
					Gore.NewGore(this.position, this.velocity, 105, 1f);
					return;
				}
				else if (this.type == 155)
				{
					if (this.life > 0)
					{
						int num501 = 0;
						while ((double)num501 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num501;
							num501 = num + 1;
						}
						return;
					}
					for (int num502 = 0; num502 < 50; num502 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num502;
					}
					Gore.NewGore(this.position, this.velocity, 181, 1f);
					Gore.NewGore(this.position, this.velocity, 182, 1f);
					Gore.NewGore(this.position, this.velocity, 183, 1f);
					Gore.NewGore(this.position, this.velocity, 183, 1f);
					return;
				}
				else if (this.type == 329)
				{
					if (this.life > 0)
					{
						int num503 = 0;
						while ((double)num503 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num503;
							num503 = num + 1;
						}
						return;
					}
					for (int num504 = 0; num504 < 50; num504 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num504;
					}
					Gore.NewGore(this.position, this.velocity, 485, 1f);
					Gore.NewGore(this.position, this.velocity, 486, 1f);
					Gore.NewGore(this.position, this.velocity, 487, 1f);
					return;
				}
				else if (this.type == 163 || this.type == 238)
				{
					if (this.life > 0)
					{
						int num505 = 0;
						while ((double)num505 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num505;
							num505 = num + 1;
						}
						return;
					}
					for (int num506 = 0; num506 < 50; num506 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num506;
					}
					Gore.NewGore(this.position, this.velocity, 205, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					Gore.NewGore(this.position, this.velocity, 206, 1f);
					return;
				}
				else if (this.type == 164 || this.type == 165)
				{
					if (this.life > 0)
					{
						int num507 = 0;
						while ((double)num507 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num507;
							num507 = num + 1;
						}
						return;
					}
					for (int num508 = 0; num508 < 50; num508 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num508;
					}
					Gore.NewGore(this.position, this.velocity, 207, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					Gore.NewGore(this.position, this.velocity, 208, 1f);
					return;
				}
				else if (this.type == 239 || this.type == 240)
				{
					if (this.life > 0)
					{
						int num509 = 0;
						while ((double)num509 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num509;
							num509 = num + 1;
						}
						return;
					}
					for (int num510 = 0; num510 < 50; num510 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num510;
					}
					Gore.NewGore(this.position, this.velocity, 351, 1f);
					Gore.NewGore(this.position, this.velocity, 352, 1f);
					Gore.NewGore(this.position, this.velocity, 352, 1f);
					Gore.NewGore(this.position, this.velocity, 353, 1f);
					Gore.NewGore(this.position, this.velocity, 353, 1f);
					return;
				}
				else if (this.type == 236 || this.type == 237)
				{
					if (this.life > 0)
					{
						int num511 = 0;
						while ((double)num511 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num511;
							num511 = num + 1;
						}
						return;
					}
					for (int num512 = 0; num512 < 50; num512 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num512;
					}
					Gore.NewGore(this.position, this.velocity, 332, 1f);
					Gore.NewGore(this.position, this.velocity, 333, 1f);
					Gore.NewGore(this.position, this.velocity, 334, 1f);
					Gore.NewGore(this.position, this.velocity, 335, 1f);
					Gore.NewGore(this.position, this.velocity, 335, 1f);
					return;
				}
				else if (this.type == 241)
				{
					if (this.life > 0)
					{
						int num513 = 0;
						while ((double)num513 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num513;
							num513 = num + 1;
						}
						return;
					}
					for (int num514 = 0; num514 < 50; num514 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num514;
					}
					Gore.NewGore(this.position, this.velocity, 354, 1f);
					Gore.NewGore(this.position, this.velocity, 355, 1f);
					return;
				}
				else if (this.type == 242)
				{
					if (this.life > 0)
					{
						int num515 = 0;
						while ((double)num515 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num515;
							num515 = num + 1;
						}
						return;
					}
					for (int num516 = 0; num516 < 50; num516 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num516;
					}
					Gore.NewGore(this.position, this.velocity, 356, 1f);
					Gore.NewGore(this.position, this.velocity, 357, 1f);
					Gore.NewGore(this.position, this.velocity, 357, 1f);
					Gore.NewGore(this.position, this.velocity, 358, 1f);
					Gore.NewGore(this.position, this.velocity, 358, 1f);
					return;
				}
				else if (this.type >= 105 && this.type <= 108)
				{
					if (this.life > 0)
					{
						int num517 = 0;
						while ((double)num517 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num517;
							num517 = num + 1;
						}
						return;
					}
					for (int num518 = 0; num518 < 50; num518 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num518;
					}
					if (this.type == 105 || this.type == 107)
					{
						Gore.NewGore(this.position, this.velocity, 124, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
						return;
					}
					if (this.altTexture == 0 || this.type == 106)
					{
						Gore.NewGore(this.position, this.velocity, 127, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
					return;
				}
				else if (this.type == 123 || this.type == 124)
				{
					if (this.life > 0)
					{
						int num519 = 0;
						while ((double)num519 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num519;
							num519 = num + 1;
						}
						return;
					}
					for (int num520 = 0; num520 < 50; num520 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num520;
					}
					Gore.NewGore(this.position, this.velocity, 151, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
					return;
				}
				else if (this.type == 22)
				{
					if (this.life > 0)
					{
						int num521 = 0;
						while ((double)num521 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num521;
							num521 = num + 1;
						}
						return;
					}
					for (int num522 = 0; num522 < 50; num522 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num522;
					}
					Gore.NewGore(this.position, this.velocity, 73, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
					return;
				}
				else if (this.type == 550)
				{
					if (this.life > 0)
					{
						int num523 = 0;
						while ((double)num523 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num523;
							num523 = num + 1;
						}
						return;
					}
					for (int num524 = 0; num524 < 50; num524 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num524;
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 0f), this.velocity, 967, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 968, 1f);
					Gore.NewGore(new Vector2(this.position.X + 8f, this.position.Y + 20f), this.velocity, 968, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 969, 1f);
					Gore.NewGore(new Vector2(this.position.X + 8f, this.position.Y + 34f), this.velocity, 969, 1f);
					return;
				}
				else if (this.type == 368)
				{
					if (this.life > 0)
					{
						int num525 = 0;
						while ((double)num525 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num525;
							num525 = num + 1;
						}
						return;
					}
					for (int num526 = 0; num526 < 50; num526 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num526;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 567, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
					return;
				}
				else if (this.type == 369 || this.type == 376)
				{
					if (this.life <= 0)
					{
						for (int num527 = 0; num527 < 25; num527 = num + 1)
						{
							int num528 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
							Dust dust = Main.dust[num528];
							dust.velocity *= 1.4f;
							Main.dust[num528].noLight = true;
							Main.dust[num528].noGravity = true;
							num = num527;
						}
						int num529 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num529].scale = 1f;
						Gore var_324_18941_cp_0_cp_0 = Main.gore[num529];
						var_324_18941_cp_0_cp_0.velocity.X = var_324_18941_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_18971_cp_0_cp_0 = Main.gore[num529];
						var_324_18971_cp_0_cp_0.velocity.Y = var_324_18971_cp_0_cp_0.velocity.Y + 1f;
						num529 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num529].scale = 1f;
						Gore var_324_18A1A_cp_0_cp_0 = Main.gore[num529];
						var_324_18A1A_cp_0_cp_0.velocity.X = var_324_18A1A_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_18A4A_cp_0_cp_0 = Main.gore[num529];
						var_324_18A4A_cp_0_cp_0.velocity.Y = var_324_18A4A_cp_0_cp_0.velocity.Y + 1f;
						num529 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num529].scale = 1f;
						Gore var_324_18AF3_cp_0_cp_0 = Main.gore[num529];
						var_324_18AF3_cp_0_cp_0.velocity.X = var_324_18AF3_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_18B23_cp_0_cp_0 = Main.gore[num529];
						var_324_18B23_cp_0_cp_0.velocity.Y = var_324_18B23_cp_0_cp_0.velocity.Y - 1f;
						num529 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num529].scale = 1f;
						Gore var_324_18BCC_cp_0_cp_0 = Main.gore[num529];
						var_324_18BCC_cp_0_cp_0.velocity.X = var_324_18BCC_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_18BFC_cp_0_cp_0 = Main.gore[num529];
						var_324_18BFC_cp_0_cp_0.velocity.Y = var_324_18BFC_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 227)
				{
					if (this.life > 0)
					{
						int num530 = 0;
						while ((double)num530 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num530;
							num530 = num + 1;
						}
						return;
					}
					for (int num531 = 0; num531 < 50; num531 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num531;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 320, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 321, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 322, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
					return;
				}
				else if (this.type == 228)
				{
					if (this.life > 0)
					{
						int num532 = 0;
						while ((double)num532 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num532;
							num532 = num + 1;
						}
						return;
					}
					for (int num533 = 0; num533 < 50; num533 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num533;
					}
					Gore.NewGore(this.position, this.velocity, 324, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 325, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 326, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
					return;
				}
				else if (this.type == 229)
				{
					if (this.life > 0)
					{
						int num534 = 0;
						while ((double)num534 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num534;
							num534 = num + 1;
						}
						return;
					}
					for (int num535 = 0; num535 < 50; num535 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num535;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 328, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
					return;
				}
				else if (this.type == 142)
				{
					if (this.life > 0)
					{
						int num536 = 0;
						while ((double)num536 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num536;
							num536 = num + 1;
						}
						return;
					}
					for (int num537 = 0; num537 < 50; num537 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num537;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 157, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
					return;
				}
				else if (this.type == 178)
				{
					if (this.life > 0)
					{
						int num538 = 0;
						while ((double)num538 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num538;
							num538 = num + 1;
						}
						return;
					}
					for (int num539 = 0; num539 < 50; num539 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num539;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 231, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 233, 1f);
					return;
				}
				else if (this.type == 353 || this.type == 354)
				{
					if (this.life > 0)
					{
						int num540 = 0;
						while ((double)num540 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num540;
							num540 = num + 1;
						}
						return;
					}
					for (int num541 = 0; num541 < 50; num541 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num541;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 544, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 543, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
					return;
				}
				else if (this.type == 37 || this.type == 54)
				{
					if (this.life > 0)
					{
						int num542 = 0;
						while ((double)num542 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num542;
							num542 = num + 1;
						}
						return;
					}
					for (int num543 = 0; num543 < 50; num543 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num543;
					}
					Gore.NewGore(this.position, this.velocity, 58, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
					return;
				}
				else if (this.type == 441)
				{
					if (this.life > 0)
					{
						int num544 = 0;
						while ((double)num544 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num544;
							num544 = num + 1;
						}
						return;
					}
					for (int num545 = 0; num545 < 50; num545 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num545;
					}
					Gore.NewGore(this.position, this.velocity, 768, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 769, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 770, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
					return;
				}
				else if (this.type == 160)
				{
					if (this.life > 0)
					{
						int num546 = 0;
						while ((double)num546 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num546;
							num546 = num + 1;
						}
						return;
					}
					for (int num547 = 0; num547 < 50; num547 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num547;
					}
					Gore.NewGore(this.position, this.velocity, 188, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
					return;
				}
				else if (this.type == 18)
				{
					if (this.life > 0)
					{
						int num548 = 0;
						while ((double)num548 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num548;
							num548 = num + 1;
						}
						return;
					}
					for (int num549 = 0; num549 < 50; num549 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num549;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 33, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
					return;
				}
				else if (this.type == 19)
				{
					if (this.life > 0)
					{
						int num550 = 0;
						while ((double)num550 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num550;
							num550 = num + 1;
						}
						return;
					}
					for (int num551 = 0; num551 < 50; num551 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num551;
					}
					Gore.NewGore(this.position, this.velocity, 36, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
					return;
				}
				else if (this.type == 38)
				{
					if (this.life > 0)
					{
						int num552 = 0;
						while ((double)num552 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num552;
							num552 = num + 1;
						}
						return;
					}
					for (int num553 = 0; num553 < 50; num553 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num553;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 64, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
					return;
				}
				else if (this.type == 20)
				{
					if (this.life > 0)
					{
						int num554 = 0;
						while ((double)num554 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num554;
							num554 = num + 1;
						}
						return;
					}
					for (int num555 = 0; num555 < 50; num555 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num555;
					}
					Gore.NewGore(this.position, this.velocity, 39, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
					return;
				}
				else if (this.type == 207)
				{
					if (this.life > 0)
					{
						int num556 = 0;
						while ((double)num556 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num556;
							num556 = num + 1;
						}
						return;
					}
					for (int num557 = 0; num557 < 50; num557 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num557;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 283, 1f);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
					return;
				}
				else if (this.type == 208)
				{
					if (this.life > 0)
					{
						int num558 = 0;
						while ((double)num558 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num558;
							num558 = num + 1;
						}
						return;
					}
					for (int num559 = 0; num559 < 50; num559 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num559;
					}
					Gore.NewGore(this.position, this.velocity, 286, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
					return;
				}
				else if (this.type == 209)
				{
					if (this.life > 0)
					{
						int num560 = 0;
						while ((double)num560 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num560;
							num560 = num + 1;
						}
						return;
					}
					for (int num561 = 0; num561 < 50; num561 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num561;
					}
					Gore.NewGore(this.position, this.velocity, 289, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
					return;
				}
				else if (this.type >= 212 && this.type <= 216)
				{
					if (this.life > 0)
					{
						int num562 = 0;
						while ((double)num562 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num562;
							num562 = num + 1;
						}
						return;
					}
					for (int num563 = 0; num563 < 50; num563 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num563;
					}
					if (this.type == 212)
					{
						Gore.NewGore(this.position, this.velocity, 336, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
						return;
					}
					if (this.type == 213)
					{
						Gore.NewGore(this.position, this.velocity, 339, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
						return;
					}
					if (this.type == 214)
					{
						Gore.NewGore(this.position, this.velocity, 342, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
						return;
					}
					if (this.type == 215)
					{
						Gore.NewGore(this.position, this.velocity, 345, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
						return;
					}
					if (this.type == 216)
					{
						Gore.NewGore(this.position, this.velocity, 348, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
						return;
					}
				}
				else if (this.type == 220 || this.type == 221)
				{
					if (this.life > 0)
					{
						int num564 = 0;
						while ((double)num564 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 151, (float)hitDirection, -1f, 0, default(Color), 0.7f);
							num = num564;
							num564 = num + 1;
						}
						return;
					}
					for (int num565 = 0; num565 < 20; num565 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 151, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 0.7f);
						num = num565;
					}
					if (this.type == 221)
					{
						Gore.NewGore(this.position, this.velocity, 298, this.scale);
						Gore.NewGore(this.position, this.velocity, 299, this.scale);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 297, this.scale);
					return;
				}
				else if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 32 || this.type == 44 || this.type == 45 || this.type == 77 || this.type == 110 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 322 && this.type <= 324) || this.type == 481 || (this.type >= 449 && this.type <= 452))
				{
					if (this.life > 0)
					{
						int num566 = 0;
						while ((double)num566 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num566;
							num566 = num + 1;
						}
						return;
					}
					for (int num567 = 0; num567 < 20; num567 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num567;
					}
					if (this.type == 167)
					{
						Gore.NewGore(this.position, this.velocity, 213, this.scale);
						Gore.NewGore(this.position, this.velocity, 214, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						return;
					}
					if (this.type == 197)
					{
						Gore.NewGore(this.position, this.velocity, 257, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
						return;
					}
					if (this.type == 481)
					{
						Gore.NewGore(this.position, this.velocity, 695, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 696, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 696, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 697, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 697, this.scale);
						return;
					}
					if (this.type == 201 || this.type == 450)
					{
						Gore.NewGore(this.position, this.velocity, 265, this.scale);
						Gore.NewGore(this.position, this.velocity, 267, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						return;
					}
					if (this.type == 202 || this.type == 451)
					{
						Gore.NewGore(this.position, this.velocity, 268, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						return;
					}
					if (this.type == 203 || this.type == 452)
					{
						Gore.NewGore(this.position, this.velocity, 269, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
						return;
					}
					if (this.type == 322)
					{
						Gore.NewGore(this.position, this.velocity, 460, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 461, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 462, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 461, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 462, this.scale);
						return;
					}
					if (this.type == 323)
					{
						Gore.NewGore(this.position, this.velocity, 463, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 465, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
						return;
					}
					if (this.type == 324)
					{
						Gore.NewGore(this.position, this.velocity, 466, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 42, this.scale);
					if (this.type == 77)
					{
						Gore.NewGore(this.position, this.velocity, 106, this.scale);
					}
					if (this.type == 110)
					{
						Gore.NewGore(this.position, this.velocity, 130, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					if (this.type == 110)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					return;
				}
				else if (this.type == 453)
				{
					if (this.life > 0)
					{
						int num568 = 0;
						while ((double)num568 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num568;
							num568 = num + 1;
						}
						return;
					}
					for (int num569 = 0; num569 < 20; num569 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num569;
					}
					if (this.altTexture == 0)
					{
						Gore.NewGore(this.position, this.velocity, 638, this.scale);
					}
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 639, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 640, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 641, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 642, this.scale);
					return;
				}
				else if ((this.type >= 269 && this.type <= 276) || (this.type >= 281 && this.type <= 286))
				{
					if (this.life > 0)
					{
						int num570 = 0;
						while ((double)num570 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num570;
							num570 = num + 1;
						}
						return;
					}
					for (int num571 = 0; num571 < 20; num571 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num571;
					}
					Gore.NewGore(this.position, this.velocity, 42, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
					if (this.type == 269)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 406, this.scale);
					}
					if (this.type == 270)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 407, this.scale);
					}
					if (this.type == 271 || this.type == 272)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 408, this.scale);
					}
					if (this.type == 274)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 409, this.scale);
					}
					if (this.type == 276)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 410, this.scale);
						return;
					}
				}
				else if (this.type >= 277 && this.type <= 280)
				{
					if (this.life > 0)
					{
						int num572 = 0;
						while ((double)num572 < dmg / (double)this.lifeMax * 100.0)
						{
							int num573 = Dust.NewDust(this.position, this.width, this.height, 174, (float)hitDirection, -1f, 0, default(Color), 1f);
							Main.dust[num573].scale = 1.1f;
							Main.dust[num573].noGravity = true;
							num = num572;
							num572 = num + 1;
						}
						return;
					}
					for (int num574 = 0; num574 < 75; num574 = num + 1)
					{
						int num575 = Dust.NewDust(this.position, this.width, this.height, 174, 1.5f * (float)hitDirection, -0.5f, 0, default(Color), 1f);
						Dust dust = Main.dust[num575];
						dust.velocity *= 2f;
						Main.dust[num575].scale = 1.4f;
						Main.dust[num575].noGravity = true;
						num = num574;
					}
					return;
				}
				else if (this.type == 341)
				{
					int num576 = 196;
					if (this.life > 0)
					{
						int num577 = 0;
						while ((double)num577 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, num576, 0f, 0f, 0, default(Color), 1f);
							num = num577;
							num577 = num + 1;
						}
						return;
					}
					for (int num578 = 0; num578 < 20; num578 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, num576, 0f, 0f, 0, default(Color), 1f);
						num = num578;
					}
					int num579 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
					Gore gore = Main.gore[num579];
					gore.velocity *= 0.3f;
					num579 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
					gore = Main.gore[num579];
					gore.velocity *= 0.3f;
					num579 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
					gore = Main.gore[num579];
					gore.velocity *= 0.3f;
					return;
				}
				else if (this.type == 85)
				{
					int num580 = 7;
					if (this.ai[3] == 2f)
					{
						num580 = 10;
					}
					if (this.ai[3] == 3f)
					{
						num580 = 37;
					}
					if (this.life > 0)
					{
						int num581 = 0;
						while ((double)num581 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, num580, 0f, 0f, 0, default(Color), 1f);
							num = num581;
							num581 = num + 1;
						}
						return;
					}
					for (int num582 = 0; num582 < 20; num582 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, num580, 0f, 0f, 0, default(Color), 1f);
						num = num582;
					}
					int num583 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
					Gore gore = Main.gore[num583];
					gore.velocity *= 0.3f;
					num583 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
					gore = Main.gore[num583];
					gore.velocity *= 0.3f;
					num583 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
					gore = Main.gore[num583];
					gore.velocity *= 0.3f;
					return;
				}
				else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
				{
					int num584 = 31;
					if (this.life > 0)
					{
						int num585 = 0;
						while ((double)num585 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, num584, 0f, 0f, 0, default(Color), 1f);
							num = num585;
							num585 = num + 1;
						}
						return;
					}
					for (int num586 = 0; num586 < 20; num586 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, num584, 0f, 0f, 0, default(Color), 1f);
						num = num586;
					}
					int num587 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 61, this.scale);
					Gore gore = Main.gore[num587];
					gore.velocity *= 0.3f;
					num587 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 62, this.scale);
					gore = Main.gore[num587];
					gore.velocity *= 0.3f;
					num587 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 63, this.scale);
					gore = Main.gore[num587];
					gore.velocity *= 0.3f;
					return;
				}
				else if (this.type == 169)
				{
					if (this.life > 0)
					{
						int num588 = 0;
						while ((double)num588 < dmg / (double)this.lifeMax * 50.0)
						{
							int num589 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
							Dust dust = Main.dust[num589];
							dust.velocity *= 1.5f;
							Main.dust[num589].noGravity = true;
							num = num588;
							num588 = num + 1;
						}
						return;
					}
					for (int num590 = 0; num590 < 100; num590 = num + 1)
					{
						int num591 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num591].scale = 1.5f;
						Dust dust = Main.dust[num591];
						dust.velocity *= 2f;
						Main.dust[num591].noGravity = true;
						num = num590;
					}
					return;
				}
				else if (this.type == 170 || this.type == 180)
				{
					if (this.life > 0)
					{
						int num592 = 0;
						while ((double)num592 < dmg / (double)this.lifeMax * 50.0)
						{
							int num593 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
							Dust dust = Main.dust[num593];
							dust.velocity *= 1.5f;
							Main.dust[num593].noGravity = true;
							num = num592;
							num592 = num + 1;
						}
						return;
					}
					for (int num594 = 0; num594 < 10; num594 = num + 1)
					{
						int num595 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num595];
						dust.velocity *= 2f;
						Main.dust[num595].noGravity = true;
						num = num594;
					}
					for (int num596 = 0; num596 < 4; num596 = num + 1)
					{
						int num597 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Gore gore = Main.gore[num597];
						gore.velocity *= 0.3f;
						num = num596;
					}
					return;
				}
				else if (this.type == 171)
				{
					if (this.life > 0)
					{
						int num598 = 0;
						while ((double)num598 < dmg / (double)this.lifeMax * 50.0)
						{
							int num599 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Dust dust = Main.dust[num599];
							dust.velocity *= 1.5f;
							Main.dust[num599].noGravity = true;
							num = num598;
							num598 = num + 1;
						}
						return;
					}
					for (int num600 = 0; num600 < 10; num600 = num + 1)
					{
						int num601 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num601];
						dust.velocity *= 2f;
						Main.dust[num601].noGravity = true;
						num = num600;
					}
					for (int num602 = 0; num602 < 4; num602 = num + 1)
					{
						int num603 = 11 + num602;
						if (num603 > 13)
						{
							num603 = Main.rand.Next(11, 14);
						}
						int num604 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), num603, this.scale);
						Gore gore = Main.gore[num604];
						gore.velocity *= 0.3f;
						num = num602;
					}
					return;
				}
				else if (this.type == 290)
				{
					if (this.life <= 0)
					{
						for (int num605 = 0; num605 < 10; num605 = num + 1)
						{
							int num606 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Dust dust = Main.dust[num606];
							dust.velocity *= 2f;
							Main.dust[num606].noGravity = true;
							num = num605;
						}
						int num607 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(11, 14), this.scale);
						Gore gore = Main.gore[num607];
						gore.velocity *= 0.5f;
						num607 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), default(Vector2), Main.rand.Next(11, 14), this.scale);
						gore = Main.gore[num607];
						gore.velocity *= 0.5f;
						num607 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), default(Vector2), Main.rand.Next(11, 14), this.scale);
						gore = Main.gore[num607];
						gore.velocity *= 0.5f;
						return;
					}
				}
				else if (this.type >= 87 && this.type <= 92)
				{
					if (this.life > 0)
					{
						int num608 = 0;
						while ((double)num608 < dmg / (double)this.lifeMax * 50.0)
						{
							int num609 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Dust dust = Main.dust[num609];
							dust.velocity *= 1.5f;
							Main.dust[num609].noGravity = true;
							num = num608;
							num608 = num + 1;
						}
						return;
					}
					for (int num610 = 0; num610 < 10; num610 = num + 1)
					{
						int num611 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num611];
						dust.velocity *= 2f;
						Main.dust[num611].noGravity = true;
						num = num610;
					}
					int num612 = Main.rand.Next(1, 4);
					for (int num613 = 0; num613 < num612; num613 = num + 1)
					{
						int num614 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore = Main.gore[num614];
						gore.velocity *= 0.8f;
						num = num613;
					}
					return;
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					if (this.life > 0)
					{
						int num615 = 0;
						while ((double)num615 < dmg / (double)this.lifeMax * 50.0)
						{
							int num616 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Dust dust = Main.dust[num616];
							dust.velocity *= 2f;
							Main.dust[num616].noGravity = true;
							num = num615;
							num615 = num + 1;
						}
						return;
					}
					for (int num617 = 0; num617 < 20; num617 = num + 1)
					{
						int num618 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
						Dust dust = Main.dust[num618];
						dust.velocity *= 2f;
						Main.dust[num618].noGravity = true;
						num = num617;
					}
					int num619 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
					Gore gore = Main.gore[num619];
					gore.velocity *= 0.3f;
					num619 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
					gore = Main.gore[num619];
					gore.velocity *= 0.3f;
					num619 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
					gore = Main.gore[num619];
					gore.velocity *= 0.3f;
					return;
				}
				else if (this.type == 82 || this.type == 158 || this.type == 159 || this.type == 250 || this.type == 253)
				{
					if (this.life > 0)
					{
						int num620 = 0;
						while ((double)num620 < dmg / (double)this.lifeMax * 50.0)
						{
							int num621 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Dust dust = Main.dust[num621];
							dust.velocity *= 2f;
							Main.dust[num621].noGravity = true;
							num = num620;
							num620 = num + 1;
						}
						return;
					}
					for (int num622 = 0; num622 < 20; num622 = num + 1)
					{
						int num623 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
						Dust dust = Main.dust[num623];
						dust.velocity *= 2f;
						Main.dust[num623].noGravity = true;
						num = num622;
					}
					int num624 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Gore gore = Main.gore[num624];
					gore.velocity *= 0.3f;
					num624 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					gore = Main.gore[num624];
					gore.velocity *= 0.3f;
					num624 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					gore = Main.gore[num624];
					gore.velocity *= 0.3f;
					return;
				}
				else if (this.type == 316 || this.type == 330)
				{
					if (this.life > 0)
					{
						int num625 = 0;
						while ((double)num625 < dmg / (double)this.lifeMax * 100.0)
						{
							int num626 = Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
							Main.dust[num626].noGravity = true;
							num = num625;
							num625 = num + 1;
						}
						return;
					}
					for (int num627 = 0; num627 < 50; num627 = num + 1)
					{
						int num628 = Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
						Main.dust[num628].noGravity = true;
						num = num627;
					}
					return;
				}
				else if (this.type == 315)
				{
					if (this.life > 0)
					{
						int num629 = 0;
						while ((double)num629 < dmg / (double)this.lifeMax * 50.0)
						{
							int num630 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Dust dust = Main.dust[num630];
							dust.velocity *= 2f;
							Main.dust[num630].noGravity = true;
							num = num629;
							num629 = num + 1;
						}
						return;
					}
					for (int num631 = 0; num631 < 20; num631 = num + 1)
					{
						int num632 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
						Dust dust = Main.dust[num632];
						dust.velocity *= 2f;
						Main.dust[num632].noGravity = true;
						num = num631;
					}
					int num633 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					Gore gore = Main.gore[num633];
					gore.velocity *= 0.3f;
					num633 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					gore = Main.gore[num633];
					gore.velocity *= 0.3f;
					num633 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
					gore = Main.gore[num633];
					gore.velocity *= 0.3f;
					num633 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)hitDirection, 0f), 446, this.scale);
					gore = Main.gore[num633];
					gore.velocity *= 0.1f;
					return;
				}
				else if (this.type == 254 || this.type == 255 || this.type == 256 || this.type == 257 || this.type == 258 || this.type == 259 || this.type == 260 || this.type == 261)
				{
					if (this.life > 0)
					{
						int num634 = 0;
						while ((double)num634 < dmg / (double)this.lifeMax * 50.0)
						{
							int num635 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
							Dust dust = Main.dust[num635];
							dust.velocity *= 2f;
							Main.dust[num635].noGravity = true;
							num = num634;
							num634 = num + 1;
						}
						return;
					}
					for (int num636 = 0; num636 < 20; num636 = num + 1)
					{
						int num637 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
						Dust dust = Main.dust[num637];
						dust.velocity *= 2f;
						Main.dust[num637].noGravity = true;
						num = num636;
					}
					if (this.type != 261)
					{
						int num638 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 375, this.scale);
						Gore gore = Main.gore[num638];
						gore.velocity *= 0.3f;
						num638 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 376, this.scale);
						gore = Main.gore[num638];
						gore.velocity *= 0.3f;
						num638 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 377, this.scale);
						gore = Main.gore[num638];
						gore.velocity *= 0.3f;
						return;
					}
				}
				else if (this.type == 140)
				{
					if (this.life <= 0)
					{
						for (int num639 = 0; num639 < 20; num639 = num + 1)
						{
							int num640 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Dust dust = Main.dust[num640];
							dust.velocity *= 2f;
							Main.dust[num640].noGravity = true;
							num = num639;
						}
						int num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Gore gore = Main.gore[num641];
						gore.velocity *= 0.3f;
						num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						gore = Main.gore[num641];
						gore.velocity *= 0.3f;
						num641 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						gore = Main.gore[num641];
						gore.velocity *= 0.3f;
						return;
					}
				}
				else if (this.type == 39 || this.type == 40 || this.type == 41)
				{
					if (this.life > 0)
					{
						int num642 = 0;
						while ((double)num642 < dmg / (double)this.lifeMax * 50.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num642;
							num642 = num + 1;
						}
						return;
					}
					for (int num643 = 0; num643 < 20; num643 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num643;
					}
					Gore.NewGore(this.position, this.velocity, this.type - 39 + 67, 1f);
					return;
				}
				else if (this.type == 34)
				{
					if (this.life > 0)
					{
						int num644 = 0;
						while ((double)num644 < dmg / (double)this.lifeMax * 30.0)
						{
							int num645 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num645].noLight = true;
							Main.dust[num645].noGravity = true;
							Dust dust = Main.dust[num645];
							dust.velocity *= 1.3f;
							num645 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
							Main.dust[num645].noLight = true;
							dust = Main.dust[num645];
							dust.velocity *= 1.3f;
							num = num644;
							num644 = num + 1;
						}
						return;
					}
					for (int num646 = 0; num646 < 15; num646 = num + 1)
					{
						int num647 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
						Main.dust[num647].noLight = true;
						Main.dust[num647].noGravity = true;
						Dust dust = Main.dust[num647];
						dust.velocity *= 1.3f;
						num647 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
						Main.dust[num647].noLight = true;
						dust = Main.dust[num647];
						dust.velocity *= 1.3f;
						num = num646;
					}
					return;
				}
				else if (this.type == 289)
				{
					if (this.life > 0)
					{
						int num648 = 0;
						while ((double)num648 < dmg / (double)this.lifeMax * 30.0)
						{
							int num649 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num649].noLight = true;
							Main.dust[num649].noGravity = true;
							Dust dust = Main.dust[num649];
							dust.velocity *= 1.3f;
							num = num648;
							num648 = num + 1;
						}
						return;
					}
					for (int num650 = 0; num650 < 50; num650 = num + 1)
					{
						int num651 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
						Main.dust[num651].noLight = true;
						Main.dust[num651].noGravity = true;
						Dust dust = Main.dust[num651];
						dust.velocity *= 1.3f;
						num = num650;
					}
					return;
				}
				else if (this.type == 35 || this.type == 36)
				{
					if (this.life > 0)
					{
						int num652 = 0;
						while ((double)num652 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
							num = num652;
							num652 = num + 1;
						}
						return;
					}
					for (int num653 = 0; num653 < 150; num653 = num + 1)
					{
						Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						num = num653;
					}
					if (this.type == 35)
					{
						Gore.NewGore(this.position, this.velocity, 54, 1f);
						Gore.NewGore(this.position, this.velocity, 55, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 56, 1f);
					Gore.NewGore(this.position, this.velocity, 57, 1f);
					Gore.NewGore(this.position, this.velocity, 57, 1f);
					Gore.NewGore(this.position, this.velocity, 57, 1f);
					return;
				}
				else if (this.type == 139)
				{
					if (this.life <= 0)
					{
						for (int num654 = 0; num654 < 10; num654 = num + 1)
						{
							int num655 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num655];
							dust.velocity *= 1.4f;
							num = num654;
						}
						for (int num656 = 0; num656 < 5; num656 = num + 1)
						{
							int num657 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num657].noGravity = true;
							Dust dust = Main.dust[num657];
							dust.velocity *= 5f;
							num657 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num657];
							dust.velocity *= 3f;
							num = num656;
						}
						int num658 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Gore gore = Main.gore[num658];
						gore.velocity *= 0.4f;
						Gore var_324_1EF01_cp_0_cp_0 = Main.gore[num658];
						var_324_1EF01_cp_0_cp_0.velocity.X = var_324_1EF01_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_1EF31_cp_0_cp_0 = Main.gore[num658];
						var_324_1EF31_cp_0_cp_0.velocity.Y = var_324_1EF31_cp_0_cp_0.velocity.Y + 1f;
						num658 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num658];
						gore.velocity *= 0.4f;
						Gore var_324_1EFD6_cp_0_cp_0 = Main.gore[num658];
						var_324_1EFD6_cp_0_cp_0.velocity.X = var_324_1EFD6_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_1F006_cp_0_cp_0 = Main.gore[num658];
						var_324_1F006_cp_0_cp_0.velocity.Y = var_324_1F006_cp_0_cp_0.velocity.Y + 1f;
						num658 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num658];
						gore.velocity *= 0.4f;
						Gore var_324_1F0AB_cp_0_cp_0 = Main.gore[num658];
						var_324_1F0AB_cp_0_cp_0.velocity.X = var_324_1F0AB_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_1F0DB_cp_0_cp_0 = Main.gore[num658];
						var_324_1F0DB_cp_0_cp_0.velocity.Y = var_324_1F0DB_cp_0_cp_0.velocity.Y - 1f;
						num658 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num658];
						gore.velocity *= 0.4f;
						Gore var_324_1F180_cp_0_cp_0 = Main.gore[num658];
						var_324_1F180_cp_0_cp_0.velocity.X = var_324_1F180_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_1F1B0_cp_0_cp_0 = Main.gore[num658];
						var_324_1F1B0_cp_0_cp_0.velocity.Y = var_324_1F1B0_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 467)
				{
					if (this.life <= 0)
					{
						for (int num659 = 0; num659 < 7; num659 = num + 1)
						{
							int num660 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num660];
							dust.velocity *= 1.4f;
							num = num659;
						}
						for (int num661 = 0; num661 < 3; num661 = num + 1)
						{
							int num662 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num662].noGravity = true;
							Dust dust = Main.dust[num662];
							dust.velocity *= 5f;
							num662 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num662];
							dust.velocity *= 3f;
							num = num661;
						}
						Gore.NewGore(this.position, this.velocity, 660, 1f);
						Gore.NewGore(this.position, this.velocity, 660, 1f);
						return;
					}
				}
				else if (this.type >= 134 && this.type <= 136)
				{
					if (this.type == 135 && this.life > 0 && Main.netMode != 1 && this.ai[2] == 0f && Main.rand.Next(25) == 0)
					{
						this.ai[2] = 1f;
						int num663 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 139, 0, 0f, 0f, 0f, 0f, 255);
						if (Main.netMode == 2 && num663 < 200)
						{
							NetMessage.SendData(23, -1, -1, null, num663, 0f, 0f, 0f, 0, 0, 0);
						}
						this.netUpdate = true;
					}
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 156, 1f);
						if (Main.rand.Next(2) == 0)
						{
							for (int num664 = 0; num664 < 10; num664 = num + 1)
							{
								int num665 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Dust dust = Main.dust[num665];
								dust.velocity *= 1.4f;
								num = num664;
							}
							for (int num666 = 0; num666 < 5; num666 = num + 1)
							{
								int num667 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num667].noGravity = true;
								Dust dust = Main.dust[num667];
								dust.velocity *= 5f;
								num667 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								dust = Main.dust[num667];
								dust.velocity *= 3f;
								num = num666;
							}
							int num668 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Gore gore = Main.gore[num668];
							gore.velocity *= 0.4f;
							Gore var_324_1F76B_cp_0_cp_0 = Main.gore[num668];
							var_324_1F76B_cp_0_cp_0.velocity.X = var_324_1F76B_cp_0_cp_0.velocity.X + 1f;
							Gore var_324_1F79B_cp_0_cp_0 = Main.gore[num668];
							var_324_1F79B_cp_0_cp_0.velocity.Y = var_324_1F79B_cp_0_cp_0.velocity.Y + 1f;
							num668 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							gore = Main.gore[num668];
							gore.velocity *= 0.4f;
							Gore var_324_1F840_cp_0_cp_0 = Main.gore[num668];
							var_324_1F840_cp_0_cp_0.velocity.X = var_324_1F840_cp_0_cp_0.velocity.X - 1f;
							Gore var_324_1F870_cp_0_cp_0 = Main.gore[num668];
							var_324_1F870_cp_0_cp_0.velocity.Y = var_324_1F870_cp_0_cp_0.velocity.Y + 1f;
							num668 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							gore = Main.gore[num668];
							gore.velocity *= 0.4f;
							Gore var_324_1F915_cp_0_cp_0 = Main.gore[num668];
							var_324_1F915_cp_0_cp_0.velocity.X = var_324_1F915_cp_0_cp_0.velocity.X + 1f;
							Gore var_324_1F945_cp_0_cp_0 = Main.gore[num668];
							var_324_1F945_cp_0_cp_0.velocity.Y = var_324_1F945_cp_0_cp_0.velocity.Y - 1f;
							num668 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							gore = Main.gore[num668];
							gore.velocity *= 0.4f;
							Gore var_324_1F9EA_cp_0_cp_0 = Main.gore[num668];
							var_324_1F9EA_cp_0_cp_0.velocity.X = var_324_1F9EA_cp_0_cp_0.velocity.X - 1f;
							Gore var_324_1FA1A_cp_0_cp_0 = Main.gore[num668];
							var_324_1FA1A_cp_0_cp_0.velocity.Y = var_324_1FA1A_cp_0_cp_0.velocity.Y - 1f;
							return;
						}
					}
				}
				else if (this.type == 347)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 524, 1f);
						Gore.NewGore(this.position, this.velocity, 525, 1f);
						Gore.NewGore(this.position, this.velocity, 526, 1f);
						Gore.NewGore(this.position, this.velocity, 527, 1f);
						for (int num669 = 0; num669 < 7; num669 = num + 1)
						{
							int num670 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num670];
							dust.velocity *= 1.4f;
							num = num669;
						}
						for (int num671 = 0; num671 < 4; num671 = num + 1)
						{
							int num672 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num672].noGravity = true;
							Dust dust = Main.dust[num672];
							dust.velocity *= 5f;
							num672 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num672];
							dust.velocity *= 3f;
							num = num671;
						}
						int num673 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Gore gore = Main.gore[num673];
						gore.velocity *= 0.4f;
						Gore var_324_1FD0B_cp_0_cp_0 = Main.gore[num673];
						var_324_1FD0B_cp_0_cp_0.velocity.X = var_324_1FD0B_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_1FD3B_cp_0_cp_0 = Main.gore[num673];
						var_324_1FD3B_cp_0_cp_0.velocity.Y = var_324_1FD3B_cp_0_cp_0.velocity.Y + 1f;
						num673 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num673];
						gore.velocity *= 0.4f;
						Gore var_324_1FDE0_cp_0_cp_0 = Main.gore[num673];
						var_324_1FDE0_cp_0_cp_0.velocity.X = var_324_1FDE0_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_1FE10_cp_0_cp_0 = Main.gore[num673];
						var_324_1FE10_cp_0_cp_0.velocity.Y = var_324_1FE10_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 346)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 518, 1f);
						Gore.NewGore(this.position, this.velocity, 519, 1f);
						Gore.NewGore(this.position, this.velocity, 520, 1f);
						Gore.NewGore(this.position, this.velocity, 521, 1f);
						Gore.NewGore(this.position, this.velocity, 522, 1f);
						Gore.NewGore(this.position, this.velocity, 523, 1f);
						for (int num674 = 0; num674 < 10; num674 = num + 1)
						{
							int num675 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num675];
							dust.velocity *= 1.4f;
							num = num674;
						}
						for (int num676 = 0; num676 < 5; num676 = num + 1)
						{
							int num677 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num677].noGravity = true;
							Dust dust = Main.dust[num677];
							dust.velocity *= 5f;
							num677 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num677];
							dust.velocity *= 3f;
							num = num676;
						}
						int num678 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Gore gore = Main.gore[num678];
						gore.velocity *= 0.4f;
						Gore var_324_2013A_cp_0_cp_0 = Main.gore[num678];
						var_324_2013A_cp_0_cp_0.velocity.X = var_324_2013A_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_2016A_cp_0_cp_0 = Main.gore[num678];
						var_324_2016A_cp_0_cp_0.velocity.Y = var_324_2016A_cp_0_cp_0.velocity.Y + 1f;
						num678 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num678];
						gore.velocity *= 0.4f;
						Gore var_324_2020F_cp_0_cp_0 = Main.gore[num678];
						var_324_2020F_cp_0_cp_0.velocity.X = var_324_2020F_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_2023F_cp_0_cp_0 = Main.gore[num678];
						var_324_2023F_cp_0_cp_0.velocity.Y = var_324_2023F_cp_0_cp_0.velocity.Y + 1f;
						num678 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num678];
						gore.velocity *= 0.4f;
						Gore var_324_202E4_cp_0_cp_0 = Main.gore[num678];
						var_324_202E4_cp_0_cp_0.velocity.X = var_324_202E4_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_20314_cp_0_cp_0 = Main.gore[num678];
						var_324_20314_cp_0_cp_0.velocity.Y = var_324_20314_cp_0_cp_0.velocity.Y - 1f;
						num678 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num678];
						gore.velocity *= 0.4f;
						Gore var_324_203B9_cp_0_cp_0 = Main.gore[num678];
						var_324_203B9_cp_0_cp_0.velocity.X = var_324_203B9_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_203E9_cp_0_cp_0 = Main.gore[num678];
						var_324_203E9_cp_0_cp_0.velocity.Y = var_324_203E9_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 127)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 149, 1f);
						Gore.NewGore(this.position, this.velocity, 150, 1f);
						for (int num679 = 0; num679 < 10; num679 = num + 1)
						{
							int num680 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num680];
							dust.velocity *= 1.4f;
							num = num679;
						}
						for (int num681 = 0; num681 < 5; num681 = num + 1)
						{
							int num682 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num682].noGravity = true;
							Dust dust = Main.dust[num682];
							dust.velocity *= 5f;
							num682 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num682];
							dust.velocity *= 3f;
							num = num681;
						}
						int num683 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Gore gore = Main.gore[num683];
						gore.velocity *= 0.4f;
						Gore var_324_206A0_cp_0_cp_0 = Main.gore[num683];
						var_324_206A0_cp_0_cp_0.velocity.X = var_324_206A0_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_206D0_cp_0_cp_0 = Main.gore[num683];
						var_324_206D0_cp_0_cp_0.velocity.Y = var_324_206D0_cp_0_cp_0.velocity.Y + 1f;
						num683 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num683];
						gore.velocity *= 0.4f;
						Gore var_324_20775_cp_0_cp_0 = Main.gore[num683];
						var_324_20775_cp_0_cp_0.velocity.X = var_324_20775_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_207A5_cp_0_cp_0 = Main.gore[num683];
						var_324_207A5_cp_0_cp_0.velocity.Y = var_324_207A5_cp_0_cp_0.velocity.Y + 1f;
						num683 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num683];
						gore.velocity *= 0.4f;
						Gore var_324_2084A_cp_0_cp_0 = Main.gore[num683];
						var_324_2084A_cp_0_cp_0.velocity.X = var_324_2084A_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_2087A_cp_0_cp_0 = Main.gore[num683];
						var_324_2087A_cp_0_cp_0.velocity.Y = var_324_2087A_cp_0_cp_0.velocity.Y - 1f;
						num683 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num683];
						gore.velocity *= 0.4f;
						Gore var_324_2091F_cp_0_cp_0 = Main.gore[num683];
						var_324_2091F_cp_0_cp_0.velocity.X = var_324_2091F_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_2094F_cp_0_cp_0 = Main.gore[num683];
						var_324_2094F_cp_0_cp_0.velocity.Y = var_324_2094F_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type >= 128 && this.type <= 131)
				{
					if (this.life <= 0)
					{
						Gore.NewGore(this.position, this.velocity, 147, 1f);
						Gore.NewGore(this.position, this.velocity, 148, 1f);
						for (int num684 = 0; num684 < 10; num684 = num + 1)
						{
							int num685 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
							Dust dust = Main.dust[num685];
							dust.velocity *= 1.4f;
							num = num684;
						}
						for (int num686 = 0; num686 < 5; num686 = num + 1)
						{
							int num687 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num687].noGravity = true;
							Dust dust = Main.dust[num687];
							dust.velocity *= 5f;
							num687 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
							dust = Main.dust[num687];
							dust.velocity *= 3f;
							num = num686;
						}
						int num688 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Gore gore = Main.gore[num688];
						gore.velocity *= 0.4f;
						Gore var_324_20C19_cp_0_cp_0 = Main.gore[num688];
						var_324_20C19_cp_0_cp_0.velocity.X = var_324_20C19_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_20C49_cp_0_cp_0 = Main.gore[num688];
						var_324_20C49_cp_0_cp_0.velocity.Y = var_324_20C49_cp_0_cp_0.velocity.Y + 1f;
						num688 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num688];
						gore.velocity *= 0.4f;
						Gore var_324_20CEE_cp_0_cp_0 = Main.gore[num688];
						var_324_20CEE_cp_0_cp_0.velocity.X = var_324_20CEE_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_20D1E_cp_0_cp_0 = Main.gore[num688];
						var_324_20D1E_cp_0_cp_0.velocity.Y = var_324_20D1E_cp_0_cp_0.velocity.Y + 1f;
						num688 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num688];
						gore.velocity *= 0.4f;
						Gore var_324_20DC3_cp_0_cp_0 = Main.gore[num688];
						var_324_20DC3_cp_0_cp_0.velocity.X = var_324_20DC3_cp_0_cp_0.velocity.X + 1f;
						Gore var_324_20DF3_cp_0_cp_0 = Main.gore[num688];
						var_324_20DF3_cp_0_cp_0.velocity.Y = var_324_20DF3_cp_0_cp_0.velocity.Y - 1f;
						num688 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						gore = Main.gore[num688];
						gore.velocity *= 0.4f;
						Gore var_324_20E98_cp_0_cp_0 = Main.gore[num688];
						var_324_20E98_cp_0_cp_0.velocity.X = var_324_20E98_cp_0_cp_0.velocity.X - 1f;
						Gore var_324_20EC8_cp_0_cp_0 = Main.gore[num688];
						var_324_20EC8_cp_0_cp_0.velocity.Y = var_324_20EC8_cp_0_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else if (this.type == 23)
				{
					if (this.life > 0)
					{
						int num689 = 0;
						while ((double)num689 < dmg / (double)this.lifeMax * 100.0)
						{
							int num690 = 25;
							if (Main.rand.Next(2) == 0)
							{
								num690 = 6;
							}
							Dust.NewDust(this.position, this.width, this.height, num690, (float)hitDirection, -1f, 0, default(Color), 1f);
							int num691 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num691].noGravity = true;
							num = num689;
							num689 = num + 1;
						}
						return;
					}
					for (int num692 = 0; num692 < 50; num692 = num + 1)
					{
						int num693 = 25;
						if (Main.rand.Next(2) == 0)
						{
							num693 = 6;
						}
						Dust.NewDust(this.position, this.width, this.height, num693, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						num = num692;
					}
					for (int num694 = 0; num694 < 50; num694 = num + 1)
					{
						int num695 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
						Dust dust = Main.dust[num695];
						dust.velocity *= 6f;
						Main.dust[num695].noGravity = true;
						num = num694;
					}
					return;
				}
				else if (this.type == 24)
				{
					if (this.life > 0)
					{
						int num696 = 0;
						while ((double)num696 < dmg / (double)this.lifeMax * 100.0)
						{
							int num697 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
							Main.dust[num697].noGravity = true;
							num = num696;
							num696 = num + 1;
						}
						return;
					}
					for (int num698 = 0; num698 < 50; num698 = num + 1)
					{
						int num699 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
						Main.dust[num699].noGravity = true;
						Dust dust = Main.dust[num699];
						dust.velocity *= 2f;
						num = num698;
					}
					Gore.NewGore(this.position, this.velocity, 45, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
					return;
				}
				else
				{
					if (this.type == 25)
					{
						Main.PlaySound(SoundID.Item10, this.position);
						for (int num700 = 0; num700 < 20; num700 = num + 1)
						{
							int num701 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num701].noGravity = true;
							Dust dust = Main.dust[num701];
							dust.velocity *= 2f;
							num701 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
							dust = Main.dust[num701];
							dust.velocity *= 2f;
							num = num700;
						}
						return;
					}
					if (this.type == 33)
					{
						Main.PlaySound(SoundID.Item10, this.position);
						for (int num702 = 0; num702 < 20; num702 = num + 1)
						{
							int num703 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
							Main.dust[num703].noGravity = true;
							Dust dust = Main.dust[num703];
							dust.velocity *= 2f;
							num703 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 0.6f);
							dust = Main.dust[num703];
							dust.velocity *= 2f;
							num = num702;
						}
						return;
					}
					if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 73 || this.type == 111)
					{
						if (this.life > 0)
						{
							int num704 = 0;
							while ((double)num704 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num = num704;
								num704 = num + 1;
							}
							return;
						}
						for (int num705 = 0; num705 < 50; num705 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							num = num705;
						}
						int num706 = 48;
						int num707 = 49;
						int num708 = 50;
						if (this.type == 111)
						{
							num706 = 623;
							num707 = 624;
							num708 = 625;
						}
						else if (this.type == 26)
						{
							num706 = 626;
							num707 = 627;
							num708 = 628;
						}
						else if (this.type == 73)
						{
							num706 = 629;
							num707 = 630;
							num708 = 631;
						}
						else if (this.type == 27)
						{
							num706 = 632;
							num707 = 633;
							num708 = 634;
						}
						else if (this.type == 28)
						{
							num706 = 635;
							num707 = 636;
							num708 = 637;
						}
						Gore.NewGore(this.position, this.velocity, num706, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num707, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num707, this.scale);
						if (this.type == 111)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num708, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num708, this.scale);
						return;
					}
					else if (this.type == 471)
					{
						if (this.life > 0)
						{
							int num709 = 0;
							while ((double)num709 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num = num709;
								num709 = num + 1;
							}
							return;
						}
						for (int num710 = 0; num710 < 50; num710 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							num = num710;
						}
						Gore.NewGore(this.position, this.velocity, 675, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 676, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 677, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 678, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 678, this.scale);
						return;
					}
					else if (this.type == 472)
					{
						if (this.life > 0)
						{
							int num711 = 0;
							while ((double)num711 < dmg / (double)this.lifeMax * 100.0)
							{
								int num712 = Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								if (Main.rand.Next(3) != 0)
								{
									Main.dust[num712].noGravity = true;
								}
								Main.dust[num712].alpha = 100;
								num = num711;
								num711 = num + 1;
							}
							return;
						}
						for (int num713 = 0; num713 < 50; num713 = num + 1)
						{
							int num714 = Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							if (Main.rand.Next(3) != 0)
							{
								Main.dust[num714].noGravity = true;
							}
							Main.dust[num714].alpha = 100;
							num = num713;
						}
						Gore.NewGore(this.position, this.velocity, 679, this.scale);
						Gore.NewGore(this.position, this.velocity, 680, this.scale);
						return;
					}
					else if (this.type == 480)
					{
						if (this.life > 0)
						{
							int num715 = 0;
							while ((double)num715 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num = num715;
								num715 = num + 1;
							}
							return;
						}
						for (int num716 = 0; num716 < 50; num716 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							num = num716;
						}
						Gore.NewGore(this.position, this.velocity, 692, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 693, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 693, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 694, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 694, this.scale);
						return;
					}
					else if (this.type == 185)
					{
						if (this.life > 0)
						{
							int num717 = 0;
							while ((double)num717 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num = num717;
								num717 = num + 1;
							}
							return;
						}
						for (int num718 = 0; num718 < 50; num718 = num + 1)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							num = num718;
						}
						Gore.NewGore(this.position, this.velocity, 240, this.scale);
						return;
					}
					else
					{
						if (this.type == 30)
						{
							Main.PlaySound(SoundID.Item10, this.position);
							for (int num719 = 0; num719 < 20; num719 = num + 1)
							{
								int num720 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
								Main.dust[num720].noGravity = true;
								Dust dust = Main.dust[num720];
								dust.velocity *= 2f;
								num720 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
								dust = Main.dust[num720];
								dust.velocity *= 2f;
								num = num719;
							}
							return;
						}
						if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
						{
							if (this.life > 0)
							{
								int num721 = 0;
								while ((double)num721 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
									num = num721;
									num721 = num + 1;
								}
								return;
							}
							for (int num722 = 0; num722 < 50; num722 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
								num = num722;
							}
							if (this.type == 205)
							{
								Gore.NewGore(this.position, this.velocity, 270, this.scale);
								Gore.NewGore(this.position, this.velocity, 271, this.scale);
								Gore.NewGore(this.position, this.velocity, 271, this.scale);
								Gore.NewGore(this.position, this.velocity, 272, this.scale);
								return;
							}
							if (this.type == 176)
							{
								Gore.NewGore(this.position, this.velocity, 229, this.scale);
								Gore.NewGore(this.position, this.velocity, 230, this.scale);
								return;
							}
							Gore.NewGore(this.position, this.velocity, 70, this.scale);
							Gore.NewGore(this.position, this.velocity, 71, this.scale);
							return;
						}
						else if (this.type == 43 || this.type == 56)
						{
							if (this.life > 0)
							{
								int num723 = 0;
								while ((double)num723 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
									num = num723;
									num723 = num + 1;
								}
								return;
							}
							for (int num724 = 0; num724 < 50; num724 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
								num = num724;
							}
							Gore.NewGore(this.position, this.velocity, 72, 1f);
							Gore.NewGore(this.position, this.velocity, 72, 1f);
							return;
						}
						else if (this.type == 175)
						{
							if (this.life > 0)
							{
								int num725 = 0;
								while ((double)num725 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
									num = num725;
									num725 = num + 1;
								}
								return;
							}
							for (int num726 = 0; num726 < 50; num726 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
								num = num726;
							}
							Gore.NewGore(this.position, this.velocity, 227, 1f);
							Gore.NewGore(this.position, this.velocity, 228, 1f);
							return;
						}
						else if (this.type == 48)
						{
							if (this.life > 0)
							{
								int num727 = 0;
								while ((double)num727 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num = num727;
									num727 = num + 1;
								}
								return;
							}
							for (int num728 = 0; num728 < 50; num728 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								num = num728;
							}
							Gore.NewGore(this.position, this.velocity, 80, 1f);
							Gore.NewGore(this.position, this.velocity, 81, 1f);
							return;
						}
						else if (this.type == 62 || this.type == 66)
						{
							if (this.life > 0)
							{
								int num729 = 0;
								while ((double)num729 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num = num729;
									num729 = num + 1;
								}
								return;
							}
							for (int num730 = 0; num730 < 50; num730 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								num = num730;
							}
							Gore.NewGore(this.position, this.velocity, 93, 1f);
							Gore.NewGore(this.position, this.velocity, 94, 1f);
							Gore.NewGore(this.position, this.velocity, 94, 1f);
							return;
						}
						else if (this.type == 156)
						{
							if (this.life > 0)
							{
								int num731 = 0;
								while ((double)num731 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num = num731;
									num731 = num + 1;
								}
								return;
							}
							for (int num732 = 0; num732 < 50; num732 = num + 1)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								num = num732;
							}
							Gore.NewGore(this.position, this.velocity, 184, 1f);
							Gore.NewGore(this.position, this.velocity, 185, 1f);
							Gore.NewGore(this.position, this.velocity, 185, 1f);
						}
					}
				}
				return;
			}
			Color newColor = new Color(50, 120, 255, 100);
			if (this.type == 64)
			{
				newColor = new Color(225, 70, 140, 100);
			}
			if (this.type == 103)
			{
				newColor = new Color(70, 225, 140, 100);
			}
			if (this.life > 0)
			{
				int num733 = 0;
				while ((double)num733 < dmg / (double)this.lifeMax * 50.0)
				{
					Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 0, newColor, 1f);
					num = num733;
					num733 = num + 1;
				}
				return;
			}
			for (int num734 = 0; num734 < 25; num734 = num + 1)
			{
				Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 0, newColor, 1f);
				num = num734;
			}
		}

		// Token: 0x06000280 RID: 640 RVA: 0x001CC624 File Offset: 0x001CA824
		public void IdleSounds()
		{
			if ((this.type == 239 || this.type == 240) && Main.rand.Next(900) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(24, 26), 1f, 0f);
				return;
			}
			if ((this.type == 62 || this.type == 156) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(26, 30), 1f, 0f);
				return;
			}
			if (this.type == 177 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(30, 32), 1f, 0f);
				return;
			}
			if (this.type == 226 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 32, 1f, 0f);
				return;
			}
			if (this.type == 153 && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 33, 1f, 0f);
				return;
			}
			if (this.wet && (this.type == 63 || this.type == 64 || this.type == 103) && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(34, 36), 1f, 0f);
				return;
			}
			if ((this.type == 198 || this.type == 199) && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(36, 38), 1f, 0f);
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(38, 41), 1f, 0f);
				return;
			}
			if (this.type == 250 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(41, 44), 1f, 0f);
				return;
			}
			if (this.type == 508 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 44, 1f, 0f);
				return;
			}
			if (this.type == 509 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(44, 47), 1f, 0f);
				return;
			}
			if (this.type == 494 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 47, 1f, 0f);
				return;
			}
			if (this.type == 467 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(48, 50), 1f, 0f);
				return;
			}
			if (this.type == 468 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(50, 53), 1f, 0f);
				return;
			}
			if (this.type == 288 && Main.rand.Next(400) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(53, 55), 1f, 0f);
				return;
			}
			if ((this.type == 524 || this.type == 525 || this.type == 526 || this.type == 527) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(55, 57), 1f, 0f);
				return;
			}
			if ((this.type == 496 || this.type == 497) && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(57, 59), 1f, 0f);
				return;
			}
			if (this.type == 389 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(59, 61), 1f, 0f);
				return;
			}
			if (this.type == 471 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(61, 63), 1f, 0f);
				return;
			}
			if (this.type == 482 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(63, 66), 1f, 0f);
				return;
			}
			if (this.type == 388 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(66, 69), 1f, 0f);
				return;
			}
			if (this.type == 520 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(69, 73), 1f, 0f);
				return;
			}
			if (this.type == 477 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 73, 1f, 0f);
				return;
			}
			if (this.type == 258 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(74, 78), 1f, 0f);
				return;
			}
			if (this.type == 252 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 78, 1f, 0f);
				return;
			}
			if (this.type == 469 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(79, 81), 1f, 0f);
				return;
			}
			if ((this.type == 253 || this.type == 82) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(81, 84), 1f, 0f);
				return;
			}
			if (this.type >= 498 && this.type <= 506 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(84, 86), 1f, 0f);
				return;
			}
			if (this.type == 391 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(86, 87), 1f, 0f);
			}
		}

		// Token: 0x06000231 RID: 561 RVA: 0x00101CFB File Offset: 0x000FFEFB
		private void LazySetLiquidMovementDD2()
		{
			this.waterMovementSpeed = 1f;
			this.lavaMovementSpeed = 1f;
			this.honeyMovementSpeed = 1f;
		}

		// Token: 0x06000227 RID: 551 RVA: 0x000ED4A0 File Offset: 0x000EB6A0
		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == type)
				{
					num++;
					Vector2 vector = new Vector2(x, y);
					float arg_6B_0 = Main.npc[i].position.X - vector.X;
					float num4 = Main.npc[i].position.Y - vector.Y;
					float expr_7A = (float)Math.Sqrt((double)(arg_6B_0 * arg_6B_0 + num4 * num4));
					if (expr_7A < 200f)
					{
						num2++;
					}
					if (expr_7A < 600f)
					{
						num3++;
					}
				}
			}
			return num2 < 3 && num3 < 6 && num < 10;
		}

		// Token: 0x0600027F RID: 639 RVA: 0x001CC564 File Offset: 0x001CA764
		public void moneyPing(Vector2 pos)
		{
			Main.PlaySound(38, pos, 1);
			int num = 244;
			if (this.extraValue >= 1000000f)
			{
				num = 247;
			}
			else if (this.extraValue >= 10000f)
			{
				num = 246;
			}
			else if (this.extraValue >= 100f)
			{
				num = 245;
			}
			for (int i = 0; i < 20; i++)
			{
				int num2 = Dust.NewDust(pos - new Vector2(1f, 2f), 10, 14, num, 0f, 0f, 254, default(Color), 0.25f);
				Main.dust[num2].velocity *= 0.2f;
			}
		}

		// Token: 0x06000279 RID: 633 RVA: 0x001CC2A0 File Offset: 0x001CA4A0
		public static bool NearSpikeBall(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].aiStyle == 20)
				{
					Rectangle rectangle2 = new Rectangle((int)Main.npc[i].ai[1], (int)Main.npc[i].ai[2], 20, 20);
					if (rectangle.Intersects(rectangle2))
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x0600026E RID: 622 RVA: 0x001A861C File Offset: 0x001A681C
		public static int NewNPC(int X, int Y, int Type, int Start = 0, float ai0 = 0f, float ai1 = 0f, float ai2 = 0f, float ai3 = 0f, int Target = 255)
		{
			int num = -1;
			if (Type == 222)
			{
				for (int i = 199; i >= 0; i--)
				{
					if (!Main.npc[i].active)
					{
						num = i;
						break;
					}
				}
			}
			else
			{
				for (int j = Start; j < 200; j++)
				{
					if (!Main.npc[j].active)
					{
						num = j;
						break;
					}
				}
			}
			if (num >= 0)
			{
				Main.npc[num] = new NPC();
				Main.npc[num].SetDefaults(Type, -1f);
				if (NPC.TypeToHeadIndex(Type) != -1 || Type == 453)
				{
					Main.npc[num].GivenName = NPC.getNewNPCName(Type);
				}
				Main.npc[num].position.X = (float)(X - Main.npc[num].width / 2);
				Main.npc[num].position.Y = (float)(Y - Main.npc[num].height);
				Main.npc[num].active = true;
				Main.npc[num].timeLeft = (int)((double)NPC.activeTime * 1.25);
				Main.npc[num].wet = Collision.WetCollision(Main.npc[num].position, Main.npc[num].width, Main.npc[num].height);
				Main.npc[num].ai[0] = ai0;
				Main.npc[num].ai[1] = ai1;
				Main.npc[num].ai[2] = ai2;
				Main.npc[num].ai[3] = ai3;
				Main.npc[num].target = Target;
                Console.WriteLine("NewNPC {0}", Main.npc[num].GivenName);
                Main.instance.L.DoString("OnNpcSpawn()");
				if (Type == 50)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Language.GetTextValue("Announcement.HasAwoken", Main.npc[num].TypeName), 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.BroadcastChatMessage(NetworkText.FromKey("Announcement.HasAwoken", new object[]
						{
							Main.npc[num].GetTypeNetName()
						}), new Color(175, 75, 255), -1);
					}
				}
				return num;
			}
			return 200;
		}

		// Token: 0x0600025E RID: 606 RVA: 0x0018E204 File Offset: 0x0018C404
		public void NPCLoot()
		{
			if (Main.netMode == 1 || this.type >= 580)
			{
				return;
			}
			bool flag = NpcMgr.downedMechBoss1 && NpcMgr.downedMechBoss2 && NpcMgr.downedMechBoss3;
			int num = this.type;
			if (num <= 126)
			{
				if (num - 13 > 2)
				{
					if (num - 125 <= 1)
					{
						if (!NPC.AnyNPCs((this.type == 126) ? 125 : 126))
						{
							AchievementsHelper.NotifyNPCKilled(this);
							AchievementsHelper.CheckMechaMayhem(this.type);
							goto IL_AB;
						}
						goto IL_AB;
					}
				}
				else
				{
					if (this.boss)
					{
						AchievementsHelper.NotifyNPCKilled(this);
						goto IL_AB;
					}
					goto IL_AB;
				}
			}
			else if (num == 127 || num == 134)
			{
				AchievementsHelper.CheckMechaMayhem(this.type);
				AchievementsHelper.NotifyNPCKilled(this);
				goto IL_AB;
			}
			AchievementsHelper.NotifyNPCKilled(this);
			IL_AB:
			int num2 = Item.NPCtoBanner(this.BannerID());
			if (num2 > 0 && !NPCID.Sets.ExcludedFromDeathTally[this.type])
			{
				bool flag2;
				if (this.realLife >= 0)
				{
					flag2 = Main.npc[this.realLife].AnyInteractions();
				}
				else
				{
					flag2 = this.AnyInteractions();
				}
				if (flag2)
				{
					NPC.killCount[num2]++;
					if (Main.netMode == 2)
					{
						NetMessage.SendData(83, -1, -1, null, num2, 0f, 0f, 0f, 0, 0, 0);
					}
					int num3 = ItemID.Sets.KillsToBanner[Item.BannerToItem(num2)];
					if (NPC.killCount[num2] % num3 == 0 && num2 > 0)
					{
						int num4 = Item.BannerToNPC(num2);
						new NPC().SetDefaults(num4, -1f);
						int num5 = this.lastInteraction;
						if (!Main.player[num5].active || Main.player[num5].dead)
						{
							num5 = this.FindClosestPlayer();
						}
						NetworkText networkText = NetworkText.FromKey("Game.EnemiesDefeatedAnnouncement", new object[]
						{
							NPC.killCount[num2],
							NetworkText.FromKey(Lang.GetNPCName(num4).Key, new object[0])
						});
						if (num5 >= 0 && num5 < 255)
						{
							networkText = NetworkText.FromKey("Game.EnemiesDefeatedByAnnouncement", new object[]
							{
								Main.player[num5].name,
								NPC.killCount[num2],
								NetworkText.FromKey(Lang.GetNPCName(num4).Key, new object[0])
							});
						}
						if (Main.netMode == 0)
						{
							Main.NewText(networkText.ToString(), 250, 250, 0, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.BroadcastChatMessage(networkText, new Color(250, 250, 0), -1);
						}
						int num6 = Item.BannerToItem(num2);
						Vector2 position = this.position;
						if (num5 >= 0 && num5 < 255)
						{
							position = Main.player[num5].position;
						}
						Item.NewItem((int)position.X, (int)position.Y, this.width, this.height, num6, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 23 && Main.hardMode)
			{
				return;
			}
			if (this.SpawnedFromStatue && NPCID.Sets.NoEarlymodeLootWhenSpawnedFromStatue[this.type] && !Main.hardMode)
			{
				return;
			}
			if (this.SpawnedFromStatue && NPCID.Sets.StatueSpawnedDropRarity[this.type] != -1f && (Main.rand.NextFloat() >= NPCID.Sets.StatueSpawnedDropRarity[this.type] || !this.AnyInteractions()))
			{
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3532, 1, false, 0, false, false);
			}
			num = this.type;
			if (num <= 120)
			{
				if (num <= 80)
				{
					if (num != 75 && num != 80)
					{
						goto IL_45A;
					}
				}
				else if (num != 84 && num != 86 && num != 120)
				{
					goto IL_45A;
				}
			}
			else if (num <= 138)
			{
				if (num != 122 && num - 137 > 1)
				{
					goto IL_45A;
				}
			}
			else if (num != 171 && num != 244 && num != 475)
			{
				goto IL_45A;
			}
			int maxValue = Main.expertMode ? 150 : 200;
			if (Main.rand.Next(maxValue) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3260, 1, false, 0, false, false);
			}
			IL_45A:
			if (Main.slimeRain && Main.slimeRainNPC[this.type] && !NPC.AnyNPCs(50))
			{
				int num7 = 150;
				if (NpcMgr.downedSlimeKing)
				{
					num7 /= 2;
				}
				Main.slimeRainKillCount++;
				if (Main.slimeRainKillCount >= num7)
				{
					NpcMgr.SpawnOnPlayer(this.FindClosestPlayer(), 50);
					Main.slimeRainKillCount = -num7 / 2;
				}
			}
			if (!Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneDungeon)
			{
				bool flag3 = false;
				if (Main.expertMode && Main.rand.Next(5) == 0)
				{
					flag3 = true;
				}
				else if (Main.rand.Next(5) == 0)
				{
					flag3 = true;
				}
				if (this.boss)
				{
					flag3 = false;
				}
				num = this.type;
				if (num - 13 <= 2)
				{
					flag3 = false;
				}
				if (((Main.hardMode && this.lifeMax > 1 && this.damage > 0 && !this.friendly && (double)this.position.Y > Main.rockLayer * 16.0) & flag3) && this.type != 121 && this.value > 0f)
				{
					if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt || Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 521, 1, false, 0, false, false);
					}
					if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 520, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 1 && this.ai[1] > 0f)
			{
				int num8 = (int)this.ai[1];
				if (num8 > 0 && num8 < 3930)
				{
					int num9 = 1;
					if (num8 == 8)
					{
						num9 = Main.rand.Next(5, 11);
					}
					else if (num8 == 166)
					{
						num9 = Main.rand.Next(2, 7);
					}
					else if (num8 == 965)
					{
						num9 = Main.rand.Next(20, 46);
					}
					else if ((num8 >= 11 && num8 <= 14) || (num8 >= 699 && num8 <= 702))
					{
						num9 = Main.rand.Next(3, 9);
						if (Main.rand.Next(2) == 0)
						{
							num9 += 5;
						}
					}
					else if (num8 == 71)
					{
						num9 = Main.rand.Next(50, 100);
					}
					else if (num8 == 72)
					{
						num9 = Main.rand.Next(20, 100);
					}
					else if (num8 == 73)
					{
						num9 = Main.rand.Next(1, 3);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num8, num9, false, 0, false, false);
				}
			}
			if (this.type == 22 && this.GivenOrTypeName == "Andrew")
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 867, 1, false, 0, false, false);
			}
			if (this.type == 353 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3352, 1, false, 0, false, false);
			}
			if (this.type == 441 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3351, 1, false, 0, false, false);
			}
			if (this.type == 227 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3350, 1, false, 0, false, false);
			}
			if (this.type == 550 && Main.rand.Next(6) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3821, 1, false, 0, false, false);
			}
			if (this.type == 208 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3548, Main.rand.Next(30, 61), false, 0, false, false);
			}
			if (this.type == 207 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3349, 1, false, 0, false, false);
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (!NpcMgr.downedMechBoss1 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 556, 1, false, 0, false, false);
				}
				else if (!NpcMgr.downedMechBoss2 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 544, 1, false, 0, false, false);
				}
				else if (!NpcMgr.downedMechBoss3 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 557, 1, false, 0, false, false);
				}
			}
			if (Main.halloween && this.value > 0f && this.value < 500f && this.damage < 40 && this.defense < 20)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1825, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1827, 1, false, 0, false, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneJungle)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1533, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1534, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1535, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1536, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneSnow)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1537, 1, false, 0, false, false);
				}
			}
			if (DD2Event.Ongoing)
			{
				switch (this.type)
				{
					case 552:
					case 553:
					case 554:
						DD2Event.AnnounceGoblinDeath(this);
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 555:
					case 556:
					case 557:
					case 561:
					case 562:
					case 563:
					case 570:
					case 571:
					case 572:
					case 573:
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 558:
					case 559:
					case 560:
					case 568:
					case 569:
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 564:
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem(this.position, base.Size, 3864, 1, false, 0, false, false);
						}
						if (Main.rand.Next(5) == 0)
						{
							if (Main.rand.Next(2) == 0)
							{
								Item.NewItem(this.position, base.Size, 3815, 4, false, 0, false, false);
							}
							else
							{
								Item.NewItem(this.position, base.Size, 3814, 1, false, 0, false, false);
							}
						}
						if (Main.rand.Next(Main.expertMode ? 2 : 3) == 0)
						{
							Item.NewItem(this.position, base.Size, (int)Utils.SelectRandom<short>(Main.rand, new short[]
							{
							3857,
							3855
							}), 1, false, 0, false, false);
						}
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 565:
						if (Main.rand.Next(14) == 0)
						{
							Item.NewItem(this.position, base.Size, 3864, 1, false, 0, false, false);
						}
						if (Main.rand.Next(10) == 0)
						{
							if (Main.rand.Next(2) == 0)
							{
								Item.NewItem(this.position, base.Size, 3815, 4, false, 0, false, false);
							}
							else
							{
								Item.NewItem(this.position, base.Size, 3814, 1, false, 0, false, false);
							}
						}
						if (Main.rand.Next(6) == 0)
						{
							Item.NewItem(this.position, base.Size, (int)Utils.SelectRandom<short>(Main.rand, new short[]
							{
							3857,
							3855
							}), 1, false, 0, false, false);
						}
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 574:
					case 575:
					case 578:
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 576:
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem(this.position, base.Size, 3865, 1, false, 0, false, false);
						}
						if (Main.rand.Next(Main.expertMode ? 2 : 3) == 0)
						{
							Item.NewItem(this.position, base.Size, (int)Utils.SelectRandom<short>(Main.rand, new short[]
							{
							3809,
							3811,
							3810,
							3812
							}), 1, false, 0, false, false);
						}
						if (Main.rand.Next(Main.expertMode ? 2 : 3) == 0)
						{
							Item.NewItem(this.position, base.Size, (int)Utils.SelectRandom<short>(Main.rand, new short[]
							{
							3852,
							3854,
							3823,
							3835,
							3836
							}), 1, false, 0, false, false);
						}
						if (Main.rand.Next(Main.expertMode ? 4 : 5) == 0)
						{
							Item.NewItem(this.position, base.Size, 3856, 1, false, 0, false, false);
						}
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
					case 577:
						if (Main.rand.Next(14) == 0)
						{
							Item.NewItem(this.position, base.Size, 3865, 1, false, 0, false, false);
						}
						if (Main.rand.Next(6) == 0)
						{
							Item.NewItem(this.position, base.Size, (int)Utils.SelectRandom<short>(Main.rand, new short[]
							{
							3809,
							3811,
							3810,
							3812
							}), 1, false, 0, false, false);
						}
						if (Main.rand.Next(6) == 0)
						{
							Item.NewItem(this.position, base.Size, (int)Utils.SelectRandom<short>(Main.rand, new short[]
							{
							3852,
							3854,
							3823,
							3835,
							3836
							}), 1, false, 0, false, false);
						}
						if (Main.rand.Next(10) == 0)
						{
							Item.NewItem(this.position, base.Size, 3856, 1, false, 0, false, false);
						}
						if (DD2Event.ShouldDropCrystals())
						{
							Item.NewItem(this.position, base.Size, 3822, 1, false, 0, false, false);
						}
						break;
				}
			}
			if (this.type == 68)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1169, 1, false, 0, false, false);
			}
			if (Main.snowMoon)
			{
				int num10 = NpcMgr.waveNumber;
				if (Main.expertMode)
				{
					num10 += 7;
				}
				int num11 = (int)((double)(30 - num10) / 2.5);
				if (Main.expertMode)
				{
					num11 -= 2;
				}
				if (num11 < 1)
				{
					num11 = 1;
				}
				if (this.type == 344)
				{
					NpcMgr.downedChristmasTree = true;
				}
				if (this.type == 345)
				{
					NpcMgr.downedChristmasIceQueen = true;
				}
				if (this.type == 346)
				{
					NpcMgr.downedChristmasSantank = true;
				}
				if ((this.type == 344 || this.type == 345 || this.type == 346) && Main.rand.Next(num11) == 0 && num10 >= 15)
				{
					int num12 = 4;
					if (num10 == 16)
					{
						num12 = 4;
					}
					if (num10 == 17)
					{
						num12 = 3;
					}
					if (num10 == 18)
					{
						num12 = 3;
					}
					if (num10 == 19)
					{
						num12 = 2;
					}
					if (num10 >= 20)
					{
						num12 = 2;
					}
					if (Main.expertMode && Main.rand.Next(3) == 0)
					{
						num12--;
					}
					if (Main.rand.Next(num12) == 0)
					{
						if (this.type == 344)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1962, 1, false, 0, false, false);
						}
						if (this.type == 345)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1960, 1, false, 0, false, false);
						}
						if (this.type == 346)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1961, 1, false, 0, false, false);
						}
					}
				}
				if (Main.rand.Next(num11) == 0)
				{
					if (this.type == 344)
					{
						int num13 = Main.rand.Next(3);
						if (Main.rand.Next(15) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1871, 1, false, -1, false, false);
						}
						else
						{
							if (num13 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1916, 1, false, 0, false, false);
							}
							if (num13 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1928, 1, false, -1, false, false);
							}
							if (num13 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1930, 1, false, -1, false, false);
							}
						}
					}
					if (this.type == 346)
					{
						int expr_165C = Main.rand.Next(2);
						if (expr_165C == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1910, 1, false, -1, false, false);
						}
						if (expr_165C == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1929, 1, false, -1, false, false);
						}
					}
					if (this.type == 345)
					{
                        if (NpcMgr.waveNumber >= 15 && Main.rand.Next(30) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1914, 1, false, 0, false, false);
						}
						else if (Main.rand.Next(15) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1959, 1, false, 0, false, false);
						}
						else
						{
							int expr_177C = Main.rand.Next(3);
							if (expr_177C == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1931, 1, false, -1, false, false);
							}
							if (expr_177C == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1946, 1, false, -1, false, false);
							}
							if (expr_177C == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1947, 1, false, -1, false, false);
							}
						}
					}
				}
			}
			if (this.type == 341)
			{
				int num14 = Main.rand.Next(5, 11);
				for (int i = 0; i < num14; i++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
				if (Main.xMas)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false, false);
				}
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(5) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1943 + Main.rand.Next(3), 1, false, 0, false, false);
			}
			if (this.type == 342 && Main.rand.Next(3) != 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (Main.pumpkinMoon)
			{
				if (this.type == 325)
				{
					NpcMgr.downedHalloweenTree = true;
				}
				if (this.type == 327)
				{
					NpcMgr.downedHalloweenKing = true;
				}
                int num15 = NpcMgr.waveNumber;
				if (Main.expertMode)
				{
					num15 += 6;
				}
				int num16 = (int)((double)(17 - num15) / 1.25);
				if (Main.expertMode)
				{
					num16--;
				}
				if (num16 < 1)
				{
					num16 = 1;
				}
				if (num15 >= 15)
				{
					if (this.type == 325)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1855, 1, false, 0, false, false);
					}
					if (this.type == 327)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1856, 1, false, 0, false, false);
					}
				}
				if (Main.rand.Next(num16) == 0)
				{
					if (this.type == 315 && Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1857, 1, false, 0, false, false);
					}
					if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false, false);
					}
					if (this.type == 325)
					{
						int expr_1BA9 = Main.rand.Next(5);
						if (expr_1BA9 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1829, 1, false, 0, false, false);
						}
						if (expr_1BA9 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1831, 1, false, 0, false, false);
						}
						if (expr_1BA9 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1835, 1, false, -1, false, false);
						}
						if (expr_1BA9 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false, false);
						}
						if (expr_1BA9 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1837, 1, false, 0, false, false);
						}
						if (expr_1BA9 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1845, 1, false, -1, false, false);
						}
					}
					if (this.type == 327)
					{
						int expr_1D1F = Main.rand.Next(7);
						if (expr_1D1F == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1782, 1, false, -1, false, false);
						}
						if (expr_1D1F == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false, false);
						}
						if (expr_1D1F == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1784, 1, false, -1, false, false);
						}
						if (expr_1D1F == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false, false);
						}
						if (expr_1D1F == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1811, 1, false, 0, false, false);
						}
						if (expr_1D1F == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1826, 1, false, -1, false, false);
						}
						if (expr_1D1F == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1801, 1, false, -1, false, false);
						}
						if (expr_1D1F == 5)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1802, 1, false, -1, false, false);
						}
						if (expr_1D1F == 6)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1798, 1, false, 0, false, false);
						}
					}
				}
			}
			if (this.type == 325)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false, false);
			}
			if (this.type == 326)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false, false);
			}
			if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 326 && Main.rand.Next(6) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 329 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 330 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 315)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (Main.halloween && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.type != 23 && this.value > 0f && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1774, 1, false, 0, false, false);
			}
			if (Main.xMas && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.value > 0f && Main.rand.Next(13) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false, false);
			}
			if (this.lifeMax > 5 && this.value > 0f && !this.friendly && Main.hardMode && this.position.Y / 16f > (float)(Main.maxTilesY - 200) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2701, Main.rand.Next(20, 51), false, 0, false, false);
			}
			if (this.type == 325 || this.type == 327 || this.type == 344 || this.type == 345 || this.type == 346)
			{
				int num17 = Main.rand.Next(6) + 6;
				for (int j = 0; j < num17; j++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 156 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1518, 1, false, 0, false, false);
			}
			if (this.type == 243 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1519, 1, false, 0, false, false);
			}
			if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1517, 1, false, 0, false, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1520, 1, false, 0, false, false);
			}
			if (this.type == 176 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1521, 1, false, 0, false, false);
			}
			if (this.type == 48 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1516, 1, false, 0, false, false);
			}
			if (this.type == 205 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1611, 1, false, 0, false, false);
			}
			if (this.type == 483 || this.type == 482)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3086, Main.rand.Next(5, 11), false, -1, false, false);
			}
			if (!Main.hardMode && Main.rand.Next(100) == 0 && this.HasPlayerTarget && this.lifeMax > 5 && !this.friendly && Main.rand.Next(4) == 0 && this.position.Y / 16f > (float)(Main.maxTilesY - 350) && NpcMgr.downedBoss3)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3282, 1, false, -1, false, false);
			}
			if (Main.hardMode && this.HasPlayerTarget && Main.player[this.target].ZoneSnow && Main.rand.Next(300) == 0 && this.HasPlayerTarget && this.lifeMax > 5 && !this.friendly && this.value > 0f)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3289, 1, false, -1, false, false);
			}
			else if (Main.hardMode && Main.rand.Next(200) == 0 && this.HasPlayerTarget && this.lifeMax > 5 && !this.friendly && this.value > 0f)
			{
				if (Main.player[this.target].ZoneJungle && NpcMgr.downedMechBossAny)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3286, 1, false, -1, false, false);
				}
				else if (Main.player[this.target].ZoneDungeon && NpcMgr.downedPlantBoss && Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3291, 1, false, -1, false, false);
				}
				else if ((double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[this.target].ZoneDungeon && Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3290, 1, false, -1, false, false);
				}
			}
			int num18 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num18 = 2;
			}
			for (int k = 0; k < num18; k++)
			{
				if (this.type == 461 && Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 497, 1, false, -1, false, false);
				}
				if ((this.type == 159 || this.type == 158) && Main.rand.Next(35) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 900, 1, false, -1, false, false);
				}
				if (this.type == 251 && Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1311, 1, false, -1, false, false);
				}
				if (NpcMgr.downedMechBoss1 && NpcMgr.downedMechBoss2 && NpcMgr.downedMechBoss3)
				{
					if (this.type == 477)
					{
						if (Main.rand.Next(20) == 0 && NpcMgr.downedPlantBoss)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2770, 1, false, -1, false, false);
							k++;
						}
						if (Main.rand.Next(4) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1570, 1, false, -1, false, false);
							k++;
						}
						else if (Main.rand.Next(3) == 0 && NpcMgr.downedPlantBoss)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3292, 1, false, -1, false, false);
							k++;
						}
					}
					if (this.type == 253 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1327, 1, false, -1, false, false);
					}
				}
				if (NpcMgr.downedPlantBoss)
				{
					if (this.type == 460 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3098, 1, false, -1, false, false);
					}
					if (this.type == 468 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3105, 1, false, -1, false, false);
					}
					if (this.type == 466 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3106, 1, false, -1, false, false);
					}
					if (this.type == 467 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3249, 1, false, -1, false, false);
					}
					if (this.type == 463 && Main.rand.Next(25) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3107, 1, false, -1, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3108, Main.rand.Next(100, 201), false, -1, false, false);
					}
				}
			}
			if (Main.bloodMoon && Main.hardMode && Main.rand.Next(1000) == 0 && this.value > 0f)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1314, 1, false, -1, false, false);
			}
			if (this.type == 77 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 723, 1, false, -1, false, false);
			}
			if (Main.rand.Next(100) == 0 || (Main.expertMode && Main.rand.Next(100) == 0))
			{
				int num19 = -1;
				int num20 = -1;
				num = this.type;
				if (num <= 141)
				{
					if (num <= 94)
					{
						if (num == 34)
						{
							goto IL_2F66;
						}
						if (num == 42)
						{
							goto IL_2F36;
						}
						switch (num)
						{
							case 75:
								if (Main.rand.Next(2) == 0)
								{
									num19 = 889;
								}
								else
								{
									num19 = 890;
								}
								if (Main.rand.Next(100) != 0)
								{
									goto IL_3014;
								}
								if (num19 == 889)
								{
									num20 = 890;
									goto IL_3014;
								}
								num20 = 889;
								goto IL_3014;
							case 76:
							case 85:
							case 86:
							case 87:
							case 88:
							case 89:
							case 90:
							case 91:
							case 92:
								goto IL_3014;
							case 77:
								goto IL_2F2A;
							case 78:
							case 82:
								num19 = 889;
								goto IL_3014;
							case 79:
								if (Main.rand.Next(2) == 0)
								{
									num19 = 888;
								}
								else
								{
									num19 = 890;
								}
								if (Main.rand.Next(100) != 0)
								{
									goto IL_3014;
								}
								if (num19 == 888)
								{
									num20 = 890;
									goto IL_3014;
								}
								num20 = 888;
								goto IL_3014;
							case 80:
							case 93:
								break;
							case 81:
								num19 = 888;
								goto IL_3014;
							case 83:
							case 84:
								goto IL_2F66;
							case 94:
								goto IL_2F72;
							default:
								goto IL_3014;
						}
					}
					else
					{
						switch (num)
						{
							case 102:
							case 104:
								goto IL_2F1E;
							case 103:
								num19 = 890;
								goto IL_3014;
							default:
								if (num != 109)
								{
									if (num != 141)
									{
										goto IL_3014;
									}
									goto IL_2F36;
								}
								break;
						}
					}
					num19 = 893;
					goto IL_3014;
				}
				if (num <= 182)
				{
					if (num == 176)
					{
						goto IL_2F36;
					}
					if (num == 179)
					{
						goto IL_2F66;
					}
					if (num != 182)
					{
						goto IL_3014;
					}
					goto IL_2F72;
				}
				else if (num <= 272)
				{
					if (num - 231 <= 4)
					{
						goto IL_2F36;
					}
					if (num - 269 > 3)
					{
						goto IL_3014;
					}
				}
				else
				{
					if (num - 273 <= 3)
					{
						goto IL_2F2A;
					}
					if (num == 480)
					{
						num19 = 3781;
						goto IL_3014;
					}
					goto IL_3014;
				}
				IL_2F1E:
				num19 = 885;
				goto IL_3014;
				IL_2F2A:
				num19 = 886;
				goto IL_3014;
				IL_2F36:
				num19 = 887;
				goto IL_3014;
				IL_2F66:
				num19 = 891;
				goto IL_3014;
				IL_2F72:
				num19 = 892;
				IL_3014:
				if (num19 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num19, 1, false, -1, false, false);
				}
				if (num20 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num20, 1, false, -1, false, false);
				}
			}
			int num21 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num21 = 2;
			}
			for (int l = 0; l < num21; l++)
			{
				if (this.type == 290)
				{
					if (Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1513, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 938, 1, false, -1, false, false);
					}
				}
				if (this.type == 287 && Main.rand.Next(6) == 0)
				{
					if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 963, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 977, 1, false, -1, false, false);
					}
				}
				if (this.type == 291)
				{
					if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1300, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1254, 1, false, -1, false, false);
					}
				}
				if (this.type == 292)
				{
					if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1514, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 679, 1, false, -1, false, false);
					}
				}
				if (this.type == 293 && Main.rand.Next(18) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 759, 1, false, -1, false, false);
				}
				if ((this.type == 281 || this.type == 282) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1446, 1, false, -1, false, false);
				}
				if ((this.type == 283 || this.type == 284) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1444, 1, false, -1, false, false);
				}
				if ((this.type == 285 || this.type == 286) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1445, 1, false, -1, false, false);
				}
				if (this.type >= 269 && this.type <= 280)
				{
					if (Main.rand.Next(400) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1183, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(300) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1266, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(200) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 671, 1, false, -1, false, false);
					}
				}
			}
			if (this.lifeMax > 100 && this.type != 288 && this.value > 0f && this.HasPlayerTarget && Main.hardMode && NpcMgr.downedPlantBoss && Main.player[this.target].ZoneDungeon)
			{
				int maxValue2 = 13;
				if (Main.expertMode)
				{
					maxValue2 = 9;
				}
				if (Main.rand.Next(maxValue2) == 0 && Main.wallDungeon[(int)Main.tile[(int)base.Center.X / 16, (int)base.Center.Y / 16].wall])
				{
					NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 288, 0, 0f, 0f, 0f, 0f, 255);
				}
			}
			if (this.type == 288)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false, false);
			}
			if (this.type == 156 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 683, 1, false, -1, false, false);
			}
			if ((this.type == 195 || this.type == 196) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3102, 1, false, -1, false, false);
			}
			if (this.type == 245)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2110, 1, false, -1, false, false);
					}
					int num22 = Main.rand.Next(8);
					if (num22 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1258, 1, false, -1, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false, false);
					}
					else if (num22 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1122, 1, false, -1, false, false);
					}
					else if (num22 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 899, 1, false, -1, false, false);
					}
					else if (num22 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1248, 1, false, -1, false, false);
					}
					else if (num22 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1294, 1, false, -1, false, false);
					}
					else if (num22 == 5)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1295, 1, false, -1, false, false);
					}
					else if (num22 == 6)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1296, 1, false, -1, false, false);
					}
					else if (num22 == 7)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1297, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2218, Main.rand.Next(4, 9), false, -1, false, false);
				}
				NpcMgr.downedGolemBoss = true;
			}
			if (this.type == 471 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3052, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3053, 1, false, -1, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3054, 1, false, -1, false, false);
				}
			}
			if (this.type == 268)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(2, 6), false, 0, false, false);
			}
			if (this.type == 370)
			{
				NpcMgr.downedFishron = true;
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2588, 1, false, -1, false, false);
					}
					if (Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2609, 1, false, -1, false, false);
					}
					int num23 = Main.rand.Next(5);
					if (num23 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2611, 1, false, -1, false, false);
					}
					else if (num23 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2624, 1, false, -1, false, false);
					}
					else if (num23 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2622, 1, false, -1, false, false);
					}
					else if (num23 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2621, 1, false, -1, false, false);
					}
					else if (num23 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2623, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 109 && !NpcMgr.downedClown)
			{
				NpcMgr.downedClown = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 153 && Main.rand.Next(17) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1328, 1, false, -1, false, false);
			}
			if (this.type == 120 && Main.rand.Next(500) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1326, 1, false, -1, false, false);
			}
			if (this.type == 49 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1325, 1, false, -1, false, false);
			}
			if (this.type == 185 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 951, 1, false, -1, false, false);
			}
			if (this.type == 44 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1320, 1, false, -1, false, false);
			}
			if (this.type == 44 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 88, 1, false, -1, false, false);
			}
			if (this.type == 110 && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1321, 1, false, -1, false, false);
			}
			if (this.type == 60 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false, false);
			}
			if (this.type == 151 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false, false);
			}
			if (this.type == 24 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1323, 1, false, -1, false, false);
			}
			if (this.type == 109 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false, false);
			}
			if (this.type == 163 || this.type == 238)
			{
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1308, 1, false, -1, false, false);
				}
				if (Main.expertMode)
				{
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(2, 4), false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false, false);
					}
				}
				else if (Main.rand.Next(4) != 0)
				{
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 3), false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false, false);
					}
				}
			}
			if (Main.hardMode && (this.type == 197 || this.type == 206 || this.type == 169 || this.type == 154) && Main.rand.Next(180) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1306, 1, false, -1, false, false);
			}
			if (this.type == 244)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false, false);
			}
			if (this.type == 250 && Main.rand.Next(15) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1244, 1, false, -1, false, false);
			}
			if (this.type == 172)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 754, 1, false, -1, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 755, 1, false, -1, false, false);
			}
			if (this.type == 110 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 682, 1, false, -1, false, false);
			}
			if (this.type == 154 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1253, 1, false, -1, false, false);
			}
			if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 726, 1, false, -1, false, false);
			}
			if (this.type == 243)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2161, 1, false, -1, false, false);
			}
			if (this.type == 480 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3269, 1, false, -1, false, false);
			}
			if (this.type == 198 || this.type == 199 || this.type == 226)
			{
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1172, 1, false, -1, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1293, 1, false, -1, false, false);
				}
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2766, Main.rand.Next(1, 3), false, -1, false, false);
				}
			}
			if (this.type == 78 || this.type == 79 || this.type == 80)
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 870, 1, false, -1, false, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 871, 1, false, -1, false, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 872, 1, false, -1, false, false);
				}
			}
			if (this.type == 473)
			{
				int num24 = Main.rand.Next(5);
				if (num24 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3008, 1, false, -1, false, false);
				}
				else if (num24 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3014, 1, false, -1, false, false);
				}
				else if (num24 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3012, 1, false, -1, false, false);
				}
				else if (num24 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3015, 1, false, -1, false, false);
				}
				else if (num24 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3023, 1, false, -1, false, false);
				}
			}
			else if (this.type == 474)
			{
				int num25 = Main.rand.Next(5);
				if (num25 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3006, 1, false, -1, false, false);
				}
				else if (num25 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3007, 1, false, -1, false, false);
				}
				else if (num25 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3013, 1, false, -1, false, false);
				}
				else if (num25 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3016, 1, false, -1, false, false);
				}
				else if (num25 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3020, 1, false, -1, false, false);
				}
			}
			else if (this.type == 475)
			{
				int num26 = Main.rand.Next(4);
				if (num26 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3029, 1, false, -1, false, false);
				}
				else if (num26 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3030, 1, false, -1, false, false);
				}
				else if (num26 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3051, 1, false, -1, false, false);
				}
				else if (num26 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3022, 1, false, -1, false, false);
				}
			}
			else
			{
				int arg_4CD9_0 = this.type;
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 499, Main.rand.Next(5, 11), false, -1, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 500, Main.rand.Next(5, 16), false, -1, false, false);
			}
			if (this.type == 85 && this.value > 0f)
			{
				if (this.ai[3] == 4f)
				{
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1312, 1, false, -1, false, false);
					}
					else
					{
						int num27 = Main.rand.Next(3);
						if (num27 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 676, 1, false, -1, false, false);
						}
						else if (num27 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 725, 1, false, -1, false, false);
						}
						else if (num27 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1264, 1, false, -1, false, false);
						}
					}
				}
				else
				{
					int num28 = Main.rand.Next(6);
					if (num28 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 437, 1, false, -1, false, false);
					}
					else if (num28 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 517, 1, false, -1, false, false);
					}
					else if (num28 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 535, 1, false, -1, false, false);
					}
					else if (num28 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 536, 1, false, -1, false, false);
					}
					else if (num28 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 532, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 554, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 87)
			{
				if (Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11) * 2, false, 0, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false, false);
				}
			}
			if (this.type >= 212 && this.type <= 215)
			{
				if (Main.rand.Next(8000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false, false);
				}
				if (Main.rand.Next(4000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1277, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1278, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1279, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1280, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1704, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1705, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1710, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1716, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1720, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2379, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2389, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2405, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2843, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3885, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2663, 1, false, 0, false, false);
				}
				if (Main.rand.Next(150) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3904, Main.rand.Next(6, 11) * 5, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3910, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2238, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2133, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2137, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2143, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2147, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2151, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2155, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3263, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3264, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3265, 1, false, 0, false, false);
				}
			}
			else if (this.type == 216)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false, false);
				}
			}
			else if (this.type == 491)
			{
				if (Main.rand.Next(400) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false, false);
				}
			}
			if ((this.type == 161 || this.type == 431) && Main.rand.Next(50) == 0)
			{
				int num29 = Main.rand.Next(3);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 803 + num29, 1, false, 0, false, false);
			}
			if (this.type == 217)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1115, 1, false, -1, false, false);
			}
			if (this.type == 218)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1116, 1, false, -1, false, false);
			}
			if (this.type == 219)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1117, 1, false, -1, false, false);
			}
			if (this.type == 220)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1118, 1, false, -1, false, false);
			}
			if (this.type == 221)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1119, 1, false, -1, false, false);
			}
			if (this.type == 167 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 879, 1, false, -1, false, false);
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false, false);
			}
			if (this.type == 79)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			else if (this.type == 80 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false, false);
			}
			if (this.type == 524 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, Main.rand.Next(1, 4), false, 0, false, false);
			}
			if (this.type == 525)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, 1, false, 0, false, false);
				}
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			if (this.type == 526)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, 1, false, 0, false, false);
				}
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			if (this.type == 527)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3794, 1, false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false, false);
				}
			}
			if (this.type == 532)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3380, 1, false, 0, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3771, 1, false, 0, false, false);
				}
			}
			if (this.type == 528)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2802, 1, false, 0, false, false);
				}
				if (Main.rand.Next(60) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3784 + Main.rand.Next(3), 1, false, 0, false, false);
				}
			}
			else if (this.type == 529)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2801, 1, false, 0, false, false);
				}
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3784 + Main.rand.Next(3), 1, false, 0, false, false);
				}
			}
			if ((this.type == 49 || this.type == 51 || this.type == 150 || this.type == 93) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false, false);
			}
			if ((this.type == 16 || this.type == 185 || this.type == 167 || this.type == 197) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false, false);
			}
			if (this.type == 58 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false, false);
			}
			if (this.type >= 494 && this.type <= 506)
			{
				if (Main.rand.Next(80) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(80) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3285, 1, false, -1, false, false);
				}
			}
			if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || (this.type >= 449 && this.type <= 452))
			{
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 954, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 955, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1166, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1274, 1, false, -1, false, false);
				}
			}
			else if (this.type == 6)
			{
				if (Main.rand.Next(175) == 0)
				{
					int num30 = Main.rand.Next(3);
					if (num30 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 956, 1, false, -1, false, false);
					}
					else if (num30 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 957, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 958, 1, false, -1, false, false);
					}
				}
			}
			else if (this.type == 42 || this.type == 43 || (this.type >= 231 && this.type <= 235))
			{
				if (Main.rand.Next(100) == 0)
				{
					int num31 = Main.rand.Next(3);
					if (num31 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 960, 1, false, -1, false, false);
					}
					else if (num31 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 961, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 962, 1, false, -1, false, false);
					}
				}
			}
			else if (this.type == 31 || this.type == 32 || this.type == 294 || this.type == 295 || this.type == 296)
			{
				if (Main.rand.Next(450) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 959, 1, false, -1, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1307, 1, false, -1, false, false);
				}
			}
			if ((this.type == 174 || this.type == 179 || this.type == 182 || this.type == 183) && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 996, 1, false, 0, false, false);
			}
			if (this.type == 101 || this.type == 98)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false, false);
			}
			if (this.type == 86)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 526, 1, false, 0, false, false);
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 856, 1, false, 0, false, false);
				}
			}
			if (this.type == 186 || this.type == 432)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false, false);
			}
			if (this.type == 225)
			{
				if (Main.rand.Next(45) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1243, 1, false, 0, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 7), false, 0, false, false);
				}
			}
			if (this.type == 537)
			{
				int num32 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num32++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num32 += Main.rand.Next(2);
					}
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num32, false, 0, false, false);
				int num33 = 8000;
				if (Main.expertMode)
				{
					num33 = (int)((double)num33 * 0.7);
				}
				if (Main.rand.Next(num33) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			if (this.type >= 333 && this.type <= 336 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1906, 1, false, 0, false, false);
			}
			if (this.netID == -4)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3111, Main.rand.Next(25, 51), false, 0, false, false);
				int num34 = 100;
				if (Main.expertMode)
				{
					num34 = (int)((double)num34 * 0.7);
				}
				if (Main.rand.Next(num34) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			else if (this.type == 1 || this.type == 16 || this.type == 138 || this.type == 141 || this.type == 147 || this.type == 184 || this.type == 187 || this.type == 204 || this.type == 302 || (this.type >= 333 && this.type <= 336) || this.type == 535)
			{
				int num35 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num35++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num35 += Main.rand.Next(2);
					}
				}
				int num36 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num35, false, 0, false, false);
				if (this.netID <= 1 && this.netID != -1 && this.netID != -2 && this.netID != -5 && this.netID != -6)
				{
					Main.item[num36].color = this.color;
					NetMessage.SendData(88, -1, -1, null, num36, 1f, 0f, 0f, 0, 0, 0);
				}
				int num37 = 10000;
				if (Main.expertMode)
				{
					num37 = (int)((double)num37 * 0.7);
				}
				if (Main.rand.Next(num37) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			if (this.type == 75)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false, false);
			}
			if (this.type == 81 || this.type == 183)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false, false);
			}
			if (this.type == 122)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false, false);
			}
			if (this.type == 71)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false, false);
			}
			if (this.type == 2 || this.type == 317 || this.type == 318 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 133)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 38, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 236, 1, false, 0, false, false);
				}
			}
			if (this.type == 104 && Main.rand.Next(60) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 485, 1, false, -1, false, false);
			}
			if (this.type == 58)
			{
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(30) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false, false);
				}
			}
			if (this.type == 102 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false, false);
			}
			if (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 319 || this.type == 320 || this.type == 321 || (this.type >= 430 && this.type <= 436))
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 216, 1, false, -1, false, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1304, 1, false, -1, false, false);
				}
			}
			if ((this.type == 489 || this.type == 490) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3212, 1, false, -1, false, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3213, 1, false, -1, false, false);
				}
			}
			if (this.type == 223 && Main.rand.Next(20) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1135, 1, false, -1, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1136, 1, false, -1, false, false);
				}
			}
			if (this.type == 66)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 267, 1, false, 0, false, false);
			}
			if ((this.type == 62 || this.type == 66) && Main.rand.Next(35) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 272, 1, false, -1, false, false);
			}
			if (this.value > 0f && Main.hardMode && (double)(this.position.Y / 16f) < Main.worldSurface + 10.0 && (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1315, 1, false, 0, false, false);
			}
			if (this.type == 52)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 251, 1, false, 0, false, false);
			}
			if (this.type == 53)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 239, 1, false, 0, false, false);
			}
			if (this.type == 536)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3478, 1, false, 0, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3479, 1, false, 0, false, false);
			}
			if (this.type == 54)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 260, 1, false, 0, false, false);
			}
			if (this.type == 368)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2222, 1, false, 0, false, false);
			}
			if ((this.type == 69 || this.type == 509 || this.type == 508) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 323, Main.rand.Next(1, 3), false, 0, false, false);
			}
			if (this.type == 508 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3772, 1, false, 0, false, false);
			}
			if (this.type == 73)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false, false);
			}
			if ((this.type == 483 || this.type == 482) && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3109, 1, false, 0, false, false);
			}
			if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, 1, false, 0, false, false);
			}
			if ((this.type == 181 || this.type == 173 || this.type == 239 || this.type == 182 || this.type == 240) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1330, 1, false, 0, false, false);
			}
			if (this.type == 7 || this.type == 8 || this.type == 9)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false, false);
			}
			if ((this.type == 10 || this.type == 11 || this.type == 12 || this.type == 95 || this.type == 96 || this.type == 97) && (Main.rand.Next(50) == 0 || (Main.expertMode && Main.rand.Next(50) == 0)))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 215, 1, false, 0, false, false);
			}
			if ((this.type == 47 || this.type == 464) && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 243, 1, false, 0, false, false);
			}
			if ((this.type == 168 || this.type == 470) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, (int)Utils.SelectRandom<short>(Main.rand, new short[]
				{
					3757,
					3758,
					3759
				}), 1, false, 0, false, false);
			}
			if (this.type == 533)
			{
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3795, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(30) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3770, 1, false, 0, false, false);
				}
			}
			if (this.type == 551)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					int num38 = Main.rand.Next(4);
					if (num38 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3859, 1, false, -1, false, false);
					}
					else if (num38 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3827, 1, false, -1, false, false);
					}
					else if (num38 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3870, 1, false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3858, 1, false, -1, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3863, 1, false, -1, false, false);
					}
					if (Main.rand.Next(4) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3883, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 4)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2112, 1, false, -1, false, false);
					}
					if (Main.rand.Next(40) == 0 || (Main.expertMode && Main.rand.Next(20) == 0))
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1299, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3097, 1, false, -1, false, false);
					}
					int num39 = 1;
					if (Main.expertMode)
					{
						num39 = 2;
					}
					for (int m = 0; m < num39; m++)
					{
						if (WorldGen.crimson)
						{
							int stack = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(3) + 1;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2171, stack, false, 0, false, false);
						}
						else
						{
							int stack2 = Main.rand.Next(30) + 20;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(3) + 1;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 59, stack2, false, 0, false, false);
						}
					}
				}
			}
			if (this.type == 266)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					int stack3 = Main.rand.Next(20, 46);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
					stack3 = Main.rand.Next(20, 46);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
					if (Main.expertMode)
					{
						stack3 = Main.rand.Next(30, 51);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
						stack3 = Main.rand.Next(30, 51);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2104, 1, false, -1, false, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3060, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3223, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 267 && NPC.AnyNPCs(266))
			{
				int num40 = Main.rand.Next(2, 6);
				if (Main.rand.Next(3) != 0)
				{
					if (Main.expertMode)
					{
						num40 += Main.rand.Next(2, 6);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1329, num40, false, 0, false, false);
				}
				if (Main.rand.Next(3) != 0)
				{
					num40 = Main.rand.Next(5, 13);
					if (Main.expertMode)
					{
						num40 += Main.rand.Next(6, 14);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num40, false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				int num41 = Main.rand.Next(1, 3);
				if (Main.rand.Next(2) == 0)
				{
					if (Main.expertMode)
					{
						num41++;
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 86, num41, false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					num41 = Main.rand.Next(2, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num41, false, 0, false, false);
				}
				if (this.boss)
				{
					if (Main.expertMode)
					{
						this.DropBossBags();
					}
					else
					{
						num41 = Main.rand.Next(10, 30);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num41, false, 0, false, false);
						num41 = Main.rand.Next(10, 31);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num41, false, 0, false, false);
						if (Main.expertMode)
						{
							num41 = Main.rand.Next(10, 30);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num41, false, 0, false, false);
							num41 = Main.rand.Next(10, 31);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num41, false, 0, false, false);
						}
						if (Main.expertMode)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3224, 1, false, 0, false, false);
						}
						if (Main.rand.Next(20) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 994, 1, false, 0, false, false);
						}
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2111, 1, false, -1, false, false);
						}
					}
				}
				if (Main.rand.Next(4) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 222)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2108, 1, false, -1, false, false);
					}
					int num42 = Main.rand.Next(3);
					if (num42 == 0)
					{
						num42 = 1121;
					}
					else if (num42 == 1)
					{
						num42 = 1123;
					}
					else if (num42 == 2)
					{
						num42 = 2888;
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num42, 1, false, -1, false, false);
					if (Main.expertMode)
					{
						int num43 = Main.rand.Next(3);
						if (num43 == 0)
						{
							num43 = 1121;
						}
						else if (num43 == 1)
						{
							num43 = 1123;
						}
						else if (num43 == 2)
						{
							num43 = 2888;
						}
						while (num43 == num42)
						{
							num43 = Main.rand.Next(3);
							if (num43 == 0)
							{
								num43 = 1121;
							}
							else if (num43 == 1)
							{
								num43 = 1123;
							}
							else if (num43 == 2)
							{
								num43 = 2888;
							}
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num43, 1, false, -1, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false, false);
					}
					if ((Main.expertMode && Main.rand.Next(15) == 0) || Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1170, 1, false, 0, false, false);
					}
					if ((Main.expertMode && Main.rand.Next(20) == 0) || Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2502, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false, false);
					}
					if (Main.rand.Next(4) != 0 || Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false, false);
						if (Main.expertMode)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false, false);
						}
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(44, 67), false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(16, 27), false, 0, false, false);
					}
				}
				NpcMgr.downedQueenBee = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 35)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1281, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1273, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1313, 1, false, -1, false, false);
				}
			}
			if (this.type == 113)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2105, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 367, 1, false, -1, false, false);
					if (Main.expertMode)
					{
						int num44 = Main.rand.Next(4);
						if (num44 == 3)
						{
							num44 = 2998;
						}
						else
						{
							num44 = 489 + num44;
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num44, 1, false, -1, false, false);
						int num45 = Main.rand.Next(3);
						if (num45 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false, false);
						}
						else if (num45 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false, false);
						}
						else if (num45 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false, false);
						}
					}
					else if (Main.rand.Next(2) == 0)
					{
						int num46 = Main.rand.Next(4);
						if (num46 == 3)
						{
							num46 = 2998;
						}
						else
						{
							num46 = 489 + num46;
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num46, 1, false, -1, false, false);
					}
					else
					{
						int num47 = Main.rand.Next(3);
						if (num47 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false, false);
						}
						else if (num47 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false, false);
						}
						else if (num47 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false, false);
						}
					}
				}
				if (Main.netMode != 1)
				{
					int num48 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num49 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					int num50 = this.width / 2 / 16 + 1;
					for (int n = num48 - num50; n <= num48 + num50; n++)
					{
						for (int num51 = num49 - num50; num51 <= num49 + num50; num51++)
						{
							if ((n == num48 - num50 || n == num48 + num50 || num51 == num49 - num50 || num51 == num49 + num50) && !Main.tile[n, num51].active())
							{
								Main.tile[n, num51].type = ((ushort)(WorldGen.crimson ? 347 : 140));
								Main.tile[n, num51].active(true);
							}
							Main.tile[n, num51].lava(false);
							Main.tile[n, num51].liquid = 0;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, n, num51, 1, TileChangeType.None);
							}
							else
							{
								WorldGen.SquareTileFrame(n, num51, true);
							}
						}
					}
				}
			}
			if (this.type == 439)
			{
				NpcMgr.downedAncientCultist = true;
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3372, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3549, 1, false, -1, false, false);
				WorldGen.TriggerLunarApocalypse();
			}
			if (this.type == 398)
			{
				NpcMgr.downedMoonlord = true;
				NPC.LunarApocalypseIsUp = false;
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3373, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3384, 1, false, -1, false, false);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3460, Main.rand.Next(70, 91), false, -1, false, false);
					int num52 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						3063,
						3389,
						3065,
						1553,
						3546,
						3541,
						3570,
						3571,
						3569
					});
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num52, 1, false, -1, false, false);
				}
			}
			num = this.type;
			if (num <= 493)
			{
				switch (num)
				{
					case 402:
					case 405:
					case 407:
					case 409:
					case 411:
						if ((this.type != 406 || Main.rand.Next(3) == 0) && NpcMgr.ShieldStrengthTowerStardust > 0)
						{
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(493), 0f);
							goto IL_9B4C;
						}
						goto IL_9B4C;
					case 403:
					case 404:
					case 406:
					case 408:
					case 410:
					case 428:
						goto IL_9B4C;
					case 412:
					case 413:
					case 414:
					case 415:
					case 416:
					case 417:
					case 418:
					case 419:
						break;
					case 420:
					case 421:
					case 423:
					case 424:
						if (NpcMgr.ShieldStrengthTowerNebula > 0)
						{
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(507), 0f);
							goto IL_9B4C;
						}
						goto IL_9B4C;
					case 422:
						{
							int num53 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num53 = (int)((float)num53 * 1.5f);
							}
							for (int num54 = 0; num54 < num53; num54++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3456, Main.rand.Next(1, 4), false, 0, false, false);
							}
							NpcMgr.downedTowerVortex = true;
                            NpcMgr.TowerActiveVortex = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							goto IL_9B4C;
						}
					case 425:
					case 426:
					case 427:
					case 429:
                        if (NpcMgr.ShieldStrengthTowerVortex > 0)
						{
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(422), 0f);
							goto IL_9B4C;
						}
						goto IL_9B4C;
					default:
						{
							if (num != 493)
							{
								goto IL_9B4C;
							}
							int num55 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num55 = (int)((float)num55 * 1.5f);
							}
							for (int num56 = 0; num56 < num55; num56++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3459, Main.rand.Next(1, 4), false, 0, false, false);
							}
							NpcMgr.downedTowerStardust = true;
							NpcMgr.TowerActiveStardust = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							goto IL_9B4C;
						}
				}
			}
			else
			{
				if (num == 507)
				{
					int num57 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num57 = (int)((float)num57 * 1.5f);
					}
					for (int num58 = 0; num58 < num57; num58++)
					{
						Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3457, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NpcMgr.downedTowerNebula = true;
                    NpcMgr.TowerActiveNebula = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_9B4C;
				}
				if (num == 517)
				{
					int num59 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num59 = (int)((float)num59 * 1.5f);
					}
					for (int num60 = 0; num60 < num59; num60++)
					{
						Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3458, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NpcMgr.downedTowerSolar = true;
                    NpcMgr.TowerActiveSolar = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_9B4C;
				}
				if (num != 518)
				{
					goto IL_9B4C;
				}
			}
			if (NpcMgr.ShieldStrengthTowerSolar > 0)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(517), 0f);
			}
			IL_9B4C:
			num = this.type;
			switch (num)
			{
				case 381:
				case 382:
				case 383:
				case 385:
				case 386:
				case 389:
				case 390:
					break;
				case 384:
				case 387:
				case 388:
					goto IL_9BDC;
				default:
					if (num != 520)
					{
						goto IL_9BDC;
					}
					break;
			}
			if (Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2860, Main.rand.Next(8, 21), false, 0, false, false);
			}
			IL_9BDC:
			num = this.type;
			if (num == 383 || num == 386 || num == 389)
			{
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2806, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2807, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2808, 1, false, 0, false, false);
				}
			}
			num = this.type;
			if (num - 381 <= 1 || num == 385 || num == 390)
			{
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2803, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2804, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2805, 1, false, 0, false, false);
				}
			}
			if (this.type == 395)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Utils.SelectRandom<int>(Main.rand, new int[]
				{
					2797,
					2749,
					2795,
					2798,
					2796,
					2882,
					2880,
					2769,
					2800
				}), 1, false, 0, false, false);
			}
			if (this.type == 390 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2771, 1, false, 0, false, false);
			}
			if ((this.type == 116 || this.type == 117 || this.type == 118 || this.type == 119) && (!Main.expertMode || Main.rand.Next(5) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 139 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1303, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false, false);
			}
			if (this.type == 481 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3094, Main.rand.Next(40, 81), false, 0, false, false);
			}
			if (this.type == 481 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3187 + Main.rand.Next(3), 1, false, 0, false, false);
			}
			if (this.type == 21 || this.type == 44 || this.type == 167 || this.type == 201 || this.type == 202 || this.type == 481 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || (this.type >= 449 && this.type <= 452))
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false, false);
				}
				else if (this.type == 44)
				{
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false, false);
					}
				}
			}
			if (this.type == 45)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 238, 1, false, 0, false, false);
			}
			if (this.type == 50)
			{
				if (Main.slimeRain)
				{
					Main.StopSlimeRain(true);
					AchievementsHelper.NotifyProgressionEvent(16);
				}
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(4) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2430, 1, false, 0, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2493, 1, false, -1, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false, false);
					Main.rand.Next(2);
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2585, 1, false, 0, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2610, 1, false, 0, false, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 998, 1, false, 0, false, false);
				}
				NpcMgr.downedSlimeKing = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 23 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 116, 1, false, 0, false, false);
			}
			if (this.type == 24 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 244, 1, false, 0, false, false);
			}
			if (this.type == 31 || this.type == 32 || this.type == 34)
			{
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 932, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3095, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(65) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false, false);
				}
				else if (!Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(2, 7), false, 0, false, false);
				}
			}
			if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111)
			{
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 160, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					int stack4 = Main.rand.Next(1, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 161, stack4, false, 0, false, false);
				}
			}
			if (this.type == 175 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1265, 1, false, -1, false, false);
			}
			if ((this.type == 42 || (this.type >= 231 && this.type <= 235)) && (Main.expertMode || Main.rand.Next(3) != 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false, false);
			}
			if (this.type == 204 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false, false);
			}
			if (this.type == 43 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 210, 1, false, 0, false, false);
			}
			if (this.type == 65)
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 268, 1, false, 0, false, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
				}
			}
			if (this.type == 48 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 320, 1, false, 0, false, false);
			}
			if (this.type == 541)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3783, 1, false, 0, false, false);
			}
			if (this.type == 542 && Main.rand.Next(8) == 0)
			{
				int num61 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
				Main.item[num61].color = new Color(189, 148, 96, 255);
				NetMessage.SendData(88, -1, -1, null, num61, 1f, 0f, 0f, 0, 0, 0);
			}
			if (this.type == 543 || this.type == 544)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false, false);
				}
				if (Main.rand.Next(8) == 0)
				{
					int num62 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
					if (this.type == 544)
					{
						Main.item[num62].color = new Color(145, 27, 40, 255);
					}
					else
					{
						Main.item[num62].color = new Color(112, 85, 89, 255);
					}
					NetMessage.SendData(88, -1, -1, null, num62, 1f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 545)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false, false);
				}
				if (Main.rand.Next(8) == 0)
				{
					int num63 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false, false);
					Main.item[num63].color = new Color(158, 113, 164, 255);
					NetMessage.SendData(88, -1, -1, null, num63, 1f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 125 || this.type == 126)
			{
				int num64 = 125;
				if (this.type == 125)
				{
					num64 = 126;
				}
				if (!NPC.AnyNPCs(num64))
				{
					if (Main.expertMode)
					{
						this.DropBossBags();
					}
					else
					{
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2106, 1, false, -1, false, false);
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
					}
				}
				else
				{
					this.value = 0f;
					this.boss = false;
				}
			}
			else if (Main.expertMode)
			{
				if (this.type == 127 || this.type == 134)
				{
					this.DropBossBags();
				}
			}
			else if (this.type == 127)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2107, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
			}
			else if (this.type == 134)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2113, 1, false, -1, false, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
			}
			if (this.type == 262)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2109, 1, false, -1, false, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, Main.rand.Next(2, 4), false, -1, false, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, 1, false, -1, false, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1182, 1, false, -1, false, false);
					}
					if (Main.rand.Next(50) == 0 || (Main.expertMode && Main.rand.Next(50) == 0))
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1305, 1, false, -1, false, false);
					}
					if (Main.rand.Next(4) == 0 || Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1157, 1, false, -1, false, false);
					}
					if (Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3021, 1, false, -1, false, false);
					}
					int num65 = 1;
					if (Main.expertMode)
					{
						num65 = 2;
					}
					int num66 = 0;
					for (int num67 = 0; num67 < num65; num67++)
					{
						int num68 = Main.rand.Next(7);
						if (!NpcMgr.downedPlantBoss)
						{
							num68 = 0;
						}
						if (num67 == 0)
						{
							num66 = num68;
						}
						else
						{
							while (num66 == num68)
							{
								num68 = Main.rand.Next(7);
							}
						}
						if (num68 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 758, 1, false, -1, false, false);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 771, Main.rand.Next(50, 150), false, 0, false, false);
						}
						else if (num68 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1255, 1, false, -1, false, false);
						}
						else if (num68 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 788, 1, false, -1, false, false);
						}
						else if (num68 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1178, 1, false, -1, false, false);
						}
						else if (num68 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1259, 1, false, -1, false, false);
						}
						else if (num68 == 5)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1155, 1, false, -1, false, false);
						}
						else if (num68 == 6)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3018, 1, false, -1, false, false);
						}
					}
				}
				bool arg_B32B_0 = NpcMgr.downedPlantBoss;
				NpcMgr.downedPlantBoss = true;
				if (!arg_B32B_0)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Lang.misc[33].Value, 50, 255, 130, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.BroadcastChatMessage(NetworkText.FromKey(Lang.misc[33].Key, new object[0]), new Color(50, 255, 130), -1);
					}
				}
			}
			if ((this.boss || this.type == 125 || this.type == 126 || this.type == 491 || this.type == 551 || this.type == 576 || this.type == 577 || this.type == 564 || this.type == 565) && Main.rand.Next(10) == 0)
			{
				if (this.type == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1360, 1, false, 0, false, false);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1361, 1, false, 0, false, false);
				}
				if (this.type == 266)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1362, 1, false, 0, false, false);
				}
				if (this.type == 35)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1363, 1, false, 0, false, false);
				}
				if (this.type == 222)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1364, 1, false, 0, false, false);
				}
				if (this.type == 113)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1365, 1, false, 0, false, false);
				}
				if (this.type == 134)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1366, 1, false, 0, false, false);
				}
				if (this.type == 127)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1367, 1, false, 0, false, false);
				}
				if (this.type == 125)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1368, 1, false, 0, false, false);
				}
				if (this.type == 126)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1369, 1, false, 0, false, false);
				}
				if (this.type == 262)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1370, 1, false, 0, false, false);
				}
				if (this.type == 245)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1371, 1, false, 0, false, false);
				}
				if (this.type == 50)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2489, 1, false, 0, false, false);
				}
				if (this.type == 370)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2589, 1, false, 0, false, false);
				}
				if (this.type == 439)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3357, 1, false, 0, false, false);
				}
				if (this.type == 491)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3359, 1, false, 0, false, false);
				}
				if (this.type == 395)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3358, 1, false, 0, false, false);
				}
				if (this.type == 398)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3595, 1, false, 0, false, false);
				}
				if (this.type == 551)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3866, 1, false, 0, false, false);
				}
				if (this.type == 564 || this.type == 565)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3867, 1, false, 0, false, false);
				}
				if (this.type == 576 || this.type == 577)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3868, 1, false, 0, false, false);
				}
			}
			if (this.boss)
			{
				if (this.type == 4)
				{
					NpcMgr.downedBoss1 = true;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					NpcMgr.downedBoss2 = true;
				}
				else if (this.type == 266)
				{
					NpcMgr.downedBoss2 = true;
				}
				else if (this.type == 35)
				{
					NpcMgr.downedBoss3 = true;
				}
				if (this.type == 127)
				{
					NpcMgr.downedMechBoss3 = true;
					NpcMgr.downedMechBossAny = true;
				}
				if (this.type == 134)
				{
					NpcMgr.downedMechBoss1 = true;
					NpcMgr.downedMechBossAny = true;
				}
				string typeName = this.TypeName;
				int stack5 = Main.rand.Next(5, 16);
				int num69 = 28;
				if (this.type == 113)
				{
					num69 = 188;
				}
				else if (this.type == 222)
				{
					num69 = 1134;
				}
				else if (this.type > 113 && this.type < 222)
				{
					num69 = 499;
				}
				else if (this.type == 245 || this.type == 262)
				{
					num69 = 499;
				}
				else if (this.type == 370)
				{
					num69 = 499;
				}
				else if (this.type == 395)
				{
					num69 = 499;
				}
				else if (this.type == 439)
				{
					num69 = 499;
				}
				else if (this.type == 398)
				{
					num69 = 499;
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num69, stack5, false, 0, false, false);
				int num70 = Main.rand.Next(5) + 5;
				for (int num71 = 0; num71 < num70; num71++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
				if (this.type == 125 || this.type == 126)
				{
					NpcMgr.downedMechBoss2 = true;
					NpcMgr.downedMechBossAny = true;
					if (Main.netMode == 0)
					{
						Main.NewText(Language.GetTextValue("Announcement.HasBeenDefeated_Plural", Language.GetTextValue("Enemies.TheTwins")), 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.BroadcastChatMessage(NetworkText.FromKey("Announcement.HasBeenDefeated_Plural", new object[]
						{
							NetworkText.FromKey("Enemies.TheTwins", new object[0])
						}), new Color(175, 75, 255), -1);
					}
				}
				else if (this.type == 398)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Language.GetTextValue("Announcement.HasBeenDefeated_Single", Language.GetTextValue("Enemies.MoonLord")), 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.BroadcastChatMessage(NetworkText.FromKey("Announcement.HasBeenDefeated_Single", new object[]
						{
							NetworkText.FromKey("Enemies.MoonLord", new object[0])
						}), new Color(175, 75, 255), -1);
					}
				}
				else if (Main.netMode == 0)
				{
					Main.NewText(Language.GetTextValue("Announcement.HasBeenDefeated_Single", typeName), 175, 75, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.BroadcastChatMessage(NetworkText.FromKey("Announcement.HasBeenDefeated_Single", new object[]
					{
						this.GetTypeNetName()
					}), new Color(175, 75, 255), -1);
				}
				if (this.type == 113 && Main.netMode != 1)
				{
					bool hardMode = Main.hardMode;
					WorldGen.StartHardmode();
					if (NpcMgr.downedMechBoss1 && NpcMgr.downedMechBoss2 && NpcMgr.downedMechBoss3 && !hardMode)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(Lang.misc[32].Value, 50, 255, 130, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.BroadcastChatMessage(NetworkText.FromKey(Lang.misc[32].Key, new object[0]), new Color(50, 255, 130), -1);
						}
					}
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (!flag && NpcMgr.downedMechBoss1 && NpcMgr.downedMechBoss2 && NpcMgr.downedMechBoss3 && Main.hardMode)
			{
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[32].Value, 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.BroadcastChatMessage(NetworkText.FromKey(Lang.misc[32].Key, new object[0]), new Color(50, 255, 130), -1);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num72 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.rand.Next(2) == 0 && Main.player[num72].statMana < Main.player[num72].statManaMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2) == 0 && Main.player[num72].statLife < Main.player[num72].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(2) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num73 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.player[num73].statMana < Main.player[num73].statManaMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false, false);
				}
			}
			float num74 = this.value;
			if (this.midas)
			{
				num74 *= 1f + (float)Main.rand.Next(10, 50) * 0.01f;
			}
			num74 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
			if (Main.rand.Next(5) == 0)
			{
				num74 *= 1f + (float)Main.rand.Next(5, 11) * 0.01f;
			}
			if (Main.rand.Next(10) == 0)
			{
				num74 *= 1f + (float)Main.rand.Next(10, 21) * 0.01f;
			}
			if (Main.rand.Next(15) == 0)
			{
				num74 *= 1f + (float)Main.rand.Next(15, 31) * 0.01f;
			}
			if (Main.rand.Next(20) == 0)
			{
				num74 *= 1f + (float)Main.rand.Next(20, 41) * 0.01f;
			}
			num74 += this.extraValue;
			while ((int)num74 > 0)
			{
				if (num74 > 1000000f)
				{
					int num75 = (int)(num74 / 1000000f);
					if (num75 > 50 && Main.rand.Next(5) == 0)
					{
						num75 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num75 /= Main.rand.Next(3) + 1;
					}
					num74 -= (float)(1000000 * num75);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 74, num75, false, 0, false, false);
				}
				else if (num74 > 10000f)
				{
					int num76 = (int)(num74 / 10000f);
					if (num76 > 50 && Main.rand.Next(5) == 0)
					{
						num76 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num76 /= Main.rand.Next(3) + 1;
					}
					num74 -= (float)(10000 * num76);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 73, num76, false, 0, false, false);
				}
				else if (num74 > 100f)
				{
					int num77 = (int)(num74 / 100f);
					if (num77 > 50 && Main.rand.Next(5) == 0)
					{
						num77 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num77 /= Main.rand.Next(3) + 1;
					}
					num74 -= (float)(100 * num77);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 72, num77, false, 0, false, false);
				}
				else
				{
					int num78 = (int)num74;
					if (num78 > 50 && Main.rand.Next(5) == 0)
					{
						num78 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num78 /= Main.rand.Next(4) + 1;
					}
					if (num78 < 1)
					{
						num78 = 1;
					}
					num74 -= (float)num78;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 71, num78, false, 0, false, false);
				}
			}
		}

		// Token: 0x06000262 RID: 610 RVA: 0x0019A914 File Offset: 0x00198B14
		public void PlayerInteraction(int player)
		{
			bool flag;
			if (this.realLife >= 0)
			{
				flag = Main.npc[this.realLife].playerInteraction[player];
			}
			else
			{
				flag = this.playerInteraction[player];
			}
			if (flag)
			{
				return;
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				for (int i = 0; i < 200; i++)
				{
					if (i != this.whoAmI && Main.npc[i].active && (Main.npc[i].type == 13 || Main.npc[i].type == 14 || Main.npc[i].type == 15))
					{
						Main.npc[i].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 134 || this.type == 135 || this.type == 136)
			{
				for (int j = 0; j < 200; j++)
				{
					if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 134 || Main.npc[j].type == 135 || Main.npc[j].type == 136))
					{
						Main.npc[j].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 35 || this.type == 36)
			{
				for (int k = 0; k < 200; k++)
				{
					if (k != this.whoAmI && Main.npc[k].active && (Main.npc[k].type == 35 || Main.npc[k].type == 36))
					{
						Main.npc[k].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 113 || this.type == 114)
			{
				for (int l = 0; l < 200; l++)
				{
					if (l != this.whoAmI && Main.npc[l].active && (Main.npc[l].type == 113 || Main.npc[l].type == 114))
					{
						Main.npc[l].ApplyInteraction(player);
					}
				}
			}
			if (this.type >= 127 && this.type <= 131)
			{
				for (int m = 0; m < 200; m++)
				{
					if (m != this.whoAmI && Main.npc[m].active && Main.npc[m].type >= 127 && Main.npc[m].type <= 131)
					{
						Main.npc[m].ApplyInteraction(player);
					}
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				for (int n = 0; n < 200; n++)
				{
					if (n != this.whoAmI && Main.npc[n].active && Main.npc[n].type >= 245 && Main.npc[n].type <= 249)
					{
						Main.npc[n].ApplyInteraction(player);
					}
				}
			}
			if ((this.type == 396 || this.type == 397) && Main.npc[(int)this.ai[3]].active && Main.npc[(int)this.ai[3]].type == 398)
			{
				Main.npc[(int)this.ai[3]].ApplyInteraction(player);
			}
			if ((this.type == 393 || this.type == 394) && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 395)
			{
				Main.npc[(int)this.ai[0]].ApplyInteraction(player);
			}
			if (this.type == 492 && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 491)
			{
				Main.npc[(int)this.ai[0]].ApplyInteraction(player);
			}
			this.ApplyInteraction(player);
		}

		// Token: 0x06000246 RID: 582 RVA: 0x00178FE4 File Offset: 0x001771E4
		public void ReflectProjectile(int i)
		{
			if (this.HitSound != null)
			{
				Main.PlaySound(this.HitSound, Main.projectile[i].position);
			}
			for (int j = 0; j < 3; j++)
			{
				int num = Dust.NewDust(Main.projectile[i].position, Main.projectile[i].width, Main.projectile[i].height, 31, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num].velocity *= 0.3f;
			}
			Main.projectile[i].hostile = true;
			Main.projectile[i].friendly = false;
			Vector2 vector = Main.player[Main.projectile[i].owner].Center - Main.projectile[i].Center;
			vector.Normalize();
			vector *= Main.projectile[i].oldVelocity.Length();
			Main.projectile[i].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
			Main.projectile[i].velocity.Normalize();
			Main.projectile[i].velocity *= vector.Length();
			Main.projectile[i].velocity += vector * 20f;
			Main.projectile[i].velocity.Normalize();
			Main.projectile[i].velocity *= vector.Length();
			Main.projectile[i].damage /= 2;
			Main.projectile[i].penetrate = 1;
		}

		// Token: 0x06000245 RID: 581 RVA: 0x00178F8C File Offset: 0x0017718C
		public void ReflectProjectiles(Rectangle myRect)
		{
			for (int i = 0; i < 1000; i++)
			{
				if (Main.projectile[i].active && Main.projectile[i].CanReflect())
				{
					Rectangle hitbox = Main.projectile[i].Hitbox;
					if (myRect.Intersects(hitbox))
					{
						this.ReflectProjectile(i);
					}
				}
			}
		}

		// Token: 0x06000265 RID: 613 RVA: 0x0019AE58 File Offset: 0x00199058
		public static void ReleaseNPC(int x, int y, int Type, int Style, int who)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(71, -1, -1, null, x, (float)y, (float)Type, (float)Style, 0, 0, 0);
				return;
			}
			if (Type >= 0 && Type < 580 && Main.npcCatchable[Type] && NPC.CanReleaseNPCs(who))
			{
				if (Type == 148)
				{
					int num = Type + Main.rand.Next(2);
					int num2 = NPC.NewNPC(x, y, num, 0, 0f, 0f, 0f, 0f, 255);
					Main.npc[num2].releaseOwner = (short)who;
					return;
				}
				int num3 = NPC.NewNPC(x, y, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Type == 356)
				{
					Main.npc[num3].ai[2] = (float)Style;
				}
				Main.npc[num3].releaseOwner = (short)who;
			}
		}

		// Token: 0x0600025C RID: 604 RVA: 0x0018E198 File Offset: 0x0018C398
		public static void ResetKillCount()
		{
			for (int i = 0; i < 580; i++)
			{
				NPC.killCount[i] = 0;
			}
		}

		// Token: 0x06000233 RID: 563 RVA: 0x00101DE8 File Offset: 0x000FFFE8
		public void scaleStats()
		{
			if (!Main.expertMode)
			{
				return;
			}
			if (this.friendly)
			{
				int arg_1C_0 = this.life;
			}
			if ((this.type < 0 || !NPCID.Sets.NeedsExpertScaling[this.type]) && (this.life <= 5 || this.damage == 0 || this.friendly || this.townNPC))
			{
				return;
			}
			bool flag = this.type >= 0 && NPCID.Sets.ProjectileNPC[this.type];
			if (this.type != 5 && (this.type < 13 || this.type > 15) && this.type != 267 && (this.type < 113 || this.type > 119) && Main.hardMode && !this.boss && this.lifeMax < 1000)
			{
				int num = this.damage + this.defense + this.lifeMax / 4;
				if (num == 0)
				{
					num = 1;
				}
				int num2 = 80;
				if (NpcMgr.downedPlantBoss)
				{
					num2 += 20;
				}
				if (num < num2)
				{
					float num3 = (float)(num2 / num);
					this.damage = (int)((double)((float)this.damage * num3) * 0.9);
					if (!flag)
					{
						this.defense = (int)((float)this.defense * num3);
						this.lifeMax = (int)((double)((float)this.lifeMax * num3) * 1.1);
						this.value = (float)((int)((double)(this.value * num3) * 0.8));
					}
				}
			}
			if (this.type == 210 || this.type == 211)
			{
				this.damage = (int)((float)this.damage * 0.6f);
				this.lifeMax = (int)((float)this.lifeMax * 0.8f);
				this.defense = (int)((float)this.defense * 0.8f);
			}
			if (!flag)
			{
				this.value = (float)((int)((double)this.value * 2.5));
				this.lifeMax = (int)((float)this.lifeMax * Main.expertLife);
			}
			this.damage = (int)((float)this.damage * Main.expertDamage);
			this.knockBackResist *= Main.expertKnockBack;
			int num4 = 0;
			float num5 = 1f;
			float num6 = 0.35f;
			if (Main.netMode != 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active)
					{
						num4++;
					}
				}
				for (int j = 1; j < num4; j++)
				{
					num5 += num6;
					num6 += (1f - num6) / 3f;
				}
			}
			if (num5 > 8f)
			{
				num5 = (num5 * 2f + 8f) / 3f;
			}
			if (num5 > 1000f)
			{
				num5 = 1000f;
			}
			if (this.type == 5)
			{
				this.lifeMax = (int)((float)this.lifeMax * 0.75f);
			}
			if (this.type == 4)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)num5);
			}
			if (this.type >= 13 && this.type <= 15)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (this.type == 13)
				{
					this.damage = (int)((double)this.damage * 1.1);
				}
				if (this.type == 14)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				if (this.type == 15)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				this.scale *= 1.2f;
				this.defense += 2;
			}
			if (this.type == 266)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)num5);
				this.damage = (int)((double)this.damage * 0.9);
				this.scale *= 1.05f;
			}
			if (this.type == 50)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 471)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(num5 * 2f + 1f) / 3.0);
			}
			if (this.type == 472)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(num5 + 1f) / 2.0);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 222)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 0.9);
			}
			if (this.type == 210 || this.type == 211)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
			}
			if (this.type == 35)
			{
				this.lifeMax = (int)((float)this.lifeMax * num5);
				this.damage = (int)((double)this.damage * 1.1);
			}
			else if (this.type == 36)
			{
				this.lifeMax = (int)((double)this.lifeMax * 1.3 * (double)num5);
				this.damage = (int)((double)this.damage * 1.1);
			}
			if (this.type == 113 || this.type == 114)
			{
				this.defense += 6;
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 1.5);
			}
			else if (this.type == 115)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (num4 > 1)
				{
					this.knockBackResist *= 1f - num6;
				}
				this.defense += 6;
			}
			else if (this.type == 116)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (num4 > 1)
				{
					this.knockBackResist *= 1f - num6;
				}
			}
			else if (this.type == 117 || this.type == 118 || this.type == 119)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.8);
			}
			if (this.type >= 134 && this.type <= 136)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				if (this.type == 134)
				{
					this.damage *= 2;
				}
				if (this.type == 135)
				{
					this.damage = (int)((double)this.damage * 0.85);
				}
				if (this.type == 136)
				{
					this.damage = (int)((double)this.damage * 0.85);
				}
				this.scale *= 1.05f;
			}
			else if (this.type == 139)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)(num5 * 2f + 1f) / 3.0);
				this.damage = (int)((double)this.damage * 0.8);
				this.scale *= 1.05f;
			}
			if (this.type >= 127 && this.type <= 131)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 125 && this.type <= 126)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 262 && this.type <= 262)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 1.15);
			}
			if (this.type >= 245 && this.type <= 249)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 370)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.6 * (double)num5);
				this.damage = (int)((double)this.damage * 0.7);
			}
			else if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				if (this.type != 371)
				{
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
				}
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 439 || this.type == 440 || (this.type >= 454 && this.type <= 459) || this.type == 522 || this.type == 523)
			{
				if (this.type != 522)
				{
					this.lifeMax = (int)((float)this.lifeMax * 0.625f * num5);
				}
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 397 || this.type == 396 || this.type == 398)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 551)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.65);
			}
			switch (this.type)
			{
				case 305:
				case 306:
				case 307:
				case 308:
				case 309:
				case 310:
				case 311:
				case 312:
				case 313:
				case 314:
				case 315:
				case 326:
				case 329:
				case 330:
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
					this.damage = (int)((double)this.damage * 0.75);
					break;
				case 325:
				case 327:
					this.lifeMax = (int)((double)this.lifeMax * 0.65);
					this.damage = (int)((double)this.damage * 0.75);
					break;
			}
			switch (this.type)
			{
				case 338:
				case 339:
				case 340:
				case 341:
				case 342:
				case 343:
				case 347:
				case 348:
				case 349:
				case 350:
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
					this.damage = (int)((double)this.damage * 0.75);
					break;
				case 344:
				case 345:
				case 346:
					this.lifeMax = (int)((double)this.lifeMax * 0.65);
					this.damage = (int)((double)this.damage * 0.75);
					break;
			}
			this.defDefense = this.defense;
			this.defDamage = this.damage;
			this.life = this.lifeMax;
		}

		// Token: 0x06000230 RID: 560 RVA: 0x000EFE1C File Offset: 0x000EE01C
		public void SetDefaults(int Type, float scaleOverride = -1f)
		{
			if (Type < 0)
			{
				this.SetDefaultsFromNetId(Type);
				return;
			}
			this.waterMovementSpeed = (this.lavaMovementSpeed = 0.5f);
			this.honeyMovementSpeed = 0.25f;
			this.altTexture = 0;
			this.nameOver = 0f;
			this.takenDamageMultiplier = 1f;
			this.extraValue = 0f;
			for (int i = 0; i < this.playerInteraction.Length; i++)
			{
				this.playerInteraction[i] = false;
			}
			this.rarity = 0;
			this.dontCountMe = false;
			this.releaseOwner = 255;
			this.catchItem = 0;
			this.npcNameLookup = 0;
			this.netStream = 32;
			bool flag = false;
			this.netID = 0;
			this.netAlways = false;
			this.netSpam = 0;
			this.SpawnedFromStatue = false;
			int num = 10;
			if (Type >= 0)
			{
				num = NPCID.Sets.TrailCacheLength[Type];
			}
			if (num != this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, num);
				Array.Resize<float>(ref this.oldRot, num);
			}
			for (int j = 0; j < this.oldPos.Length; j++)
			{
				this.oldRot[j] = 0f;
				this.oldPos[j].X = 0f;
				this.oldPos[j].Y = 0f;
			}
			for (int k = 0; k < 5; k++)
			{
				this.buffTime[k] = 0;
				this.buffType[k] = 0;
			}
			for (int l = 0; l < 206; l++)
			{
				this.buffImmune[l] = false;
			}
			this.setFrameSize = false;
			this.buffImmune[31] = true;
			this.netSkip = -2;
			this.realLife = -1;
			this.lifeRegen = 0;
			this.lifeRegenExpectedLossPerSecond = -1;
			this.lifeRegenCount = 0;
			this.poisoned = false;
			this.soulDrain = false;
			this.venom = false;
			this.shadowFlame = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.confused = false;
			this.loveStruck = false;
			this.dontTakeDamageFromHostiles = false;
			this.stinky = false;
			this.dryadWard = false;
			this.onFire2 = false;
			this.justHit = false;
			this.dontTakeDamage = false;
			this.npcSlots = 1f;
			this.lavaImmune = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.townNPC = false;
			this.homeless = false;
			this.homeTileX = -1;
			this.homeTileY = -1;
			this.friendly = false;
			this.behindTiles = false;
			this.boss = false;
			this.noTileCollide = false;
			this.rotation = 0f;
			this.active = true;
			this.alpha = 0;
			this.color = default(Color);
			this.collideX = false;
			this.collideY = false;
			this.direction = 0;
			this.oldDirection = this.direction;
			this.frameCounter = 0.0;
			this.netUpdate = true;
			this.netUpdate2 = false;
			this.knockBackResist = 1f;
			this.GivenName = "";
			this.noGravity = false;
			this.scale = 1f;
			this.HitSound = null;
			this.DeathSound = null;
			this.spriteDirection = -1;
			this.target = 255;
			this.oldTarget = this.target;
			this.targetRect = default(Rectangle);
			this.timeLeft = NPC.activeTime;
			this.type = Type;
			this.value = 0f;
			this.coldDamage = false;
			this.trapImmune = false;
			this.hide = false;
			this.immortal = false;
			this.chaseable = true;
			this.breath = 200;
			this.breathCounter = 0;
			this.reflectingProjectiles = false;
			this.canGhostHeal = true;
			this.javelined = false;
			this.daybreak = false;
			this.celled = false;
			this.dryadBane = false;
			this.betsysCurse = false;
			this.oiled = false;
			for (int m = 0; m < NPC.maxAI; m++)
			{
				this.ai[m] = 0f;
			}
			for (int n = 0; n < NPC.maxAI; n++)
			{
				this.localAI[n] = 0f;
			}
			if (this.type == 1)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 175;
				this.color = new Color(0, 80, 255, 100);
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 2)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 3)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 430)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 431)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 432)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 433)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 434)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 435)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 436)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 4)
			{
				this.width = 100;
				this.height = 110;
				this.aiStyle = 4;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 2800;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 30000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 5)
			{
				this.width = 20;
				this.height = 20;
				this.aiStyle = 5;
				this.damage = 12;
				this.defense = 0;
				this.lifeMax = 8;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 6)
			{
				this.npcSlots = 1f;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 7)
			{
				this.npcSlots = 3.5f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 31;
				this.defense = 2;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.netAlways = true;
			}
			else if (this.type == 8)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 9)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 10;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 10)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 8;
				this.defense = 0;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
			}
			else if (this.type == 11)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 4;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 12)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 6;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 13)
			{
				this.npcSlots = 5f;
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 2;
				this.lifeMax = 65;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 14)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 4;
				this.lifeMax = 150;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 15)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 16)
			{
				this.npcSlots = 2f;
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 20;
				this.defense = 7;
				this.lifeMax = 90;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 75f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 17)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 18)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 19)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 20)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 21)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 22)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 23)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 6;
				this.lifeMax = 26;
				this.HitSound = SoundID.NPCHit3;
				this.DeathSound = SoundID.NPCDeath3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 80f;
				this.knockBackResist = 0.4f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 24)
			{
				this.npcSlots = 3f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 30;
				this.defense = 16;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.lavaImmune = true;
				this.value = 350f;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 25)
			{
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = SoundID.NPCHit3;
				this.DeathSound = SoundID.NPCDeath3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 100;
			}
			else if (this.type == 31)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 8;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 32)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 140f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 33)
			{
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = SoundID.NPCHit3;
				this.DeathSound = SoundID.NPCDeath3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 255;
				this.knockBackResist = 0f;
			}
			else if (this.type == 34)
			{
				this.width = 26;
				this.height = 28;
				this.aiStyle = 10;
				this.damage = 35;
				this.defense = 6;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 35)
			{
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 32;
				this.defense = 10;
				this.lifeMax = 4400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
			}
			else if (this.type == 36)
			{
				this.width = 52;
				this.height = 52;
				this.aiStyle = 12;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 600;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 37)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 38)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 39)
			{
				this.npcSlots = 6f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 40)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 41)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 10;
				this.defense = 18;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 42)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 48;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.5f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 43)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 34;
				this.defense = 10;
				this.lifeMax = 110;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 350f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 44)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 9;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 250f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 45)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 4;
			}
			else if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 540)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2019;
			}
			else if (this.type == 47)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 48)
			{
				this.width = 24;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 300f;
			}
			else if (this.type == 49)
			{
				this.npcSlots = 0.5f;
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 13;
				this.defense = 2;
				this.lifeMax = 16;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 50)
			{
				this.boss = true;
				this.width = 98;
				this.height = 92;
				this.aiStyle = 15;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 2000;
				this.knockBackResist = 0f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 30;
				this.value = 10000f;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.timeLeft = NPC.activeTime * 30;
			}
			else if (this.type == 51)
			{
				this.npcSlots = 0.5f;
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 34;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 52)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 53)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 54)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 55)
			{
				this.noGravity = true;
				this.width = 20;
				this.height = 18;
				this.aiStyle = 16;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.catchItem = 261;
			}
			else if (this.type == 56)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 90f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 57)
			{
				this.noGravity = true;
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
			}
			else if (this.type == 58)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 25;
				this.defense = 2;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 50f;
			}
			else if (this.type == 59)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 15;
				this.defense = 10;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.scale = 1.1f;
				this.alpha = 50;
				this.lavaImmune = true;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 60)
			{
				this.npcSlots = 0.5f;
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 35;
				this.defense = 8;
				this.lifeMax = 46;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 120f;
				this.scale = 1.1f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 61)
			{
				this.width = 36;
				this.height = 36;
				this.aiStyle = 17;
				this.damage = 15;
				this.defense = 4;
				this.lifeMax = 40;
				this.knockBackResist = 0.8f;
				this.HitSound = SoundID.NPCHit28;
				this.DeathSound = SoundID.NPCDeath31;
				this.value = 60f;
			}
			else if (this.type == 62)
			{
				this.npcSlots = 2f;
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 120;
				this.HitSound = SoundID.NPCHit21;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath24;
				this.value = 300f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 63)
			{
				this.noGravity = true;
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 25;
				this.defense = 4;
				this.lifeMax = 34;
				this.HitSound = SoundID.NPCHit25;
				this.DeathSound = SoundID.NPCDeath28;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 64)
			{
				this.noGravity = true;
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit25;
				this.DeathSound = SoundID.NPCDeath28;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 65)
			{
				this.noGravity = true;
				this.width = 100;
				this.height = 24;
				this.aiStyle = 16;
				this.damage = 40;
				this.defense = 2;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 66)
			{
				this.npcSlots = 2f;
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 140;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 1000f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 67)
			{
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 60f;
			}
			else if (this.type == 68)
			{
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 1000;
				this.defense = 9999;
				this.lifeMax = 9999;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
			}
			else if (this.type == 69)
			{
				this.width = 24;
				this.height = 24;
				this.aiStyle = 19;
				this.damage = 10;
				this.defense = 6;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit31;
				this.DeathSound = SoundID.NPCDeath34;
				this.knockBackResist = 0f;
				this.value = 60f;
				this.behindTiles = true;
			}
			else if (this.type == 70)
			{
				this.npcSlots = 0.3f;
				this.width = 34;
				this.height = 34;
				this.aiStyle = 20;
				this.damage = 32;
				this.defense = 100;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.scale = 1.5f;
			}
			else if (this.type == 71)
			{
				this.npcSlots = 2f;
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 30;
				this.defense = 7;
				this.lifeMax = 150;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 60;
				this.value = 150f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 72)
			{
				this.npcSlots = 0.3f;
				this.width = 34;
				this.height = 34;
				this.aiStyle = 21;
				this.damage = 24;
				this.defense = 100;
				this.lifeMax = 100;
				this.alpha = 100;
				this.behindTiles = true;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 73)
			{
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				if (this.type == 74)
				{
					this.catchItem = 2015;
				}
				if (this.type == 297)
				{
					this.catchItem = 2016;
				}
				if (this.type == 298)
				{
					this.catchItem = 2017;
				}
				this.npcSlots = 0.4f;
			}
			else if (this.type == 75)
			{
				this.noGravity = true;
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 150;
				this.HitSound = SoundID.NPCHit5;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath7;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 77)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 28;
				this.lifeMax = 260;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 78)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 130;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.6f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 79)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 180;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.5f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 80)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 18;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.55f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 81)
			{
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 170;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 82)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 16;
				this.lifeMax = 160;
				this.HitSound = SoundID.NPCHit54;
				this.DeathSound = SoundID.NPCDeath52;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 83)
			{
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 84)
			{
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 85)
			{
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 100000f;
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 4;
			}
			else if (this.type == 86)
			{
				this.width = 46;
				this.height = 42;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit12;
				this.DeathSound = SoundID.NPCDeath18;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 87)
			{
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 88)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 89)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 2000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 90)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 91)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 92)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 93)
			{
				this.npcSlots = 0.5f;
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 16;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.75f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 94)
			{
				this.npcSlots = 1f;
				this.width = 44;
				this.height = 44;
				this.aiStyle = 5;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 230;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.knockBackResist = 0.55f;
				this.value = 500f;
			}
			else if (this.type == 95)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 45;
				this.defense = 10;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
			}
			else if (this.type == 96)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 28;
				this.defense = 20;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 97)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 30;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 98)
			{
				this.npcSlots = 3.5f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 70;
				this.defense = 36;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 99)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 55;
				this.defense = 40;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 100)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 44;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 101)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 320;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.2f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 600f;
			}
			else if (this.type == 102)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 90;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
			}
			else if (this.type == 103)
			{
				this.noGravity = true;
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 120;
				this.HitSound = SoundID.NPCHit25;
				this.DeathSound = SoundID.NPCDeath28;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 104)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit6;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 105)
			{
				this.friendly = true;
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 106)
			{
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 107)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 108)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 109)
			{
				this.width = 34;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 8000f;
			}
			else if (this.type == 110)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.55f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 112)
			{
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 65;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = null;
				this.DeathSound = SoundID.NPCDeath9;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.scale = 0.9f;
				this.alpha = 80;
			}
			else if (this.type == 113)
			{
				this.npcSlots = 10f;
				this.width = 100;
				this.height = 100;
				this.aiStyle = 27;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 8000;
				this.HitSound = SoundID.NPCHit8;
				this.DeathSound = SoundID.NPCDeath10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 114)
			{
				this.width = 100;
				this.height = 100;
				this.aiStyle = 28;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 8000;
				this.HitSound = SoundID.NPCHit8;
				this.DeathSound = SoundID.NPCDeath10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 115)
			{
				this.width = 30;
				this.height = 30;
				this.aiStyle = 29;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 240;
				this.HitSound = SoundID.NPCHit9;
				this.DeathSound = SoundID.NPCDeath11;
				this.noGravity = true;
				this.behindTiles = true;
				this.noTileCollide = true;
				this.knockBackResist = 1.1f;
			}
			else if (this.type == 116)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit9;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath12;
			}
			else if (this.type == 117)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 2;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit9;
				this.DeathSound = SoundID.NPCDeath12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 118)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 6;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit9;
				this.DeathSound = SoundID.NPCDeath12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 119)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit9;
				this.DeathSound = SoundID.NPCDeath12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 120)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 370;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.4f;
				this.value = 600f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 121)
			{
				this.width = 40;
				this.height = 30;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 20;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.alpha = 55;
				this.knockBackResist = 0.8f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 122)
			{
				this.noGravity = true;
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 600f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 123)
			{
				this.friendly = true;
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 124)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 125)
			{
				this.width = 100;
				this.height = 110;
				this.aiStyle = 30;
				this.defense = 10;
				this.damage = 45;
				this.lifeMax = 20000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 126)
			{
				this.width = 100;
				this.height = 110;
				this.aiStyle = 31;
				this.defense = 10;
				this.damage = 50;
				this.lifeMax = 23000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 127)
			{
				this.width = 80;
				this.height = 102;
				this.aiStyle = 32;
				this.damage = 47;
				this.defense = 24;
				this.lifeMax = 28000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 120000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
				this.boss = true;
			}
			else if (this.type == 128)
			{
				this.width = 52;
				this.height = 52;
				this.aiStyle = 35;
				this.damage = 30;
				this.defense = 23;
				this.lifeMax = 7000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 129)
			{
				this.width = 52;
				this.height = 52;
				this.aiStyle = 33;
				this.damage = 56;
				this.defense = 38;
				this.lifeMax = 9000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 130)
			{
				this.width = 52;
				this.height = 52;
				this.aiStyle = 34;
				this.damage = 52;
				this.defense = 34;
				this.lifeMax = 9000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 131)
			{
				this.width = 52;
				this.height = 52;
				this.aiStyle = 36;
				this.damage = 29;
				this.defense = 20;
				this.lifeMax = 6000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 132)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 5;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 133)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 134)
			{
				this.npcSlots = 5f;
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.defense = 0;
				this.damage = 70;
				this.lifeMax = 80000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 120000f;
				this.scale = 1.25f;
				this.boss = true;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 135)
			{
				this.npcSlots = 5f;
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 55;
				this.defense = 30;
				this.lifeMax = 80000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.netAlways = true;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 136)
			{
				this.npcSlots = 5f;
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 40;
				this.defense = 35;
				this.lifeMax = 80000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 1.25f;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 139)
			{
				this.npcSlots = 1f;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.noGravity = true;
				this.knockBackResist = 0.8f;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 137)
			{
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.75f;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 138)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 180;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.alpha = 100;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.85f;
				this.scale = 1.05f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 140)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 260;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
			}
			else if (this.type == 141)
			{
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 150;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 142)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 143)
			{
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 144)
			{
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 240;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 145)
			{
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 55;
				this.defense = 22;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 147)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 4;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 50;
				this.value = 50f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 148)
			{
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2205;
			}
			else if (this.type == 149)
			{
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2205;
			}
			else if (this.type == 150)
			{
				this.npcSlots = 0.5f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 18;
				this.defense = 6;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 250f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 151)
			{
				this.npcSlots = 0.5f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 160;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 400f;
				this.scale = 1.15f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 152)
			{
				this.npcSlots = 0.5f;
				this.width = 38;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.65f;
				this.DeathSound = SoundID.NPCDeath4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 153)
			{
				this.npcSlots = 2f;
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 470;
				this.HitSound = SoundID.NPCHit24;
				this.knockBackResist = 0.3f;
				this.DeathSound = SoundID.NPCDeath27;
				this.value = 500f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 154)
			{
				this.npcSlots = 1.5f;
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit24;
				this.knockBackResist = 0.3f;
				this.DeathSound = SoundID.NPCDeath27;
				this.value = 450f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 155)
			{
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 156)
			{
				this.npcSlots = 2f;
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 40;
				this.lifeMax = 600;
				this.HitSound = SoundID.NPCHit21;
				this.knockBackResist = 0.5f;
				this.DeathSound = SoundID.NPCDeath24;
				this.value = 1200f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 157)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.width = 74;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
			}
			else if (this.type == 160)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 161)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 163)
			{
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 40;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit29;
				this.DeathSound = SoundID.NPCDeath31;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				this.timeLeft = NPC.activeTime * 2;
			}
			else if (this.type == 238)
			{
				this.noGravity = true;
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit29;
				this.DeathSound = SoundID.NPCDeath31;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 164)
			{
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit29;
				this.DeathSound = SoundID.NPCDeath31;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 165)
			{
				this.noGravity = true;
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit29;
				this.DeathSound = SoundID.NPCDeath31;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 167)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 10;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 168)
			{
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 169)
			{
				this.noGravity = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit5;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath7;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
				this.buffImmune[44] = true;
				this.coldDamage = true;
			}
			else if (this.type == 170)
			{
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.HitSound = SoundID.NPCHit27;
				this.DeathSound = SoundID.NPCDeath30;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 171)
			{
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.HitSound = SoundID.NPCHit27;
				this.DeathSound = SoundID.NPCDeath30;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 172)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 200;
				this.defense = 30;
				this.lifeMax = 600;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 173)
			{
				this.npcSlots = 1f;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 174)
			{
				this.npcSlots = 1f;
				this.width = 52;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 450f;
			}
			else if (this.type == 175)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.25f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 650f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 176)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 22;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.5f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 177)
			{
				this.npcSlots = 1f;
				this.width = 58;
				this.height = 44;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit22;
				this.DeathSound = SoundID.NPCDeath25;
				this.knockBackResist = 0.5f;
				this.value = 500f;
			}
			else if (this.type == 178)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 179)
			{
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 180)
			{
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.HitSound = SoundID.NPCHit27;
				this.DeathSound = SoundID.NPCDeath30;
				this.knockBackResist = 0.5f;
				this.value = 4000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 181)
			{
				this.width = 18;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 182)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 24;
				this.height = 62;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 240;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 183)
			{
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 60;
				this.defense = 26;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 184)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 12;
				this.defense = 8;
				this.lifeMax = 60;
				this.scale = 1.1f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 50;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 185)
			{
				this.width = 28;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 1.1f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 186)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 187)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 188)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 189)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 190)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 4;
				this.lifeMax = 65;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.7f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 191)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 2;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.85f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 192)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 193)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 194)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 14;
				this.defense = 4;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 195)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 42;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 196)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 10000f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 197)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 28;
				this.lifeMax = 280;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 198)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 20;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit26;
				this.DeathSound = SoundID.NPCDeath29;
				this.knockBackResist = 0.4f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 199)
			{
				this.width = 42;
				this.height = 30;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit26;
				this.DeathSound = SoundID.NPCDeath29;
				this.knockBackResist = 0f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 200)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 201)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 202)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 203)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 204)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 28;
				this.defense = 8;
				this.lifeMax = 65;
				this.scale = 1.15f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 50;
				this.value = 300f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 205)
			{
				this.width = 40;
				this.height = 40;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.4f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 206)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 280;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 207)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 208)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 209)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 210)
			{
				this.width = 12;
				this.height = 12;
				this.aiStyle = 5;
				this.damage = 20;
				this.defense = 5;
				this.lifeMax = 20;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.5f;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 211)
			{
				this.width = 8;
				this.height = 8;
				this.aiStyle = 5;
				this.damage = 15;
				this.defense = 2;
				this.lifeMax = 10;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.5f;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 212)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 17;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
				this.value = 700f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 213)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 22;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 214)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 225;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 215)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 20;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.35f;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 216)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 3000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 217)
			{
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath16;
				this.value = 60f;
			}
			else if (this.type == 218)
			{
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath16;
				this.value = 60f;
			}
			else if (this.type == 219)
			{
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath16;
				this.value = 60f;
			}
			else if (this.type == 220)
			{
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 60f;
			}
			else if (this.type == 221)
			{
				this.noGravity = true;
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 222)
			{
				this.width = 66;
				this.height = 66;
				this.aiStyle = 43;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 3400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 100000f;
				this.npcSlots = 7f;
			}
			else if (this.type == 223)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.45f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 224)
			{
				this.width = 32;
				this.height = 18;
				this.aiStyle = 44;
				this.damage = 9;
				this.defense = 4;
				this.lifeMax = 20;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			if (this.type == 225)
			{
				this.width = 38;
				this.height = 26;
				this.aiStyle = 1;
				this.damage = 10;
				this.defense = 5;
				this.lifeMax = 35;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.75f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 226)
			{
				this.npcSlots = 0.5f;
				this.width = 34;
				this.height = 50;
				this.aiStyle = 14;
				this.damage = 85;
				this.defense = 28;
				this.lifeMax = 260;
				this.HitSound = SoundID.NPCHit23;
				this.knockBackResist = 0.65f;
				this.DeathSound = SoundID.NPCDeath26;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 227)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 228)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 229)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 230)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 261;
			}
			else if (this.type == 231)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 16;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.3f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 232)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 42;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 233)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 38;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.45f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 234)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 32;
				this.defense = 6;
				this.lifeMax = 42;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.55f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 235)
			{
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 34;
				this.defense = 4;
				this.lifeMax = 38;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 236)
			{
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 237)
			{
				this.noGravity = true;
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 239)
			{
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit20;
				this.DeathSound = SoundID.NPCDeath23;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 240)
			{
				this.noGravity = true;
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit20;
				this.DeathSound = SoundID.NPCDeath23;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 241)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 20;
				this.HitSound = SoundID.NPCHit13;
				this.DeathSound = SoundID.NPCDeath19;
				this.value = 350f;
			}
			else if (this.type == 242)
			{
				this.noGravity = true;
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 150;
				this.HitSound = SoundID.NPCHit13;
				this.DeathSound = SoundID.NPCDeath19;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 243)
			{
				this.width = 30;
				this.height = 114;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit5;
				this.DeathSound = SoundID.NPCDeath7;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.coldDamage = true;
				this.rarity = 2;
			}
			else if (this.type == 244)
			{
				this.width = 60;
				this.height = 42;
				this.aiStyle = 1;
				this.damage = 85;
				this.defense = 26;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 175;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 245)
			{
				this.width = 140;
				this.height = 140;
				this.aiStyle = 45;
				this.damage = 72;
				this.defense = 26;
				this.lifeMax = 9000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.alpha = 255;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 246)
			{
				this.noGravity = true;
				this.width = 70;
				this.height = 70;
				this.aiStyle = 46;
				this.damage = 64;
				this.defense = 20;
				this.lifeMax = 16000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = null;
				this.knockBackResist = 0f;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 247 || this.type == 248)
			{
				this.noGravity = true;
				this.width = 40;
				this.height = 30;
				this.aiStyle = 47;
				this.damage = 59;
				this.defense = 28;
				this.lifeMax = 7000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 249)
			{
				this.noGravity = true;
				this.width = 70;
				this.height = 70;
				this.aiStyle = 48;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 11000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 250)
			{
				this.width = 34;
				this.height = 26;
				this.aiStyle = 49;
				this.damage = 50;
				this.defense = 24;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit30;
				this.DeathSound = SoundID.NPCDeath33;
				this.knockBackResist = 0.3f;
				this.value = 300f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 251)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = (float)Item.buyPrice(0, 0, 50, 0);
				this.buffImmune[31] = false;
			}
			else if (this.type == 252)
			{
				this.noGravity = true;
				this.npcSlots = 0.5f;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 80;
				this.defense = 12;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit46;
				this.knockBackResist = 0.7f;
				this.DeathSound = SoundID.NPCDeath48;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 254)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 180;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 255)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 16;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.3f;
				this.value = 1200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 256)
			{
				this.noGravity = true;
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 90;
				this.defense = 20;
				this.lifeMax = 140;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 1200f;
				this.alpha = 20;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 257)
			{
				this.width = 44;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 24;
				this.lifeMax = 230;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.3f;
				this.value = 1300f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 258)
			{
				this.width = 30;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit45;
				this.DeathSound = SoundID.NPCDeath47;
				this.knockBackResist = 0.3f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 259)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.damage = 24;
				this.defense = 4;
				this.lifeMax = 90;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 260)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 36;
				this.height = 36;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 20;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 1250f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 261)
			{
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.damage = 80;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 262)
			{
				this.noTileCollide = true;
				this.width = 86;
				this.height = 86;
				this.aiStyle = 51;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 30000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.noGravity = true;
				this.boss = true;
				this.npcSlots = 16f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 263)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.width = 40;
				this.height = 40;
				this.aiStyle = 52;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 4000;
				this.dontTakeDamage = true;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.buffImmune[20] = true;
			}
			else if (this.type == 264)
			{
				this.width = 24;
				this.height = 24;
				this.aiStyle = 53;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 265)
			{
				this.width = 18;
				this.height = 18;
				this.aiStyle = 50;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 266)
			{
				this.dontTakeDamage = true;
				this.width = 160;
				this.height = 110;
				this.aiStyle = 54;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit9;
				this.DeathSound = SoundID.NPCDeath11;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 50000f;
				this.npcSlots = 6f;
			}
			else if (this.type == 267)
			{
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit9;
				this.DeathSound = SoundID.NPCDeath11;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 268)
			{
				this.noGravity = true;
				this.width = 28;
				this.height = 56;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 340;
				this.HitSound = SoundID.NPCHit13;
				this.DeathSound = SoundID.NPCDeath19;
				this.knockBackResist = 0.6f;
				this.value = 450f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 269)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 550;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 270)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 50;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 271)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 272)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 28;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 273)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 274)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 275)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 550;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 276)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 85;
				this.defense = 54;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 277)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 32;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 278)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 48;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 279)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 54;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 280)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 34;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 281)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 282)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 28;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 283)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.55f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 284)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 24;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 285)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.7f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 286)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 60;
				this.defense = 10;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.65f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 287)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 42;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 288)
			{
				this.width = 20;
				this.height = 20;
				this.aiStyle = 56;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 200;
				this.knockBackResist = 0.2f;
				this.HitSound = SoundID.NPCHit36;
				this.DeathSound = SoundID.NPCDeath39;
				this.value = 500f;
				this.noTileCollide = true;
				this.noGravity = true;
				flag = true;
			}
			else if (this.type == 289)
			{
				this.width = 44;
				this.height = 44;
				this.aiStyle = 10;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 290)
			{
				this.width = 34;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 5000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
				this.rarity = 1;
			}
			else if (this.type == 291)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 292)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 293)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 294)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 34;
				this.defense = 6;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.9f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 295)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.7f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 296)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 14;
				this.lifeMax = 120;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 299)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2018;
			}
			else if (this.type == 300)
			{
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath4;
				this.npcSlots = 0.25f;
				this.catchItem = 2003;
			}
			else if (this.type == 301)
			{
				this.width = 36;
				this.height = 26;
				this.aiStyle = 17;
				this.damage = 12;
				this.defense = 2;
				this.lifeMax = 35;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.85f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 50f;
			}
			if (this.type == 302)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 304)
			{
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 175;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.5f;
				this.npcSlots = 0.3f;
			}
			else if (this.type >= 305 && this.type <= 314)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 305 || this.type == 310)
				{
					this.damage = 60;
					this.defense = 18;
					this.lifeMax = 500;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 306 || this.type == 311)
				{
					this.damage = 52;
					this.defense = 14;
					this.lifeMax = 400;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 307 || this.type == 312)
				{
					this.damage = 78;
					this.defense = 16;
					this.lifeMax = 600;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
				else if (this.type == 308 || this.type == 313)
				{
					this.damage = 66;
					this.defense = 14;
					this.lifeMax = 650;
					this.knockBackResist = 0.35f;
					this.scale = 0.95f;
				}
				else if (this.type == 309 || this.type == 314)
				{
					this.damage = 52;
					this.defense = 26;
					this.lifeMax = 450;
					this.knockBackResist = 0.5f;
					this.scale = 1.1f;
				}
			}
			else if (this.type == 315)
			{
				this.width = 74;
				this.height = 70;
				this.aiStyle = 26;
				this.damage = 130;
				this.defense = 40;
				this.lifeMax = 10000;
				this.HitSound = SoundID.NPCHit12;
				this.DeathSound = SoundID.NPCDeath18;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 316)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 40;
				this.defense = 14;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.alpha = 100;
				this.value = 700f;
				flag = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 317)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 75;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.7f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 318)
			{
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.65f;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 319)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.6f;
				this.value = 85f;
				this.buffImmune[31] = false;
				this.scale = 0.9f;
			}
			else if (this.type == 320)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 105f;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 321)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 34;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = 120f;
				this.buffImmune[31] = false;
				this.scale = 1.1f;
			}
			else if (this.type == 322)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 23;
				this.defense = 0;
				this.lifeMax = 115;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.65f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 323)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 324)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 325)
			{
				this.width = 164;
				this.height = 154;
				this.aiStyle = 57;
				this.damage = 120;
				this.defense = 28;
				this.lifeMax = 12000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 326)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.2f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 327)
			{
				this.width = 100;
				this.height = 100;
				this.aiStyle = 58;
				this.damage = 50;
				this.defense = 36;
				this.lifeMax = 22000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 328)
			{
				this.width = 80;
				this.height = 80;
				this.aiStyle = 59;
				this.damage = 65;
				this.defense = 14;
				this.lifeMax = 5000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 329)
			{
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 1200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0.3f;
				this.value = 3000f;
				flag = true;
			}
			else if (this.type == 330)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 90;
				this.defense = 44;
				this.lifeMax = 2000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.alpha = 100;
				this.value = 4500f;
				flag = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 331)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 332)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			if (this.type == 333)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 334)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 6;
				this.defense = 2;
				this.lifeMax = 23;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.scale = 0.9f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 335)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 3;
				this.lifeMax = 29;
				this.scale = 1.05f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 336)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 5;
				this.defense = 1;
				this.lifeMax = 22;
				this.scale = 0.85f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type >= 338 && this.type <= 340)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 338)
				{
					this.damage = 65;
					this.defense = 18;
					this.lifeMax = 600;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 339)
				{
					this.damage = 52;
					this.defense = 24;
					this.lifeMax = 700;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 340)
				{
					this.damage = 78;
					this.defense = 14;
					this.lifeMax = 500;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
			}
			else if (this.type == 341)
			{
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 342)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 26;
				this.lifeMax = 750;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.2f;
				this.value = 1800f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 343)
			{
				this.width = 38;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 140;
				this.defense = 50;
				this.lifeMax = 3500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.value = 3000f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 344)
			{
				this.width = 172;
				this.height = 130;
				this.aiStyle = 57;
				this.damage = 110;
				this.defense = 38;
				this.lifeMax = 13000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 345)
			{
				this.width = 130;
				this.height = 140;
				this.aiStyle = 60;
				this.damage = 120;
				this.defense = 38;
				this.lifeMax = 34000;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 5f;
				this.coldDamage = true;
			}
			else if (this.type == 346)
			{
				this.width = 112;
				this.height = 140;
				this.aiStyle = 61;
				this.damage = 120;
				this.defense = 56;
				this.lifeMax = 18000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 4f;
			}
			else if (this.type == 347)
			{
				this.width = 50;
				this.height = 50;
				this.aiStyle = 62;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 1200;
				this.HitSound = SoundID.NPCHit4;
				this.knockBackResist = 0.4f;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 348)
			{
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 1800;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 349)
			{
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 42;
				this.lifeMax = 1800;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.1f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 350)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 900;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.45f;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 351)
			{
				this.width = 18;
				this.height = 90;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 2500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 1.75f;
			}
			else if (this.type == 352)
			{
				this.width = 54;
				this.height = 54;
				this.aiStyle = 63;
				this.damage = 75;
				this.defense = 8;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.npcSlots = 2f;
				this.coldDamage = true;
			}
			else if (this.type == 353)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 354)
			{
				this.friendly = true;
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 355)
			{
				this.width = 10;
				this.height = 10;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 1992;
			}
			else if (this.type == 356)
			{
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 1994;
			}
			else if (this.type == 357)
			{
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.1f;
				this.catchItem = 2002;
				this.friendly = true;
			}
			else if (this.type == 358)
			{
				this.width = 12;
				this.height = 12;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 2004;
			}
			else if (this.type == 359)
			{
				this.width = 12;
				this.height = 12;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2006;
			}
			else if (this.type == 360)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2007;
			}
			else if (this.type == 361)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2121;
			}
			else if (this.type == 362)
			{
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2122;
			}
			else if (this.type == 363)
			{
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2122;
			}
			else if (this.type == 364)
			{
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2123;
			}
			else if (this.type == 365)
			{
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2123;
			}
			else if (this.type == 366 || this.type == 367)
			{
				this.width = 26;
				this.height = 18;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = (short)(2156 + this.type - 366);
			}
			else if (this.type == 368)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 369)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 370)
			{
				this.width = 150;
				this.height = 100;
				this.aiStyle = 69;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 50000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.HitSound = SoundID.NPCHit14;
				this.DeathSound = SoundID.NPCDeath20;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = true;
				this.buffImmune[44] = true;
			}
			else if (this.type == 371)
			{
				this.width = 36;
				this.height = 36;
				this.aiStyle = 70;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = SoundID.NPCHit3;
				this.DeathSound = SoundID.NPCDeath3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 372)
			{
				this.noGravity = true;
				this.width = 120;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 100;
				this.defense = 100;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 373)
			{
				this.noGravity = true;
				this.width = 100;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 120;
				this.defense = 100;
				this.lifeMax = 100;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 374)
			{
				this.width = 20;
				this.height = 10;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
				this.rarity = 4;
			}
			else if (this.type == 375)
			{
				this.width = 10;
				this.height = 10;
				this.aiStyle = 6;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
			}
			else if (this.type == 376)
			{
				this.friendly = true;
				this.width = 34;
				this.height = 8;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 377)
			{
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.friendly = true;
				this.catchItem = 2740;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 378)
			{
				this.npcSlots = 1f;
				this.width = 20;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.value = 450f;
			}
			else if (this.type >= 379 && this.type <= 380)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.55f;
				this.value = 1000f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type >= 381 && this.type <= 382)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 25;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
			}
			else if (this.type == 383)
			{
				this.lifeMax = 300;
				this.defense = 50;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit43;
				this.DeathSound = SoundID.NPCDeath45;
				this.value = 1200f;
				this.knockBackResist = 0.25f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 384)
			{
				this.lifeMax = 1000;
				this.width = 18;
				this.defense = 20;
				this.height = 40;
				this.aiStyle = 72;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				flag = true;
				this.npcSlots = 0f;
				this.noTileCollide = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 385)
			{
				this.lifeMax = 750;
				this.defense = 30;
				this.damage = 80;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit43;
				this.DeathSound = SoundID.NPCDeath45;
				this.value = 600f;
				this.knockBackResist = 0f;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 386)
			{
				this.lifeMax = 400;
				this.defense = 34;
				this.damage = 40;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit43;
				this.DeathSound = SoundID.NPCDeath45;
				this.value = 1200f;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 387)
			{
				this.width = 20;
				this.height = 50;
				this.aiStyle = 73;
				this.damage = 10;
				this.defense = 40;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit53;
				this.DeathSound = SoundID.NPCDeath56;
				this.knockBackResist = 0f;
				this.buffImmune[31] = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 388)
			{
				this.width = 40;
				this.height = 30;
				this.aiStyle = 74;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit42;
				this.knockBackResist = 0.4f;
				this.DeathSound = SoundID.NPCDeath44;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
				this.canGhostHeal = false;
			}
			else if (this.type == 389)
			{
				this.lifeMax = 600;
				this.defense = 38;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit39;
				this.DeathSound = SoundID.NPCDeath57;
				this.value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.3f;
			}
			else if (this.type == 390)
			{
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 350;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 1200f;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 391)
			{
				this.lifeMax = 600;
				this.defense = 30;
				this.damage = 85;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit51;
				this.DeathSound = SoundID.NPCDeath54;
				this.value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.1f;
			}
			else if (this.type == 392)
			{
				this.lifeMax = 100;
				this.defense = 100;
				this.damage = 50;
				this.width = 150;
				this.height = 80;
				this.aiStyle = 75;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 393)
			{
				this.lifeMax = 5000;
				this.defense = 20;
				this.damage = 60;
				this.width = 40;
				this.height = 16;
				this.aiStyle = 75;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 394)
			{
				this.lifeMax = 3500;
				this.defense = 20;
				this.damage = 60;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 75;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 395)
			{
				this.lifeMax = 10000;
				this.defense = 0;
				this.damage = 80;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 76;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 399)
			{
				this.defense = 5;
				this.damage = 5;
				this.lifeMax = 500;
				this.aiStyle = 80;
				this.width = 42;
				this.height = 72;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.timeLeft = NPC.activeTime * 30;
				this.chaseable = false;
				this.netAlways = true;
				this.rarity = 1;
			}
			else if (this.type == 396)
			{
				this.lifeMax = 45000;
				this.defense = 50;
				this.damage = 0;
				this.width = 38;
				this.height = 56;
				this.aiStyle = 79;
				this.HitSound = SoundID.NPCHit57;
				this.DeathSound = SoundID.NPCDeath62;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 397)
			{
				this.lifeMax = 25000;
				this.defense = 40;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 78;
				this.HitSound = SoundID.NPCHit57;
				this.DeathSound = SoundID.NPCDeath62;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 398)
			{
				this.lifeMax = 50000;
				this.defense = 70;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 77;
				this.HitSound = SoundID.NPCHit57;
				this.DeathSound = null;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				this.behindTiles = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 400)
			{
				this.defense = 0;
				this.damage = 60;
				this.lifeMax = 100;
				this.aiStyle = 81;
				this.width = 60;
				this.height = 60;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.noTileCollide = true;
				this.netAlways = true;
			}
			else if (this.type == 401)
			{
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 82;
				this.HitSound = SoundID.NPCHit57;
				this.DeathSound = SoundID.NPCDeath62;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.hide = true;
			}
			else if (this.type == 437)
			{
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 54;
				this.height = 54;
				this.aiStyle = 83;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 438)
			{
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 22;
				this.height = 40;
				this.aiStyle = 83;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type == 439)
			{
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 50;
				this.defense = 42;
				this.lifeMax = 32000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.HitSound = SoundID.NPCHit55;
				this.DeathSound = SoundID.NPCDeath59;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
			}
			else if (this.type == 440)
			{
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 0;
				this.defense = 35;
				this.lifeMax = 10000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 0f;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
				this.chaseable = false;
			}
			else if (this.type == 442)
			{
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.8f;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2889;
				this.npcSlots = 0.4f;
				this.rarity = 3;
			}
			else if (this.type == 443)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2890;
				this.rarity = 3;
			}
			else if (this.type == 444)
			{
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 2891;
				this.rarity = 3;
			}
			else if (this.type == 445)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 2892;
				this.rarity = 3;
			}
			else if (this.type == 446)
			{
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.friendly = true;
				this.catchItem = 2893;
				this.npcSlots = 0.1f;
				this.rarity = 3;
			}
			else if (this.type == 447)
			{
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath4;
				this.npcSlots = 0.25f;
				this.catchItem = 2894;
				this.rarity = 3;
			}
			else if (this.type == 448)
			{
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.1f;
				this.catchItem = 2895;
				this.friendly = true;
				this.rarity = 3;
			}
			else if (this.type == 449)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 450)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 451)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 452)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 453)
			{
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.npcSlots = 7f;
			}
			else if (this.type == 454)
			{
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit56;
				this.DeathSound = SoundID.NPCDeath60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 459)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit56;
				this.DeathSound = SoundID.NPCDeath60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 455 || this.type == 456 || this.type == 457 || this.type == 458)
			{
				this.noTileCollide = true;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit56;
				this.DeathSound = SoundID.NPCDeath60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 464)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 465)
			{
				this.noGravity = true;
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 31;
				this.defense = 7;
				this.lifeMax = 110;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
			}
			else if (this.type == 470)
			{
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				this.width = 28;
				this.height = 44;
				this.aiStyle = 87;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 3500;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 30000f;
				this.knockBackResist = 0.1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 2;
			}
			else if (this.type == 480)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 20;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
			}
			else if (this.type == 481)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit2;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.4f;
				this.value = 300f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 482)
			{
				this.width = 28;
				this.height = 48;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 18;
				this.lifeMax = 110;
				this.HitSound = SoundID.NPCHit41;
				this.DeathSound = SoundID.NPCDeath44;
				this.knockBackResist = 0.35f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 483)
			{
				this.npcSlots = 0.5f;
				this.width = 20;
				this.height = 30;
				this.aiStyle = 91;
				this.damage = 24;
				this.defense = 8;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit7;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type >= 484 && this.type <= 487)
			{
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.npcSlots = 0.1f;
				this.catchItem = (short)(3191 + this.type - 484);
				this.friendly = true;
			}
			else if (this.type == 488)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 92;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit15;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.immortal = true;
				this.netAlways = true;
			}
			else if (this.type == 489)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 75;
				this.HitSound = SoundID.NPCHit18;
				this.DeathSound = SoundID.NPCDeath21;
				this.knockBackResist = 0.4f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 490)
			{
				this.noGravity = true;
				this.width = 28;
				this.height = 30;
				this.aiStyle = 22;
				this.damage = 28;
				this.defense = 14;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit19;
				this.knockBackResist = 0.6f;
				this.DeathSound = SoundID.NPCDeath22;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 491)
			{
				this.noGravity = true;
				this.width = 350;
				this.height = 120;
				this.aiStyle = 93;
				this.damage = 0;
				this.defense = 100;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit19;
				this.knockBackResist = 0f;
				this.DeathSound = SoundID.NPCDeath22;
				this.value = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 492)
			{
				this.lifeMax = 2000;
				this.defense = 20;
				this.damage = 30;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 75;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type >= 494 && this.type <= 495)
			{
				this.width = 28;
				this.height = 22;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 6;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit33;
				this.DeathSound = SoundID.NPCDeath36;
				this.value = 120f;
			}
			else if (this.type >= 496 && this.type <= 497)
			{
				this.width = 28;
				this.height = 22;
				this.aiStyle = 39;
				this.damage = 16;
				this.defense = 12;
				this.lifeMax = 50;
				this.HitSound = SoundID.NPCHit38;
				this.DeathSound = SoundID.NPCDeath41;
				this.knockBackResist = 0.75f;
				this.value = 120f;
			}
			else if (this.type >= 498 && this.type <= 506)
			{
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.HitSound = SoundID.NPCHit50;
				this.DeathSound = SoundID.NPCDeath53;
				this.knockBackResist = 0.45f;
				this.value = 120f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 441)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 513)
			{
				this.npcSlots = 4f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 34;
				this.defense = 0;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
			}
			else if (this.type == 514)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 12;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 515)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 20;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 510)
			{
				this.npcSlots = 5f;
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.damage = 58;
				this.defense = 18;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 511)
			{
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 54;
				this.defense = 28;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 512)
			{
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 34;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 508)
			{
				this.width = 33;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 16;
				this.lifeMax = 70;
				this.HitSound = SoundID.NPCHit31;
				this.DeathSound = SoundID.NPCDeath34;
				this.knockBackResist = 0.2f;
				this.value = 80f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type == 509)
			{
				this.width = 40;
				this.height = 31;
				this.aiStyle = 44;
				this.damage = 30;
				this.defense = 12;
				this.lifeMax = 50;
				this.knockBackResist = 0.6f;
				this.HitSound = SoundID.NPCHit32;
				this.DeathSound = SoundID.NPCDeath35;
				this.value = 90f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 26;
				this.lifeMax = 180;
				this.HitSound = SoundID.NPCHit37;
				this.DeathSound = SoundID.NPCDeath40;
				this.knockBackResist = 0.6f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				switch (this.type - 524)
				{
					case 1:
						this.lifeMax += 70;
						this.defense += 4;
						this.damage += 10;
						this.knockBackResist -= 0.1f;
						this.value += 150f;
						break;
					case 2:
						this.lifeMax += 40;
						this.defense += 6;
						this.damage += 14;
						this.knockBackResist -= 0.1f;
						this.value += 150f;
						break;
					case 3:
						this.lifeMax += 120;
						this.defense += 6;
						this.damage += 4;
						this.knockBackResist -= 0.2f;
						this.value += 250f;
						break;
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 52;
				this.defense = 28;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.35f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 530)
			{
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.HitSound = SoundID.NPCHit13;
				this.DeathSound = SoundID.NPCDeath19;
				this.knockBackResist = 0.5f;
				this.value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 531)
			{
				this.noGravity = true;
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.HitSound = SoundID.NPCHit13;
				this.DeathSound = SoundID.NPCDeath19;
				this.knockBackResist = 0.5f;
				this.value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 532)
			{
				this.width = 32;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 270;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 800f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 533)
			{
				this.width = 28;
				this.height = 62;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 220;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0f;
				this.value = 1200f;
				this.npcSlots = 2f;
				flag = true;
			}
			else if (this.type == 493)
			{
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 402)
			{
				this.noTileCollide = true;
				this.npcSlots = 1f;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 1200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
			}
			else if (this.type == 405)
			{
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 120;
				this.defense = 50;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 406)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 95;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 411)
			{
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit6;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 409)
			{
				this.width = 34;
				this.height = 42;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 800;
				this.HitSound = SoundID.NPCHit6;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
				this.npcSlots = 3f;
			}
			else if (this.type == 410)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 407)
			{
				this.width = 40;
				this.height = 60;
				this.aiStyle = 96;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 1500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.noGravity = true;
				this.knockBackResist = 0.03f;
				this.buffImmune[31] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 507)
			{
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 423)
			{
				this.width = 50;
				this.height = 44;
				this.aiStyle = 26;
				this.damage = 90;
				this.defense = 46;
				this.lifeMax = 850;
				this.HitSound = SoundID.NPCHit6;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.2f;
				flag = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 421)
			{
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 330;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 424)
			{
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 420)
			{
				this.width = 40;
				this.height = 40;
				this.aiStyle = 97;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 1300;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 422)
			{
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 425)
			{
				this.width = 30;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 800;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 429)
			{
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 428)
			{
				this.width = 24;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 6;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
			}
			else if (this.type == 427)
			{
				this.width = 40;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.5f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 426)
			{
				this.width = 50;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 44;
				this.lifeMax = 1000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 517)
			{
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 412)
			{
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 150;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 413)
			{
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 100;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 414)
			{
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 10000;
				this.HitSound = SoundID.NPCHit8;
				this.DeathSound = SoundID.NPCDeath22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.takenDamageMultiplier = 10f;
				this.npcSlots = 0f;
			}
			else if (this.type == 415)
			{
				this.lifeMax = 800;
				this.defense = 32;
				this.damage = 55;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 416)
			{
				this.damage = 80;
				this.defense = 28;
				this.lifeMax = 800;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 518)
			{
				this.lifeMax = 1000;
				this.defense = 28;
				this.damage = 80;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 417)
			{
				this.npcSlots = 2f;
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit7;
				this.knockBackResist = 0f;
				this.DeathSound = SoundID.NPCDeath5;
			}
			else if (this.type == 418)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 74;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 600;
				this.HitSound = SoundID.NPCHit3;
				this.DeathSound = SoundID.NPCDeath3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 419)
			{
				this.lifeMax = 800;
				this.defense = 30;
				this.damage = 90;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 516)
			{
				this.width = 26;
				this.height = 26;
				this.aiStyle = 9;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = null;
				this.DeathSound = null;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 519)
			{
				this.width = 26;
				this.height = 26;
				this.aiStyle = 99;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = null;
				this.DeathSound = null;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 162)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.3f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 166)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 253)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit49;
				this.DeathSound = SoundID.NPCDeath51;
				this.alpha = 100;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.6f;
			}
			else if (this.type == 158)
			{
				this.npcSlots = 2f;
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 750;
				this.HitSound = SoundID.NPCHit1;
				this.knockBackResist = 0.75f;
				this.DeathSound = SoundID.NPCDeath6;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 159)
			{
				this.npcSlots = 2f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 750;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.4f;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 460)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit7;
				this.DeathSound = SoundID.NPCDeath17;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 461)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
			}
			else if (this.type == 462)
			{
				this.width = 20;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 14;
				this.lifeMax = 270;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.7f;
				this.value = 600f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 463)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 34;
				this.lifeMax = 4000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
			}
			else if (this.type == 466)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 550;
				this.HitSound = SoundID.NPCHit48;
				this.DeathSound = SoundID.NPCDeath50;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
			}
			else if (this.type == 467)
			{
				this.width = 22;
				this.height = 22;
				this.aiStyle = 85;
				this.damage = 100;
				this.defense = 80;
				this.lifeMax = 350;
				this.HitSound = SoundID.NPCHit34;
				this.DeathSound = SoundID.NPCDeath37;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
				this.noGravity = true;
			}
			else if (this.type == 469)
			{
				this.width = 38;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 68;
				this.defense = 28;
				this.lifeMax = 600;
				this.HitSound = SoundID.NPCHit47;
				this.DeathSound = SoundID.NPCDeath49;
				this.knockBackResist = 0.35f;
				this.value = 1300f;
			}
			else if (this.type == 468)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 24;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit35;
				this.DeathSound = SoundID.NPCDeath38;
				this.knockBackResist = 0.6f;
				this.value = 1300f;
			}
			else if (this.type == 477)
			{
				this.noGravity = true;
				this.width = 80;
				this.height = 50;
				this.aiStyle = 88;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 6000;
				this.HitSound = SoundID.NPCHit44;
				this.DeathSound = SoundID.NPCDeath46;
				this.value = 50000f;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 478)
			{
				this.width = 34;
				this.height = 34;
				this.aiStyle = 89;
				this.damage = 0;
				this.defense = 30;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.knockBackResist = 0.7f;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 479)
			{
				this.width = 46;
				this.height = 30;
				this.aiStyle = 90;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 700;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 26)
			{
				this.scale = 0.9f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.8f;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 27)
			{
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 28)
			{
				this.scale = 1.1f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 110;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 29)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 40;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.6f;
				this.value = 200f;
			}
			else if (this.type == 30)
			{
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = SoundID.NPCHit3;
				this.DeathSound = SoundID.NPCDeath3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 100;
				this.knockBackResist = 0f;
			}
			else if (this.type == 111)
			{
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 471)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 2000;
				this.HitSound = SoundID.NPCHit40;
				this.DeathSound = SoundID.NPCDeath42;
				this.knockBackResist = 0.15f;
				this.value = 5000f;
				flag = true;
			}
			else if (this.type == 472)
			{
				this.width = 40;
				this.height = 24;
				this.aiStyle = 86;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 180;
				this.HitSound = SoundID.NPCHit52;
				this.DeathSound = SoundID.NPCDeath55;
				this.knockBackResist = 0f;
				this.value = 0f;
				flag = true;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 520)
			{
				this.width = 34;
				this.height = 110;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 40;
				this.lifeMax = 2000;
				this.HitSound = SoundID.NPCHit4;
				this.DeathSound = SoundID.NPCDeath14;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 521)
			{
				this.width = 60;
				this.height = 60;
				this.aiStyle = 86;
				this.damage = 90;
				this.defense = 30;
				this.lifeMax = 2000;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 522)
			{
				this.width = 26;
				this.height = 26;
				this.aiStyle = 100;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.HitSound = null;
				this.DeathSound = null;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
			}
			else if (this.type == 523)
			{
				this.width = 42;
				this.height = 42;
				this.aiStyle = 101;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 500;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
				this.alpha = 255;
				this.canGhostHeal = false;
			}
			else if (this.type == 534)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 20;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.buffImmune[31] = false;
				this.lavaImmune = true;
				this.netAlways = true;
				this.rarity = 1;
			}
			else if (this.type == 535)
			{
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 14;
				this.defense = 5;
				this.lifeMax = 50;
				this.scale = 1.1f;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 0;
				this.value = 40f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 536)
			{
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 537)
			{
				this.npcSlots = 2f;
				this.width = 30;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.alpha = 50;
				this.color = new Color(255, 250, 0, 0) * 0.2f;
				this.value = 75f;
				this.knockBackResist = 0.8f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 538)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 3563;
			}
			else if (this.type == 539)
			{
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.catchItem = 3564;
				this.rarity = 3;
			}
			else if (this.type == 541)
			{
				this.width = 30;
				this.height = 76;
				this.aiStyle = 102;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 5000;
				this.HitSound = SoundID.NPCHit23;
				this.DeathSound = SoundID.NPCDeath39;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.rarity = 2;
			}
			else if (this.type == 542)
			{
				this.noGravity = true;
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 360;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 400f;
				this.knockBackResist = 0.9f;
				this.behindTiles = true;
			}
			else if (this.type == 543)
			{
				this.noGravity = true;
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 380;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 400f;
				this.knockBackResist = 0.8f;
				this.behindTiles = true;
			}
			else if (this.type == 544)
			{
				this.noGravity = true;
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 64;
				this.defense = 22;
				this.lifeMax = 400;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 400f;
				this.knockBackResist = 0.8f;
				this.behindTiles = true;
			}
			else if (this.type == 545)
			{
				this.noGravity = true;
				this.width = 100;
				this.height = 24;
				this.aiStyle = 103;
				this.damage = 54;
				this.defense = 26;
				this.lifeMax = 450;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
				this.behindTiles = true;
			}
			else if (this.type == 546)
			{
				this.width = 30;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 60;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath15;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.behindTiles = true;
			}
			else if (this.type == 547)
			{
				this.width = 16;
				this.height = 16;
				this.aiStyle = 104;
				this.defense = 10;
				this.lifeMax = 10;
				this.HitSound = SoundID.NPCHit11;
				this.DeathSound = SoundID.NPCDeath15;
				this.knockBackResist = 1f;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 548)
			{
				this.width = 40;
				this.height = 40;
				this.aiStyle = 105;
				this.defense = 14;
				this.lifeMax = 1000;
				this.HitSound = SoundID.DD2_CrystalCartImpact;
				this.DeathSound = SoundID.NPCDeath15;
				this.knockBackResist = 0f;
				this.friendly = true;
				this.npcSlots = 0f;
				this.hide = true;
				if (Main.hardMode && NpcMgr.downedMechBossAny)
				{
					this.defense = 18;
					this.lifeMax = 3000;
				}
				if (NpcMgr.downedGolemBoss && Main.hardMode)
				{
					this.defense = 20;
					this.lifeMax = 5000;
				}
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 549)
			{
				this.lifeMax = 5;
				this.defense = 20;
				this.damage = 0;
				this.width = 78;
				this.height = 130;
				this.aiStyle = 106;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
				this.behindTiles = true;
				this.dontTakeDamage = true;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 552)
			{
				this.lifeMax = 30;
				this.defense = 14;
				this.damage = 18;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_GoblinHurt;
				this.DeathSound = SoundID.DD2_GoblinDeath;
				this.knockBackResist = 0.2f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 553)
			{
				this.lifeMax = 170;
				this.defense = 20;
				this.damage = 46;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_GoblinHurt;
				this.DeathSound = SoundID.DD2_GoblinDeath;
				this.knockBackResist = 0.2f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 554)
			{
				this.lifeMax = 560;
				this.defense = 28;
				this.damage = 70;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_GoblinHurt;
				this.DeathSound = SoundID.DD2_GoblinDeath;
				this.knockBackResist = 0.15f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 561)
			{
				this.lifeMax = 60;
				this.defense = 18;
				this.damage = 30;
				this.width = 26;
				this.height = 52;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_JavelinThrowersHurt;
				this.DeathSound = SoundID.DD2_JavelinThrowersDeath;
				this.knockBackResist = 0.1f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 562)
			{
				this.lifeMax = 300;
				this.defense = 28;
				this.damage = 60;
				this.width = 26;
				this.height = 52;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_JavelinThrowersHurt;
				this.DeathSound = SoundID.DD2_JavelinThrowersDeath;
				this.knockBackResist = 0.1f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 563)
			{
				this.lifeMax = 1000;
				this.defense = 38;
				this.damage = 80;
				this.width = 26;
				this.height = 52;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_JavelinThrowersHurt;
				this.DeathSound = SoundID.DD2_JavelinThrowersDeath;
				this.knockBackResist = 0.05f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 555)
			{
				this.lifeMax = 50;
				this.defense = 16;
				this.damage = 26;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_GoblinBomberHurt;
				this.DeathSound = SoundID.DD2_GoblinBomberDeath;
				this.knockBackResist = 0.2f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 556)
			{
				this.lifeMax = 200;
				this.defense = 26;
				this.damage = 55;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_GoblinBomberHurt;
				this.DeathSound = SoundID.DD2_GoblinBomberDeath;
				this.knockBackResist = 0.2f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 557)
			{
				this.lifeMax = 700;
				this.defense = 34;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_GoblinBomberHurt;
				this.DeathSound = SoundID.DD2_GoblinBomberDeath;
				this.knockBackResist = 0.15f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 558)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 108;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 60;
				this.HitSound = SoundID.DD2_WyvernHurt;
				this.DeathSound = SoundID.DD2_WyvernDeath;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 559)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 108;
				this.damage = 75;
				this.defense = 16;
				this.lifeMax = 180;
				this.HitSound = SoundID.DD2_WyvernHurt;
				this.DeathSound = SoundID.DD2_WyvernDeath;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 560)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 108;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 600;
				this.HitSound = SoundID.DD2_WyvernHurt;
				this.DeathSound = SoundID.DD2_WyvernDeath;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.05f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 550)
			{
				this.townNPC = true;
				this.friendly = true;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 576)
			{
				this.lifeMax = 5000;
				this.defense = 34;
				this.damage = 70;
				this.width = 96;
				this.height = 124;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_OgreHurt;
				this.DeathSound = SoundID.DD2_OgreDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 577)
			{
				this.lifeMax = 13000;
				this.defense = 40;
				this.damage = 90;
				this.width = 96;
				this.height = 124;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_OgreHurt;
				this.DeathSound = SoundID.DD2_OgreDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 568)
			{
				this.lifeMax = 500;
				this.defense = 30;
				this.damage = 50;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_WitherBeastHurt;
				this.DeathSound = SoundID.DD2_WitherBeastDeath;
				this.knockBackResist = 0.15f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 569)
			{
				this.lifeMax = 1400;
				this.defense = 40;
				this.damage = 80;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_WitherBeastHurt;
				this.DeathSound = SoundID.DD2_WitherBeastDeath;
				this.knockBackResist = 0.05f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 566)
			{
				this.lifeMax = 25;
				this.defense = 12;
				this.damage = 18;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_SkeletonHurt;
				this.DeathSound = SoundID.DD2_SkeletonDeath;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 567)
			{
				this.lifeMax = 480;
				this.defense = 22;
				this.damage = 70;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_SkeletonHurt;
				this.DeathSound = SoundID.DD2_SkeletonDeath;
				this.knockBackResist = 0.2f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 572)
			{
				this.lifeMax = 260;
				this.defense = 26;
				this.damage = 60;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_KoboldHurt;
				this.DeathSound = SoundID.DD2_KoboldDeath;
				this.knockBackResist = 0.2f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 573)
			{
				this.lifeMax = 800;
				this.defense = 32;
				this.damage = 80;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_KoboldHurt;
				this.DeathSound = SoundID.DD2_KoboldDeath;
				this.knockBackResist = 0.1f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 570)
			{
				this.lifeMax = 900;
				this.defense = 30;
				this.damage = 60;
				this.width = 42;
				this.height = 58;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_DrakinHurt;
				this.DeathSound = SoundID.DD2_DrakinDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 571)
			{
				this.lifeMax = 3000;
				this.defense = 40;
				this.damage = 90;
				this.width = 42;
				this.height = 58;
				this.aiStyle = 107;
				this.HitSound = SoundID.DD2_DrakinHurt;
				this.DeathSound = SoundID.DD2_DrakinDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 564)
			{
				this.lifeMax = 800;
				this.defense = 18;
				this.damage = 40;
				this.width = 34;
				this.height = 62;
				this.aiStyle = 109;
				this.HitSound = SoundID.DD2_DarkMageHurt;
				this.DeathSound = SoundID.DD2_DarkMageDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 565)
			{
				this.lifeMax = 4000;
				this.defense = 38;
				this.damage = 90;
				this.width = 34;
				this.height = 62;
				this.aiStyle = 109;
				this.HitSound = SoundID.DD2_DarkMageHurt;
				this.DeathSound = SoundID.DD2_DarkMageDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 574)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 108;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 170;
				this.HitSound = SoundID.DD2_KoboldFlyerHurt;
				this.DeathSound = SoundID.DD2_KoboldFlyerDeath;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.4f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 575)
			{
				this.width = 38;
				this.height = 38;
				this.aiStyle = 108;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 580;
				this.HitSound = SoundID.DD2_KoboldFlyerHurt;
				this.DeathSound = SoundID.DD2_KoboldFlyerDeath;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.25f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 551)
			{
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 50000;
				this.width = 190;
				this.height = 90;
				this.aiStyle = 110;
				this.HitSound = SoundID.DD2_BetsyHurt;
				this.DeathSound = SoundID.DD2_BetsyDeath;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 578)
			{
				this.width = 30;
				this.height = 24;
				this.aiStyle = 111;
				this.damage = 80;
				this.defense = 36;
				this.lifeMax = 500;
				this.HitSound = SoundID.DD2_LightningBugHurt;
				this.DeathSound = SoundID.DD2_LightningBugDeath;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.LazySetLiquidMovementDD2();
				this.netAlways = true;
			}
			else if (this.type == 579)
			{
				this.friendly = true;
				this.width = 34;
				this.height = 8;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.HitSound = SoundID.NPCHit1;
				this.DeathSound = SoundID.NPCDeath6;
				this.knockBackResist = 0.5f;
				this.scale = 1f;
				this.rarity = 1;
			}
			if (flag)
			{
				for (int num2 = 0; num2 < 206; num2++)
				{
					this.buffImmune[num2] = true;
				}
			}
			if (Main.dedServ)
			{
				this.frame = default(Rectangle);
			}
			else if (Main.NPCLoaded[this.type])
			{
				this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
			}
			else
			{
				this.setFrameSize = true;
			}
			if (scaleOverride > 0f)
			{
				int num3 = (int)((float)this.width * this.scale);
				int num4 = (int)((float)this.height * this.scale);
				this.position.X = this.position.X + (float)(num3 / 2);
				this.position.Y = this.position.Y + (float)num4;
				this.scale = scaleOverride;
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
				if (this.height == 16 || this.height == 32)
				{
					this.height++;
				}
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)this.height;
			}
			else
			{
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
			}
			if (this.buffImmune[20])
			{
				this.buffImmune[70] = true;
			}
			if (this.buffImmune[39])
			{
				this.buffImmune[153] = true;
			}
			this.life = this.lifeMax;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			this.netID = this.type;
			if (Main.expertMode)
			{
				this.scaleStats();
			}
		}

		// Token: 0x0600022E RID: 558 RVA: 0x000ED8F8 File Offset: 0x000EBAF8
		private void SetDefaultsFromNetId(int id)
		{
			bool flag = false;
			int num = NPCID.FromNetId(id);
			this.SetDefaults(0, -1f);
			if (id == -1)
			{
				this.SetDefaults(num, 0.6f);
				this.damage = 45;
				this.defense = 10;
				this.life = 90;
				this.knockBackResist *= 1.2f;
				this.value = 100f;
				flag = true;
			}
			else if (id == -2)
			{
				this.SetDefaults(num, 0.9f);
				this.damage = 45;
				this.defense = 20;
				this.life = 90;
				this.knockBackResist *= 1.2f;
				this.value = 100f;
				flag = true;
			}
			else if (id == -3)
			{
				this.SetDefaults(num, 0.9f);
				this.damage = 6;
				this.defense = 0;
				this.life = 14;
				this.knockBackResist *= 1.2f;
				this.color = new Color(0, 220, 40, 100);
				this.value = 3f;
				flag = true;
			}
			else if (id == -4)
			{
				this.SetDefaults(num, 0.6f);
				this.damage = 5;
				this.defense = 5;
				this.life = 150;
				this.knockBackResist *= 1.4f;
				this.color = new Color(250, 30, 90, 90);
				this.value = 10000f;
				flag = true;
				this.rarity = 1;
			}
			else if (id == -5)
			{
				this.SetDefaults(num, 0.9f);
				this.damage = 13;
				this.defense = 4;
				this.life = 30;
				this.knockBackResist *= 0.95f;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 10f;
				flag = true;
			}
			else if (id == -6)
			{
				this.SetDefaults(num, 1.05f);
				this.damage = 15;
				this.defense = 4;
				this.life = 45;
				this.color = new Color(0, 0, 0, 50);
				this.value = 20f;
				flag = true;
			}
			else if (id == -7)
			{
				this.SetDefaults(num, 1.2f);
				this.damage = 12;
				this.defense = 6;
				this.life = 40;
				this.knockBackResist *= 0.9f;
				this.color = new Color(200, 0, 255, 150);
				this.value = 10f;
				flag = true;
			}
			else if (id == -8)
			{
				this.SetDefaults(num, 1.025f);
				this.damage = 12;
				this.defense = 4;
				this.life = 35;
				this.color = new Color(255, 30, 0, 100);
				this.value = 8f;
				flag = true;
			}
			else if (id == -9)
			{
				this.SetDefaults(num, 1.2f);
				this.damage = 15;
				this.defense = 7;
				this.life = 45;
				this.color = new Color(255, 255, 0, 100);
				this.value = 10f;
				flag = true;
			}
			else if (id == -10)
			{
				this.SetDefaults(num, 1.1f);
				this.damage = 18;
				this.defense = 6;
				this.life = 60;
				this.color = new Color(143, 215, 93, 100);
				this.value = 500f;
				flag = true;
			}
			else if (id == -11)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -12)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -13)
			{
				this.SetDefaults(num, 0.9f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
			}
			else if (id == -14)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = (int)((double)((float)this.life * this.scale) * 1.1);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -15)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = 400;
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.height = 44;
			}
			else if (id == -16)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -17)
			{
				this.SetDefaults(num, 1.2f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -18)
			{
				this.SetDefaults(num, 0.8f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -19)
			{
				this.SetDefaults(num, 0.9f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -20)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -21)
			{
				this.SetDefaults(num, 1.2f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -22)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -23)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -24)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -25)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -26)
			{
				this.SetDefaults(num, 0.9f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -27)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -28)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -29)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -30)
			{
				this.SetDefaults(num, 0.93f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -31)
			{
				this.SetDefaults(num, 1.13f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -32)
			{
				this.SetDefaults(num, 0.89f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -33)
			{
				this.SetDefaults(num, 1.11f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -34)
			{
				this.SetDefaults(num, 0.87f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -35)
			{
				this.SetDefaults(num, 1.13f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -36)
			{
				this.SetDefaults(num, 0.92f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -37)
			{
				this.SetDefaults(num, 1.08f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -38)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -39)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -40)
			{
				this.SetDefaults(num, 0.9f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -41)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -42)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -43)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -44)
			{
				this.SetDefaults(num, 0.87f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -45)
			{
				this.SetDefaults(num, 1.05f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -46)
			{
				this.SetDefaults(num, 0.9f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -47)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -48)
			{
				this.SetDefaults(num, 0.93f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -49)
			{
				this.SetDefaults(num, 1.07f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -50)
			{
				this.SetDefaults(num, 0.87f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -51)
			{
				this.SetDefaults(num, 1.13f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -52)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -53)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -54)
			{
				this.SetDefaults(num, 0.9f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -55)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -56)
			{
				this.SetDefaults(num, 0.85f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -57)
			{
				this.SetDefaults(num, 1.25f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -58)
			{
				this.SetDefaults(num, 0.8f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -59)
			{
				this.SetDefaults(num, 1.15f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -60)
			{
				this.SetDefaults(num, 0.92f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -61)
			{
				this.SetDefaults(num, 1.1f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -62)
			{
				this.SetDefaults(num, 0.78f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -63)
			{
				this.SetDefaults(num, 1.16f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else if (id == -64)
			{
				this.SetDefaults(num, 0.87f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			else
			{
				if (id != -65)
				{
					return;
				}
				this.SetDefaults(num, 1.21f);
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
			}
			this.netID = id;
			this.lifeMax = this.life;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			if (Main.expertMode & flag)
			{
				this.scaleStats();
			}
		}

		// Token: 0x0600022F RID: 559 RVA: 0x000EFDB8 File Offset: 0x000EDFB8
		public void SetDefaultsKeepPlayerInteraction(int Type)
		{
			bool[] array = new bool[this.playerInteraction.Length];
			for (int i = 0; i < this.playerInteraction.Length; i++)
			{
				array[i] = this.playerInteraction[i];
			}
			this.SetDefaults(Type, -1f);
			for (int j = 0; j < this.playerInteraction.Length; j++)
			{
				this.playerInteraction[j] = array[j];
			}
		}

		// Token: 0x060002A3 RID: 675 RVA: 0x001D1750 File Offset: 0x001CF950
		public static void setFireFlyChance()
		{
			if (Main.rand == null)
			{
				Main.rand = new UnifiedRandom((int)DateTime.Now.Ticks);
			}
			if (WorldGen.genRand.Next(9) == 0)
			{
				NPC.fireFlyChance = Main.rand.Next(5, 10);
				NPC.fireFlyFriendly = Main.rand.Next(1, 4);
				NPC.fireFlyMultiple = Main.rand.Next(3, 8);
			}
			else if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.fireFlyChance = 999999;
				NPC.fireFlyFriendly = 999999;
				NPC.fireFlyMultiple = 999999;
			}
			else
			{
				NPC.fireFlyChance = Main.rand.Next(10, 60);
				NPC.fireFlyFriendly = Main.rand.Next(2, 15);
				NPC.fireFlyMultiple = Main.rand.Next(6, 30);
			}
			NPC.butterflyChance = Main.rand.Next(1, 25);
			if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.butterflyChance = 999999;
			}
		}

		// Token: 0x06000224 RID: 548 RVA: 0x000ED3A0 File Offset: 0x000EB5A0
		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
		{
			bool flag = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					if (flag)
					{
						Main.npc[i].GivenName = NPC.getNewNPCName(npcType);
					}
					else
					{
						Main.npc[i].GivenName = newName;
						if (!resetExtras)
						{
							return;
						}
						flag = true;
					}
				}
			}
		}

		// Token: 0x06000232 RID: 562 RVA: 0x00101D20 File Offset: 0x000FFF20
		public static void setWorldMonsters()
		{
			UnifiedRandom unifiedRandom = new UnifiedRandom(Main.worldID);
			int num = unifiedRandom.Next(3);
			int num2 = unifiedRandom.Next(3);
			while (num == num2)
			{
				num = unifiedRandom.Next(3);
			}
			for (int i = 0; i < 2; i++)
			{
				int num3 = num;
				if (i == 1)
				{
					num3 = num2;
				}
				for (int j = 0; j < 3; j++)
				{
					if (num3 == 0)
					{
						NPC.cavernMonsterType[i, j] = unifiedRandom.Next(494, 496);
					}
					else if (num3 == 1)
					{
						NPC.cavernMonsterType[i, j] = unifiedRandom.Next(496, 498);
					}
					else
					{
						NPC.cavernMonsterType[i, j] = unifiedRandom.Next(498, 507);
					}
				}
			}
		}

		// Token: 0x06000254 RID: 596 RVA: 0x0018C12C File Offset: 0x0018A32C
		public bool ShouldFaceTarget(ref NPCUtils.TargetSearchResults searchResults, NPCUtils.TargetType? overrideTargetType = null)
		{
			NPCUtils.TargetType nearestTargetType = searchResults.NearestTargetType;
			if (overrideTargetType.HasValue)
			{
				nearestTargetType = overrideTargetType.Value;
			}
			switch (nearestTargetType)
			{
				case NPCUtils.TargetType.NPC:
				case NPCUtils.TargetType.TankPet:
					return true;
				case NPCUtils.TargetType.Player:
					{
						bool flag = true;
						Player nearestTankOwner = searchResults.NearestTankOwner;
						if (nearestTankOwner.dead || (nearestTankOwner.npcTypeNoAggro[this.type] && this.direction != 0))
						{
							flag = false;
						}
						if (flag)
						{
							float num = (float)(nearestTankOwner.width + nearestTankOwner.height + this.width + this.height) / 4f + 800f;
							return nearestTankOwner.itemAnimation != 0 || nearestTankOwner.aggro >= 0 || searchResults.NearestTankDistance <= num || this.oldTarget < 0 || this.oldTarget >= 255;
						}
						break;
					}
			}
			return false;
		}

		// Token: 0x0600024D RID: 589 RVA: 0x0018B9B0 File Offset: 0x00189BB0
		public void SimpleFlyMovement(Vector2 desiredVelocity, float moveSpeed)
		{
			if (this.velocity.X < desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X + moveSpeed;
				if (this.velocity.X < 0f && desiredVelocity.X > 0f)
				{
					this.velocity.X = this.velocity.X + moveSpeed;
				}
			}
			else if (this.velocity.X > desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X - moveSpeed;
				if (this.velocity.X > 0f && desiredVelocity.X < 0f)
				{
					this.velocity.X = this.velocity.X - moveSpeed;
				}
			}
			if (this.velocity.Y < desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y + moveSpeed;
				if (this.velocity.Y < 0f && desiredVelocity.Y > 0f)
				{
					this.velocity.Y = this.velocity.Y + moveSpeed;
					return;
				}
			}
			else if (this.velocity.Y > desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y - moveSpeed;
				if (this.velocity.Y > 0f && desiredVelocity.Y < 0f)
				{
					this.velocity.Y = this.velocity.Y - moveSpeed;
				}
			}
		}


		// Token: 0x06000274 RID: 628 RVA: 0x001A9080 File Offset: 0x001A7280
		public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
            Damage *= 100;
			bool flag = Main.netMode == 0;
			if (flag && NPC.ignorePlayerInteractions > 0)
			{
				NPC.ignorePlayerInteractions--;
				flag = false;
			}
			if (!this.active || this.life <= 0)
			{
				return 0.0;
			}
			double num = (double)Damage;
			int num2 = this.defense;
			if (this.ichor)
			{
				num2 -= 20;
			}
			if (this.betsysCurse)
			{
				num2 -= 40;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			num = Main.CalculateDamage((int)num, num2);
			if (crit)
			{
				num *= 2.0;
			}
			if (this.takenDamageMultiplier > 1f)
			{
				num *= (double)this.takenDamageMultiplier;
			}
			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
			{
				if (this.friendly)
				{
					Color color = crit ? CombatText.DamagedFriendlyCrit : CombatText.DamagedFriendly;
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color, (int)num, crit, false);
				}
				else
				{
					Color color2 = crit ? CombatText.DamagedHostileCrit : CombatText.DamagedHostile;
					if (fromNet)
					{
						color2 = (crit ? CombatText.OthersDamagedHostileCrit : CombatText.OthersDamagedHostile);
					}
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color2, (int)num, crit, false);
				}
			}
			if (num >= 1.0)
			{
				if (flag)
				{
					this.PlayerInteraction(Main.myPlayer);
				}
				this.justHit = true;
				if (this.townNPC)
				{
					if (this.aiStyle == 7 && (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f || this.ai[0] == 17f))
					{
						NPC nPC = Main.npc[(int)this.ai[2]];
						if (nPC.active)
						{
							nPC.ai[0] = 1f;
							nPC.ai[1] = (float)(300 + Main.rand.Next(300));
							nPC.ai[2] = 0f;
							nPC.localAI[3] = 0f;
							nPC.direction = hitDirection;
							nPC.netUpdate = true;
						}
					}
					this.ai[0] = 1f;
					this.ai[1] = (float)(300 + Main.rand.Next(300));
					this.ai[2] = 0f;
					this.localAI[3] = 0f;
					this.direction = hitDirection;
					this.netUpdate = true;
				}
				if (this.aiStyle == 8 && Main.netMode != 1)
				{
					if (this.type == 172)
					{
						this.ai[0] = 450f;
					}
					else if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							this.ai[0] = 390f;
							this.netUpdate = true;
						}
					}
					else if (this.type == 533)
					{
						if (Main.rand.Next(3) != 0)
						{
							this.ai[0] = 181f;
							this.netUpdate = true;
						}
					}
					else
					{
						this.ai[0] = 400f;
					}
					this.TargetClosest(true);
				}
				if (this.aiStyle == 97 && Main.netMode != 1)
				{
					this.localAI[1] = 1f;
					this.TargetClosest(true);
				}
				if (this.type == 371)
				{
					num = 0.0;
					this.ai[0] = 1f;
					this.ai[1] = 4f;
					this.dontTakeDamage = true;
				}
				if (this.type == 346 && (double)this.life >= (double)this.lifeMax * 0.5 && (double)this.life - num < (double)this.lifeMax * 0.5)
				{
					Gore.NewGore(this.position, this.velocity, 517, 1f);
				}
				if (this.type == 184)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 535)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 185)
				{
					this.localAI[0] = 1f;
				}
				if (!this.immortal)
				{
					if (this.realLife >= 0)
					{
						Main.npc[this.realLife].life -= (int)num;
						this.life = Main.npc[this.realLife].life;
						this.lifeMax = Main.npc[this.realLife].lifeMax;
					}
					else
					{
						this.life -= (int)num;
					}
				}
				if (knockBack > 0f && this.knockBackResist > 0f)
				{
					float num3 = knockBack * this.knockBackResist;
					if (num3 > 8f)
					{
						float num4 = num3 - 8f;
						num4 *= 0.9f;
						num3 = 8f + num4;
					}
					if (num3 > 10f)
					{
						float num5 = num3 - 10f;
						num5 *= 0.8f;
						num3 = 10f + num5;
					}
					if (num3 > 12f)
					{
						float num6 = num3 - 12f;
						num6 *= 0.7f;
						num3 = 12f + num6;
					}
					if (num3 > 14f)
					{
						float num7 = num3 - 14f;
						num7 *= 0.6f;
						num3 = 14f + num7;
					}
					if (num3 > 16f)
					{
						num3 = 16f;
					}
					if (crit)
					{
						num3 *= 1.4f;
					}
					int num8 = (int)num * 10;
					if (Main.expertMode)
					{
						num8 = (int)num * 15;
					}
					if (num8 > this.lifeMax)
					{
						if (hitDirection < 0 && this.velocity.X > -num3)
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num3;
							}
							this.velocity.X = this.velocity.X - num3;
							if (this.velocity.X < -num3)
							{
								this.velocity.X = -num3;
							}
						}
						else if (hitDirection > 0 && this.velocity.X < num3)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num3;
							}
							this.velocity.X = this.velocity.X + num3;
							if (this.velocity.X > num3)
							{
								this.velocity.X = num3;
							}
						}
						if (this.type == 185)
						{
							num3 *= 1.5f;
						}
						if (!this.noGravity)
						{
							num3 *= -0.75f;
						}
						else
						{
							num3 *= -0.5f;
						}
						if (this.velocity.Y > num3)
						{
							this.velocity.Y = this.velocity.Y + num3;
							if (this.velocity.Y < num3)
							{
								this.velocity.Y = num3;
							}
						}
					}
					else
					{
						if (!this.noGravity)
						{
							this.velocity.Y = -num3 * 0.75f * this.knockBackResist;
						}
						else
						{
							this.velocity.Y = -num3 * 0.5f * this.knockBackResist;
						}
						this.velocity.X = num3 * (float)hitDirection * this.knockBackResist;
					}
				}
				if ((this.type == 113 || this.type == 114) && this.life <= 0)
				{
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && (Main.npc[i].type == 113 || Main.npc[i].type == 114))
						{
							Main.npc[i].HitEffect(hitDirection, num);
						}
					}
				}
				else
				{
					this.HitEffect(hitDirection, num);
				}
				if (this.HitSound != null)
				{
					Main.PlaySound(this.HitSound, this.position);
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].checkDead();
				}
				else
				{
					this.checkDead();
				}
				return num;
			}
			return 0.0;
		}

		// Token: 0x06000273 RID: 627 RVA: 0x001A9059 File Offset: 0x001A7259
		public double StrikeNPCNoInteraction(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
			if (Main.netMode == 0)
			{
				NPC.ignorePlayerInteractions++;
			}
			return this.StrikeNPC(Damage, knockBack, hitDirection, crit, noEffect, fromNet);
		}

		// Token: 0x06000257 RID: 599 RVA: 0x0018C5FC File Offset: 0x0018A7FC
		public void TargetClosest(bool faceTarget = true)
		{
			float num = 0f;
			float num2 = 0f;
			bool flag = false;
			int num3 = -1;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead && !Main.player[i].ghost)
				{
					float num4 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					num4 -= (float)Main.player[i].aggro;
					if (Main.player[i].npcTypeNoAggro[this.type] && this.direction != 0)
					{
						num4 += 1000f;
					}
					if (!flag || num4 < num)
					{
						flag = true;
						num3 = -1;
						num2 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
						num = num4;
						this.target = i;
					}
					if (Main.player[i].tankPet >= 0 && !Main.player[i].npcTypeNoAggro[this.type])
					{
						int tankPet = Main.player[i].tankPet;
						float num5 = Math.Abs(Main.projectile[tankPet].position.X + (float)(Main.projectile[tankPet].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.projectile[tankPet].position.Y + (float)(Main.projectile[tankPet].height / 2) - this.position.Y + (float)(this.height / 2));
						num5 -= 200f;
						if (num5 < num && num5 < 200f && Collision.CanHit(base.Center, 1, 1, Main.projectile[tankPet].Center, 1, 1))
						{
							num3 = tankPet;
						}
					}
				}
			}
			if (num3 >= 0)
			{
				int num6 = num3;
				this.targetRect = new Rectangle((int)Main.projectile[num6].position.X, (int)Main.projectile[num6].position.Y, Main.projectile[num6].width, Main.projectile[num6].height);
				this.direction = 1;
				if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
				{
					this.direction = -1;
				}
				this.directionY = 1;
				if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
				{
					this.directionY = -1;
				}
			}
			else
			{
				if (this.target < 0 || this.target >= 255)
				{
					this.target = 0;
				}
				this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
				if (Main.player[this.target].dead)
				{
					faceTarget = false;
				}
				if (Main.player[this.target].npcTypeNoAggro[this.type] && this.direction != 0)
				{
					faceTarget = false;
				}
				if (faceTarget)
				{
					float num7 = num2 - (float)Main.player[this.target].aggro;
					float num8 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 750 + 50);
					if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || num7 <= num8 || this.oldTarget < 0 || this.oldTarget > 254)
					{
						this.direction = 1;
						if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						this.directionY = 1;
						if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
						{
							this.directionY = -1;
						}
					}
				}
			}
			if (this.confused)
			{
				this.direction *= -1;
			}
			if ((this.direction != this.oldDirection || this.directionY != this.oldDirectionY || this.target != this.oldTarget) && !this.collideX && !this.collideY)
			{
				this.netUpdate = true;
			}
		}

		// Token: 0x06000256 RID: 598 RVA: 0x0018C25C File Offset: 0x0018A45C
		public void TargetClosestUpgraded(bool faceTarget = true, Vector2? checkPosition = null)
		{
			int num = -1;
			int num2 = -1;
			int num3 = -1;
			Vector2 center = base.Center;
			if (checkPosition.HasValue)
			{
				center = checkPosition.Value;
			}
			bool flag = this.direction == 0;
			float num4 = 9999999f;
			for (int i = 0; i < 255; i++)
			{
				Player player = Main.player[i];
				if (player.active && !player.dead && !player.ghost)
				{
					float num5 = Vector2.Distance(center, player.Center);
					num5 -= (float)player.aggro;
					bool flag2 = player.npcTypeNoAggro[this.type];
					if (flag2 && !flag)
					{
						num5 += 1000f;
					}
					if (num5 < num4)
					{
						num = i;
						num2 = -1;
						num4 = num5;
					}
					if (player.tankPet >= 0 && !flag2)
					{
						num5 = Vector2.Distance(center, Main.projectile[player.tankPet].Center);
						num5 -= 200f;
						if (num5 < num4 && num5 < 200f && Collision.CanHit(base.Center, 0, 0, Main.projectile[player.tankPet].Center, 0, 0))
						{
							num2 = player.tankPet;
							num4 = num5;
						}
					}
				}
			}
			for (int j = 0; j < 200; j++)
			{
				NPC nPC = Main.npc[j];
				if (nPC.active && nPC.type == 548)
				{
					float num6 = Vector2.Distance(center, nPC.Center);
					if (num4 > num6)
					{
						num3 = j;
						num = -1;
						num2 = -1;
						num4 = num6;
					}
				}
			}
			if (num4 != 9999999f)
			{
				if (num3 >= 0)
				{
					this.target = Main.npc[num3].WhoAmIToTargettingIndex;
					this.targetRect = Main.npc[num3].Hitbox;
					this.direction = (((float)this.targetRect.Center.X < base.Center.X) ? -1 : 1);
					this.directionY = (((float)this.targetRect.Center.Y < base.Center.Y) ? -1 : 1);
					return;
				}
				if (num2 >= 0)
				{
					this.target = Main.projectile[num2].owner;
					this.targetRect = Main.projectile[num2].Hitbox;
					this.direction = (((float)this.targetRect.Center.X < base.Center.X) ? -1 : 1);
					this.directionY = (((float)this.targetRect.Center.Y < base.Center.Y) ? -1 : 1);
					return;
				}
				if (num < 0 || num >= 255)
				{
					num = 0;
				}
				Player player2 = Main.player[num];
				this.targetRect = player2.Hitbox;
				this.target = num;
				if (player2.dead || (player2.npcTypeNoAggro[this.type] && !flag))
				{
					faceTarget = false;
				}
				if (faceTarget)
				{
					float num7 = (float)(player2.width + player2.height + this.width + this.height) / 4f + 800f;
					float num8 = num4 - (float)player2.aggro;
					if (player2.itemAnimation != 0 || player2.aggro >= 0 || num8 <= num7 || this.oldTarget < 0 || this.oldTarget >= 255)
					{
						this.direction = (((float)this.targetRect.Center.X < base.Center.X) ? -1 : 1);
						this.directionY = (((float)this.targetRect.Center.Y < base.Center.Y) ? -1 : 1);
					}
				}
			}
		}

		// Token: 0x06000270 RID: 624 RVA: 0x001A8D64 File Offset: 0x001A6F64
		public void Teleport(Vector2 newPos, int Style = 0, int extraInfo = 0)
		{
			int extraInfo2 = 0;
			if (Style == 4)
			{
				extraInfo2 = this.lastPortalColorIndex;
			}
			float dustCountMult = (this.teleportTime > 0f) ? 0.3f : 1f;
			Main.TeleportEffect(this.getRect(), Style, extraInfo2, dustCountMult);
			this.position = newPos;
			if (Style == 4)
			{
				this.lastPortalColorIndex = extraInfo;
				extraInfo2 = this.lastPortalColorIndex;
			}
			Main.TeleportEffect(this.getRect(), Style, extraInfo2, dustCountMult);
			this.teleportTime = 1f;
			this.teleportStyle = Style;
			if (Main.netMode == 2 && Style != 4)
			{
				NetMessage.SendData(65, -1, -1, null, 1, (float)this.whoAmI, newPos.X, newPos.Y, Style, 0, 0);
			}
		}

		// Token: 0x060002AC RID: 684 RVA: 0x001D5004 File Offset: 0x001D3204
		public override string ToString()
		{
			return string.Concat(new object[]
			{
				"name:",
				this.TypeName,
				", active:",
				this.active.ToString(),
				", whoAmI:",
				this.whoAmI
			});
		}

		// Token: 0x06000271 RID: 625 RVA: 0x001A8E0C File Offset: 0x001A700C
		public void Transform(int newType)
		{
			if (Main.netMode != 1)
			{
				bool flag = false;
				if (this.value == 0f)
				{
					flag = true;
				}
				int[] array = new int[5];
				int[] array2 = new int[5];
				for (int i = 0; i < 5; i++)
				{
					array[i] = this.buffType[i];
					array2[i] = this.buffTime[i];
				}
				int arg_5A_0 = this.height;
				int oldType = this.type;
				int num = this.life;
				int num2 = this.lifeMax;
				Vector2 velocity = this.velocity;
				this.position.Y = this.position.Y + (float)this.height;
				int num3 = this.spriteDirection;
				bool spawnedFromStatue = this.SpawnedFromStatue;
				this.SetDefaults(newType, -1f);
				this.SpawnedFromStatue = spawnedFromStatue;
				this.spriteDirection = num3;
				this.TargetClosest(true);
				this.velocity = velocity;
				this.position.Y = this.position.Y - (float)this.height;
				if (flag)
				{
					this.value = 0f;
				}
				if (this.lifeMax == num2)
				{
					this.life = num;
				}
				if (newType == 107 || newType == 108)
				{
					this.homeTileX = (int)(this.position.X + (float)(this.width / 2)) / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height) / 16;
					this.homeless = true;
				}
				for (int j = 0; j < 5; j++)
				{
					this.buffType[j] = array[j];
					this.buffTime[j] = array2[j];
				}
				if (Main.netMode == 2)
				{
					this.netUpdate = true;
					NetMessage.SendData(23, -1, -1, null, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					NetMessage.SendData(54, -1, -1, null, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
				this.TransformVisuals(oldType, newType);
				if (NPC.TypeToHeadIndex(this.type) != -1)
				{
					Main.npc[this.whoAmI].GivenName = NPC.getNewNPCName(this.type);
				}
				this.npcNameLookup = 0;
				if (this.townNPC)
				{
					this.homeless = true;
				}
				this.altTexture = 0;
			}
		}

		// Token: 0x0600026F RID: 623 RVA: 0x001A882C File Offset: 0x001A6A2C
		public void TransformVisuals(int oldType, int newType)
		{
			if ((oldType == 158 && newType == 159) || (oldType == 159 && newType == 158))
			{
				Main.PlaySound(SoundID.Item8, this.position);
				int num = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
			}
			else if (oldType == 478 && newType == 479)
			{
				for (int i = 0; i < 30; i++)
				{
					int num2 = Dust.NewDust(this.position, this.width, this.height, 238, 0f, -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num2].noGravity = true;
					}
				}
				Gore.NewGore(this.position, this.velocity, 684, this.scale);
				Gore.NewGore(this.position, this.velocity, 685, this.scale);
				Gore.NewGore(this.position, this.velocity, 686, this.scale);
				Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
			}
			else if (oldType == 406 && newType == 405)
			{
				float num3 = (float)Main.rand.Next(10, 21);
				float num4 = 6.28318548f * Main.rand.NextFloat();
				Vector2 value = new Vector2(22f, 22f);
				for (float num5 = 0f; num5 < num3; num5 += 1f)
				{
					Dust dust = Main.dust[Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
					Vector2 vector = Vector2.UnitY.RotatedBy((double)(num5 * 6.28318548f / num3 + num4), default(Vector2));
					dust.position = base.Center + vector * value / 2f;
					dust.velocity = vector;
					dust.noGravity = true;
					dust.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust.velocity *= dust.scale;
					dust.fadeIn = Main.rand.NextFloat() * 2f;
				}
			}
			if (oldType == 428 && newType == 427)
			{
				for (int j = 0; j < 20; j++)
				{
					int num6 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						229,
						240
					});
					Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num6, 0f, 0f, 0, default(Color), 1f)];
					dust2.noGravity = true;
					dust2.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust2.fadeIn = 0.25f;
					dust2.velocity *= dust2.scale / 2f;
				}
			}
			if (oldType == 427 && newType == 426)
			{
				for (int k = 0; k < 30; k++)
				{
					int num7 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						229,
						240,
						240
					});
					Dust dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num7, 0f, 0f, 0, default(Color), 1f)];
					dust3.noGravity = true;
					dust3.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust3.fadeIn = 0.25f;
					dust3.velocity *= dust3.scale * 0.75f;
				}
			}
		}

		// Token: 0x060002AA RID: 682 RVA: 0x001D4B76 File Offset: 0x001D2D76
		public void TryPortalJumping()
		{
			if (!this.townNPC || Main.netMode == 1)
			{
				return;
			}
			PortalHelper.TryGoingThroughPortals(this);
		}

		// Token: 0x06000249 RID: 585 RVA: 0x00179454 File Offset: 0x00177654
		public void TweakSwingStats(int swingMax, int swingCurrent, int aimDir, ref Rectangle itemRectangle)
		{
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				if (aimDir == -1)
				{
					itemRectangle.X -= (int)((double)itemRectangle.Width * 1.4 - (double)itemRectangle.Width);
				}
				itemRectangle.Width = (int)((double)itemRectangle.Width * 1.4);
				itemRectangle.Y += (int)((double)itemRectangle.Height * 0.5);
				itemRectangle.Height = (int)((double)itemRectangle.Height * 1.1);
				return;
			}
			if ((double)swingCurrent >= (double)swingMax * 0.666)
			{
				if (aimDir == 1)
				{
					itemRectangle.X -= (int)((double)itemRectangle.Width * 1.2);
				}
				itemRectangle.Width *= 2;
				itemRectangle.Y -= (int)((double)itemRectangle.Height * 1.4 - (double)itemRectangle.Height);
				itemRectangle.Height = (int)((double)itemRectangle.Height * 1.4);
			}
		}

		// Token: 0x06000228 RID: 552 RVA: 0x000ED560 File Offset: 0x000EB760
		public static int TypeToHeadIndex(int type)
		{
			if (type == 17)
			{
				return 2;
			}
			if (type == 18)
			{
				return 3;
			}
			if (type == 19)
			{
				return 6;
			}
			if (type == 20)
			{
				return 5;
			}
			if (type == 22)
			{
				return 1;
			}
			if (type == 38)
			{
				return 4;
			}
			if (type == 54)
			{
				return 7;
			}
			if (type == 107)
			{
				return 9;
			}
			if (type == 108)
			{
				return 10;
			}
			if (type == 124)
			{
				return 8;
			}
			if (type == 142)
			{
				return 11;
			}
			if (type == 160)
			{
				return 12;
			}
			if (type == 178)
			{
				return 13;
			}
			if (type == 207)
			{
				return 14;
			}
			if (type == 208)
			{
				return 15;
			}
			if (type == 209)
			{
				return 16;
			}
			if (type == 227)
			{
				return 17;
			}
			if (type == 228)
			{
				return 18;
			}
			if (type == 229)
			{
				return 19;
			}
			if (type == 353)
			{
				return 20;
			}
			if (type == 368)
			{
				return 21;
			}
			if (type == 369)
			{
				return 22;
			}
			if (type == 441)
			{
				return 23;
			}
			if (type == 550)
			{
				return 24;
			}
			return -1;
		}

		// Token: 0x06000281 RID: 641 RVA: 0x001CD068 File Offset: 0x001CB268
		private void UpdateAltTexture()
		{
			if (this.townNPC)
			{
				int num = this.altTexture;
				if (BirthdayParty.PartyIsUp)
				{
					this.altTexture = 1;
				}
				else
				{
					this.altTexture = 0;
				}
				if (this.type == 441 || this.type == 453)
				{
					this.altTexture = 0;
				}
				if (num == 0 && this.altTexture == 1)
				{
					for (int i = 0; i < 20; i++)
					{
						Dust.NewDust(this.position, this.width, this.height / 4, 139 + Main.rand.Next(4), 0f, -2f, 0, default(Color), 1f);
					}
				}
				if (num == 1 && this.altTexture == 0)
				{
					for (int j = 0; j < 4; j++)
					{
						Utils.PoofOfSmoke(this.position);
					}
				}
			}
		}

		// Token: 0x06000290 RID: 656 RVA: 0x001CFB94 File Offset: 0x001CDD94
		private void UpdateCollision()
		{
			this.Collision_WalkDownSlopes();
			bool lava = this.Collision_LavaCollision();
			lava = this.Collision_WaterCollision(lava);
			if (!this.wet)
			{
				this.lavaWet = false;
				this.honeyWet = false;
			}
			if (this.wetCount > 0)
			{
				this.wetCount -= 1;
			}
			bool fall = this.Collision_DecideFallThroughPlatforms();
			this.oldVelocity = this.velocity;
			this.collideX = false;
			this.collideY = false;
			this.FishTransformationDuringRain();
			Vector2 cPosition;
			int cWidth;
			int cHeight;
			this.GetTileCollisionParameters(out cPosition, out cWidth, out cHeight);
			Vector2 velocity = this.velocity;
			this.ApplyTileCollision(fall, cPosition, cWidth, cHeight);
			if (this.wet)
			{
				if (this.honeyWet)
				{
					this.Collision_MoveWhileWet(velocity, this.honeyMovementSpeed);
				}
				else if (this.lavaWet)
				{
					this.Collision_MoveWhileWet(velocity, this.lavaMovementSpeed);
				}
				else
				{
					this.Collision_MoveWhileWet(velocity, this.waterMovementSpeed);
				}
			}
			else
			{
				this.Collision_MoveWhileDry();
			}
			if (this.aiStyle == 67)
			{
				this.Collision_MoveSnailOnSlopes();
				return;
			}
			if (this.type != 72 && this.type != 247 && this.type != 248 && (this.type < 542 || this.type > 545) && (!NPCID.Sets.BelongsToInvasionOldOnesArmy[this.type] || !this.noGravity))
			{
				this.Collision_MoveSlopesAndStairFall(fall);
				if (this.townNPC)
				{
					Collision.StepConveyorBelt(this, 1f);
				}
			}
		}

		// Token: 0x0600021E RID: 542 RVA: 0x000EBE04 File Offset: 0x000EA004
		public static void UpdateFoundActiveNPCs()
		{
			for (int i = 0; i < 200; i++)
			{
				NPC nPC = Main.npc[i];
				if (nPC.active && nPC.type >= 0 && nPC.type < 580)
				{
					NPC.npcsFoundForCheckActive[nPC.type] = true;
				}
			}
		}

		// Token: 0x06000282 RID: 642 RVA: 0x001CD140 File Offset: 0x001CB340
		public void UpdateNPC(int i)
		{
			this.whoAmI = i;
			if (this.active)
			{
				this.UpdateAltTexture();
				if (this.type == 368)
				{
                    NpcMgr.travelNPC = true;
				}
				this.UpdateNPC_CastLights();
				this.UpdateNPC_TeleportVisuals();
				this.UpdateNPC_CritterSounds();
				if (Main.netMode == 1 && (this.townNPC || this.type == 453) && this.type != 37 && this.npcNameLookup == 0)
				{
					this.npcNameLookup = 1;
					int number = -1;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j] == this)
						{
							number = j;
							break;
						}
					}
					NetMessage.SendData(56, -1, -1, null, number, 0f, 0f, 0f, 0, 0, 0);
				}
				if (Main.netMode == 1)
				{
					bool flag = false;
					int num = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					try
					{
						if (num >= 4 && num <= Main.maxTilesX - 4 && num2 >= 4 && num2 <= Main.maxTilesY - 4)
						{
							if (Main.tile[num, num2] == null)
							{
								flag = true;
							}
							else if (Main.tile[num - 3, num2] == null)
							{
								flag = true;
							}
							else if (Main.tile[num + 3, num2] == null)
							{
								flag = true;
							}
							else if (Main.tile[num, num2 - 3] == null)
							{
								flag = true;
							}
							else if (Main.tile[num, num2 + 3] == null)
							{
								flag = true;
							}
						}
					}
					catch
					{
						flag = true;
					}
					if (flag)
					{
						return;
					}
				}
				this.UpdateNPC_BuffFlagsReset();
				this.UpdateNPC_BuffSetFlags();
				this.UpdateNPC_SoulDrainDebuff();
				this.UpdateNPC_BuffClearExpiredBuffs();
				this.UpdateNPC_BuffApplyDOTs();
				this.UpdateNPC_BloodMoonTransformations();
				float num3;
				this.UpdateNPC_UpdateGravity(out num3);
				if (this.soundDelay > 0)
				{
					this.soundDelay--;
				}
				if (this.life <= 0)
				{
					this.active = false;
				}
				this.oldTarget = this.target;
				this.oldDirection = this.direction;
				this.oldDirectionY = this.directionY;
				float num4 = 1f + Math.Abs(this.velocity.X) / 3f;
				if (this.gfxOffY > 0f)
				{
					this.gfxOffY -= num4 * this.stepSpeed;
					if (this.gfxOffY < 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				else if (this.gfxOffY < 0f)
				{
					this.gfxOffY += num4 * this.stepSpeed;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				if (this.gfxOffY > 16f)
				{
					this.gfxOffY = 16f;
				}
				if (this.gfxOffY < -16f)
				{
					this.gfxOffY = -16f;
				}
				this.TryPortalJumping();
				this.IdleSounds();
				this.AI();
				if (Main.netMode != 2 && this.extraValue > 0f)
				{
					int num5 = 244;
					float num6 = 30f;
					if (this.extraValue >= 1000000f)
					{
						num5 = 247;
						num6 *= 0.25f;
					}
					else if (this.extraValue >= 10000f)
					{
						num5 = 246;
						num6 *= 0.5f;
					}
					else if (this.extraValue >= 100f)
					{
						num5 = 245;
						num6 *= 0.75f;
					}
					if (Main.rand.Next((int)num6) == 0)
					{
						int num7 = Dust.NewDust(this.position, this.width, this.height, num5, 0f, 0f, 254, default(Color), 0.25f);
						Main.dust[num7].velocity *= 0.1f;
					}
				}
				for (int k = 0; k < 256; k++)
				{
					if (this.immune[k] > 0)
					{
						this.immune[k]--;
					}
				}
				if (!this.noGravity && !this.noTileCollide)
				{
					int num8 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num9 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (WorldGen.InWorld(num8, num9, 0) && Main.tile[num8, num9] == null)
					{
						NPC.gravity = 0f;
						this.velocity.X = 0f;
						this.velocity.Y = 0f;
					}
				}
				if (!this.noGravity)
				{
					this.velocity.Y = this.velocity.Y + NPC.gravity;
					if (this.velocity.Y > num3)
					{
						this.velocity.Y = num3;
					}
				}
				if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
				{
					this.velocity.X = 0f;
				}
				if ((Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || this.type == 55 || this.type == 74 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 303 || this.type == 355 || this.type == 356 || this.type == 358 || this.type == 359 || this.type == 360 || this.type == 361 || this.type == 362 || this.type == 363 || this.type == 364 || this.type == 365 || this.type == 366 || this.type == 367 || this.type == 377 || this.type == 357 || this.type == 374 || (this.type >= 442 && this.type <= 448 && this.type != 447))) || this.type == 538 || this.type == 539 || this.type == 337 || this.type == 540 || (this.type >= 484 && this.type <= 487))
				{
					if (this.townNPC)
					{
						this.CheckDrowning();
					}
					this.CheckLifeRegen();
					this.CheckMeleeCollision();
				}
				if (!this.noTileCollide)
				{
					this.UpdateCollision();
				}
				else
				{
					this.oldPosition = this.position;
					this.oldDirection = this.direction;
					this.position += this.velocity;
					if (this.onFire && this.boss && Main.netMode != 1 && Collision.WetCollision(this.position, this.width, this.height))
					{
						for (int l = 0; l < 5; l++)
						{
							if (this.buffType[l] == 24)
							{
								this.DelBuff(l);
							}
						}
					}
				}
				if (Main.netMode != 1 && !this.noTileCollide && this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2) && (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 303 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367 || (this.type >= 442 && this.type <= 448)))
				{
					this.ai[0] = 1f;
					this.ai[1] = 400f;
					this.ai[2] = 0f;
				}
				this.FindFrame();
				this.UpdateNPC_UpdateTrails();
				if (!this.active)
				{
					this.netUpdate = true;
				}
				if (Main.netMode == 2)
				{
					if (Main.npcStreamSpeed > 0 && !this.townNPC && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 1f)
					{
						this.netStream += 1;
						if ((int)this.netStream > Main.npcStreamSpeed)
						{
							for (int m = 0; m < 255; m++)
							{
								if (Main.player[m].active)
								{
									float num10 = Math.Abs(base.Center.X - Main.player[m].Center.X) + Math.Abs(base.Center.Y - Main.player[m].Center.Y);
									if (num10 < 250f)
									{
										byte[] expr_9C8_cp_0 = this.streamPlayer;
										int expr_9C8_cp_1 = m;
										expr_9C8_cp_0[expr_9C8_cp_1] -= 8;
									}
									else if (num10 < 500f)
									{
										byte[] expr_9E6_cp_0 = this.streamPlayer;
										int expr_9E6_cp_1 = m;
										expr_9E6_cp_0[expr_9E6_cp_1] -= 4;
									}
									else if (num10 < 1000f)
									{
										byte[] expr_A04_cp_0 = this.streamPlayer;
										int expr_A04_cp_1 = m;
										expr_A04_cp_0[expr_A04_cp_1] -= 2;
									}
									else if (num10 < 1500f)
									{
										byte[] expr_A22_cp_0 = this.streamPlayer;
										int expr_A22_cp_1 = m;
										expr_A22_cp_0[expr_A22_cp_1] -= 1;
									}
									if (this.streamPlayer[m] <= 0)
									{
										this.streamPlayer[m] = 8;
										NetMessage.SendData(23, m, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					if (this.townNPC)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate2)
					{
						this.netUpdate = true;
					}
					if (!this.active)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate)
					{
						if (this.boss)
						{
							//TODO: 看看这是做什么的   //							this.oldPosition - this.position;
							if (this.netSpam <= 15)
							{
								this.netSpam += 5;
								NetMessage.SendData(23, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
								this.netUpdate2 = false;
							}
							else
							{
								this.netUpdate2 = true;
							}
						}
						else if (this.netSpam <= 90)
						{
							this.netSpam += 30;
							NetMessage.SendData(23, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
							this.netUpdate2 = false;
						}
						else
						{
							this.netUpdate2 = true;
						}
					}
					if (this.netSpam > 0)
					{
						this.netSpam--;
					}
					if (this.active && this.townNPC && NPC.TypeToHeadIndex(this.type) != -1)
					{
						if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
						{
							byte householdStatus = WorldGen.TownManager.GetHouseholdStatus(this);
							NetMessage.SendData(60, -1, -1, null, i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)householdStatus, 0, 0, 0);
						}
						this.oldHomeless = this.homeless;
						this.oldHomeTileX = this.homeTileX;
						this.oldHomeTileY = this.homeTileY;
					}
				}
				this.CheckActive();
				this.netUpdate = false;
				this.justHit = false;
			}
		}

		// Token: 0x06000288 RID: 648 RVA: 0x001CED0C File Offset: 0x001CCF0C
		private void UpdateNPC_BloodMoonTransformations()
		{
			if (Main.netMode != 1 && Main.bloodMoon)
			{
				bool flag = false;
				if (this.value == 0f)
				{
					flag = true;
				}
				if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 443 || this.type == 540)
				{
					if (WorldGen.crimson)
					{
						this.Transform(464);
					}
					else
					{
						this.Transform(47);
					}
				}
				else if (this.type == 55 || this.type == 230)
				{
					if (WorldGen.crimson)
					{
						this.Transform(465);
					}
					else
					{
						this.Transform(57);
					}
				}
				else if (this.type == 148 || this.type == 149)
				{
					if (WorldGen.crimson)
					{
						this.Transform(470);
					}
					else
					{
						this.Transform(168);
					}
				}
				if (flag)
				{
					this.value = 0f;
				}
			}
		}

		// Token: 0x06000286 RID: 646 RVA: 0x001CE524 File Offset: 0x001CC724
		private void UpdateNPC_BuffApplyDOTs()
		{
			if (!this.dontTakeDamage)
			{
				int num = this.lifeRegenExpectedLossPerSecond;
				if (this.poisoned)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 4;
				}
				if (this.onFire)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 8;
				}
				if (this.onFrostBurn)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 16;
					if (num < 2)
					{
						num = 2;
					}
				}
				if (this.onFire2)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 12;
				}
				if (this.venom)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 12;
					if (num < 2)
					{
						num = 2;
					}
				}
				if (this.shadowFlame)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 30;
					if (num < 5)
					{
						num = 5;
					}
				}
				if (this.oiled)
				{
					int num2 = this.onFire ? 2 : 0;
					num2 += (this.onFrostBurn ? 4 : 0);
					num2 += (this.onFire2 ? 3 : 0);
					num2 += (this.shadowFlame ? 8 : 0);
					if (num2 > 0)
					{
						int num3 = num2 * 4 + 12;
						this.lifeRegen -= num3;
						int num4 = num3 / 6;
						if (num < num4)
						{
							num = num4;
						}
					}
				}
				if (this.javelined)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					int num5 = 0;
					int num6 = 1;
					for (int i = 0; i < 1000; i++)
					{
						if (Main.projectile[i].active && Main.projectile[i].type == 598 && Main.projectile[i].ai[0] == 1f && Main.projectile[i].ai[1] == (float)this.whoAmI)
						{
							num5++;
						}
					}
					this.lifeRegen -= num5 * 2 * 3;
					if (num < num5 * 3 / num6)
					{
						num = num5 * 3 / num6;
					}
				}
				if (this.daybreak)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					int num7 = 0;
					int num8 = 4;
					for (int j = 0; j < 1000; j++)
					{
						if (Main.projectile[j].active && Main.projectile[j].type == 636 && Main.projectile[j].ai[0] == 1f && Main.projectile[j].ai[1] == (float)this.whoAmI)
						{
							num7++;
						}
					}
					if (num7 == 0)
					{
						num7 = 1;
					}
					this.lifeRegen -= num7 * 2 * 100;
					if (num < num7 * 100 / num8)
					{
						num = num7 * 100 / num8;
					}
				}
				if (this.celled)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					int num9 = 0;
					for (int k = 0; k < 1000; k++)
					{
						if (Main.projectile[k].active && Main.projectile[k].type == 614 && Main.projectile[k].ai[0] == 1f && Main.projectile[k].ai[1] == (float)this.whoAmI)
						{
							num9++;
						}
					}
					this.lifeRegen -= num9 * 2 * 20;
					if (num < num9 * 20)
					{
						num = num9 * 20 / 2;
					}
				}
				if (this.dryadBane)
				{
					int num10 = 4;
					float num11 = 1f;
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					if (NpcMgr.downedBoss1)
					{
						num11 += 0.1f;
					}
					if (NpcMgr.downedBoss2)
					{
						num11 += 0.1f;
					}
					if (NpcMgr.downedBoss3)
					{
						num11 += 0.1f;
					}
					if (NpcMgr.downedQueenBee)
					{
						num11 += 0.1f;
					}
					if (Main.hardMode)
					{
						num11 += 0.4f;
					}
					if (NpcMgr.downedMechBoss1)
					{
						num11 += 0.15f;
					}
					if (NpcMgr.downedMechBoss2)
					{
						num11 += 0.15f;
					}
					if (NpcMgr.downedMechBoss3)
					{
						num11 += 0.15f;
					}
					if (NpcMgr.downedPlantBoss)
					{
						num11 += 0.15f;
					}
					if (NpcMgr.downedGolemBoss)
					{
						num11 += 0.15f;
					}
					if (NpcMgr.downedAncientCultist)
					{
						num11 += 0.15f;
					}
					if (Main.expertMode)
					{
						num11 *= Main.expertNPCDamage;
					}
					num10 = (int)((float)num10 * num11);
					this.lifeRegen -= 2 * num10;
					if (num < num10)
					{
						num = num10 / 3;
					}
				}
				if (this.soulDrain && this.realLife == -1)
				{
					if (this.lifeRegen > 0)
					{
						this.lifeRegen = 0;
					}
					this.lifeRegen -= 50;
					if (num < 5)
					{
						num = 5;
					}
				}
				if (this.lifeRegen <= -240 && num < 2)
				{
					num = 2;
				}
				this.lifeRegenCount += this.lifeRegen;
				while (this.lifeRegenCount >= 120)
				{
					this.lifeRegenCount -= 120;
					if (!this.immortal)
					{
						if (this.life < this.lifeMax)
						{
							this.life++;
						}
						if (this.life > this.lifeMax)
						{
							this.life = this.lifeMax;
						}
					}
				}
				if (num > 0)
				{
					while (this.lifeRegenCount <= -120 * num)
					{
						this.lifeRegenCount += 120 * num;
						int whoAmI = this.whoAmI;
						if (this.realLife >= 0)
						{
							whoAmI = this.realLife;
						}
						if (!Main.npc[whoAmI].immortal)
						{
							Main.npc[whoAmI].life -= num;
						}
						CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, num, false, true);
						if (Main.npc[whoAmI].life <= 0 && !Main.npc[whoAmI].immortal)
						{
							Main.npc[whoAmI].life = 1;
							if (Main.netMode != 1)
							{
								Main.npc[whoAmI].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								if (Main.netMode == 2)
								{
									NetMessage.SendData(28, -1, -1, null, whoAmI, 9999f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
					return;
				}
				while (this.lifeRegenCount <= -120)
				{
					this.lifeRegenCount += 120;
					int whoAmI2 = this.whoAmI;
					if (this.realLife >= 0)
					{
						whoAmI2 = this.realLife;
					}
					if (!Main.npc[whoAmI2].immortal)
					{
						Main.npc[whoAmI2].life--;
					}
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, 1, false, true);
					if (Main.npc[whoAmI2].life <= 0 && !Main.npc[whoAmI2].immortal)
					{
						Main.npc[whoAmI2].life = 1;
						if (Main.netMode != 1)
						{
							Main.npc[whoAmI2].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(28, -1, -1, null, whoAmI2, 9999f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
			}
		}

		// Token: 0x06000287 RID: 647 RVA: 0x001CECA4 File Offset: 0x001CCEA4
		private void UpdateNPC_BuffClearExpiredBuffs()
		{
			if (Main.netMode != 1)
			{
				for (int i = 0; i < 5; i++)
				{
					if (this.buffType[i] > 0 && this.buffTime[i] <= 0)
					{
						this.DelBuff(i);
						if (Main.netMode == 2)
						{
							NetMessage.SendData(54, -1, -1, null, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
						}
					}
				}
			}
		}

		// Token: 0x0600028A RID: 650 RVA: 0x001CF014 File Offset: 0x001CD214
		private void UpdateNPC_BuffFlagsReset()
		{
			this.lifeRegen = 0;
			this.soulDrain = false;
			this.poisoned = false;
			this.venom = false;
			this.shadowFlame = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.onFire2 = false;
			this.confused = false;
			this.loveStruck = false;
			this.dryadWard = false;
			this.stinky = false;
			this.dripping = false;
			this.drippingSlime = false;
			this.daybreak = false;
			this.javelined = false;
			this.celled = false;
			this.dryadBane = false;
			this.betsysCurse = false;
			this.oiled = false;
			this.lifeRegenExpectedLossPerSecond = -1;
		}

		// Token: 0x06000289 RID: 649 RVA: 0x001CEE18 File Offset: 0x001CD018
		private void UpdateNPC_BuffSetFlags()
		{
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] > 0 && this.buffTime[i] > 0)
				{
					this.buffTime[i]--;
					if (this.buffType[i] == 20)
					{
						this.poisoned = true;
					}
					if (this.buffType[i] == 70)
					{
						this.venom = true;
					}
					if (this.buffType[i] == 24)
					{
						this.onFire = true;
					}
					if (this.buffType[i] == 72)
					{
						this.midas = true;
					}
					if (this.buffType[i] == 69)
					{
						this.ichor = true;
					}
					if (this.buffType[i] == 31)
					{
						this.confused = true;
					}
					if (this.buffType[i] == 39)
					{
						this.onFire2 = true;
					}
					if (this.buffType[i] == 44)
					{
						this.onFrostBurn = true;
					}
					if (this.buffType[i] == 103)
					{
						this.dripping = true;
					}
					if (this.buffType[i] == 137)
					{
						this.drippingSlime = true;
					}
					if (this.buffType[i] == 119)
					{
						this.loveStruck = true;
					}
					if (this.buffType[i] == 120)
					{
						this.stinky = true;
					}
					if (this.buffType[i] == 151)
					{
						this.soulDrain = true;
					}
					if (this.buffType[i] == 153)
					{
						this.shadowFlame = true;
					}
					if (this.buffType[i] == 165)
					{
						this.dryadWard = true;
					}
					if (this.buffType[i] == 169)
					{
						this.javelined = true;
					}
					if (this.buffType[i] == 183)
					{
						this.celled = true;
					}
					if (this.buffType[i] == 186)
					{
						this.dryadBane = true;
					}
					if (this.buffType[i] == 189)
					{
						this.daybreak = true;
					}
					if (this.buffType[i] == 203)
					{
						this.betsysCurse = true;
					}
					if (this.buffType[i] == 204)
					{
						this.oiled = true;
					}
				}
			}
		}

		// Token: 0x0600028D RID: 653 RVA: 0x001CF66C File Offset: 0x001CD86C
		private void UpdateNPC_CastLights()
		{
			if ((this.type >= 442 && this.type <= 448) || this.type == 539)
			{
				Color color = Lighting.GetColor((int)base.Center.X / 16, (int)base.Center.Y / 16);
				if (color.R > 20 || color.B > 20 || color.G > 20)
				{
					int num = (int)color.R;
					if ((int)color.G > num)
					{
						num = (int)color.G;
					}
					if ((int)color.B > num)
					{
						num = (int)color.B;
					}
					num /= 30;
					if (Main.rand.Next(300) < num)
					{
						int num2 = Dust.NewDust(this.position, this.width, this.height, 43, 0f, 0f, 254, new Color(255, 255, 0), 0.5f);
						Main.dust[num2].velocity *= 0f;
					}
				}
			}
			if ((this.type >= 254 && this.type <= 261) || this.type == 160)
			{
				float num3 = (float)Main.rand.Next(28, 42) * 0.005f;
				num3 += (float)(270 - (int)Main.mouseTextColor) / 500f;
				float num4 = 0.1f;
				float num5 = 0.3f + num3 / 2f;
				float num6 = 0.6f + num3;
				float num7 = 0.35f;
				num4 *= num7;
				num5 *= num7;
				num6 *= num7;
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, num4, num5, num6);
			}
			if (this.type == 209)
			{
				float num8 = (float)Main.rand.Next(28, 42) * 0.005f;
				num8 += (float)(270 - (int)Main.mouseTextColor) / 500f;
				float num9 = 0.1f;
				float num10 = 0.3f + num8 / 2f;
				float num11 = 0.4f + num8 / 2f;
				float num12 = 0.35f;
				num9 *= num12;
				num10 *= num12;
				num11 *= num12;
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, num9, num10, num11);
				if (this.ai[0] == 12f)
				{
					Lighting.AddLight(base.Top, 0.3f, 0.1f, 0.1f);
				}
			}
			if (this.type == 44)
			{
				Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + 4f) / 16, 0.9f, 0.75f, 0.5f);
			}
		}

		// Token: 0x0600028C RID: 652 RVA: 0x001CF268 File Offset: 0x001CD468
		private void UpdateNPC_CritterSounds()
		{
			if (Main.netMode != 2)
			{
				if (this.type >= 362 && this.type <= 365)
				{
					if (Main.dayTime && Main.rand.Next(200) == 0)
					{
						Main.PlaySound(30, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						return;
					}
				}
				else if (this.type == 361 || this.type == 445)
				{
					if ((double)Math.Abs(this.velocity.X) < 0.5 && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && Main.rand.Next(200) == 0)
					{
						Main.PlaySound(31, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						return;
					}
				}
				else if (this.type == 74 || this.type == 297 || this.type == 298 || this.type == 442)
				{
					if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(400) == 0)
					{
						if (this.type == 74)
						{
							if (Main.rand.Next(3) != 0)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14, 1f, 0f);
							}
							else
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18, 1f, 0f);
							}
						}
						if (this.type == 297)
						{
							Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16, 1f, 0f);
						}
						if (this.type == 298)
						{
							if (Main.rand.Next(3) != 0)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17, 1f, 0f);
							}
							else
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19, 1f, 0f);
							}
						}
						if (this.type == 442)
						{
							int num = Main.rand.Next(5);
							if (num == 0)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16, 1f, 0f);
								return;
							}
							if (num == 1)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17, 1f, 0f);
								return;
							}
							if (num == 2)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19, 1f, 0f);
								return;
							}
							if (num == 3)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14, 1f, 0f);
								return;
							}
							Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18, 1f, 0f);
							return;
						}
					}
				}
				else if ((this.type == 300 || this.type == 447) && Main.rand.Next(1800) == 0)
				{
					Main.PlaySound(33, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				}
			}
		}

		// Token: 0x06000285 RID: 645 RVA: 0x001CE374 File Offset: 0x001CC574
		private void UpdateNPC_SoulDrainDebuff()
		{
			if (this.soulDrain)
			{
				int num = 1100;
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && !Main.player[i].dead && (base.Center - Main.player[i].position).Length() < (float)num && Main.player[i].inventory[Main.player[i].selectedItem].type == 3006 && Main.player[i].itemAnimation > 0)
					{
						if (i == Main.myPlayer)
						{
							Main.player[i].soulDrain++;
						}
						if (Main.rand.Next(3) != 0)
						{
							Vector2 vector = base.Center;
							vector.X += (float)Main.rand.Next(-100, 100) * 0.05f;
							vector.Y += (float)Main.rand.Next(-100, 100) * 0.05f;
							vector += this.velocity;
							int num2 = Dust.NewDust(vector, 1, 1, 235, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num2].velocity *= 0f;
							Main.dust[num2].scale = (float)Main.rand.Next(70, 85) * 0.01f;
							Main.dust[num2].fadeIn = (float)(i + 1);
						}
					}
				}
			}
		}

		// Token: 0x0600028B RID: 651 RVA: 0x001CF0C4 File Offset: 0x001CD2C4
		private void UpdateNPC_TeleportVisuals()
		{
			if (this.teleportTime > 0f)
			{
				if (this.teleportStyle == 0)
				{
					if ((float)Main.rand.Next(100) <= 100f * this.teleportTime * 2f)
					{
						int num = Dust.NewDust(new Vector2((float)this.getRect().X, (float)this.getRect().Y), this.getRect().Width, this.getRect().Height, 159, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num].scale = this.teleportTime * 1.5f;
						Main.dust[num].noGravity = true;
						Main.dust[num].velocity *= 1.1f;
					}
				}
				else if (this.teleportStyle == 4)
				{
					this.teleportTime -= 0.02f;
					if ((float)Main.rand.Next(100) <= 100f * this.teleportTime)
					{
						Dust expr_150 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 263, 0f, 0f, 0, default(Color), 1f)];
						expr_150.color = PortalHelper.GetPortalColor(this.lastPortalColorIndex);
						expr_150.noLight = true;
						expr_150.noGravity = true;
						expr_150.scale = 1.2f;
						expr_150.fadeIn = 0.4f;
					}
				}
				this.teleportTime -= 0.005f;
			}
		}

		// Token: 0x06000284 RID: 644 RVA: 0x001CE118 File Offset: 0x001CC318
		private void UpdateNPC_UpdateGravity(out float maxFallSpeed)
		{
			maxFallSpeed = 10f;
			NPC.gravity = 0.3f;
			if (this.type == 258)
			{
				NPC.gravity = 0.1f;
				if (this.velocity.Y > 3f)
				{
					this.velocity.Y = 3f;
				}
			}
			else if (this.type == 425 && this.ai[2] == 1f)
			{
				NPC.gravity = 0.1f;
				if (this.velocity.Y > 2f)
				{
					this.velocity.Y = 2f;
				}
			}
			else if ((this.type == 576 || this.type == 577) && this.ai[0] > 0f && this.ai[1] == 2f)
			{
				NPC.gravity = 0.45f;
				if (this.velocity.Y > 32f)
				{
					this.velocity.Y = 32f;
				}
			}
			else if (this.type == 427 && this.ai[2] == 1f)
			{
				NPC.gravity = 0.1f;
				if (this.velocity.Y > 4f)
				{
					this.velocity.Y = 4f;
				}
			}
			else if (this.type == 426)
			{
				NPC.gravity = 0.1f;
				if (this.velocity.Y > 3f)
				{
					this.velocity.Y = 3f;
				}
			}
			else if (this.type == 541)
			{
				NPC.gravity = 0f;
			}
			float num = (float)(Main.maxTilesX / 4200);
			num *= num;
			float num2 = (float)((double)(this.position.Y / 16f - (60f + 10f * num)) / (Main.worldSurface / 6.0));
			if ((double)num2 < 0.25)
			{
				num2 = 0.25f;
			}
			if (num2 > 1f)
			{
				num2 = 1f;
			}
			NPC.gravity *= num2;
			if (this.wet)
			{
				if (this.honeyWet)
				{
					NPC.gravity = 0.1f;
					maxFallSpeed = 4f;
					return;
				}
				NPC.gravity = 0.2f;
				maxFallSpeed = 7f;
			}
		}

		// Token: 0x06000283 RID: 643 RVA: 0x001CDD84 File Offset: 0x001CBF84
		private void UpdateNPC_UpdateTrails()
		{
			int num = NPCID.Sets.TrailingMode[this.type];
			if (num == 0)
			{
				if (this.localAI[3] <= 0f)
				{
					this.localAI[3] = 2f;
					for (int i = this.oldPos.Length - 1; i > 0; i--)
					{
						this.oldPos[i] = this.oldPos[i - 1];
					}
					this.oldPos[0] = this.position;
				}
				this.localAI[3] -= 1f;
			}
			if (num == 1)
			{
				for (int j = this.oldPos.Length - 1; j > 0; j--)
				{
					this.oldPos[j] = this.oldPos[j - 1];
				}
				this.oldPos[0] = this.position;
			}
			if (num == 2)
			{
				if ((int)this.ai[0] == 4 || this.ai[0] == 5f || this.ai[0] == 6f)
				{
					for (int k = this.oldPos.Length - 1; k > 0; k--)
					{
						this.oldPos[k] = this.oldPos[k - 1];
						this.oldRot[k] = this.oldRot[k - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				else
				{
					for (int l = this.oldPos.Length - 1; l >= 0; l--)
					{
						this.oldPos[l] = this.position;
						this.oldRot[l] = this.rotation;
					}
				}
			}
			if (num == 3)
			{
				for (int m = this.oldPos.Length - 1; m > 0; m--)
				{
					this.oldPos[m] = this.oldPos[m - 1];
					this.oldRot[m] = this.oldRot[m - 1];
				}
				this.oldPos[0] = this.position;
				this.oldRot[0] = this.rotation;
			}
			if (num == 4)
			{
				for (int n = this.oldPos.Length - 1; n > 0; n--)
				{
					this.oldPos[n] = this.oldPos[n - 1];
					Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.3f, 0f, 0.2f);
				}
				this.oldPos[0] = this.position;
				return;
			}
			if (num == 5)
			{
				for (int num2 = this.oldPos.Length - 1; num2 > 0; num2--)
				{
					this.oldPos[num2] = this.oldPos[num2 - 1];
				}
				this.oldPos[0] = this.position;
				return;
			}
			if (num == 6)
			{
				for (int num3 = this.oldPos.Length - 1; num3 > 0; num3--)
				{
					this.oldPos[num3] = this.oldPos[num3 - 1];
				}
				this.oldPos[0] = this.position;
				return;
			}
			if (num == 7)
			{
				for (int num4 = this.oldPos.Length - 1; num4 > 0; num4--)
				{
					this.oldPos[num4] = this.oldPos[num4 - 1];
					this.oldRot[num4] = this.oldRot[num4 - 1];
				}
				this.oldPos[0] = this.position;
				this.oldRot[0] = this.rotation;
			}
		}

		// Token: 0x0600024A RID: 586 RVA: 0x00179572 File Offset: 0x00177772
		public bool UsesPartyHat()
		{
			return this.frame.Height > 0 && this.townNPC && BirthdayParty.PartyIsUp && this.type != 441 && this.type != 37;
		}

		// Token: 0x1700004E RID: 78
		public bool CanTalk
		{
			// Token: 0x06000207 RID: 519 RVA: 0x000EB591 File Offset: 0x000E9791
			get
			{
				return (this.townNPC || this.type == 453) && this.aiStyle == 7 && this.velocity.Y == 0f;
			}
		}


		// Token: 0x17000056 RID: 86
		public string FullName
		{
			// Token: 0x06000212 RID: 530 RVA: 0x000EBCAE File Offset: 0x000E9EAE
			get
			{
				if (!this.HasGivenName)
				{
					return this.TypeName;
				}
				return Language.GetTextValue("Game.NPCTitle", this._givenName, this.TypeName);
			}
		}

		// Token: 0x17000059 RID: 89
		public string GivenName
		{
			// Token: 0x06000215 RID: 533 RVA: 0x000EBCFC File Offset: 0x000E9EFC
			get
			{
				return this._givenName;
			}
			// Token: 0x06000216 RID: 534 RVA: 0x000EBD04 File Offset: 0x000E9F04
			set
			{
				this._givenName = (value ?? "");
			}
		}

		// Token: 0x17000058 RID: 88
		public string GivenOrTypeName
		{
			// Token: 0x06000214 RID: 532 RVA: 0x000EBCE5 File Offset: 0x000E9EE5
			get
			{
				if (!this.HasGivenName)
				{
					return this.TypeName;
				}
				return this._givenName;
			}
		}

		// Token: 0x17000057 RID: 87
		public bool HasGivenName
		{
			// Token: 0x06000213 RID: 531 RVA: 0x000EBCD5 File Offset: 0x000E9ED5
			get
			{
				return this._givenName.Length != 0;
			}
		}

		// Token: 0x17000051 RID: 81
		public bool HasNPCTarget
		{
			// Token: 0x0600020A RID: 522 RVA: 0x000EB655 File Offset: 0x000E9855
			get
			{
				return this.target >= 300 && this.target < 500;
			}
		}

		// Token: 0x17000050 RID: 80
		public bool HasPlayerTarget
		{
			// Token: 0x06000209 RID: 521 RVA: 0x000EB63B File Offset: 0x000E983B
			get
			{
				return this.target >= 0 && this.target < 255;
			}
		}

		// Token: 0x1700004F RID: 79
		public bool HasValidTarget
		{
			// Token: 0x06000208 RID: 520 RVA: 0x000EB5C8 File Offset: 0x000E97C8
			get
			{
				return (this.HasPlayerTarget && Main.player[this.target].active && !Main.player[this.target].dead && !Main.player[this.target].ghost) || (this.SupportsNPCTargets && this.HasNPCTarget && Main.npc[this.TranslatedTargetIndex].active);
			}
		}

		// Token: 0x1700005D RID: 93
		public float Opacity
		{
			// Token: 0x0600021B RID: 539 RVA: 0x000EBDA2 File Offset: 0x000E9FA2
			get
			{
				return 1f - (float)this.alpha / 255f;
			}
			// Token: 0x0600021C RID: 540 RVA: 0x000EBDB7 File Offset: 0x000E9FB7
			set
			{
				this.alpha = (int)MathHelper.Clamp((1f - value) * 255f, 0f, 255f);
			}
		}

		// Token: 0x17000052 RID: 82
		public bool SupportsNPCTargets
		{
			// Token: 0x0600020B RID: 523 RVA: 0x000EB673 File Offset: 0x000E9873
			get
			{
				return NPCID.Sets.UsesNewTargetting[this.type];
			}
		}

		// Token: 0x17000053 RID: 83
		public int TranslatedTargetIndex
		{
			// Token: 0x0600020C RID: 524 RVA: 0x000EB681 File Offset: 0x000E9881
			get
			{
				if (this.HasNPCTarget)
				{
					return this.target - 300;
				}
				return this.target;
			}
		}

		// Token: 0x17000055 RID: 85
		public string TypeName
		{
			// Token: 0x06000211 RID: 529 RVA: 0x000EBCA1 File Offset: 0x000E9EA1
			get
			{
				return Lang.GetNPCNameValue(this.netID);
			}
		}

		// Token: 0x17000054 RID: 84
		public int WhoAmIToTargettingIndex
		{
			// Token: 0x0600020D RID: 525 RVA: 0x000EB69E File Offset: 0x000E989E
			get
			{
				return this.whoAmI + 300;
			}
		}

		// Token: 0x04000253 RID: 595
		private static int activeRangeX = (int)((double)NpcMgr.sWidth * 2.1);

		// Token: 0x04000254 RID: 596
		private static int activeRangeY = (int)((double)NpcMgr.sHeight * 2.1);

		// Token: 0x04000259 RID: 601
		private static int activeTime = 750;


		// Token: 0x0400023A RID: 570
		private static int[] attackNPC = new int[NPC.maxAttack];

		// Token: 0x040002D4 RID: 724
		public bool behindTiles;

		// Token: 0x04000279 RID: 633
		public bool betsysCurse;

		// Token: 0x040002D2 RID: 722
		public bool boss;

		// Token: 0x040002E7 RID: 743
		public int breath;

		// Token: 0x040002E9 RID: 745
		public int breathCounter;

		// Token: 0x040002E8 RID: 744
		public const int breathMax = 200;


		// Token: 0x0400023F RID: 575
		public static int butterflyChance = 0;

		// Token: 0x04000273 RID: 627
		public bool canGhostHeal = true;

		// Token: 0x0400022C RID: 556
		public short catchItem;

		// Token: 0x040002EC RID: 748
		public static int[,] cavernMonsterType = new int[2, 3];

		// Token: 0x04000275 RID: 629
		public bool celled;

		// Token: 0x04000272 RID: 626
		public bool chaseable = true;

		// Token: 0x040002E3 RID: 739
		public bool closeDoor;




		// Token: 0x0400026D RID: 621
		public bool confused;

		// Token: 0x04000248 RID: 584
		public static int crimsonBoss = -1;


		// Token: 0x04000277 RID: 631
		public bool daybreak;

		// Token: 0x040002BE RID: 702
		public LegacySoundStyle DeathSound;




		// Token: 0x0400025C RID: 604
		public bool dontCountMe;


		// Token: 0x04000278 RID: 632
		public bool dontTakeDamageFromHostiles;

		// Token: 0x040002E4 RID: 740
		public int doorX;

		// Token: 0x040002E5 RID: 741
		public int doorY;


		// Token: 0x04000228 RID: 552
		public bool dripping;

		// Token: 0x04000229 RID: 553
		public bool drippingSlime;

		// Token: 0x04000276 RID: 630
		public bool dryadBane;

		// Token: 0x04000270 RID: 624
		public bool dryadWard;

		// Token: 0x040002D7 RID: 727
		public float extraValue;

		// Token: 0x0400023D RID: 573
		public static int fireFlyChance = 0;

		// Token: 0x0400023C RID: 572
		public static int fireFlyFriendly = 0;

		// Token: 0x0400023E RID: 574
		public static int fireFlyMultiple = 0;



		// Token: 0x040002E2 RID: 738
		public bool friendly;

		// Token: 0x040002E6 RID: 742
		public int friendlyRegen;

		// Token: 0x04000235 RID: 565
		public float gfxOffY;

		// Token: 0x04000220 RID: 544
		public static int goldCritterChance = 150;

		// Token: 0x04000246 RID: 582
		public static int golemBoss = -1;


		// Token: 0x040002C6 RID: 710
		public bool hide;

		// Token: 0x040002BD RID: 701
		public LegacySoundStyle HitSound;

		// Token: 0x040002DC RID: 732
		public bool homeless;

		// Token: 0x040002DD RID: 733
		public int homeTileX = -1;

		// Token: 0x040002DE RID: 734
		public int homeTileY = -1;

		// Token: 0x04000216 RID: 534
		private float honeyMovementSpeed = 0.25f;

		// Token: 0x04000262 RID: 610
		public bool ichor;

		// Token: 0x040002ED RID: 749
		private static int ignorePlayerInteractions = 0;

		// Token: 0x04000271 RID: 625
		public bool immortal;

		// Token: 0x040002AD RID: 685
		public int[] immune = new int[256];

		// Token: 0x0400021D RID: 541
		public static int immuneTime = 20;

		// Token: 0x04000274 RID: 628
		public bool javelined;

		// Token: 0x040002B4 RID: 692
		public bool justHit;

		// Token: 0x04000221 RID: 545
		public static int[] killCount = new int[580];

		// Token: 0x040002C8 RID: 712
		public float knockBackResist = 1f;

		// Token: 0x04000231 RID: 561
		public int lastInteraction = 255;

		// Token: 0x040002EB RID: 747
		public int lastPortalColorIndex;

		// Token: 0x040002D5 RID: 725
		public bool lavaImmune;

		// Token: 0x04000215 RID: 533
		private float lavaMovementSpeed = 0.5f;


		// Token: 0x0400026E RID: 622
		public bool loveStruck;

		// Token: 0x040002A4 RID: 676
		public static bool LunarApocalypseIsUp = false;

		// Token: 0x0400029F RID: 671
		public static int LunarShieldPowerExpert = 150;

		// Token: 0x0400029E RID: 670
		public static int LunarShieldPowerNormal = 100;




		// Token: 0x0400021A RID: 538
		public const int MaxMoonLordCountdown = 3600;


		// Token: 0x04000261 RID: 609
		public bool midas;

		// Token: 0x04000226 RID: 550
		public float nameOver;

		// Token: 0x04000225 RID: 549
		public const float nameOverDistance = 400f;

		// Token: 0x04000224 RID: 548
		public const float nameOverIncrement = 0.025f;

		// Token: 0x0400024A RID: 586
		public bool netAlways;

		// Token: 0x040002D9 RID: 729
		public int netID;

		// Token: 0x04000249 RID: 585
		public int netSkip;

		// Token: 0x0400021F RID: 543
		public int netSpam;

		// Token: 0x04000240 RID: 576
		private byte netStream;

		// Token: 0x040002CE RID: 718
		public bool netUpdate;

		// Token: 0x040002CF RID: 719
		public bool netUpdate2;


		// Token: 0x040002CD RID: 717
		public bool noTileCollide;

		// Token: 0x04000242 RID: 578
		private byte npcNameLookup;

		// Token: 0x040002A9 RID: 681
		public static bool[] npcsFoundForCheckActive = new bool[580];

		// Token: 0x04000257 RID: 599
		public float npcSlots = 1f;

		// Token: 0x04000213 RID: 531
		private const int NPC_TARGETS_START = 300;

		// Token: 0x0400027A RID: 634
		public bool oiled;


		// Token: 0x040002DF RID: 735
		public bool oldHomeless;

		// Token: 0x040002E0 RID: 736
		public int oldHomeTileX = -1;

		// Token: 0x040002E1 RID: 737
		public int oldHomeTileY = -1;

		// Token: 0x040002CA RID: 714
		public int oldTarget;

		// Token: 0x04000263 RID: 611
		public bool onFire;

		// Token: 0x04000264 RID: 612
		public bool onFire2;

		// Token: 0x04000265 RID: 613
		public bool onFrostBurn;

		// Token: 0x04000247 RID: 583
		public static int plantBoss = -1;

		// Token: 0x04000230 RID: 560
		public bool[] playerInteraction = new bool[256];

		// Token: 0x04000266 RID: 614
		public bool poisoned;

		// Token: 0x0400022E RID: 558
		public int rarity;

		// Token: 0x0400024B RID: 587
		public int realLife = -1;

		// Token: 0x040002EA RID: 746
		public bool reflectingProjectiles;

		// Token: 0x0400022D RID: 557
		public short releaseOwner = 255;



		// Token: 0x040002C7 RID: 711
		public float scale = 1f;

		// Token: 0x04000245 RID: 581
		public bool setFrameSize;

		// Token: 0x04000268 RID: 616
		public bool shadowFlame;



		// Token: 0x04000269 RID: 617
		public bool soulDrain;

		// Token: 0x040002AC RID: 684
		public int soundDelay;

		// Token: 0x04000227 RID: 551
		public bool SpawnedFromStatue;



		// Token: 0x040002D3 RID: 723
		public int spriteDirection = -1;

		// Token: 0x0400023B RID: 571
		public bool stairFall;


		// Token: 0x0400026F RID: 623
		public bool stinky;

		// Token: 0x04000241 RID: 577
		private byte[] streamPlayer = new byte[255];


		// Token: 0x04000232 RID: 562
		public float takenDamageMultiplier = 1f;

		// Token: 0x040002B6 RID: 694
		public int target = -1;

		// Token: 0x040002C1 RID: 705
		public Rectangle targetRect;

		// Token: 0x0400022F RID: 559
		public static bool taxCollector = false;

		// Token: 0x04000238 RID: 568
		public bool teleporting;

		// Token: 0x0400021B RID: 539
		public int teleportStyle;

		// Token: 0x0400021C RID: 540
		public float teleportTime;

		// Token: 0x040002B5 RID: 693
		public int timeLeft;


		// Token: 0x040002DA RID: 730
		public bool townNPC;


		// Token: 0x040002BC RID: 700
		public bool trapImmune;


		// Token: 0x040002AF RID: 687
		public int type;

		// Token: 0x040002D6 RID: 726
		public float value;

		// Token: 0x04000267 RID: 615
		public bool venom;

		// Token: 0x0400022B RID: 555
		public Vector2 visualOffset = Vector2.Zero;


		// Token: 0x0400024C RID: 588
		private string _givenName = "";



        //---------------------
        // Combat
        // Token: 0x04000239 RID: 569
        private static int maxAttack = 20;
        // Token: 0x040002BF RID: 703
        public int life;

        // Token: 0x040002C0 RID: 704
        public int lifeMax;

        // Token: 0x0400026A RID: 618
        public int lifeRegen;

        // Token: 0x0400026B RID: 619
        public int lifeRegenCount;

        // Token: 0x0400026C RID: 620
        public int lifeRegenExpectedLossPerSecond = -1;

        // Token: 0x040002B7 RID: 695
        public int damage;
        // Token: 0x040002BB RID: 699
        public bool coldDamage;
        // Token: 0x040002B9 RID: 697
        public int defDamage;

        // Token: 0x040002BA RID: 698
        public int defDefense;

        // Token: 0x040002B8 RID: 696
        public int defense;
        // Token: 0x040002D8 RID: 728
        public bool dontTakeDamage;

        // pos
        // Token: 0x040002D0 RID: 720
        public bool collideX;
        // Token: 0x04000237 RID: 567
        public static float gravity = 0.3f;

        // Token: 0x040002D1 RID: 721
        public bool collideY;
        // Token: 0x040002AE RID: 686
        public int directionY = 1;
        // Token: 0x040002C9 RID: 713
        public int oldDirectionY;
        // Token: 0x040002CC RID: 716
        public bool noGravity;
        // Token: 0x04000243 RID: 579
        public Vector2[] oldPos = new Vector2[10];

        // Token: 0x04000244 RID: 580
        public float[] oldRot = new float[10];
        // Token: 0x040002CB RID: 715
        public float rotation;
        // Token: 0x04000236 RID: 566
        public float stepSpeed;
        // Token: 0x04000214 RID: 532
        private float waterMovementSpeed = 0.5f;

        
        // AI
        // Token: 0x040002B1 RID: 689
        public float[] localAI = new float[NPC.maxAI];
        // Token: 0x0400021E RID: 542
        public static int maxAI = 4;
        // Token: 0x040002B0 RID: 688
        public float[] ai = new float[NPC.maxAI];

        // Token: 0x040002B2 RID: 690
        public int aiAction;

        // Token: 0x040002B3 RID: 691
        public int aiStyle;

        // View
        // Token: 0x040002C3 RID: 707
        public Rectangle frame;
        // Token: 0x040002C2 RID: 706
        public double frameCounter;
        // Token: 0x040002C5 RID: 709
        public int alpha;

        // Token: 0x0400022A RID: 554
        public int altTexture;
        // Token: 0x040002C4 RID: 708
        public Color color;

        // Buff
        // Token: 0x0400025D RID: 605
        public const int maxBuffs = 5;
        // Token: 0x04000260 RID: 608
        public bool[] buffImmune = new bool[206];

        // Token: 0x0400025F RID: 607
        public int[] buffTime = new int[5];

        // Token: 0x0400025E RID: 606
        public int[] buffType = new int[5];

    }
}
