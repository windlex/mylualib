using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using ReLogic.Utilities;
using Terraria.Audio;
using Terraria.DataStructures;
using Terraria.Enums;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.UI;
using Terraria.ID;
using Terraria.Localization;
using Terraria.Utilities;
using Terraria.World.Generation;

namespace Terraria
{  
    public static class NpcAI
    {
        // Token: 0x06000235 RID: 565 RVA: 0x00102DD8 File Offset: 0x00100FD8
        public static void AI(NPC npc)
        {
            if (npc.aiStyle == 0)
            {
                for (int i = 0; i < 255; i++)
                {
                    if (Main.player[i].active && Main.player[i].talkNPC == npc.whoAmI)
                    {
                        if (npc.type == 105)
                        {
                            npc.Transform(107);
                            return;
                        }
                        if (npc.type == 106)
                        {
                            npc.Transform(108);
                            return;
                        }
                        if (npc.type == 123)
                        {
                            npc.Transform(124);
                            return;
                        }
                        if (npc.type == 354)
                        {
                            npc.Transform(353);
                            return;
                        }
                        if (npc.type == 376)
                        {
                            npc.Transform(369);
                            return;
                        }
                    }
                }
                if (npc.type != 376)
                {
                    npc.TargetClosest(true);
                    npc.spriteDirection = npc.direction;
                }
                if (npc.type == 376)
                {
                    if (npc.wet || Main.tile[(int)(npc.Center.X / 16f), (int)(npc.position.Y - 4f) / 16].liquid > 0)
                    {
                        npc.velocity.Y = -0.4f;
                        int num = 1;
                        if (npc.Center.X / 16f > (float)(Main.maxTilesX / 2))
                        {
                            num = -1;
                        }
                        int num2 = 12;
                        int num3 = (int)npc.Center.X / 16;
                        int j = (int)npc.Center.Y / 16;
                        bool flag = false;
                        if (num > 0)
                        {
                            for (int k = num3; k < num3 + num2; k++)
                            {
                                if (WorldGen.SolidTile(k, j))
                                {
                                    flag = true;
                                }
                            }
                        }
                        else
                        {
                            for (int l = num3; l > num3 - num2; l--)
                            {
                                if (WorldGen.SolidTile(l, j))
                                {
                                    flag = true;
                                }
                            }
                        }
                        if (flag)
                        {
                            npc.velocity.X = npc.velocity.X * 0.99f;
                            if ((double)npc.velocity.X > -0.01 && (double)npc.velocity.X < 0.01)
                            {
                                npc.velocity.X = 0f;
                                return;
                            }
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + (float)num * 0.01f;
                            if (npc.velocity.X > 0.2f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.95f;
                            }
                            if (npc.velocity.X < -0.2f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.95f;
                                return;
                            }
                        }
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X * 0.93f;
                        if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                        {
                            npc.velocity.X = 0f;
                            return;
                        }
                    }
                }
                else
                {
                    npc.velocity.X = npc.velocity.X * 0.93f;
                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                    {
                        npc.velocity.X = 0f;
                        return;
                    }
                }
            }
            else if (npc.aiStyle == 1)
            {
                if (npc.type == 1 && (npc.ai[1] == 1f || npc.ai[1] == 2f || npc.ai[1] == 3f))
                {
                    npc.ai[1] = -1f;
                }
                if (npc.type == 1 && npc.ai[1] == 0f && Main.netMode != 1 && npc.value > 0f)
                {
                    npc.ai[1] = -1f;
                    if (Main.rand.Next(20) == 0)
                    {
                        int num4 = Main.rand.Next(4);
                        if (num4 == 0)
                        {
                            num4 = Main.rand.Next(7);
                            if (num4 == 0)
                            {
                                num4 = 290;
                            }
                            else if (num4 == 1)
                            {
                                num4 = 292;
                            }
                            else if (num4 == 2)
                            {
                                num4 = 296;
                            }
                            else if (num4 == 3)
                            {
                                num4 = 2322;
                            }
                            else if (Main.netMode != 0 && Main.rand.Next(2) == 0)
                            {
                                num4 = 2997;
                            }
                            else
                            {
                                num4 = 2350;
                            }
                        }
                        else if (num4 == 1)
                        {
                            num4 = Main.rand.Next(4);
                            if (num4 == 0)
                            {
                                num4 = 8;
                            }
                            else if (num4 == 1)
                            {
                                num4 = 166;
                            }
                            else if (num4 == 2)
                            {
                                num4 = 965;
                            }
                            else
                            {
                                num4 = 58;
                            }
                        }
                        else if (num4 == 2)
                        {
                            if (Main.rand.Next(2) == 0)
                            {
                                num4 = Main.rand.Next(11, 15);
                            }
                            else
                            {
                                num4 = Main.rand.Next(699, 703);
                            }
                        }
                        else
                        {
                            num4 = Main.rand.Next(3);
                            if (num4 == 0)
                            {
                                num4 = 71;
                            }
                            else if (num4 == 1)
                            {
                                num4 = 72;
                            }
                            else
                            {
                                num4 = 73;
                            }
                        }
                        npc.ai[1] = (float)num4;
                        npc.netUpdate = true;
                    }
                }
                if (npc.type == 244)
                {
                    float num5 = (float)Main.DiscoR / 255f;
                    float num6 = (float)Main.DiscoG / 255f;
                    float num7 = (float)Main.DiscoB / 255f;
                    num5 *= 1f;
                    num6 *= 1f;
                    num7 *= 1f;
                    npc.color.R = (byte)Main.DiscoR;
                    npc.color.G = (byte)Main.DiscoG;
                    npc.color.B = (byte)Main.DiscoB;
                    npc.color.A = 100;
                    npc.alpha = 175;
                }
                bool flag2 = false;
                if (!Main.dayTime || npc.life != npc.lifeMax || (double)npc.position.Y > Main.worldSurface * 16.0 || Main.slimeRain)
                {
                    flag2 = true;
                }
                if (npc.type == 81)
                {
                    flag2 = true;
                }
                if ((npc.type == 377 || npc.type == 446) && npc.target != 255 && !Main.player[npc.target].dead && Vector2.Distance(npc.Center, Main.player[npc.target].Center) <= 200f)
                {
                    flag2 = true;
                }
                if (npc.type == 183)
                {
                    flag2 = true;
                }
                if (npc.type == 304)
                {
                    flag2 = true;
                }
                if (npc.type == 147 && Main.rand.Next(10) == 0)
                {
                }
                if (npc.type == 244)
                {
                    flag2 = true;
                    npc.ai[0] += 2f;
                }
                if (npc.type == 184)
                {
                    flag2 = true;
                    if (npc.localAI[0] > 0f)
                    {
                        npc.localAI[0] -= 1f;
                    }
                    if (!npc.wet && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                    {
                        Vector2 vector = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num11 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector.X;
                        float num12 = Main.player[npc.target].position.Y - vector.Y;
                        float num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
                        if (Main.expertMode && num13 < 120f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                        {
                            npc.ai[0] = -40f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                for (int m = 0; m < 5; m++)
                                {
                                    Vector2 vector2 = new Vector2((float)(m - 2), -4f);
                                    vector2.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                    vector2.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                    vector2.Normalize();
                                    vector2 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
                                    Projectile.NewProjectile(vector.X, vector.Y, vector2.X, vector2.Y, 174, 9, 0f, Main.myPlayer, 0f, 0f);
                                    npc.localAI[0] = 30f;
                                }
                            }
                        }
                        else if (num13 < 200f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                        {
                            npc.ai[0] = -40f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                num12 = Main.player[npc.target].position.Y - vector.Y - (float)Main.rand.Next(0, 200);
                                num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
                                num13 = 4.5f / num13;
                                num11 *= num13;
                                num12 *= num13;
                                npc.localAI[0] = 50f;
                                Projectile.NewProjectile(vector.X, vector.Y, num11, num12, 174, 9, 0f, Main.myPlayer, 0f, 0f);
                            }
                        }
                    }
                }
                if (npc.type == 535)
                {
                    flag2 = true;
                    if (npc.localAI[0] > 0f)
                    {
                        npc.localAI[0] -= 1f;
                    }
                    if (!npc.wet && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                    {
                        Vector2 vector3 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num14 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector3.X;
                        float num15 = Main.player[npc.target].position.Y - vector3.Y;
                        float num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
                        if (Main.expertMode && num16 < 120f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                        {
                            npc.ai[0] = -40f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                for (int n = 0; n < 5; n++)
                                {
                                    Vector2 vector4 = new Vector2((float)(n - 2), -4f);
                                    vector4.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                    vector4.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                    vector4.Normalize();
                                    vector4 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
                                    Projectile.NewProjectile(vector3.X, vector3.Y, vector4.X, vector4.Y, 605, 9, 0f, Main.myPlayer, 0f, 0f);
                                    npc.localAI[0] = 30f;
                                }
                            }
                        }
                        else if (num16 < 200f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                        {
                            npc.ai[0] = -40f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                num15 = Main.player[npc.target].position.Y - vector3.Y - (float)Main.rand.Next(0, 200);
                                num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
                                num16 = 4.5f / num16;
                                num14 *= num16;
                                num15 *= num16;
                                npc.localAI[0] = 50f;
                                Projectile.NewProjectile(vector3.X, vector3.Y, num14, num15, 605, 9, 0f, Main.myPlayer, 0f, 0f);
                            }
                        }
                    }
                }
                if (npc.type == 204)
                {
                    flag2 = true;
                    if (npc.localAI[0] > 0f)
                    {
                        npc.localAI[0] -= 1f;
                    }
                    if (!npc.wet && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                    {
                        Vector2 vector5 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num17 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector5.X;
                        float num18 = Main.player[npc.target].position.Y - vector5.Y;
                        float num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
                        if (Main.expertMode && num19 < 200f && Collision.CanHit(new Vector2(npc.position.X, npc.position.Y - 20f), npc.width, npc.height + 20, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                        {
                            npc.ai[0] = -40f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                for (int num20 = 0; num20 < 5; num20++)
                                {
                                    Vector2 vector6 = new Vector2((float)(num20 - 2), -2f);
                                    vector6.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
                                    vector6.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
                                    vector6.Normalize();
                                    vector6 *= 3f + (float)Main.rand.Next(-50, 51) * 0.01f;
                                    Projectile.NewProjectile(vector5.X, vector5.Y, vector6.X, vector6.Y, 176, 13, 0f, Main.myPlayer, 0f, 0f);
                                    npc.localAI[0] = 80f;
                                }
                            }
                        }
                        if (num19 < 400f && Collision.CanHit(new Vector2(npc.position.X, npc.position.Y - 20f), npc.width, npc.height + 20, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                        {
                            npc.ai[0] = -80f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                num18 = Main.player[npc.target].position.Y - vector5.Y - (float)Main.rand.Next(-30, 20);
                                num18 -= num19 * 0.05f;
                                num17 = Main.player[npc.target].position.X - vector5.X - (float)Main.rand.Next(-20, 20);
                                num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
                                num19 = 7f / num19;
                                num17 *= num19;
                                num18 *= num19;
                                npc.localAI[0] = 65f;
                                Projectile.NewProjectile(vector5.X, vector5.Y, num17, num18, 176, 13, 0f, Main.myPlayer, 0f, 0f);
                            }
                        }
                    }
                }
                if (npc.type == 377 || npc.type == 446)
                {
                    if (npc.localAI[2] < 90f)
                    {
                        npc.localAI[2] += 1f;
                    }
                    else
                    {
                        npc.friendly = false;
                    }
                }
                if (npc.type == 59)
                {
                }
                if (npc.ai[2] > 1f)
                {
                    npc.ai[2] -= 1f;
                }
                if (npc.wet)
                {
                    if (npc.collideY)
                    {
                        npc.velocity.Y = -2f;
                    }
                    if (npc.velocity.Y < 0f && npc.ai[3] == npc.position.X)
                    {
                        npc.direction *= -1;
                        npc.ai[2] = 200f;
                    }
                    if (npc.velocity.Y > 0f)
                    {
                        npc.ai[3] = npc.position.X;
                    }
                    if (npc.type == 59)
                    {
                        if (npc.velocity.Y > 2f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.9f;
                        }
                        else if (npc.directionY < 0)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.8f;
                        }
                        npc.velocity.Y = npc.velocity.Y - 0.5f;
                        if (npc.velocity.Y < -10f)
                        {
                            npc.velocity.Y = -10f;
                        }
                    }
                    else
                    {
                        if (npc.velocity.Y > 2f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.9f;
                        }
                        npc.velocity.Y = npc.velocity.Y - 0.5f;
                        if (npc.velocity.Y < -4f)
                        {
                            npc.velocity.Y = -4f;
                        }
                    }
                    if (npc.ai[2] == 1f && flag2)
                    {
                        npc.TargetClosest(true);
                    }
                }
                npc.aiAction = 0;
                if (npc.ai[2] == 0f)
                {
                    npc.ai[0] = -100f;
                    npc.ai[2] = 1f;
                    npc.TargetClosest(true);
                }
                if (npc.velocity.Y == 0f)
                {
                    if (npc.ai[3] == npc.position.X)
                    {
                        npc.direction *= -1;
                        npc.ai[2] = 200f;
                    }
                    npc.ai[3] = 0f;
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                    {
                        npc.velocity.X = 0f;
                    }
                    if (flag2)
                    {
                        npc.ai[0] += 1f;
                    }
                    npc.ai[0] += 1f;
                    if (npc.type == 59)
                    {
                        npc.ai[0] += 2f;
                    }
                    if (npc.type == 71)
                    {
                        npc.ai[0] += 3f;
                    }
                    if (npc.type == 138)
                    {
                        npc.ai[0] += 2f;
                    }
                    if (npc.type == 183)
                    {
                        npc.ai[0] += 1f;
                    }
                    if (npc.type == 304)
                    {
                        float num22 = (float)((1 - npc.life / npc.lifeMax) * 10);
                        npc.ai[0] += num22;
                    }
                    if (npc.type == 377 || npc.type == 446)
                    {
                        npc.ai[0] += 3f;
                    }
                    if (npc.type == 81)
                    {
                        if (npc.scale >= 0f)
                        {
                            npc.ai[0] += 4f;
                        }
                        else
                        {
                            npc.ai[0] += 1f;
                        }
                    }
                    int num23 = 0;
                    if (npc.ai[0] >= 0f)
                    {
                        num23 = 1;
                    }
                    if (npc.ai[0] >= -1000f && npc.ai[0] <= -500f)
                    {
                        num23 = 2;
                    }
                    if (npc.ai[0] >= -2000f && npc.ai[0] <= -1500f)
                    {
                        num23 = 3;
                    }
                    if (num23 > 0)
                    {
                        npc.netUpdate = true;
                        if (flag2 && npc.ai[2] == 1f)
                        {
                            npc.TargetClosest(true);
                        }
                        if (num23 == 3)
                        {
                            npc.velocity.Y = -8f;
                            if (npc.type == 59)
                            {
                                npc.velocity.Y = npc.velocity.Y - 2f;
                            }
                            npc.velocity.X = npc.velocity.X + (float)(3 * npc.direction);
                            if (npc.type == 59)
                            {
                                npc.velocity.X = npc.velocity.X + 0.5f * (float)npc.direction;
                            }
                            npc.ai[0] = -200f;
                            npc.ai[3] = npc.position.X;
                        }
                        else
                        {
                            npc.velocity.Y = -6f;
                            npc.velocity.X = npc.velocity.X + (float)(2 * npc.direction);
                            if (npc.type == 59)
                            {
                                npc.velocity.X = npc.velocity.X + (float)(2 * npc.direction);
                            }
                            npc.ai[0] = -120f;
                            if (num23 == 1)
                            {
                                npc.ai[0] -= 1000f;
                            }
                            else
                            {
                                npc.ai[0] -= 2000f;
                            }
                        }
                        if (npc.type == 141)
                        {
                            npc.velocity.Y = npc.velocity.Y * 1.3f;
                            npc.velocity.X = npc.velocity.X * 1.2f;
                        }
                        if (npc.type == 377 || npc.type == 446)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.9f;
                            npc.velocity.X = npc.velocity.X * 0.6f;
                            if (flag2)
                            {
                                npc.direction = -npc.direction;
                                npc.velocity.X = npc.velocity.X * -1f;
                                return;
                            }
                        }
                    }
                    else if (npc.ai[0] >= -30f)
                    {
                        npc.aiAction = 1;
                        return;
                    }
                }
                else if (npc.target < 255 && ((npc.direction == 1 && npc.velocity.X < 3f) || (npc.direction == -1 && npc.velocity.X > -3f)))
                {
                    if ((npc.direction == -1 && (double)npc.velocity.X < 0.1) || (npc.direction == 1 && (double)npc.velocity.X > -0.1))
                    {
                        npc.velocity.X = npc.velocity.X + 0.2f * (float)npc.direction;
                        return;
                    }
                    npc.velocity.X = npc.velocity.X * 0.93f;
                    return;
                }
            }
            else if (npc.aiStyle == 2)
            {
                if ((npc.type == 170 || npc.type == 171 || npc.type == 180) && Main.rand.Next(1000) == 0)
                {
                }
                npc.noGravity = true;
                if (!npc.noTileCollide)
                {
                    if (npc.collideX)
                    {
                        npc.velocity.X = npc.oldVelocity.X * -0.5f;
                        if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                        {
                            npc.velocity.X = 2f;
                        }
                        if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                        {
                            npc.velocity.X = -2f;
                        }
                    }
                    if (npc.collideY)
                    {
                        npc.velocity.Y = npc.oldVelocity.Y * -0.5f;
                        if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                        {
                            npc.velocity.Y = 1f;
                        }
                        if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                        {
                            npc.velocity.Y = -1f;
                        }
                    }
                }
                if (Main.dayTime && (double)npc.position.Y <= Main.worldSurface * 16.0 && (npc.type == 2 || npc.type == 133 || npc.type == 190 || npc.type == 191 || npc.type == 192 || npc.type == 193 || npc.type == 194 || npc.type == 317 || npc.type == 318))
                {
                    if (npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                    }
                    npc.directionY = -1;
                    if (npc.velocity.Y > 0f)
                    {
                        npc.direction = 1;
                    }
                    npc.direction = -1;
                    if (npc.velocity.X > 0f)
                    {
                        npc.direction = 1;
                    }
                }
                else
                {
                    npc.TargetClosest(true);
                }
                if (npc.type == 170 || npc.type == 171 || npc.type == 180)
                {
                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        if (npc.ai[1] > 0f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                        {
                            npc.ai[1] = 0f;
                            npc.ai[0] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                    else if (npc.ai[1] == 0f)
                    {
                        npc.ai[0] += 1f;
                    }
                    if (npc.ai[0] >= 300f)
                    {
                        npc.ai[1] = 1f;
                        npc.ai[0] = 0f;
                        npc.netUpdate = true;
                    }
                    if (npc.ai[1] == 0f)
                    {
                        npc.alpha = 0;
                        npc.noTileCollide = false;
                    }
                    else
                    {
                        npc.wet = false;
                        npc.alpha = 200;
                        npc.noTileCollide = true;
                    }
                    npc.rotation = npc.velocity.Y * 0.1f * (float)npc.direction;
                    npc.TargetClosest(true);
                    if (npc.direction == -1 && npc.velocity.X > -4f && npc.position.X > Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                    {
                        npc.velocity.X = npc.velocity.X - 0.08f;
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.04f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.2f;
                        }
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = -4f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 4f && npc.position.X + (float)npc.width < Main.player[npc.target].position.X)
                    {
                        npc.velocity.X = npc.velocity.X + 0.08f;
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.04f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.2f;
                        }
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = 4f;
                        }
                    }
                    if (npc.directionY == -1 && (double)npc.velocity.Y > -2.5 && npc.position.Y > Main.player[npc.target].position.Y + (float)Main.player[npc.target].height)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.1f;
                        if ((double)npc.velocity.Y > 2.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.15f;
                        }
                        if ((double)npc.velocity.Y < -2.5)
                        {
                            npc.velocity.Y = -2.5f;
                        }
                    }
                    else if (npc.directionY == 1 && (double)npc.velocity.Y < 2.5 && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                        if ((double)npc.velocity.Y < -2.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.15f;
                        }
                        if ((double)npc.velocity.Y > 2.5)
                        {
                            npc.velocity.Y = 2.5f;
                        }
                    }
                }
                else if (npc.type == 116)
                {
                    npc.TargetClosest(true);
                    if (npc.direction == -1 && npc.velocity.X > -6f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.2f;
                        }
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 6f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.2f;
                        }
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                    }
                    if (npc.directionY == -1 && (double)npc.velocity.Y > -2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.04f;
                        if ((double)npc.velocity.Y > 2.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.15f;
                        }
                        if ((double)npc.velocity.Y < -2.5)
                        {
                            npc.velocity.Y = -2.5f;
                        }
                    }
                    else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.04f;
                        if ((double)npc.velocity.Y < -2.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.15f;
                        }
                        if ((double)npc.velocity.Y > 2.5)
                        {
                            npc.velocity.Y = 2.5f;
                        }
                    }
                }
                else if (npc.type == 133)
                {
                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                    {
                        if (npc.direction == -1 && npc.velocity.X > -6f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                            if (npc.velocity.X > 6f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.05f;
                            }
                            if (npc.velocity.X < -6f)
                            {
                                npc.velocity.X = -6f;
                            }
                        }
                        else if (npc.direction == 1 && npc.velocity.X < 6f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                            if (npc.velocity.X < -6f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            else if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.05f;
                            }
                            if (npc.velocity.X > 6f)
                            {
                                npc.velocity.X = 6f;
                            }
                        }
                        if (npc.directionY == -1 && npc.velocity.Y > -4f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.1f;
                            if (npc.velocity.Y > 4f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                            }
                            else if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                            if (npc.velocity.Y < -4f)
                            {
                                npc.velocity.Y = -4f;
                            }
                        }
                        else if (npc.directionY == 1 && npc.velocity.Y < 4f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.1f;
                            if (npc.velocity.Y < -4f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                            }
                            else if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                            }
                            if (npc.velocity.Y > 4f)
                            {
                                npc.velocity.Y = 4f;
                            }
                        }
                    }
                    else
                    {
                        if (npc.direction == -1 && npc.velocity.X > -4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                            if (npc.velocity.X > 4f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.05f;
                            }
                            if (npc.velocity.X < -4f)
                            {
                                npc.velocity.X = -4f;
                            }
                        }
                        else if (npc.direction == 1 && npc.velocity.X < 4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                            if (npc.velocity.X < -4f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            else if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.05f;
                            }
                            if (npc.velocity.X > 4f)
                            {
                                npc.velocity.X = 4f;
                            }
                        }
                        if (npc.directionY == -1 && (double)npc.velocity.Y > -1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                            }
                            else if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.03f;
                            }
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = -1.5f;
                            }
                        }
                        else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.04f;
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                            else if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.03f;
                            }
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = 1.5f;
                            }
                        }
                    }
                }
                else
                {
                    float num25 = 4f;
                    float num26 = 1.5f;
                    num25 *= 1f + (1f - npc.scale);
                    num26 *= 1f + (1f - npc.scale);
                    if (npc.direction == -1 && npc.velocity.X > -num25)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X > num25)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X < -num25)
                        {
                            npc.velocity.X = -num25;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < num25)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X < -num25)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X > num25)
                        {
                            npc.velocity.X = num25;
                        }
                    }
                    if (npc.directionY == -1 && npc.velocity.Y > -num26)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.04f;
                        if (npc.velocity.Y > num26)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.03f;
                        }
                        if (npc.velocity.Y < -num26)
                        {
                            npc.velocity.Y = -num26;
                        }
                    }
                    else if (npc.directionY == 1 && npc.velocity.Y < num26)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.04f;
                        if (npc.velocity.Y < -num26)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.03f;
                        }
                        if (npc.velocity.Y > num26)
                        {
                            npc.velocity.Y = num26;
                        }
                    }
                }
                if ((npc.type == 2 || npc.type == 133 || npc.type == 190 || npc.type == 191 || npc.type == 192 || npc.type == 193 || npc.type == 194) && Main.rand.Next(40) == 0)
                {
                }
                if (npc.wet && npc.type != 170 && npc.type != 171 && npc.type != 172)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                    npc.TargetClosest(true);
                    return;
                }
            }
            else if (npc.aiStyle == 3)
            {
                if (npc.type == 466)
                {
                    int num28 = 200;
                    if (npc.ai[2] == 0f)
                    {
                        npc.alpha = num28;
                        npc.TargetClosest(true);
                        if (!Main.player[npc.target].dead && (Main.player[npc.target].Center - npc.Center).Length() < 170f)
                        {
                            npc.ai[2] = -16f;
                        }
                        if (npc.velocity.X != 0f || npc.velocity.Y < 0f || npc.velocity.Y > 2f || npc.justHit)
                        {
                            npc.ai[2] = -16f;
                        }
                        return;
                    }
                    if (npc.ai[2] < 0f)
                    {
                        if (npc.alpha > 0)
                        {
                            npc.alpha -= num28 / 16;
                            if (npc.alpha < 0)
                            {
                                npc.alpha = 0;
                            }
                        }
                        npc.ai[2] += 1f;
                        if (npc.ai[2] == 0f)
                        {
                            npc.ai[2] = 1f;
                            npc.velocity.X = (float)(npc.direction * 2);
                        }
                        return;
                    }
                    npc.alpha = 0;
                }
                if (npc.type == 166)
                {
                    if (Main.netMode != 1 && Main.rand.Next(240) == 0)
                    {
                        npc.ai[2] = (float)Main.rand.Next(-480, -60);
                        npc.netUpdate = true;
                    }
                    if (npc.ai[2] < 0f)
                    {
                        npc.TargetClosest(true);
                        if (npc.justHit)
                        {
                            npc.ai[2] = 0f;
                        }
                        if (Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.ai[2] = 0f;
                        }
                    }
                    if (npc.ai[2] < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                        if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                        {
                            npc.velocity.X = 0f;
                        }
                        npc.ai[2] += 1f;
                        if (npc.ai[2] == 0f)
                        {
                            npc.velocity.X = (float)npc.direction * 0.1f;
                        }
                        return;
                    }
                }
                if (npc.type == 461)
                {
                    if (npc.wet)
                    {
                        npc.knockBackResist = 0f;
                        npc.ai[3] = -0.10101f;
                        npc.noGravity = true;
                        Vector2 center = npc.Center;
                        npc.width = 34;
                        npc.height = 24;
                        npc.position.X = center.X - (float)(npc.width / 2);
                        npc.position.Y = center.Y - (float)(npc.height / 2);
                        npc.TargetClosest(true);
                        if (npc.collideX)
                        {
                            npc.velocity.X = -npc.oldVelocity.X;
                        }
                        if (npc.velocity.X < 0f)
                        {
                            npc.direction = -1;
                        }
                        if (npc.velocity.X > 0f)
                        {
                            npc.direction = 1;
                        }
                        if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].Center, 1, 1))
                        {
                            Vector2 value = Main.player[npc.target].Center - npc.Center;
                            value.Normalize();
                            value *= 5f;
                            npc.velocity = (npc.velocity * 19f + value) / 20f;
                            return;
                        }
                        float num29 = 5f;
                        if (npc.velocity.Y > 0f)
                        {
                            num29 = 3f;
                        }
                        if (npc.velocity.Y < 0f)
                        {
                            num29 = 8f;
                        }
                        Vector2 value2 = new Vector2((float)npc.direction, -1f);
                        value2.Normalize();
                        value2 *= num29;
                        if (num29 < 5f)
                        {
                            npc.velocity = (npc.velocity * 24f + value2) / 25f;
                            return;
                        }
                        npc.velocity = (npc.velocity * 9f + value2) / 10f;
                        return;
                    }
                    else
                    {
                        npc.knockBackResist = 0.4f * Main.knockBackMultiplier;
                        npc.noGravity = false;
                        Vector2 center2 = npc.Center;
                        npc.width = 18;
                        npc.height = 40;
                        npc.position.X = center2.X - (float)(npc.width / 2);
                        npc.position.Y = center2.Y - (float)(npc.height / 2);
                        if (npc.ai[3] == -0.10101f)
                        {
                            npc.ai[3] = 0f;
                            float num30 = npc.velocity.Length();
                            num30 *= 2f;
                            if (num30 > 10f)
                            {
                                num30 = 10f;
                            }
                            npc.velocity.Normalize();
                            npc.velocity *= num30;
                            if (npc.velocity.X < 0f)
                            {
                                npc.direction = -1;
                            }
                            if (npc.velocity.X > 0f)
                            {
                                npc.direction = 1;
                            }
                            npc.spriteDirection = npc.direction;
                        }
                    }
                }
                if (npc.type == 379 || npc.type == 380)
                {
                    if (npc.ai[3] < 0f)
                    {
                        npc.damage = 0;
                        npc.velocity.X = npc.velocity.X * 0.93f;
                        if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                        {
                            npc.velocity.X = 0f;
                        }
                        int num31 = (int)(-npc.ai[3] - 1f);
                        int num32 = Math.Sign(Main.npc[num31].Center.X - npc.Center.X);
                        if (num32 != npc.direction)
                        {
                            npc.velocity.X = 0f;
                            npc.direction = num32;
                            npc.netUpdate = true;
                        }
                        if (npc.justHit && Main.netMode != 1 && Main.npc[num31].localAI[0] == 0f)
                        {
                            Main.npc[num31].localAI[0] = 1f;
                        }
                        if (npc.ai[0] < 1000f)
                        {
                            npc.ai[0] = 1000f;
                        }
                        if ((npc.ai[0] += 1f) >= 1300f)
                        {
                            npc.ai[0] = 1000f;
                            npc.netUpdate = true;
                        }
                        return;
                    }
                    if (npc.ai[0] >= 1000f)
                    {
                        npc.ai[0] = 0f;
                    }
                    npc.damage = npc.defDamage;
                }
                if (npc.type == 383 && npc.ai[2] == 0f && npc.localAI[0] == 0f && Main.netMode != 1)
                {
                    int num33 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 384, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                    npc.ai[2] = (float)(num33 + 1);
                    npc.localAI[0] = -1f;
                    npc.netUpdate = true;
                    Main.npc[num33].ai[0] = (float)npc.whoAmI;
                    Main.npc[num33].netUpdate = true;
                }
                if (npc.type == 383)
                {
                    int num34 = (int)npc.ai[2] - 1;
                    if (num34 != -1 && Main.npc[num34].active && Main.npc[num34].type == 384)
                    {
                        npc.dontTakeDamage = true;
                    }
                    else
                    {
                        npc.dontTakeDamage = false;
                        npc.ai[2] = 0f;
                        if (npc.localAI[0] == -1f)
                        {
                            npc.localAI[0] = 180f;
                        }
                        if (npc.localAI[0] > 0f)
                        {
                            npc.localAI[0] -= 1f;
                        }
                    }
                }
                if (npc.type == 482)
                {
                    int num35 = 300;
                    int num36 = 120;
                    npc.dontTakeDamage = false;
                    if (npc.ai[2] < 0f)
                    {
                        npc.dontTakeDamage = true;
                        npc.ai[2] += 1f;
                        npc.velocity.X = npc.velocity.X * 0.9f;
                        if ((double)Math.Abs(npc.velocity.X) < 0.001)
                        {
                            npc.velocity.X = 0.001f * (float)npc.direction;
                        }
                        if (Math.Abs(npc.velocity.Y) > 1f)
                        {
                            npc.ai[2] += 10f;
                        }
                        if (npc.ai[2] >= 0f)
                        {
                            npc.netUpdate = true;
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.3f;
                        }
                        return;
                    }
                    if (npc.ai[2] < (float)num35)
                    {
                        if (npc.justHit)
                        {
                            npc.ai[2] += 15f;
                        }
                        npc.ai[2] += 1f;
                    }
                    else if (npc.velocity.Y == 0f)
                    {
                        npc.ai[2] = (float)(-(float)num36);
                        npc.netUpdate = true;
                    }
                }
                if (npc.type == 480)
                {
                    int num37 = 180;
                    int num38 = 300;
                    int num39 = 180;
                    int num40 = 60;
                    int num41 = 20;
                    if (npc.life < npc.lifeMax / 3)
                    {
                        num37 = 120;
                        num38 = 240;
                        num39 = 240;
                        num40 = 90;
                    }
                    if (npc.ai[2] > 0f)
                    {
                        npc.ai[2] -= 1f;
                    }
                    else if (npc.ai[2] == 0f)
                    {
                        if (((Main.player[npc.target].Center.X < npc.Center.X && npc.direction < 0) || (Main.player[npc.target].Center.X > npc.Center.X && npc.direction > 0)) && npc.velocity.Y == 0f && npc.Distance(Main.player[npc.target].Center) < 900f && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.ai[2] = (float)(-(float)num39 - num41);
                            npc.netUpdate = true;
                        }
                    }
                    else
                    {
                        if (npc.ai[2] < 0f && npc.ai[2] < (float)(-(float)num39))
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                            if (npc.velocity.Y < -2f || npc.velocity.Y > 4f || npc.justHit)
                            {
                                npc.ai[2] = (float)num37;
                            }
                            else
                            {
                                npc.ai[2] += 1f;
                                if (npc.ai[2] == 0f)
                                {
                                    npc.ai[2] = (float)num38;
                                }
                            }
                            float num42 = npc.ai[2] + (float)num39 + (float)num41;
                            if (num42 == 1f)
                            {
                            }
                            if (num42 < (float)num41)
                            {
                            }
                            return;
                        }
                        if (npc.ai[2] < 0f && npc.ai[2] >= (float)(-(float)num39))
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                            if (npc.velocity.Y < -2f || npc.velocity.Y > 4f || npc.justHit)
                            {
                                npc.ai[2] = (float)num37;
                            }
                            else
                            {
                                npc.ai[2] += 1f;
                                if (npc.ai[2] == 0f)
                                {
                                    npc.ai[2] = (float)num38;
                                }
                            }
                            float num44 = npc.ai[2] + (float)num39;
                            if (num44 < 180f && (Main.rand.Next(3) == 0 || npc.ai[2] % 3f == 0f))
                            {
                            }
                            if (Main.netMode != 2)
                            {
                                Player player = Main.player[Main.myPlayer];
                                int arg_44C1_0 = Main.myPlayer;
                                if (!player.dead && player.active && player.FindBuffIndex(156) == -1 && (player.Center - npc.Center).Length() < 700f && ((player.Center.X < npc.Center.X && npc.direction < 0 && player.direction > 0) || (player.Center.X > npc.Center.X && npc.direction > 0 && player.direction < 0)))
                                {
                                    bool flag3 = Collision.CanHitLine(npc.Center, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(npc.Center - Vector2.UnitY * 16f, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(npc.Center + Vector2.UnitY * 8f, 1, 1, player.Center, 1, 1);
                                    if (flag3)
                                    {
                                        player.AddBuff(156, num40 + (int)npc.ai[2] * -1, true);
                                    }
                                }
                            }
                            return;
                        }
                    }
                }
                if (npc.type == 471)
                {
                    if (npc.ai[3] < 0f)
                    {
                        npc.knockBackResist = 0f;
                        npc.defense = (int)((double)npc.defDefense * 1.1);
                        npc.noGravity = true;
                        npc.noTileCollide = true;
                        if (npc.velocity.X < 0f)
                        {
                            npc.direction = -1;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.direction = 1;
                        }
                        npc.rotation = npc.velocity.X * 0.1f;
                        if (Main.netMode != 1)
                        {
                            npc.localAI[3] += 1f;
                            if (npc.localAI[3] > (float)Main.rand.Next(20, 180))
                            {
                                npc.localAI[3] = 0f;
                                Vector2 value3 = npc.Center;
                                value3 += npc.velocity;
                                NPC.NewNPC((int)value3.X, (int)value3.Y, 30, 0, 0f, 0f, 0f, 0f, 255);
                            }
                        }
                    }
                    else
                    {
                        npc.localAI[3] = 0f;
                        npc.knockBackResist = 0.35f * Main.knockBackMultiplier;
                        npc.rotation *= 0.9f;
                        npc.defense = npc.defDefense;
                        npc.noGravity = false;
                        npc.noTileCollide = false;
                    }
                    if (npc.ai[3] == 1f)
                    {
                        npc.knockBackResist = 0f;
                        npc.defense += 10;
                    }
                    if (npc.ai[3] == -1f)
                    {
                        npc.TargetClosest(true);
                        float num46 = 8f;
                        float num47 = 40f;
                        Vector2 value4 = Main.player[npc.target].Center - npc.Center;
                        float num48 = value4.Length();
                        num46 += num48 / 200f;
                        value4.Normalize();
                        value4 *= num46;
                        npc.velocity = (npc.velocity * (num47 - 1f) + value4) / num47;
                        if (num48 < 500f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                        {
                            npc.ai[3] = 0f;
                            npc.ai[2] = 0f;
                        }
                        return;
                    }
                    if (npc.ai[3] == -2f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.2f;
                        if (npc.velocity.Y < -10f)
                        {
                            npc.velocity.Y = -10f;
                        }
                        if (Main.player[npc.target].Center.Y - npc.Center.Y > 200f)
                        {
                            npc.TargetClosest(true);
                            npc.ai[3] = -3f;
                            if (Main.player[npc.target].Center.X > npc.Center.X)
                            {
                                npc.ai[2] = 1f;
                            }
                            else
                            {
                                npc.ai[2] = -1f;
                            }
                        }
                        npc.velocity.X = npc.velocity.X * 0.99f;
                        return;
                    }
                    if (npc.ai[3] == -3f)
                    {
                        if (npc.direction == 0)
                        {
                            npc.TargetClosest(true);
                        }
                        if (npc.ai[2] == 0f)
                        {
                            npc.ai[2] = (float)npc.direction;
                        }
                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                        npc.velocity.X = npc.velocity.X + npc.ai[2] * 0.3f;
                        if (npc.velocity.X > 10f)
                        {
                            npc.velocity.X = 10f;
                        }
                        if (npc.velocity.X < -10f)
                        {
                            npc.velocity.X = -10f;
                        }
                        float num49 = Main.player[npc.target].Center.X - npc.Center.X;
                        if ((npc.ai[2] < 0f && num49 > 300f) || (npc.ai[2] > 0f && num49 < -300f))
                        {
                            npc.ai[3] = -4f;
                            npc.ai[2] = 0f;
                            return;
                        }
                        if (Math.Abs(num49) > 800f)
                        {
                            npc.ai[3] = -1f;
                            npc.ai[2] = 0f;
                        }
                        return;
                    }
                    else
                    {
                        if (npc.ai[3] == -4f)
                        {
                            npc.ai[2] += 1f;
                            npc.velocity.Y = npc.velocity.Y + 0.1f;
                            if (npc.velocity.Length() > 4f)
                            {
                                npc.velocity *= 0.9f;
                            }
                            int num50 = (int)npc.Center.X / 16;
                            int num51 = (int)(npc.position.Y + (float)npc.height + 12f) / 16;
                            bool flag4 = false;
                            for (int num52 = num50 - 1; num52 <= num50 + 1; num52++)
                            {
                                if (Main.tile[num52, num51] == null)
                                {
                                    Main.tile[num50, num51] = new Tile();
                                }
                                if (Main.tile[num52, num51].active() && Main.tileSolid[(int)Main.tile[num52, num51].type])
                                {
                                    flag4 = true;
                                }
                            }
                            if (flag4 && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                            {
                                npc.ai[3] = 0f;
                                npc.ai[2] = 0f;
                            }
                            else if (npc.ai[2] > 300f || npc.Center.Y > Main.player[npc.target].Center.Y + 200f)
                            {
                                npc.ai[3] = -1f;
                                npc.ai[2] = 0f;
                            }
                        }
                        else
                        {
                            if (npc.ai[3] == 1f)
                            {
                                Vector2 center3 = npc.Center;
                                center3.Y -= 70f;
                                npc.velocity.X = npc.velocity.X * 0.8f;
                                npc.ai[2] += 1f;
                                if (npc.ai[2] == 60f)
                                {
                                    if (Main.netMode != 1)
                                    {
                                        NPC.NewNPC((int)center3.X, (int)center3.Y + 18, 472, 0, 0f, 0f, 0f, 0f, 255);
                                    }
                                }
                                else if (npc.ai[2] >= 90f)
                                {
                                    npc.ai[3] = -2f;
                                    npc.ai[2] = 0f;
                                }
                                return;
                            }
                            npc.ai[2] += 1f;
                            int num55 = 10;
                            if (npc.velocity.Y == 0f && NPC.CountNPCS(472) < num55)
                            {
                                if (npc.ai[2] >= 180f)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 1f;
                                }
                            }
                            else
                            {
                                if (NPC.CountNPCS(472) >= num55)
                                {
                                    npc.ai[2] += 1f;
                                }
                                if (npc.ai[2] >= 360f)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = -2f;
                                    npc.velocity.Y = npc.velocity.Y - 3f;
                                }
                            }
                            if (npc.target >= 0 && !Main.player[npc.target].dead && (Main.player[npc.target].Center - npc.Center).Length() > 800f)
                            {
                                npc.ai[3] = -1f;
                                npc.ai[2] = 0f;
                            }
                        }
                        if (Main.player[npc.target].dead)
                        {
                            npc.TargetClosest(true);
                            if (Main.player[npc.target].dead && npc.timeLeft > 1)
                            {
                                npc.timeLeft = 1;
                            }
                        }
                    }
                }
                if (npc.type == 419)
                {
                    npc.reflectingProjectiles = false;
                    npc.takenDamageMultiplier = 1f;
                    int num56 = 6;
                    int num57 = 10;
                    float scaleFactor3 = 16f;
                    if (npc.ai[2] > 0f)
                    {
                        npc.ai[2] -= 1f;
                    }
                    if (npc.ai[2] == 0f)
                    {
                        if (((Main.player[npc.target].Center.X < npc.Center.X && npc.direction < 0) || (Main.player[npc.target].Center.X > npc.Center.X && npc.direction > 0)) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.ai[2] = -1f;
                            npc.netUpdate = true;
                            npc.TargetClosest(true);
                        }
                    }
                    else
                    {
                        if (npc.ai[2] < 0f && npc.ai[2] > (float)(-(float)num56))
                        {
                            npc.ai[2] -= 1f;
                            npc.velocity.X = npc.velocity.X * 0.9f;
                            return;
                        }
                        if (npc.ai[2] == (float)(-(float)num56))
                        {
                            npc.ai[2] -= 1f;
                            npc.TargetClosest(true);
                            Vector2 vec = npc.DirectionTo(Main.player[npc.target].Top + new Vector2(0f, -30f));
                            if (vec.HasNaNs())
                            {
                                vec = Vector2.Normalize(new Vector2((float)npc.spriteDirection, -1f));
                            }
                            npc.velocity = vec * scaleFactor3;
                            npc.netUpdate = true;
                            return;
                        }
                        if (npc.ai[2] < (float)(-(float)num56))
                        {
                            npc.ai[2] -= 1f;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.ai[2] = 60f;
                            }
                            else if (npc.ai[2] < (float)(-(float)num56 - num57))
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.15f;
                                if (npc.velocity.Y > 24f)
                                {
                                    npc.velocity.Y = 24f;
                                }
                            }
                            npc.reflectingProjectiles = true;
                            npc.takenDamageMultiplier = 3f;
                            if (npc.justHit)
                            {
                                npc.ai[2] = 60f;
                                npc.netUpdate = true;
                            }
                            return;
                        }
                    }
                }
                if (npc.type == 415)
                {
                    int num58 = 42;
                    int num59 = 18;
                    if (npc.justHit)
                    {
                        npc.ai[2] = 120f;
                        npc.netUpdate = true;
                    }
                    if (npc.ai[2] > 0f)
                    {
                        npc.ai[2] -= 1f;
                    }
                    if (npc.ai[2] == 0f)
                    {
                        int num60 = 0;
                        for (int num61 = 0; num61 < 200; num61++)
                        {
                            if (Main.npc[num61].active && Main.npc[num61].type == 516)
                            {
                                num60++;
                            }
                        }
                        if (num60 > 6)
                        {
                            npc.ai[2] = 90f;
                        }
                        else if (((Main.player[npc.target].Center.X < npc.Center.X && npc.direction < 0) || (Main.player[npc.target].Center.X > npc.Center.X && npc.direction > 0)) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.ai[2] = -1f;
                            npc.netUpdate = true;
                            npc.TargetClosest(true);
                        }
                    }
                    else if (npc.ai[2] < 0f && npc.ai[2] > (float)(-(float)num58))
                    {
                        npc.ai[2] -= 1f;
                        if (npc.ai[2] == (float)(-(float)num58))
                        {
                            npc.ai[2] = (float)(180 + 30 * Main.rand.Next(10));
                        }
                        npc.velocity.X = npc.velocity.X * 0.8f;
                        if (npc.ai[2] == (float)(-(float)num59) || npc.ai[2] == (float)(-(float)num59 - 8) || npc.ai[2] == (float)(-(float)num59 - 16))
                        {
                            if (npc.velocity.X > -0.5f && npc.velocity.X < 0.5f)
                            {
                                npc.velocity.X = 0f;
                            }
                            if (Main.netMode != 1)
                            {
                                NPC.NewNPC((int)npc.Center.X + npc.spriteDirection * 45, (int)npc.Center.Y + 8, 516, 0, 0f, 0f, 0f, 0f, npc.target);
                            }
                        }
                        return;
                    }
                }
                if (npc.type == 428)
                {
                    npc.localAI[0] += 1f;
                    if (npc.localAI[0] >= 300f)
                    {
                        int num63 = (int)npc.Center.X / 16 - 1;
                        int num64 = (int)npc.Center.Y / 16 - 1;
                        if (!Collision.SolidTiles(num63, num63 + 2, num64, num64 + 1) && Main.netMode != 1)
                        {
                            npc.Transform(427);
                            npc.life = npc.lifeMax;
                            npc.localAI[0] = 0f;
                            return;
                        }
                    }
                }
                if (npc.type == 427)
                {
                    npc.localAI[0] += 1f;
                    npc.localAI[0] += Math.Abs(npc.velocity.X) / 2f;
                    if (npc.localAI[0] >= 1200f && Main.netMode != 1)
                    {
                        int num65 = (int)npc.Center.X / 16 - 2;
                        int num66 = (int)npc.Center.Y / 16 - 3;
                        if (!Collision.SolidTiles(num65, num65 + 4, num66, num66 + 4))
                        {
                            npc.Transform(426);
                            npc.life = npc.lifeMax;
                            npc.localAI[0] = 0f;
                            return;
                        }
                    }
                }
                bool flag5 = false;
                if (npc.velocity.X == 0f)
                {
                    flag5 = true;
                }
                if (npc.justHit)
                {
                    flag5 = false;
                }
                if (Main.netMode != 1 && npc.type == 198 && (double)npc.life <= (double)npc.lifeMax * 0.55)
                {
                    npc.Transform(199);
                }
                if (Main.netMode != 1 && npc.type == 348 && (double)npc.life <= (double)npc.lifeMax * 0.55)
                {
                    npc.Transform(349);
                }
                int num67 = 60;
                if (npc.type == 120)
                {
                    num67 = 180;
                    if (npc.ai[3] == -120f)
                    {
                        npc.velocity *= 0f;
                        npc.ai[3] = 0f;
                        Vector2 vector14 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num68 = npc.oldPos[2].X + (float)npc.width * 0.5f - vector14.X;
                        float num69 = npc.oldPos[2].Y + (float)npc.height * 0.5f - vector14.Y;
                        float num70 = (float)Math.Sqrt((double)(num68 * num68 + num69 * num69));
                        num70 = 2f / num70;
                        num68 *= num70;
                        num69 *= num70;
                    }
                }
                bool flag6 = false;
                bool flag7 = true;
                if (npc.type == 343 || npc.type == 47 || npc.type == 67 || npc.type == 109 || npc.type == 110 || npc.type == 111 || npc.type == 120 || npc.type == 163 || npc.type == 164 || npc.type == 239 || npc.type == 168 || npc.type == 199 || npc.type == 206 || npc.type == 214 || npc.type == 215 || npc.type == 216 || npc.type == 217 || npc.type == 218 || npc.type == 219 || npc.type == 220 || npc.type == 226 || npc.type == 243 || npc.type == 251 || npc.type == 257 || npc.type == 258 || npc.type == 290 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 305 || npc.type == 306 || npc.type == 307 || npc.type == 308 || npc.type == 309 || npc.type == 348 || npc.type == 349 || npc.type == 350 || npc.type == 351 || npc.type == 379 || (npc.type >= 430 && npc.type <= 436) || (npc.type == 380 || npc.type == 381 || npc.type == 382 || npc.type == 383 || npc.type == 386 || npc.type == 391 || (npc.type >= 449 && npc.type <= 452)) || (npc.type == 466 || npc.type == 464 || npc.type == 166 || npc.type == 469 || npc.type == 468 || npc.type == 471 || npc.type == 470 || npc.type == 480 || npc.type == 481 || npc.type == 482 || npc.type == 411 || npc.type == 424 || npc.type == 409 || (npc.type >= 494 && npc.type <= 506)) || (npc.type == 425 || npc.type == 427 || npc.type == 426 || npc.type == 428 || npc.type == 508 || npc.type == 415 || npc.type == 419 || npc.type == 520 || (npc.type >= 524 && npc.type <= 527)) || npc.type == 528 || npc.type == 529 || npc.type == 530 || npc.type == 532)
                {
                    flag7 = false;
                }
                bool flag8 = false;
                int num75 = npc.type;
                if (num75 == 425 || num75 == 471)
                {
                    flag8 = true;
                }
                bool flag9 = true;
                num75 = npc.type;
                if (num75 <= 350)
                {
                    if (num75 <= 206)
                    {
                        switch (num75)
                        {
                            case 110:
                            case 111:
                                break;
                            default:
                                if (num75 != 206)
                                {
                                    goto IL_62C5;
                                }
                                break;
                        }
                    }
                    else
                    {
                        switch (num75)
                        {
                            case 214:
                            case 215:
                            case 216:
                                break;
                            default:
                                switch (num75)
                                {
                                    case 291:
                                    case 292:
                                    case 293:
                                        break;
                                    default:
                                        if (num75 != 350)
                                        {
                                            goto IL_62C5;
                                        }
                                        break;
                                }
                                break;
                        }
                    }
                }
                else if (num75 <= 426)
                {
                    switch (num75)
                    {
                        case 379:
                        case 380:
                        case 381:
                        case 382:
                            break;
                        default:
                            switch (num75)
                            {
                                case 409:
                                case 411:
                                    break;
                                case 410:
                                    goto IL_62C5;
                                default:
                                    switch (num75)
                                    {
                                        case 424:
                                        case 426:
                                            break;
                                        case 425:
                                            goto IL_62C5;
                                        default:
                                            goto IL_62C5;
                                    }
                                    break;
                            }
                            break;
                    }
                }
                else if (num75 != 466)
                {
                    switch (num75)
                    {
                        case 498:
                        case 499:
                        case 500:
                        case 501:
                        case 502:
                        case 503:
                        case 504:
                        case 505:
                        case 506:
                            break;
                        default:
                            if (num75 != 520)
                            {
                                goto IL_62C5;
                            }
                            break;
                    }
                }
                if (npc.ai[2] > 0f)
                {
                    flag9 = false;
                }
            IL_62C5:
                if (!flag8 && flag9)
                {
                    if (npc.velocity.Y == 0f && ((npc.velocity.X > 0f && npc.direction < 0) || (npc.velocity.X < 0f && npc.direction > 0)))
                    {
                        flag6 = true;
                    }
                    if (npc.position.X == npc.oldPosition.X || npc.ai[3] >= (float)num67 || flag6)
                    {
                        npc.ai[3] += 1f;
                    }
                    else if ((double)Math.Abs(npc.velocity.X) > 0.9 && npc.ai[3] > 0f)
                    {
                        npc.ai[3] -= 1f;
                    }
                    if (npc.ai[3] > (float)(num67 * 10))
                    {
                        npc.ai[3] = 0f;
                    }
                    if (npc.justHit)
                    {
                        npc.ai[3] = 0f;
                    }
                    if (npc.ai[3] == (float)num67)
                    {
                        npc.netUpdate = true;
                    }
                }
                if (npc.type == 463 && Main.netMode != 1)
                {
                    if (npc.localAI[3] > 0f)
                    {
                        npc.localAI[3] -= 1f;
                    }
                    if (npc.justHit && npc.localAI[3] <= 0f && Main.rand.Next(3) == 0)
                    {
                        npc.localAI[3] = 30f;
                        int num76 = Main.rand.Next(3, 6);
                        int[] array = new int[num76];
                        int num77 = 0;
                        for (int num78 = 0; num78 < 255; num78++)
                        {
                            if (Main.player[num78].active && !Main.player[num78].dead && Collision.CanHitLine(npc.position, npc.width, npc.height, Main.player[num78].position, Main.player[num78].width, Main.player[num78].height))
                            {
                                array[num77] = num78;
                                num77++;
                                if (num77 == num76)
                                {
                                    break;
                                }
                            }
                        }
                        if (num77 > 1)
                        {
                            for (int num79 = 0; num79 < 100; num79++)
                            {
                                int num80 = Main.rand.Next(num77);
                                int num81;
                                for (num81 = num80; num81 == num80; num81 = Main.rand.Next(num77))
                                {
                                }
                                int num82 = array[num80];
                                array[num80] = array[num81];
                                array[num81] = num82;
                            }
                        }
                        Vector2 vector15 = new Vector2(-1f, -1f);
                        for (int num83 = 0; num83 < num77; num83++)
                        {
                            Vector2 value6 = Main.npc[array[num83]].Center - npc.Center;
                            value6.Normalize();
                            vector15 += value6;
                        }
                        vector15.Normalize();
                        for (int num84 = 0; num84 < num76; num84++)
                        {
                            float scaleFactor4 = (float)Main.rand.Next(8, 13);
                            Vector2 value7 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                            value7.Normalize();
                            if (num77 > 0)
                            {
                                value7 += vector15;
                                value7.Normalize();
                            }
                            value7 *= scaleFactor4;
                            if (num77 > 0)
                            {
                                num77--;
                                value7 = Main.player[array[num77]].Center - npc.Center;
                                value7.Normalize();
                                value7 *= scaleFactor4;
                            }
                            Projectile.NewProjectile(npc.Center.X, npc.position.Y + (float)(npc.width / 4), value7.X, value7.Y, 498, (int)((double)npc.damage * 0.15), 1f, 255, 0f, 0f);
                        }
                    }
                }
                if (npc.type == 460)
                {
                    if (npc.velocity.Y < -NPC.gravity || npc.velocity.Y > NPC.gravity)
                    {
                        npc.knockBackResist = 0f;
                    }
                    else
                    {
                        npc.knockBackResist = 0.25f * Main.knockBackMultiplier;
                    }
                }
                if (npc.type == 469)
                {
                    npc.knockBackResist = 0.45f * Main.knockBackMultiplier;
                    if (npc.ai[2] == 1f)
                    {
                        npc.knockBackResist = 0f;
                    }
                    bool flag10 = false;
                    int num85 = (int)npc.Center.X / 16;
                    int num86 = (int)npc.Center.Y / 16;
                    for (int num87 = num85 - 1; num87 <= num85 + 1; num87++)
                    {
                        for (int num88 = num86 - 1; num88 <= num86 + 1; num88++)
                        {
                            if (Main.tile[num87, num88] != null && Main.tile[num87, num88].wall > 0)
                            {
                                flag10 = true;
                                break;
                            }
                        }
                        if (flag10)
                        {
                            break;
                        }
                    }
                    if (npc.ai[2] == 0f && flag10)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.Y = -4.6f;
                            npc.velocity.X = npc.velocity.X * 1.3f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.ai[2] = 1f;
                        }
                    }
                    if (flag10 && npc.ai[2] == 1f && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                    {
                        Vector2 value8 = Main.player[npc.target].Center - npc.Center;
                        float num89 = value8.Length();
                        value8.Normalize();
                        value8 *= 4.5f + num89 / 300f;
                        npc.velocity = (npc.velocity * 29f + value8) / 30f;
                        npc.noGravity = true;
                        npc.ai[2] = 1f;
                        return;
                    }
                    npc.noGravity = false;
                    npc.ai[2] = 0f;
                }
                if (npc.type == 462 && npc.velocity.Y == 0f && (Main.player[npc.target].Center - npc.Center).Length() < 150f && Math.Abs(npc.velocity.X) > 3f && ((npc.velocity.X < 0f && npc.Center.X > Main.player[npc.target].Center.X) || (npc.velocity.X > 0f && npc.Center.X < Main.player[npc.target].Center.X)))
                {
                    npc.velocity.X = npc.velocity.X * 1.75f;
                    npc.velocity.Y = npc.velocity.Y - 4.5f;
                    if (npc.Center.Y - Main.player[npc.target].Center.Y > 20f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.5f;
                    }
                    if (npc.Center.Y - Main.player[npc.target].Center.Y > 40f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 1f;
                    }
                    if (npc.Center.Y - Main.player[npc.target].Center.Y > 80f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 1.5f;
                    }
                    if (npc.Center.Y - Main.player[npc.target].Center.Y > 100f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 1.5f;
                    }
                    if (Math.Abs(npc.velocity.X) > 7f)
                    {
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = -7f;
                        }
                        else
                        {
                            npc.velocity.X = 7f;
                        }
                    }
                }
                if (npc.ai[3] < (float)num67 && (Main.eclipse || !Main.dayTime || (double)npc.position.Y > Main.worldSurface * 16.0 || (Main.invasionType == 1 && (npc.type == 343 || npc.type == 350)) || (Main.invasionType == 1 && (npc.type == 26 || npc.type == 27 || npc.type == 28 || npc.type == 111 || npc.type == 471)) || (npc.type == 73 || (Main.invasionType == 3 && npc.type >= 212 && npc.type <= 216)) || (Main.invasionType == 4 && (npc.type == 381 || npc.type == 382 || npc.type == 383 || npc.type == 385 || npc.type == 386 || npc.type == 389 || npc.type == 391 || npc.type == 520)) || (npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 47 || npc.type == 67 || npc.type == 77 || npc.type == 78 || npc.type == 79 || npc.type == 80 || npc.type == 110 || npc.type == 120 || npc.type == 168 || npc.type == 181 || npc.type == 185 || npc.type == 198 || npc.type == 199 || npc.type == 206 || npc.type == 217 || npc.type == 218 || npc.type == 219 || npc.type == 220 || npc.type == 239 || npc.type == 243 || npc.type == 254 || npc.type == 255 || npc.type == 257 || npc.type == 258 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 379 || npc.type == 380 || npc.type == 464 || npc.type == 470 || npc.type == 424 || (npc.type == 411 && (npc.ai[1] >= 180f || npc.ai[1] < 90f))) || (npc.type == 409 || npc.type == 425 || npc.type == 429 || npc.type == 427 || npc.type == 428 || npc.type == 508 || npc.type == 415 || npc.type == 419 || (npc.type >= 524 && npc.type <= 527)) || npc.type == 528 || npc.type == 529 || npc.type == 530 || npc.type == 532))
                {
                    if ((npc.type == 3 || npc.type == 331 || npc.type == 332 || npc.type == 21 || (npc.type >= 449 && npc.type <= 452) || npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 77 || npc.type == 110 || npc.type == 132 || npc.type == 167 || npc.type == 161 || npc.type == 162 || npc.type == 186 || npc.type == 187 || npc.type == 188 || npc.type == 189 || npc.type == 197 || npc.type == 200 || npc.type == 201 || npc.type == 202 || npc.type == 203 || npc.type == 223 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 320 || npc.type == 321 || npc.type == 319 || npc.type == 481) && Main.rand.Next(1000) == 0)
                    {
                    }
                    if (npc.type == 489 && Main.rand.Next(800) == 0)
                    {
                    }
                    if ((npc.type == 78 || npc.type == 79 || npc.type == 80) && Main.rand.Next(500) == 0)
                    {
                    }
                    if (npc.type == 159 && Main.rand.Next(500) == 0)
                    {
                    }
                    if (npc.type == 162 && Main.rand.Next(500) == 0)
                    {
                    }
                    if (npc.type == 181 && Main.rand.Next(500) == 0)
                    {
                    }
                    if (npc.type >= 269 && npc.type <= 280 && Main.rand.Next(1000) == 0)
                    {
                    }
                    npc.TargetClosest(true);
                }
                else if (npc.ai[2] <= 0f || (npc.type != 110 && npc.type != 111 && npc.type != 206 && npc.type != 216 && npc.type != 214 && npc.type != 215 && npc.type != 291 && npc.type != 292 && npc.type != 293 && npc.type != 350 && npc.type != 381 && npc.type != 382 && npc.type != 383 && npc.type != 385 && npc.type != 386 && npc.type != 389 && npc.type != 391 && npc.type != 469 && npc.type != 166 && npc.type != 466 && npc.type != 471 && npc.type != 411 && npc.type != 409 && npc.type != 424 && npc.type != 425 && npc.type != 426 && npc.type != 415 && npc.type != 419 && npc.type != 520))
                {
                    if (Main.dayTime && (double)(npc.position.Y / 16f) < Main.worldSurface && npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                    }
                    if (npc.velocity.X == 0f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.ai[0] += 1f;
                            if (npc.ai[0] >= 2f)
                            {
                                npc.direction *= -1;
                                npc.spriteDirection = npc.direction;
                                npc.ai[0] = 0f;
                            }
                        }
                    }
                    else
                    {
                        npc.ai[0] = 0f;
                    }
                    if (npc.direction == 0)
                    {
                        npc.direction = 1;
                    }
                }
                if (npc.type == 159 || npc.type == 349)
                {
                    if (npc.type == 159 && ((npc.velocity.X > 0f && npc.direction < 0) || (npc.velocity.X < 0f && npc.direction > 0)))
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    if (npc.velocity.X < -6f || npc.velocity.X > 6f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < 6f && npc.direction == 1)
                    {
                        if (npc.velocity.Y == 0f && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.99f;
                        }
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                    }
                    else if (npc.velocity.X > -6f && npc.direction == -1)
                    {
                        if (npc.velocity.Y == 0f && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.99f;
                        }
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                    }
                }
                else if (npc.type == 199)
                {
                    if (npc.velocity.X < -4f || npc.velocity.X > 4f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < 4f && npc.direction == 1)
                    {
                        if (npc.velocity.Y == 0f && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.8f;
                        }
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = 4f;
                        }
                    }
                    else if (npc.velocity.X > -4f && npc.direction == -1)
                    {
                        if (npc.velocity.Y == 0f && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.8f;
                        }
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = -4f;
                        }
                    }
                }
                else if (npc.type == 120 || npc.type == 166 || npc.type == 213 || npc.type == 258 || npc.type == 528 || npc.type == 529)
                {
                    if (npc.velocity.X < -3f || npc.velocity.X > 3f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < 3f && npc.direction == 1)
                    {
                        if (npc.velocity.Y == 0f && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.99f;
                        }
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > 3f)
                        {
                            npc.velocity.X = 3f;
                        }
                    }
                    else if (npc.velocity.X > -3f && npc.direction == -1)
                    {
                        if (npc.velocity.Y == 0f && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.99f;
                        }
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -3f)
                        {
                            npc.velocity.X = -3f;
                        }
                    }
                }
                else if (npc.type == 461 || npc.type == 27 || npc.type == 77 || npc.type == 104 || npc.type == 163 || npc.type == 162 || npc.type == 196 || npc.type == 197 || npc.type == 212 || npc.type == 257 || npc.type == 326 || npc.type == 343 || npc.type == 348 || npc.type == 351 || (npc.type >= 524 && npc.type <= 527) || npc.type == 530)
                {
                    if (npc.velocity.X < -2f || npc.velocity.X > 2f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < 2f && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > 2f)
                        {
                            npc.velocity.X = 2f;
                        }
                    }
                    else if (npc.velocity.X > -2f && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -2f)
                        {
                            npc.velocity.X = -2f;
                        }
                    }
                }
                else if (npc.type == 109)
                {
                    if (npc.velocity.X < -2f || npc.velocity.X > 2f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < 2f && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.04f;
                        if (npc.velocity.X > 2f)
                        {
                            npc.velocity.X = 2f;
                        }
                    }
                    else if (npc.velocity.X > -2f && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.04f;
                        if (npc.velocity.X < -2f)
                        {
                            npc.velocity.X = -2f;
                        }
                    }
                }
                else if (npc.type == 21 || npc.type == 26 || npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 47 || npc.type == 73 || npc.type == 140 || npc.type == 164 || npc.type == 239 || npc.type == 167 || npc.type == 168 || npc.type == 185 || npc.type == 198 || npc.type == 201 || npc.type == 202 || npc.type == 203 || npc.type == 217 || npc.type == 218 || npc.type == 219 || npc.type == 226 || npc.type == 181 || npc.type == 254 || npc.type == 338 || npc.type == 339 || npc.type == 340 || npc.type == 342 || npc.type == 385 || npc.type == 389 || npc.type == 462 || npc.type == 463 || npc.type == 466 || npc.type == 464 || npc.type == 469 || npc.type == 470 || npc.type == 480 || npc.type == 482 || npc.type == 425 || npc.type == 429)
                {
                    float num90 = 1.5f;
                    if (npc.type == 294)
                    {
                        num90 = 2f;
                    }
                    else if (npc.type == 295)
                    {
                        num90 = 1.75f;
                    }
                    else if (npc.type == 296)
                    {
                        num90 = 1.25f;
                    }
                    else if (npc.type == 201)
                    {
                        num90 = 1.1f;
                    }
                    else if (npc.type == 202)
                    {
                        num90 = 0.9f;
                    }
                    else if (npc.type == 203)
                    {
                        num90 = 1.2f;
                    }
                    else if (npc.type == 338)
                    {
                        num90 = 1.75f;
                    }
                    else if (npc.type == 339)
                    {
                        num90 = 1.25f;
                    }
                    else if (npc.type == 340)
                    {
                        num90 = 2f;
                    }
                    else if (npc.type == 385)
                    {
                        num90 = 1.8f;
                    }
                    else if (npc.type == 389)
                    {
                        num90 = 2.25f;
                    }
                    else if (npc.type == 462)
                    {
                        num90 = 4f;
                    }
                    else if (npc.type == 463)
                    {
                        num90 = 0.75f;
                    }
                    else if (npc.type == 466)
                    {
                        num90 = 3.75f;
                    }
                    else if (npc.type == 469)
                    {
                        num90 = 3.25f;
                    }
                    else if (npc.type == 480)
                    {
                        num90 = 1.5f + (1f - (float)npc.life / (float)npc.lifeMax) * 2f;
                    }
                    else if (npc.type == 425)
                    {
                        num90 = 6f;
                    }
                    else if (npc.type == 429)
                    {
                        num90 = 4f;
                    }
                    if (npc.type == 21 || npc.type == 201 || npc.type == 202 || npc.type == 203 || npc.type == 342)
                    {
                        num90 *= 1f + (1f - npc.scale);
                    }
                    if (npc.velocity.X < -num90 || npc.velocity.X > num90)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num90 && npc.direction == 1)
                    {
                        if (npc.type == 466 && npc.velocity.X < -2f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > num90)
                        {
                            npc.velocity.X = num90;
                        }
                    }
                    else if (npc.velocity.X > -num90 && npc.direction == -1)
                    {
                        if (npc.type == 466 && npc.velocity.X > 2f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -num90)
                        {
                            npc.velocity.X = -num90;
                        }
                    }
                    if (npc.velocity.Y == 0f && npc.type == 462 && ((npc.direction > 0 && npc.velocity.X < 0f) || (npc.direction < 0 && npc.velocity.X > 0f)))
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                }
                else if (npc.type >= 269 && npc.type <= 280)
                {
                    float num91 = 1.5f;
                    if (npc.type == 269)
                    {
                        num91 = 2f;
                    }
                    if (npc.type == 270)
                    {
                        num91 = 1f;
                    }
                    if (npc.type == 271)
                    {
                        num91 = 1.5f;
                    }
                    if (npc.type == 272)
                    {
                        num91 = 3f;
                    }
                    if (npc.type == 273)
                    {
                        num91 = 1.25f;
                    }
                    if (npc.type == 274)
                    {
                        num91 = 3f;
                    }
                    if (npc.type == 275)
                    {
                        num91 = 3.25f;
                    }
                    if (npc.type == 276)
                    {
                        num91 = 2f;
                    }
                    if (npc.type == 277)
                    {
                        num91 = 2.75f;
                    }
                    if (npc.type == 278)
                    {
                        num91 = 1.8f;
                    }
                    if (npc.type == 279)
                    {
                        num91 = 1.3f;
                    }
                    if (npc.type == 280)
                    {
                        num91 = 2.5f;
                    }
                    num91 *= 1f + (1f - npc.scale);
                    if (npc.velocity.X < -num91 || npc.velocity.X > num91)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num91 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > num91)
                        {
                            npc.velocity.X = num91;
                        }
                    }
                    else if (npc.velocity.X > -num91 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -num91)
                        {
                            npc.velocity.X = -num91;
                        }
                    }
                }
                else if (npc.type >= 305 && npc.type <= 314)
                {
                    float num92 = 1.5f;
                    if (npc.type == 305 || npc.type == 310)
                    {
                        num92 = 2f;
                    }
                    if (npc.type == 306 || npc.type == 311)
                    {
                        num92 = 1.25f;
                    }
                    if (npc.type == 307 || npc.type == 312)
                    {
                        num92 = 2.25f;
                    }
                    if (npc.type == 308 || npc.type == 313)
                    {
                        num92 = 1.5f;
                    }
                    if (npc.type == 309 || npc.type == 314)
                    {
                        num92 = 1f;
                    }
                    if (npc.type < 310)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.85f;
                            if ((double)npc.velocity.X > -0.3 && (double)npc.velocity.X < 0.3)
                            {
                                npc.velocity.Y = -7f;
                                npc.velocity.X = num92 * (float)npc.direction;
                            }
                        }
                        else if (npc.spriteDirection == npc.direction)
                        {
                            npc.velocity.X = (npc.velocity.X * 10f + num92 * (float)npc.direction) / 11f;
                        }
                    }
                    else if (npc.velocity.X < -num92 || npc.velocity.X > num92)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num92 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > num92)
                        {
                            npc.velocity.X = num92;
                        }
                    }
                    else if (npc.velocity.X > -num92 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -num92)
                        {
                            npc.velocity.X = -num92;
                        }
                    }
                }
                else if (npc.type == 67 || npc.type == 220 || npc.type == 428)
                {
                    if (npc.velocity.X < -0.5f || npc.velocity.X > 0.5f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < 0.5f && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.03f;
                        if (npc.velocity.X > 0.5f)
                        {
                            npc.velocity.X = 0.5f;
                        }
                    }
                    else if (npc.velocity.X > -0.5f && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.03f;
                        if (npc.velocity.X < -0.5f)
                        {
                            npc.velocity.X = -0.5f;
                        }
                    }
                }
                else if (npc.type == 78 || npc.type == 79 || npc.type == 80)
                {
                    float num93 = 1f;
                    float num94 = 0.05f;
                    if (npc.life < npc.lifeMax / 2)
                    {
                        num93 = 2f;
                        num94 = 0.1f;
                    }
                    if (npc.type == 79)
                    {
                        num93 *= 1.5f;
                    }
                    if (npc.velocity.X < -num93 || npc.velocity.X > num93)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < num93 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num94;
                        if (npc.velocity.X > num93)
                        {
                            npc.velocity.X = num93;
                        }
                    }
                    else if (npc.velocity.X > -num93 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num94;
                        if (npc.velocity.X < -num93)
                        {
                            npc.velocity.X = -num93;
                        }
                    }
                }
                else if (npc.type == 287)
                {
                    float num95 = 5f;
                    float num96 = 0.2f;
                    if (npc.velocity.X < -num95 || npc.velocity.X > num95)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < num95 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num96;
                        if (npc.velocity.X > num95)
                        {
                            npc.velocity.X = num95;
                        }
                    }
                    else if (npc.velocity.X > -num95 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num96;
                        if (npc.velocity.X < -num95)
                        {
                            npc.velocity.X = -num95;
                        }
                    }
                }
                else if (npc.type == 243)
                {
                    float num97 = 1f;
                    float num98 = 0.07f;
                    num97 += (1f - (float)npc.life / (float)npc.lifeMax) * 1.5f;
                    num98 += (1f - (float)npc.life / (float)npc.lifeMax) * 0.15f;
                    if (npc.velocity.X < -num97 || npc.velocity.X > num97)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < num97 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num98;
                        if (npc.velocity.X > num97)
                        {
                            npc.velocity.X = num97;
                        }
                    }
                    else if (npc.velocity.X > -num97 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num98;
                        if (npc.velocity.X < -num97)
                        {
                            npc.velocity.X = -num97;
                        }
                    }
                }
                else if (npc.type == 251)
                {
                    float num99 = 1f;
                    float num100 = 0.08f;
                    num99 += (1f - (float)npc.life / (float)npc.lifeMax) * 2f;
                    num100 += (1f - (float)npc.life / (float)npc.lifeMax) * 0.2f;
                    if (npc.velocity.X < -num99 || npc.velocity.X > num99)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < num99 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num100;
                        if (npc.velocity.X > num99)
                        {
                            npc.velocity.X = num99;
                        }
                    }
                    else if (npc.velocity.X > -num99 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num100;
                        if (npc.velocity.X < -num99)
                        {
                            npc.velocity.X = -num99;
                        }
                    }
                }
                else if (npc.type == 386)
                {
                    if (npc.ai[2] > 0f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.8f;
                        }
                    }
                    else
                    {
                        float num101 = 0.15f;
                        float num102 = 1.5f;
                        if (npc.velocity.X < -num102 || npc.velocity.X > num102)
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity *= 0.7f;
                            }
                        }
                        else if (npc.velocity.X < num102 && npc.direction == 1)
                        {
                            npc.velocity.X = npc.velocity.X + num101;
                            if (npc.velocity.X > num102)
                            {
                                npc.velocity.X = num102;
                            }
                        }
                        else if (npc.velocity.X > -num102 && npc.direction == -1)
                        {
                            npc.velocity.X = npc.velocity.X - num101;
                            if (npc.velocity.X < -num102)
                            {
                                npc.velocity.X = -num102;
                            }
                        }
                    }
                }
                else if (npc.type == 460)
                {
                    float num103 = 3f;
                    float num104 = 0.1f;
                    if (Math.Abs(npc.velocity.X) > 2f)
                    {
                        num104 *= 0.8f;
                    }
                    if ((double)Math.Abs(npc.velocity.X) > 2.5)
                    {
                        num104 *= 0.8f;
                    }
                    if (Math.Abs(npc.velocity.X) > 3f)
                    {
                        num104 *= 0.8f;
                    }
                    if ((double)Math.Abs(npc.velocity.X) > 3.5)
                    {
                        num104 *= 0.8f;
                    }
                    if (Math.Abs(npc.velocity.X) > 4f)
                    {
                        num104 *= 0.8f;
                    }
                    if ((double)Math.Abs(npc.velocity.X) > 4.5)
                    {
                        num104 *= 0.8f;
                    }
                    if (Math.Abs(npc.velocity.X) > 5f)
                    {
                        num104 *= 0.8f;
                    }
                    if ((double)Math.Abs(npc.velocity.X) > 5.5)
                    {
                        num104 *= 0.8f;
                    }
                    num103 += (1f - (float)npc.life / (float)npc.lifeMax) * 3f;
                    if (npc.velocity.X < -num103 || npc.velocity.X > num103)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < num103 && npc.direction == 1)
                    {
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.93f;
                        }
                        npc.velocity.X = npc.velocity.X + num104;
                        if (npc.velocity.X > num103)
                        {
                            npc.velocity.X = num103;
                        }
                    }
                    else if (npc.velocity.X > -num103 && npc.direction == -1)
                    {
                        if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.93f;
                        }
                        npc.velocity.X = npc.velocity.X - num104;
                        if (npc.velocity.X < -num103)
                        {
                            npc.velocity.X = -num103;
                        }
                    }
                }
                else if (npc.type == 508)
                {
                    float num105 = 2.5f;
                    float num106 = 40f;
                    float num107 = Math.Abs(npc.velocity.X);
                    if (num107 > 2.75f)
                    {
                        num105 = 3.5f;
                        num106 += 80f;
                    }
                    else if ((double)num107 > 2.25)
                    {
                        num105 = 3f;
                        num106 += 60f;
                    }
                    if ((double)Math.Abs(npc.velocity.Y) < 0.5)
                    {
                        if (npc.velocity.X > 0f && npc.direction < 0)
                        {
                            npc.velocity *= 0.9f;
                        }
                        if (npc.velocity.X < 0f && npc.direction > 0)
                        {
                            npc.velocity *= 0.9f;
                        }
                    }
                    if (Math.Abs(npc.velocity.Y) > NPC.gravity)
                    {
                        num106 *= 3f;
                    }
                    if (npc.velocity.X <= 0f && npc.direction < 0)
                    {
                        npc.velocity.X = (npc.velocity.X * num106 - num105) / (num106 + 1f);
                    }
                    else if (npc.velocity.X >= 0f && npc.direction > 0)
                    {
                        npc.velocity.X = (npc.velocity.X * num106 + num105) / (num106 + 1f);
                    }
                    else if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) > 20f && Math.Abs(npc.velocity.Y) <= NPC.gravity)
                    {
                        npc.velocity.X = npc.velocity.X * 0.99f;
                        npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.025f;
                    }
                }
                else if (npc.type == 391 || npc.type == 427 || npc.type == 415 || npc.type == 419 || npc.type == 518 || npc.type == 532)
                {
                    float num108 = 5f;
                    float num109 = 0.25f;
                    float scaleFactor5 = 0.7f;
                    if (npc.type == 427)
                    {
                        num108 = 6f;
                        num109 = 0.2f;
                        scaleFactor5 = 0.8f;
                    }
                    else if (npc.type == 415)
                    {
                        num108 = 4f;
                        num109 = 0.1f;
                        scaleFactor5 = 0.95f;
                    }
                    else if (npc.type == 419)
                    {
                        num108 = 6f;
                        num109 = 0.15f;
                        scaleFactor5 = 0.85f;
                    }
                    else if (npc.type == 518)
                    {
                        num108 = 5f;
                        num109 = 0.1f;
                        scaleFactor5 = 0.95f;
                    }
                    else if (npc.type == 532)
                    {
                        num108 = 5f;
                        num109 = 0.15f;
                        scaleFactor5 = 0.98f;
                    }
                    if (npc.velocity.X < -num108 || npc.velocity.X > num108)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= scaleFactor5;
                        }
                    }
                    else if (npc.velocity.X < num108 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num109;
                        if (npc.velocity.X > num108)
                        {
                            npc.velocity.X = num108;
                        }
                    }
                    else if (npc.velocity.X > -num108 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num109;
                        if (npc.velocity.X < -num108)
                        {
                            npc.velocity.X = -num108;
                        }
                    }
                }
                else if ((npc.type >= 430 && npc.type <= 436) || npc.type == 494 || npc.type == 495)
                {
                    if (npc.ai[2] == 0f)
                    {
                        npc.damage = npc.defDamage;
                        float num110 = 1f;
                        num110 *= 1f + (1f - npc.scale);
                        if (npc.velocity.X < -num110 || npc.velocity.X > num110)
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity *= 0.8f;
                            }
                        }
                        else if (npc.velocity.X < num110 && npc.direction == 1)
                        {
                            npc.velocity.X = npc.velocity.X + 0.07f;
                            if (npc.velocity.X > num110)
                            {
                                npc.velocity.X = num110;
                            }
                        }
                        else if (npc.velocity.X > -num110 && npc.direction == -1)
                        {
                            npc.velocity.X = npc.velocity.X - 0.07f;
                            if (npc.velocity.X < -num110)
                            {
                                npc.velocity.X = -num110;
                            }
                        }
                        if (npc.velocity.Y == 0f && (!Main.dayTime || (double)npc.position.Y > Main.worldSurface * 16.0) && !Main.player[npc.target].dead)
                        {
                            Vector2 vector16 = npc.Center - Main.player[npc.target].Center;
                            int num111 = 50;
                            if (npc.type >= 494 && npc.type <= 495)
                            {
                                num111 = 42;
                            }
                            if (vector16.Length() < (float)num111 && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                            {
                                npc.velocity.X = npc.velocity.X * 0.7f;
                                npc.ai[2] = 1f;
                            }
                        }
                    }
                    else
                    {
                        npc.damage = (int)((double)npc.defDamage * 1.5);
                        npc.ai[3] = 1f;
                        npc.velocity.X = npc.velocity.X * 0.9f;
                        if ((double)Math.Abs(npc.velocity.X) < 0.1)
                        {
                            npc.velocity.X = 0f;
                        }
                        npc.ai[2] += 1f;
                        if (npc.ai[2] >= 20f || npc.velocity.Y != 0f || (Main.dayTime && (double)npc.position.Y < Main.worldSurface * 16.0))
                        {
                            npc.ai[2] = 0f;
                        }
                    }
                }
                else if (npc.type != 110 && npc.type != 111 && npc.type != 206 && npc.type != 214 && npc.type != 215 && npc.type != 216 && npc.type != 290 && npc.type != 291 && npc.type != 292 && npc.type != 293 && npc.type != 350 && npc.type != 379 && npc.type != 380 && npc.type != 381 && npc.type != 382 && (npc.type < 449 || npc.type > 452) && npc.type != 468 && npc.type != 481 && npc.type != 411 && npc.type != 409 && (npc.type < 498 || npc.type > 506) && npc.type != 424 && npc.type != 426 && npc.type != 520)
                {
                    float num112 = 1f;
                    if (npc.type == 186)
                    {
                        num112 = 1.1f;
                    }
                    if (npc.type == 187)
                    {
                        num112 = 0.9f;
                    }
                    if (npc.type == 188)
                    {
                        num112 = 1.2f;
                    }
                    if (npc.type == 189)
                    {
                        num112 = 0.8f;
                    }
                    if (npc.type == 132)
                    {
                        num112 = 0.95f;
                    }
                    if (npc.type == 200)
                    {
                        num112 = 0.87f;
                    }
                    if (npc.type == 223)
                    {
                        num112 = 1.05f;
                    }
                    if (npc.type == 489)
                    {
                        float num113 = (Main.player[npc.target].Center - npc.Center).Length();
                        num113 *= 0.0025f;
                        if ((double)num113 > 1.5)
                        {
                            num113 = 1.5f;
                        }
                        if (Main.expertMode)
                        {
                            num112 = 3f - num113;
                        }
                        else
                        {
                            num112 = 2.5f - num113;
                        }
                        num112 *= 0.8f;
                    }
                    if (npc.type == 489 || npc.type == 3 || npc.type == 132 || npc.type == 186 || npc.type == 187 || npc.type == 188 || npc.type == 189 || npc.type == 200 || npc.type == 223 || npc.type == 331 || npc.type == 332)
                    {
                        num112 *= 1f + (1f - npc.scale);
                    }
                    if (npc.velocity.X < -num112 || npc.velocity.X > num112)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num112 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > num112)
                        {
                            npc.velocity.X = num112;
                        }
                    }
                    else if (npc.velocity.X > -num112 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -num112)
                        {
                            npc.velocity.X = -num112;
                        }
                    }
                }
                if (npc.type >= 277 && npc.type <= 280)
                {
                }
                else if (npc.type == 520)
                {
                }
                else if (npc.type == 525)
                {
                }
                else if (npc.type == 526)
                {
                }
                else if (npc.type == 527)
                {
                }
                else if (npc.type == 415)
                {
                    npc.hide = false;
                    for (int num114 = 0; num114 < 200; num114++)
                    {
                        if (Main.npc[num114].active && Main.npc[num114].type == 416 && Main.npc[num114].ai[0] == (float)npc.whoAmI)
                        {
                            npc.hide = true;
                            break;
                        }
                    }
                }
                else if (npc.type == 258)
                {
                    if (npc.velocity.Y != 0f)
                    {
                        npc.TargetClosest(true);
                        npc.spriteDirection = npc.direction;
                        if (Main.player[npc.target].Center.X < npc.position.X && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.95f;
                        }
                        else if (Main.player[npc.target].Center.X > npc.position.X + (float)npc.width && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.95f;
                        }
                        if (Main.player[npc.target].Center.X < npc.position.X && npc.velocity.X > -5f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (Main.player[npc.target].Center.X > npc.position.X + (float)npc.width && npc.velocity.X < 5f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                    }
                    else if (Main.player[npc.target].Center.Y + 50f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.velocity.Y = -7f;
                    }
                }
                else if (npc.type == 425)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.ai[2] = 0f;
                    }
                    if (npc.velocity.Y != 0f && npc.ai[2] == 1f)
                    {
                        npc.TargetClosest(true);
                        npc.spriteDirection = -npc.direction;
                        if (Collision.CanHit(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                        {
                            float num115 = Main.player[npc.target].Center.X - (float)(npc.direction * 400) - npc.Center.X;
                            float num116 = Main.player[npc.target].Bottom.Y - npc.Bottom.Y;
                            if (num115 < 0f && npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            else if (num115 > 0f && npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (num115 < 0f && npc.velocity.X > -5f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else if (num115 > 0f && npc.velocity.X < 5f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            if (npc.velocity.X > 6f)
                            {
                                npc.velocity.X = 6f;
                            }
                            if (npc.velocity.X < -6f)
                            {
                                npc.velocity.X = -6f;
                            }
                            if (num116 < -20f && npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.8f;
                            }
                            else if (num116 > 20f && npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.8f;
                            }
                            if (num116 < -20f && npc.velocity.Y > -5f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.3f;
                            }
                            else if (num116 > 20f && npc.velocity.Y < 5f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.3f;
                            }
                        }
                        for (int num117 = 0; num117 < 200; num117++)
                        {
                            if (num117 != npc.whoAmI && Main.npc[num117].active && Main.npc[num117].type == npc.type && Math.Abs(npc.position.X - Main.npc[num117].position.X) + Math.Abs(npc.position.Y - Main.npc[num117].position.Y) < (float)npc.width)
                            {
                                if (npc.position.X < Main.npc[num117].position.X)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.05f;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X + 0.05f;
                                }
                                if (npc.position.Y < Main.npc[num117].position.Y)
                                {
                                    npc.velocity.Y = npc.velocity.Y - 0.05f;
                                }
                                else
                                {
                                    npc.velocity.Y = npc.velocity.Y + 0.05f;
                                }
                            }
                        }
                    }
                    else if (Main.player[npc.target].Center.Y + 100f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.velocity.Y = -5f;
                        npc.ai[2] = 1f;
                    }
                    if (Main.netMode != 1)
                    {
                        npc.localAI[2] += 1f;
                        if (npc.localAI[2] >= (float)(360 + Main.rand.Next(360)) && npc.Distance(Main.player[npc.target].Center) < 400f && Math.Abs(npc.DirectionTo(Main.player[npc.target].Center).Y) < 0.5f && Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                        {
                            npc.localAI[2] = 0f;
                            Vector2 vector17 = npc.Center + new Vector2((float)(npc.direction * 30), 2f);
                            Vector2 vector18 = npc.DirectionTo(Main.player[npc.target].Center) * 7f;
                            if (vector18.HasNaNs())
                            {
                                vector18 = new Vector2((float)(npc.direction * 8), 0f);
                            }
                            int num118 = Main.expertMode ? 50 : 75;
                            for (int num119 = 0; num119 < 4; num119++)
                            {
                                Vector2 vector19 = vector18 + Utils.RandomVector2(Main.rand, -0.8f, 0.8f);
                                Projectile.NewProjectile(vector17.X, vector17.Y, vector19.X, vector19.Y, 577, num118, 1f, Main.myPlayer, 0f, 0f);
                            }
                        }
                    }
                }
                else if (npc.type == 427)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.ai[2] = 0f;
                        npc.rotation = 0f;
                    }
                    else
                    {
                        npc.rotation = npc.velocity.X * 0.1f;
                    }
                    if (npc.velocity.Y != 0f && npc.ai[2] == 1f)
                    {
                        npc.TargetClosest(true);
                        npc.spriteDirection = -npc.direction;
                        if (Collision.CanHit(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                        {
                            float num120 = Main.player[npc.target].Center.X - npc.Center.X;
                            float num121 = Main.player[npc.target].Center.Y - npc.Center.Y;
                            if (num120 < 0f && npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.98f;
                            }
                            else if (num120 > 0f && npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.98f;
                            }
                            if (num120 < -20f && npc.velocity.X > -6f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.015f;
                            }
                            else if (num120 > 20f && npc.velocity.X < 6f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.015f;
                            }
                            if (npc.velocity.X > 6f)
                            {
                                npc.velocity.X = 6f;
                            }
                            if (npc.velocity.X < -6f)
                            {
                                npc.velocity.X = -6f;
                            }
                            if (num121 < -20f && npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.98f;
                            }
                            else if (num121 > 20f && npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.98f;
                            }
                            if (num121 < -20f && npc.velocity.Y > -6f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.15f;
                            }
                            else if (num121 > 20f && npc.velocity.Y < 6f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.15f;
                            }
                        }
                        for (int num122 = 0; num122 < 200; num122++)
                        {
                            if (num122 != npc.whoAmI && Main.npc[num122].active && Main.npc[num122].type == npc.type && Math.Abs(npc.position.X - Main.npc[num122].position.X) + Math.Abs(npc.position.Y - Main.npc[num122].position.Y) < (float)npc.width)
                            {
                                if (npc.position.X < Main.npc[num122].position.X)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.05f;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X + 0.05f;
                                }
                                if (npc.position.Y < Main.npc[num122].position.Y)
                                {
                                    npc.velocity.Y = npc.velocity.Y - 0.05f;
                                }
                                else
                                {
                                    npc.velocity.Y = npc.velocity.Y + 0.05f;
                                }
                            }
                        }
                    }
                    else if (Main.player[npc.target].Center.Y + 100f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.velocity.Y = -5f;
                        npc.ai[2] = 1f;
                    }
                }
                else if (npc.type == 426)
                {
                    if (npc.ai[1] > 0f && npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.85f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.Y = -0.4f;
                        }
                    }
                    if (npc.velocity.Y != 0f)
                    {
                        npc.TargetClosest(true);
                        npc.spriteDirection = npc.direction;
                        if (Collision.CanHit(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                        {
                            float num123 = Main.player[npc.target].Center.X - (float)(npc.direction * 300) - npc.Center.X;
                            if (num123 < 40f && npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.98f;
                            }
                            else if (num123 > 40f && npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.98f;
                            }
                            if (num123 < 40f && npc.velocity.X > -5f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.2f;
                            }
                            else if (num123 > 40f && npc.velocity.X < 5f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.2f;
                            }
                            if (npc.velocity.X > 6f)
                            {
                                npc.velocity.X = 6f;
                            }
                            if (npc.velocity.X < -6f)
                            {
                                npc.velocity.X = -6f;
                            }
                        }
                    }
                    else if (Main.player[npc.target].Center.Y + 100f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.velocity.Y = -6f;
                    }
                    for (int num124 = 0; num124 < 200; num124++)
                    {
                        if (num124 != npc.whoAmI && Main.npc[num124].active && Main.npc[num124].type == npc.type && Math.Abs(npc.position.X - Main.npc[num124].position.X) + Math.Abs(npc.position.Y - Main.npc[num124].position.Y) < (float)npc.width)
                        {
                            if (npc.position.X < Main.npc[num124].position.X)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            if (npc.position.Y < Main.npc[num124].position.Y)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                            }
                        }
                    }
                }
                else if (npc.type == 185)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.rotation = 0f;
                        npc.localAI[0] = 0f;
                    }
                    else if (npc.localAI[0] == 1f)
                    {
                        npc.rotation += npc.velocity.X * 0.05f;
                    }
                }
                else if (npc.type == 428)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.rotation = 0f;
                    }
                    else
                    {
                        npc.rotation += npc.velocity.X * 0.08f;
                    }
                }
                if (npc.type == 159 && Main.netMode != 1)
                {
                    Vector2 vector20 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num126 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector20.X;
                    float num127 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector20.Y;
                    float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
                    if (num128 > 300f)
                    {
                        npc.Transform(158);
                    }
                }
                if (npc.type == 164 && Main.netMode != 1 && npc.velocity.Y == 0f)
                {
                    int num129 = (int)npc.Center.X / 16;
                    int num130 = (int)npc.Center.Y / 16;
                    bool flag11 = false;
                    for (int num131 = num129 - 1; num131 <= num129 + 1; num131++)
                    {
                        for (int num132 = num130 - 1; num132 <= num130 + 1; num132++)
                        {
                            if (Main.tile[num131, num132].wall > 0)
                            {
                                flag11 = true;
                            }
                        }
                    }
                    if (flag11)
                    {
                        npc.Transform(165);
                    }
                }
                if (npc.type == 239 && Main.netMode != 1 && npc.velocity.Y == 0f)
                {
                    int num133 = (int)npc.Center.X / 16;
                    int num134 = (int)npc.Center.Y / 16;
                    bool flag12 = false;
                    for (int num135 = num133 - 1; num135 <= num133 + 1; num135++)
                    {
                        for (int num136 = num134 - 1; num136 <= num134 + 1; num136++)
                        {
                            if (Main.tile[num135, num136].wall > 0)
                            {
                                flag12 = true;
                            }
                        }
                    }
                    if (flag12)
                    {
                        npc.Transform(240);
                    }
                }
                if (npc.type == 530 && Main.netMode != 1 && npc.velocity.Y == 0f)
                {
                    int num137 = (int)npc.Center.X / 16;
                    int num138 = (int)npc.Center.Y / 16;
                    bool flag13 = false;
                    for (int num139 = num137 - 1; num139 <= num137 + 1; num139++)
                    {
                        for (int num140 = num138 - 1; num140 <= num138 + 1; num140++)
                        {
                            if (Main.tile[num139, num140].wall > 0)
                            {
                                flag13 = true;
                            }
                        }
                    }
                    if (flag13)
                    {
                        npc.Transform(531);
                    }
                }
                if (Main.netMode != 1 && Main.expertMode && npc.target >= 0 && (npc.type == 163 || npc.type == 238) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                {
                    npc.localAI[0] += 1f;
                    if (npc.justHit)
                    {
                        npc.localAI[0] -= (float)Main.rand.Next(20, 60);
                        if (npc.localAI[0] < 0f)
                        {
                            npc.localAI[0] = 0f;
                        }
                    }
                    if (npc.localAI[0] > (float)Main.rand.Next(180, 900))
                    {
                        npc.localAI[0] = 0f;
                        Vector2 vector21 = Main.player[npc.target].Center - npc.Center;
                        vector21.Normalize();
                        vector21 *= 8f;
                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector21.X, vector21.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
                    }
                }
                if (npc.type == 163 && Main.netMode != 1 && npc.velocity.Y == 0f)
                {
                    int num141 = (int)npc.Center.X / 16;
                    int num142 = (int)npc.Center.Y / 16;
                    bool flag14 = false;
                    for (int num143 = num141 - 1; num143 <= num141 + 1; num143++)
                    {
                        for (int num144 = num142 - 1; num144 <= num142 + 1; num144++)
                        {
                            if (Main.tile[num143, num144].wall > 0)
                            {
                                flag14 = true;
                            }
                        }
                    }
                    if (flag14)
                    {
                        npc.Transform(238);
                    }
                }
                if (npc.type == 236 && Main.netMode != 1 && npc.velocity.Y == 0f)
                {
                    int num145 = (int)npc.Center.X / 16;
                    int num146 = (int)npc.Center.Y / 16;
                    bool flag15 = false;
                    for (int num147 = num145 - 1; num147 <= num145 + 1; num147++)
                    {
                        for (int num148 = num146 - 1; num148 <= num146 + 1; num148++)
                        {
                            if (Main.tile[num147, num148].wall > 0)
                            {
                                flag15 = true;
                            }
                        }
                    }
                    if (flag15)
                    {
                        npc.Transform(237);
                    }
                }
                if (npc.type == 243)
                {
                    if (npc.justHit && Main.rand.Next(3) == 0)
                    {
                        npc.ai[2] -= (float)Main.rand.Next(30);
                    }
                    if (npc.ai[2] < 0f)
                    {
                        npc.ai[2] = 0f;
                    }
                    if (npc.confused)
                    {
                        npc.ai[2] = 0f;
                    }
                    npc.ai[2] += 1f;
                    float num149 = (float)Main.rand.Next(30, 900);
                    num149 *= (float)npc.life / (float)npc.lifeMax;
                    num149 += 30f;
                    if (Main.netMode != 1 && npc.ai[2] >= num149 && npc.velocity.Y == 0f && !Main.player[npc.target].dead && !Main.player[npc.target].frozen && ((npc.direction > 0 && npc.Center.X < Main.player[npc.target].Center.X) || (npc.direction < 0 && npc.Center.X > Main.player[npc.target].Center.X)) && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        float num150 = 15f;
                        Vector2 vector22 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + 20f);
                        vector22.X += (float)(10 * npc.direction);
                        float num151 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector22.X;
                        float num152 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector22.Y;
                        num151 += (float)Main.rand.Next(-40, 41);
                        num152 += (float)Main.rand.Next(-40, 41);
                        float num153 = (float)Math.Sqrt((double)(num151 * num151 + num152 * num152));
                        npc.netUpdate = true;
                        num153 = num150 / num153;
                        num151 *= num153;
                        num152 *= num153;
                        int num154 = 32;
                        int num155 = 257;
                        vector22.X += num151 * 3f;
                        vector22.Y += num152 * 3f;
                        Projectile.NewProjectile(vector22.X, vector22.Y, num151, num152, num155, num154, 0f, Main.myPlayer, 0f, 0f);
                        npc.ai[2] = 0f;
                    }
                }
                if (npc.type == 251)
                {
                    if (npc.justHit)
                    {
                        npc.ai[2] -= (float)Main.rand.Next(30);
                    }
                    if (npc.ai[2] < 0f)
                    {
                        npc.ai[2] = 0f;
                    }
                    if (npc.confused)
                    {
                        npc.ai[2] = 0f;
                    }
                    npc.ai[2] += 1f;
                    float num156 = (float)Main.rand.Next(60, 1800);
                    num156 *= (float)npc.life / (float)npc.lifeMax;
                    num156 += 15f;
                    if (Main.netMode != 1 && npc.ai[2] >= num156 && npc.velocity.Y == 0f && !Main.player[npc.target].dead && !Main.player[npc.target].frozen && ((npc.direction > 0 && npc.Center.X < Main.player[npc.target].Center.X) || (npc.direction < 0 && npc.Center.X > Main.player[npc.target].Center.X)) && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        float num157 = 15f;
                        Vector2 vector23 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + 12f);
                        vector23.X += (float)(6 * npc.direction);
                        float num158 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector23.X;
                        float num159 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector23.Y;
                        num158 += (float)Main.rand.Next(-40, 41);
                        num159 += (float)Main.rand.Next(-30, 0);
                        float num160 = (float)Math.Sqrt((double)(num158 * num158 + num159 * num159));
                        npc.netUpdate = true;
                        num160 = num157 / num160;
                        num158 *= num160;
                        num159 *= num160;
                        int num161 = 30;
                        int num162 = 83;
                        vector23.X += num158 * 3f;
                        vector23.Y += num159 * 3f;
                        Projectile.NewProjectile(vector23.X, vector23.Y, num158, num159, num162, num161, 0f, Main.myPlayer, 0f, 0f);
                        npc.ai[2] = 0f;
                    }
                }
                if (npc.type == 386)
                {
                    if (npc.confused)
                    {
                        npc.ai[2] = -60f;
                    }
                    else
                    {
                        if (npc.ai[2] < 60f)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (npc.ai[2] > 0f && NPC.CountNPCS(387) >= 4 * NPC.CountNPCS(386))
                        {
                            npc.ai[2] = 0f;
                        }
                        if (npc.justHit)
                        {
                            npc.ai[2] = -30f;
                        }
                        if (npc.ai[2] == 30f)
                        {
                            int num163 = (int)npc.position.X / 16;
                            int num164 = (int)npc.position.Y / 16;
                            int num165 = (int)npc.position.X / 16;
                            int num166 = (int)npc.position.Y / 16;
                            int num167 = 5;
                            int num168 = 0;
                            bool flag16 = false;
                            int num169 = 2;
                            int num170 = 0;
                            while (!flag16 && num168 < 100)
                            {
                                num168++;
                                int num171 = Main.rand.Next(num163 - num167, num163 + num167);
                                int num172 = Main.rand.Next(num164 - num167, num164 + num167);
                                for (int num173 = num172; num173 < num164 + num167; num173++)
                                {
                                    if ((num173 < num164 - num169 || num173 > num164 + num169 || num171 < num163 - num169 || num171 > num163 + num169) && (num173 < num166 - num170 || num173 > num166 + num170 || num171 < num165 - num170 || num171 > num165 + num170) && Main.tile[num171, num173].nactive())
                                    {
                                        bool flag17 = true;
                                        if (Main.tile[num171, num173 - 1].lava())
                                        {
                                            flag17 = false;
                                        }
                                        if (flag17 && Main.tileSolid[(int)Main.tile[num171, num173].type] && !Collision.SolidTiles(num171 - 1, num171 + 1, num173 - 4, num173 - 1))
                                        {
                                            int num174 = NPC.NewNPC(num171 * 16 - npc.width / 2, num173 * 16, 387, 0, 0f, 0f, 0f, 0f, 255);
                                            Main.npc[num174].position.Y = (float)(num173 * 16 - Main.npc[num174].height);
                                            flag16 = true;
                                            npc.netUpdate = true;
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        if (npc.ai[2] == 60f)
                        {
                            npc.ai[2] = -120f;
                        }
                    }
                }
                if (npc.type == 389)
                {
                    if (npc.confused)
                    {
                        npc.ai[2] = -60f;
                    }
                    else
                    {
                        if (npc.ai[2] < 20f)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (npc.justHit)
                        {
                            npc.ai[2] = -30f;
                        }
                        if (npc.ai[2] == 20f && Main.netMode != 1)
                        {
                            npc.ai[2] = (float)(-10 + Main.rand.Next(3) * -10);
                            Projectile.NewProjectile(npc.Center.X, npc.Center.Y + 8f, (float)(npc.direction * 6), 0f, 437, 25, 1f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
                if (npc.type == 110 || npc.type == 111 || npc.type == 206 || npc.type == 214 || npc.type == 215 || npc.type == 216 || npc.type == 290 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 350 || npc.type == 379 || npc.type == 380 || npc.type == 381 || npc.type == 382 || (npc.type >= 449 && npc.type <= 452) || (npc.type == 468 || npc.type == 481 || npc.type == 411 || npc.type == 409 || (npc.type >= 498 && npc.type <= 506)) || npc.type == 424 || npc.type == 426 || npc.type == 520)
                {
                    bool flag18 = npc.type == 381 || npc.type == 382 || npc.type == 520;
                    bool flag19 = npc.type == 426;
                    bool flag20 = true;
                    int num175 = -1;
                    int num176 = -1;
                    if (npc.type == 411)
                    {
                        flag18 = true;
                        num175 = 90;
                        num176 = 90;
                        if (npc.ai[1] <= 150f)
                        {
                            flag20 = false;
                        }
                    }
                    if (npc.confused)
                    {
                        npc.ai[2] = 0f;
                    }
                    else
                    {
                        if (npc.ai[1] > 0f)
                        {
                            npc.ai[1] -= 1f;
                        }
                        if (npc.justHit)
                        {
                            npc.ai[1] = 30f;
                            npc.ai[2] = 0f;
                        }
                        int num177 = 70;
                        if (npc.type == 379 || npc.type == 380)
                        {
                            num177 = 80;
                        }
                        if (npc.type == 381 || npc.type == 382)
                        {
                            num177 = 80;
                        }
                        if (npc.type == 520)
                        {
                            num177 = 15;
                        }
                        if (npc.type == 350)
                        {
                            num177 = 110;
                        }
                        if (npc.type == 291)
                        {
                            num177 = 200;
                        }
                        if (npc.type == 292)
                        {
                            num177 = 120;
                        }
                        if (npc.type == 293)
                        {
                            num177 = 90;
                        }
                        if (npc.type == 111)
                        {
                            num177 = 180;
                        }
                        if (npc.type == 206)
                        {
                            num177 = 50;
                        }
                        if (npc.type == 214)
                        {
                            num177 = 40;
                        }
                        if (npc.type == 215)
                        {
                            num177 = 80;
                        }
                        if (npc.type == 290)
                        {
                            num177 = 30;
                        }
                        if (npc.type == 411)
                        {
                            num177 = 300;
                        }
                        if (npc.type == 409)
                        {
                            num177 = 60;
                        }
                        if (npc.type == 424)
                        {
                            num177 = 180;
                        }
                        if (npc.type == 426)
                        {
                            num177 = 60;
                        }
                        bool flag21 = false;
                        if (npc.type == 216)
                        {
                            if (npc.localAI[2] >= 20f)
                            {
                                flag21 = true;
                            }
                            if (flag21)
                            {
                                num177 = 60;
                            }
                            else
                            {
                                num177 = 8;
                            }
                        }
                        int num178 = num177 / 2;
                        if (npc.type == 424)
                        {
                            num178 = num177 - 1;
                        }
                        if (npc.type == 426)
                        {
                            num178 = num177 - 1;
                        }
                        if (npc.ai[2] > 0f)
                        {
                            if (flag20)
                            {
                                npc.TargetClosest(true);
                            }
                            if (npc.ai[1] == (float)num178)
                            {
                                if (npc.type == 216)
                                {
                                    npc.localAI[2] += 1f;
                                }
                                float num179 = 11f;
                                if (npc.type == 111)
                                {
                                    num179 = 9f;
                                }
                                if (npc.type == 206)
                                {
                                    num179 = 7f;
                                }
                                if (npc.type == 290)
                                {
                                    num179 = 9f;
                                }
                                if (npc.type == 293)
                                {
                                    num179 = 4f;
                                }
                                if (npc.type == 214)
                                {
                                    num179 = 14f;
                                }
                                if (npc.type == 215)
                                {
                                    num179 = 16f;
                                }
                                if (npc.type == 382)
                                {
                                    num179 = 7f;
                                }
                                if (npc.type == 520)
                                {
                                    num179 = 8f;
                                }
                                if (npc.type == 409)
                                {
                                    num179 = 4f;
                                }
                                if (npc.type >= 449 && npc.type <= 452)
                                {
                                    num179 = 7f;
                                }
                                if (npc.type == 481)
                                {
                                    num179 = 9f;
                                }
                                if (npc.type == 468)
                                {
                                    num179 = 7.5f;
                                }
                                if (npc.type == 411)
                                {
                                    num179 = 1f;
                                }
                                if (npc.type >= 498 && npc.type <= 506)
                                {
                                    num179 = 7f;
                                }
                                Vector2 value9 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                if (npc.type == 481)
                                {
                                    value9.Y -= 14f;
                                }
                                if (npc.type == 206)
                                {
                                    value9.Y -= 10f;
                                }
                                if (npc.type == 290)
                                {
                                    value9.Y -= 10f;
                                }
                                if (npc.type == 381 || npc.type == 382)
                                {
                                    value9.Y += 6f;
                                }
                                if (npc.type == 520)
                                {
                                    value9.Y = npc.position.Y + 20f;
                                }
                                if (npc.type >= 498 && npc.type <= 506)
                                {
                                    value9.Y -= 8f;
                                }
                                if (npc.type == 426)
                                {
                                    value9 += new Vector2((float)(npc.spriteDirection * 2), -12f);
                                }
                                float num180 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - value9.X;
                                float num181 = Math.Abs(num180) * 0.1f;
                                if (npc.type == 291 || npc.type == 292)
                                {
                                    num181 = 0f;
                                }
                                if (npc.type == 215)
                                {
                                    num181 = Math.Abs(num180) * 0.08f;
                                }
                                if (npc.type == 214 || (npc.type == 216 && !flag21))
                                {
                                    num181 = 0f;
                                }
                                if (npc.type == 381 || npc.type == 382 || npc.type == 520)
                                {
                                    num181 = 0f;
                                }
                                if (npc.type >= 449 && npc.type <= 452)
                                {
                                    num181 = Math.Abs(num180) * (float)Main.rand.Next(10, 50) * 0.01f;
                                }
                                if (npc.type == 468)
                                {
                                    num181 = Math.Abs(num180) * (float)Main.rand.Next(10, 50) * 0.01f;
                                }
                                if (npc.type == 481)
                                {
                                    num181 = Math.Abs(num180) * (float)Main.rand.Next(-10, 11) * 0.0025f;
                                }
                                if (npc.type >= 498 && npc.type <= 506)
                                {
                                    num181 = Math.Abs(num180) * (float)Main.rand.Next(1, 11) * 0.0025f;
                                }
                                float num182 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - value9.Y - num181;
                                if (npc.type == 291)
                                {
                                    num180 += (float)Main.rand.Next(-40, 41) * 0.2f;
                                    num182 += (float)Main.rand.Next(-40, 41) * 0.2f;
                                }
                                else if (npc.type == 381 || npc.type == 382 || npc.type == 520)
                                {
                                    num180 += (float)Main.rand.Next(-100, 101) * 0.4f;
                                    num182 += (float)Main.rand.Next(-100, 101) * 0.4f;
                                    num180 *= (float)Main.rand.Next(85, 116) * 0.01f;
                                    num182 *= (float)Main.rand.Next(85, 116) * 0.01f;
                                    if (npc.type == 520)
                                    {
                                        num180 += (float)Main.rand.Next(-100, 101) * 0.6f;
                                        num182 += (float)Main.rand.Next(-100, 101) * 0.6f;
                                        num180 *= (float)Main.rand.Next(85, 116) * 0.015f;
                                        num182 *= (float)Main.rand.Next(85, 116) * 0.015f;
                                    }
                                }
                                else if (npc.type == 481)
                                {
                                    num180 += (float)Main.rand.Next(-40, 41) * 0.4f;
                                    num182 += (float)Main.rand.Next(-40, 41) * 0.4f;
                                }
                                else if (npc.type >= 498 && npc.type <= 506)
                                {
                                    num180 += (float)Main.rand.Next(-40, 41) * 0.3f;
                                    num182 += (float)Main.rand.Next(-40, 41) * 0.3f;
                                }
                                else if (npc.type != 292)
                                {
                                    num180 += (float)Main.rand.Next(-40, 41);
                                    num182 += (float)Main.rand.Next(-40, 41);
                                }
                                float num183 = (float)Math.Sqrt((double)(num180 * num180 + num182 * num182));
                                npc.netUpdate = true;
                                num183 = num179 / num183;
                                num180 *= num183;
                                num182 *= num183;
                                int num184 = 35;
                                int num185 = 82;
                                if (npc.type == 111)
                                {
                                    num184 = 11;
                                }
                                if (npc.type == 206)
                                {
                                    num184 = 37;
                                }
                                if (npc.type == 379 || npc.type == 380)
                                {
                                    num184 = 40;
                                }
                                if (npc.type == 350)
                                {
                                    num184 = 45;
                                }
                                if (npc.type == 468)
                                {
                                    num184 = 50;
                                }
                                if (npc.type == 111)
                                {
                                    num185 = 81;
                                }
                                if (npc.type == 379 || npc.type == 380)
                                {
                                    num185 = 81;
                                }
                                if (npc.type == 381)
                                {
                                    num185 = 436;
                                    num184 = 24;
                                }
                                if (npc.type == 382)
                                {
                                    num185 = 438;
                                    num184 = 30;
                                }
                                if (npc.type == 520)
                                {
                                    num185 = 592;
                                    num184 = 35;
                                }
                                if (npc.type >= 449 && npc.type <= 452)
                                {
                                    num185 = 471;
                                    num184 = 20;
                                }
                                if (npc.type >= 498 && npc.type <= 506)
                                {
                                    num185 = 572;
                                    num184 = 14;
                                }
                                if (npc.type == 481)
                                {
                                    num185 = 508;
                                    num184 = 24;
                                }
                                if (npc.type == 206)
                                {
                                    num185 = 177;
                                }
                                if (npc.type == 468)
                                {
                                    num185 = 501;
                                }
                                if (npc.type == 411)
                                {
                                    num185 = 537;
                                    num184 = (Main.expertMode ? 45 : 60);
                                }
                                if (npc.type == 424)
                                {
                                    num185 = 573;
                                    num184 = (Main.expertMode ? 45 : 60);
                                }
                                if (npc.type == 426)
                                {
                                    num185 = 581;
                                    num184 = (Main.expertMode ? 45 : 60);
                                }
                                if (npc.type == 291)
                                {
                                    num185 = 302;
                                    num184 = 100;
                                }
                                if (npc.type == 290)
                                {
                                    num185 = 300;
                                    num184 = 60;
                                }
                                if (npc.type == 293)
                                {
                                    num185 = 303;
                                    num184 = 60;
                                }
                                if (npc.type == 214)
                                {
                                    num185 = 180;
                                    num184 = 25;
                                }
                                if (npc.type == 215)
                                {
                                    num185 = 82;
                                    num184 = 40;
                                }
                                if (npc.type == 292)
                                {
                                    num184 = 50;
                                    num185 = 180;
                                }
                                if (npc.type == 216)
                                {
                                    num185 = 180;
                                    num184 = 30;
                                    if (flag21)
                                    {
                                        num184 = 100;
                                        num185 = 240;
                                        npc.localAI[2] = 0f;
                                    }
                                }
                                value9.X += num180;
                                value9.Y += num182;
                                if (Main.expertMode && npc.type == 290)
                                {
                                    num184 = (int)((double)num184 * 0.75);
                                }
                                if (Main.expertMode && npc.type >= 381 && npc.type <= 392)
                                {
                                    num184 = (int)((double)num184 * 0.8);
                                }
                                if (Main.netMode != 1)
                                {
                                    if (npc.type == 292)
                                    {
                                        for (int num186 = 0; num186 < 4; num186++)
                                        {
                                            num180 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - value9.X;
                                            num182 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - value9.Y;
                                            num183 = (float)Math.Sqrt((double)(num180 * num180 + num182 * num182));
                                            num183 = 12f / num183;
                                            num180 += (float)Main.rand.Next(-40, 41);
                                            num182 += (float)Main.rand.Next(-40, 41);
                                            num180 *= num183;
                                            num182 *= num183;
                                            Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                    }
                                    else if (npc.type == 411)
                                    {
                                        Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                    }
                                    else if (npc.type == 424)
                                    {
                                        for (int num187 = 0; num187 < 4; num187++)
                                        {
                                            Projectile.NewProjectile(npc.Center.X - (float)(npc.spriteDirection * 4), npc.Center.Y + 6f, (float)(-3 + 2 * num187) * 0.15f, (float)(-(float)Main.rand.Next(0, 3)) * 0.2f - 0.1f, num185, num184, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                        }
                                    }
                                    else if (npc.type == 409)
                                    {
                                        int num188 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 410, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                        Main.npc[num188].velocity = new Vector2(num180, -6f + num182);
                                    }
                                    else
                                    {
                                        Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                }
                                if (Math.Abs(num182) > Math.Abs(num180) * 2f)
                                {
                                    if (num182 > 0f)
                                    {
                                        npc.ai[2] = 1f;
                                    }
                                    else
                                    {
                                        npc.ai[2] = 5f;
                                    }
                                }
                                else if (Math.Abs(num180) > Math.Abs(num182) * 2f)
                                {
                                    npc.ai[2] = 3f;
                                }
                                else if (num182 > 0f)
                                {
                                    npc.ai[2] = 2f;
                                }
                                else
                                {
                                    npc.ai[2] = 4f;
                                }
                            }
                            if ((npc.velocity.Y != 0f && !flag19) || npc.ai[1] <= 0f)
                            {
                                npc.ai[2] = 0f;
                                npc.ai[1] = 0f;
                            }
                            else if (!flag18 || (num175 != -1 && npc.ai[1] >= (float)num175 && npc.ai[1] < (float)(num175 + num176) && (!flag19 || npc.velocity.Y == 0f)))
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                                npc.spriteDirection = npc.direction;
                            }
                        }
                        if (npc.type == 468 && !Main.eclipse)
                        {
                            flag18 = true;
                        }
                        else if ((npc.ai[2] <= 0f || flag18) && (npc.velocity.Y == 0f || flag19) && npc.ai[1] <= 0f && !Main.player[npc.target].dead)
                        {
                            bool flag22 = Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                            if (npc.type == 520)
                            {
                                flag22 = Collision.CanHitLine(npc.Top + new Vector2(0f, 20f), 0, 0, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                            }
                            if (Main.player[npc.target].stealth == 0f && Main.player[npc.target].itemAnimation == 0)
                            {
                                flag22 = false;
                            }
                            if (flag22)
                            {
                                float num189 = 10f;
                                Vector2 vector24 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num190 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector24.X;
                                float num191 = Math.Abs(num190) * 0.1f;
                                float num192 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector24.Y - num191;
                                num190 += (float)Main.rand.Next(-40, 41);
                                num192 += (float)Main.rand.Next(-40, 41);
                                float num193 = (float)Math.Sqrt((double)(num190 * num190 + num192 * num192));
                                float num194 = 700f;
                                if (npc.type == 214)
                                {
                                    num194 = 550f;
                                }
                                if (npc.type == 215)
                                {
                                    num194 = 800f;
                                }
                                if (npc.type >= 498 && npc.type <= 506)
                                {
                                    num194 = 190f;
                                }
                                if (npc.type >= 449 && npc.type <= 452)
                                {
                                    num194 = 200f;
                                }
                                if (npc.type == 481)
                                {
                                    num194 = 400f;
                                }
                                if (npc.type == 468)
                                {
                                    num194 = 400f;
                                }
                                if (num193 < num194)
                                {
                                    npc.netUpdate = true;
                                    npc.velocity.X = npc.velocity.X * 0.5f;
                                    num193 = num189 / num193;
                                    num190 *= num193;
                                    num192 *= num193;
                                    npc.ai[2] = 3f;
                                    npc.ai[1] = (float)num177;
                                    if (Math.Abs(num192) > Math.Abs(num190) * 2f)
                                    {
                                        if (num192 > 0f)
                                        {
                                            npc.ai[2] = 1f;
                                        }
                                        else
                                        {
                                            npc.ai[2] = 5f;
                                        }
                                    }
                                    else if (Math.Abs(num190) > Math.Abs(num192) * 2f)
                                    {
                                        npc.ai[2] = 3f;
                                    }
                                    else if (num192 > 0f)
                                    {
                                        npc.ai[2] = 2f;
                                    }
                                    else
                                    {
                                        npc.ai[2] = 4f;
                                    }
                                }
                            }
                        }
                        if (npc.ai[2] <= 0f || (flag18 && (num175 == -1 || npc.ai[1] < (float)num175 || npc.ai[1] >= (float)(num175 + num176))))
                        {
                            float num195 = 1f;
                            float num196 = 0.07f;
                            float scaleFactor6 = 0.8f;
                            if (npc.type == 214)
                            {
                                num195 = 2f;
                                num196 = 0.09f;
                            }
                            else if (npc.type == 215)
                            {
                                num195 = 1.5f;
                                num196 = 0.08f;
                            }
                            else if (npc.type == 381 || npc.type == 382)
                            {
                                num195 = 2f;
                                num196 = 0.5f;
                            }
                            else if (npc.type == 520)
                            {
                                num195 = 4f;
                                num196 = 1f;
                                scaleFactor6 = 0.7f;
                            }
                            else if (npc.type == 411)
                            {
                                num195 = 2f;
                                num196 = 0.5f;
                            }
                            else if (npc.type == 409)
                            {
                                num195 = 2f;
                                num196 = 0.5f;
                            }
                            bool flag23 = false;
                            if ((npc.type == 381 || npc.type == 382) && Vector2.Distance(npc.Center, Main.player[npc.target].Center) < 300f && Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                            {
                                flag23 = true;
                                npc.ai[3] = 0f;
                            }
                            if (npc.type == 520 && Vector2.Distance(npc.Center, Main.player[npc.target].Center) < 400f && Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                            {
                                flag23 = true;
                                npc.ai[3] = 0f;
                            }
                            if (npc.velocity.X < -num195 || npc.velocity.X > num195 || flag23)
                            {
                                if (npc.velocity.Y == 0f)
                                {
                                    npc.velocity *= scaleFactor6;
                                }
                            }
                            else if (npc.velocity.X < num195 && npc.direction == 1)
                            {
                                npc.velocity.X = npc.velocity.X + num196;
                                if (npc.velocity.X > num195)
                                {
                                    npc.velocity.X = num195;
                                }
                            }
                            else if (npc.velocity.X > -num195 && npc.direction == -1)
                            {
                                npc.velocity.X = npc.velocity.X - num196;
                                if (npc.velocity.X < -num195)
                                {
                                    npc.velocity.X = -num195;
                                }
                            }
                        }
                        if (npc.type == 520)
                        {
                            npc.localAI[2] += 1f;
                            if (npc.localAI[2] >= 6f)
                            {
                                npc.localAI[2] = 0f;
                                npc.localAI[3] = Main.player[npc.target].DirectionFrom(npc.Top + new Vector2(0f, 20f)).ToRotation();
                            }
                        }
                    }
                }
                if (npc.type == 109 && Main.netMode != 1 && !Main.player[npc.target].dead)
                {
                    if (npc.justHit)
                    {
                        npc.ai[2] = 0f;
                    }
                    npc.ai[2] += 1f;
                    if (npc.ai[2] > 450f)
                    {
                        Vector2 vector25 = new Vector2(npc.position.X + (float)npc.width * 0.5f - (float)(npc.direction * 24), npc.position.Y + 4f);
                        int num197 = 3 * npc.direction;
                        int num198 = -5;
                        int num199 = Projectile.NewProjectile(vector25.X, vector25.Y, (float)num197, (float)num198, 75, 0, 0f, Main.myPlayer, 0f, 0f);
                        Main.projectile[num199].timeLeft = 300;
                        npc.ai[2] = 0f;
                    }
                }
                bool flag24 = false;
                if (npc.velocity.Y == 0f)
                {
                    int num200 = (int)(npc.position.Y + (float)npc.height + 7f) / 16;
                    int num201 = (int)npc.position.X / 16;
                    int num202 = (int)(npc.position.X + (float)npc.width) / 16;
                    for (int num203 = num201; num203 <= num202; num203++)
                    {
                        if (Main.tile[num203, num200] == null)
                        {
                            return;
                        }
                        if (Main.tile[num203, num200].nactive() && Main.tileSolid[(int)Main.tile[num203, num200].type])
                        {
                            flag24 = true;
                            break;
                        }
                    }
                }
                if (npc.type == 428)
                {
                    flag24 = false;
                }
                if (npc.velocity.Y >= 0f)
                {
                    int num204 = 0;
                    if (npc.velocity.X < 0f)
                    {
                        num204 = -1;
                    }
                    if (npc.velocity.X > 0f)
                    {
                        num204 = 1;
                    }
                    Vector2 position2 = npc.position;
                    position2.X += npc.velocity.X;
                    int num205 = (int)((position2.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 1) * num204)) / 16f);
                    int num206 = (int)((position2.Y + (float)npc.height - 1f) / 16f);
                    if (Main.tile[num205, num206] == null)
                    {
                        Main.tile[num205, num206] = new Tile();
                    }
                    if (Main.tile[num205, num206 - 1] == null)
                    {
                        Main.tile[num205, num206 - 1] = new Tile();
                    }
                    if (Main.tile[num205, num206 - 2] == null)
                    {
                        Main.tile[num205, num206 - 2] = new Tile();
                    }
                    if (Main.tile[num205, num206 - 3] == null)
                    {
                        Main.tile[num205, num206 - 3] = new Tile();
                    }
                    if (Main.tile[num205, num206 + 1] == null)
                    {
                        Main.tile[num205, num206 + 1] = new Tile();
                    }
                    if (Main.tile[num205 - num204, num206 - 3] == null)
                    {
                        Main.tile[num205 - num204, num206 - 3] = new Tile();
                    }
                    if ((float)(num205 * 16) < position2.X + (float)npc.width && (float)(num205 * 16 + 16) > position2.X && ((Main.tile[num205, num206].nactive() && !Main.tile[num205, num206].topSlope() && !Main.tile[num205, num206 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num205, num206].type] && !Main.tileSolidTop[(int)Main.tile[num205, num206].type]) || (Main.tile[num205, num206 - 1].halfBrick() && Main.tile[num205, num206 - 1].nactive())) && (!Main.tile[num205, num206 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 1].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 1].type] || (Main.tile[num205, num206 - 1].halfBrick() && (!Main.tile[num205, num206 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 4].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 4].type]))) && (!Main.tile[num205, num206 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 2].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 2].type]) && (!Main.tile[num205, num206 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 3].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 3].type]) && (!Main.tile[num205 - num204, num206 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num205 - num204, num206 - 3].type]))
                    {
                        float num207 = (float)(num206 * 16);
                        if (Main.tile[num205, num206].halfBrick())
                        {
                            num207 += 8f;
                        }
                        if (Main.tile[num205, num206 - 1].halfBrick())
                        {
                            num207 -= 8f;
                        }
                        if (num207 < position2.Y + (float)npc.height)
                        {
                            float num208 = position2.Y + (float)npc.height - num207;
                            float num209 = 16.1f;
                            if (npc.type == 163 || npc.type == 164 || npc.type == 236 || npc.type == 239 || npc.type == 530)
                            {
                                num209 += 8f;
                            }
                            if (num208 <= num209)
                            {
                                npc.gfxOffY += npc.position.Y + (float)npc.height - num207;
                                npc.position.Y = num207 - (float)npc.height;
                                if (num208 < 9f)
                                {
                                    npc.stepSpeed = 1f;
                                }
                                else
                                {
                                    npc.stepSpeed = 2f;
                                }
                            }
                        }
                    }
                }
                if (flag24)
                {
                    int num210 = (int)((npc.position.X + (float)(npc.width / 2) + (float)(15 * npc.direction)) / 16f);
                    int num211 = (int)((npc.position.Y + (float)npc.height - 15f) / 16f);
                    if (npc.type == 109 || npc.type == 163 || npc.type == 164 || npc.type == 199 || npc.type == 236 || npc.type == 239 || npc.type == 257 || npc.type == 258 || npc.type == 290 || npc.type == 391 || npc.type == 425 || npc.type == 427 || npc.type == 426 || npc.type == 508 || npc.type == 415 || npc.type == 530 || npc.type == 532)
                    {
                        num210 = (int)((npc.position.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 16) * npc.direction)) / 16f);
                    }
                    if (Main.tile[num210, num211] == null)
                    {
                        Main.tile[num210, num211] = new Tile();
                    }
                    if (Main.tile[num210, num211 - 1] == null)
                    {
                        Main.tile[num210, num211 - 1] = new Tile();
                    }
                    if (Main.tile[num210, num211 - 2] == null)
                    {
                        Main.tile[num210, num211 - 2] = new Tile();
                    }
                    if (Main.tile[num210, num211 - 3] == null)
                    {
                        Main.tile[num210, num211 - 3] = new Tile();
                    }
                    if (Main.tile[num210, num211 + 1] == null)
                    {
                        Main.tile[num210, num211 + 1] = new Tile();
                    }
                    if (Main.tile[num210 + npc.direction, num211 - 1] == null)
                    {
                        Main.tile[num210 + npc.direction, num211 - 1] = new Tile();
                    }
                    if (Main.tile[num210 + npc.direction, num211 + 1] == null)
                    {
                        Main.tile[num210 + npc.direction, num211 + 1] = new Tile();
                    }
                    if (Main.tile[num210 - npc.direction, num211 + 1] == null)
                    {
                        Main.tile[num210 - npc.direction, num211 + 1] = new Tile();
                    }
                    Main.tile[num210, num211 + 1].halfBrick();
                    if (Main.tile[num210, num211 - 1].nactive() && (Main.tile[num210, num211 - 1].type == 10 || Main.tile[num210, num211 - 1].type == 388) && flag7)
                    {
                        npc.ai[2] += 1f;
                        npc.ai[3] = 0f;
                        if (npc.ai[2] >= 60f)
                        {
                            if (!Main.bloodMoon && (npc.type == 3 || npc.type == 331 || npc.type == 332 || npc.type == 132 || npc.type == 161 || npc.type == 186 || npc.type == 187 || npc.type == 188 || npc.type == 189 || npc.type == 200 || npc.type == 223 || npc.type == 320 || npc.type == 321 || npc.type == 319))
                            {
                                npc.ai[1] = 0f;
                            }
                            npc.velocity.X = 0.5f * (float)(-(float)npc.direction);
                            int num212 = 5;
                            if (Main.tile[num210, num211 - 1].type == 388)
                            {
                                num212 = 2;
                            }
                            npc.ai[1] += (float)num212;
                            if (npc.type == 27)
                            {
                                npc.ai[1] += 1f;
                            }
                            if (npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296)
                            {
                                npc.ai[1] += 6f;
                            }
                            npc.ai[2] = 0f;
                            bool flag25 = false;
                            if (npc.ai[1] >= 10f)
                            {
                                flag25 = true;
                                npc.ai[1] = 10f;
                            }
                            if (npc.type == 460)
                            {
                                flag25 = true;
                            }
                            WorldGen.KillTile(num210, num211 - 1, true, false, false);
                            if ((Main.netMode != 1 || !flag25) && flag25 && Main.netMode != 1)
                            {
                                if (npc.type == 26)
                                {
                                    WorldGen.KillTile(num210, num211 - 1, false, false, false);
                                    if (Main.netMode == 2)
                                    {
                                        NetMessage.SendData(17, -1, -1, null, 0, (float)num210, (float)(num211 - 1), 0f, 0, 0, 0);
                                    }
                                }
                                else
                                {
                                    if (Main.tile[num210, num211 - 1].type == 10)
                                    {
                                        bool flag26 = WorldGen.OpenDoor(num210, num211 - 1, npc.direction);
                                        if (!flag26)
                                        {
                                            npc.ai[3] = (float)num67;
                                            npc.netUpdate = true;
                                        }
                                        if (Main.netMode == 2 && flag26)
                                        {
                                            NetMessage.SendData(19, -1, -1, null, 0, (float)num210, (float)(num211 - 1), (float)npc.direction, 0, 0, 0);
                                        }
                                    }
                                    if (Main.tile[num210, num211 - 1].type == 388)
                                    {
                                        bool flag27 = WorldGen.ShiftTallGate(num210, num211 - 1, false);
                                        if (!flag27)
                                        {
                                            npc.ai[3] = (float)num67;
                                            npc.netUpdate = true;
                                        }
                                        if (Main.netMode == 2 && flag27)
                                        {
                                            NetMessage.SendData(19, -1, -1, null, 4, (float)num210, (float)(num211 - 1), 0f, 0, 0, 0);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        int num213 = npc.spriteDirection;
                        if (npc.type == 425)
                        {
                            num213 *= -1;
                        }
                        if ((npc.velocity.X < 0f && num213 == -1) || (npc.velocity.X > 0f && num213 == 1))
                        {
                            if (npc.height >= 32 && Main.tile[num210, num211 - 2].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 2].type])
                            {
                                if (Main.tile[num210, num211 - 3].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 3].type])
                                {
                                    npc.velocity.Y = -8f;
                                    npc.netUpdate = true;
                                }
                                else
                                {
                                    npc.velocity.Y = -7f;
                                    npc.netUpdate = true;
                                }
                            }
                            else if (Main.tile[num210, num211 - 1].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 1].type])
                            {
                                npc.velocity.Y = -6f;
                                npc.netUpdate = true;
                            }
                            else if (npc.position.Y + (float)npc.height - (float)(num211 * 16) > 20f && Main.tile[num210, num211].nactive() && !Main.tile[num210, num211].topSlope() && Main.tileSolid[(int)Main.tile[num210, num211].type])
                            {
                                npc.velocity.Y = -5f;
                                npc.netUpdate = true;
                            }
                            else if (npc.directionY < 0 && npc.type != 67 && (!Main.tile[num210, num211 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num210, num211 + 1].type]) && (!Main.tile[num210 + npc.direction, num211 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num210 + npc.direction, num211 + 1].type]))
                            {
                                npc.velocity.Y = -8f;
                                npc.velocity.X = npc.velocity.X * 1.5f;
                                npc.netUpdate = true;
                            }
                            else if (flag7)
                            {
                                npc.ai[1] = 0f;
                                npc.ai[2] = 0f;
                            }
                            if (npc.velocity.Y == 0f && flag5 && npc.ai[3] == 1f)
                            {
                                npc.velocity.Y = -5f;
                            }
                        }
                        if ((npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 47 || npc.type == 77 || npc.type == 104 || npc.type == 168 || npc.type == 196 || npc.type == 385 || npc.type == 389 || npc.type == 464 || npc.type == 470 || (npc.type >= 524 && npc.type <= 527)) && npc.velocity.Y == 0f && Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) < 100f && Math.Abs(npc.position.Y + (float)(npc.height / 2) - (Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2))) < 50f && ((npc.direction > 0 && npc.velocity.X >= 1f) || (npc.direction < 0 && npc.velocity.X <= -1f)))
                        {
                            npc.velocity.X = npc.velocity.X * 2f;
                            if (npc.velocity.X > 3f)
                            {
                                npc.velocity.X = 3f;
                            }
                            if (npc.velocity.X < -3f)
                            {
                                npc.velocity.X = -3f;
                            }
                            npc.velocity.Y = -4f;
                            npc.netUpdate = true;
                        }
                        if (npc.type == 120 && npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 1.1f;
                        }
                        if (npc.type == 287 && npc.velocity.Y == 0f && Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) < 150f && Math.Abs(npc.position.Y + (float)(npc.height / 2) - (Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2))) < 50f && ((npc.direction > 0 && npc.velocity.X >= 1f) || (npc.direction < 0 && npc.velocity.X <= -1f)))
                        {
                            npc.velocity.X = (float)(8 * npc.direction);
                            npc.velocity.Y = -4f;
                            npc.netUpdate = true;
                        }
                        if (npc.type == 287 && npc.velocity.Y < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 1.2f;
                            npc.velocity.Y = npc.velocity.Y * 1.1f;
                        }
                        if (npc.type == 460 && npc.velocity.Y < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 1.3f;
                            npc.velocity.Y = npc.velocity.Y * 1.1f;
                        }
                    }
                }
                else if (flag7)
                {
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                }
                if (Main.netMode != 1 && npc.type == 120 && npc.ai[3] >= (float)num67)
                {
                    int num214 = (int)Main.player[npc.target].position.X / 16;
                    int num215 = (int)Main.player[npc.target].position.Y / 16;
                    int num216 = (int)npc.position.X / 16;
                    int num217 = (int)npc.position.Y / 16;
                    int num218 = 20;
                    int num219 = 0;
                    bool flag28 = false;
                    if (Math.Abs(npc.position.X - Main.player[npc.target].position.X) + Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                    {
                        num219 = 100;
                        flag28 = true;
                    }
                    while (!flag28)
                    {
                        if (num219 >= 100)
                        {
                            return;
                        }
                        num219++;
                        int num220 = Main.rand.Next(num214 - num218, num214 + num218);
                        int num221 = Main.rand.Next(num215 - num218, num215 + num218);
                        for (int num222 = num221; num222 < num215 + num218; num222++)
                        {
                            if ((num222 < num215 - 4 || num222 > num215 + 4 || num220 < num214 - 4 || num220 > num214 + 4) && (num222 < num217 - 1 || num222 > num217 + 1 || num220 < num216 - 1 || num220 > num216 + 1) && Main.tile[num220, num222].nactive())
                            {
                                bool flag29 = true;
                                if (npc.type == 32 && Main.tile[num220, num222 - 1].wall == 0)
                                {
                                    flag29 = false;
                                }
                                else if (Main.tile[num220, num222 - 1].lava())
                                {
                                    flag29 = false;
                                }
                                if (flag29 && Main.tileSolid[(int)Main.tile[num220, num222].type] && !Collision.SolidTiles(num220 - 1, num220 + 1, num222 - 4, num222 - 1))
                                {
                                    npc.position.X = (float)(num220 * 16 - npc.width / 2);
                                    npc.position.Y = (float)(num222 * 16 - npc.height);
                                    npc.netUpdate = true;
                                    npc.ai[3] = -120f;
                                }
                            }
                        }
                    }
                }
            }
            else if (npc.aiStyle == 4)
            {
                bool flag30 = false;
                if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.12)
                {
                    flag30 = true;
                }
                bool flag31 = false;
                if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.04)
                {
                    flag31 = true;
                }
                float num223 = 20f;
                if (flag31)
                {
                    num223 = 10f;
                }
                if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                {
                    npc.TargetClosest(true);
                }
                bool dead = Main.player[npc.target].dead;
                float num224 = npc.position.X + (float)(npc.width / 2) - Main.player[npc.target].position.X - (float)(Main.player[npc.target].width / 2);
                float num225 = npc.position.Y + (float)npc.height - 59f - Main.player[npc.target].position.Y - (float)(Main.player[npc.target].height / 2);
                float num226 = (float)Math.Atan2((double)num225, (double)num224) + 1.57f;
                if (num226 < 0f)
                {
                    num226 += 6.283f;
                }
                else if ((double)num226 > 6.283)
                {
                    num226 -= 6.283f;
                }
                float num227 = 0f;
                if (npc.ai[0] == 0f && npc.ai[1] == 0f)
                {
                    num227 = 0.02f;
                }
                if (npc.ai[0] == 0f && npc.ai[1] == 2f && npc.ai[2] > 40f)
                {
                    num227 = 0.05f;
                }
                if (npc.ai[0] == 3f && npc.ai[1] == 0f)
                {
                    num227 = 0.05f;
                }
                if (npc.ai[0] == 3f && npc.ai[1] == 2f && npc.ai[2] > 40f)
                {
                    num227 = 0.08f;
                }
                if (npc.ai[0] == 3f && npc.ai[1] == 4f && npc.ai[2] > num223)
                {
                    num227 = 0.15f;
                }
                if (npc.ai[0] == 3f && npc.ai[1] == 5f)
                {
                    num227 = 0.05f;
                }
                if (Main.expertMode)
                {
                    num227 *= 1.5f;
                }
                if (flag31 && Main.expertMode)
                {
                    num227 = 0f;
                }
                if (npc.rotation < num226)
                {
                    if ((double)(num226 - npc.rotation) > 3.1415)
                    {
                        npc.rotation -= num227;
                    }
                    else
                    {
                        npc.rotation += num227;
                    }
                }
                else if (npc.rotation > num226)
                {
                    if ((double)(npc.rotation - num226) > 3.1415)
                    {
                        npc.rotation += num227;
                    }
                    else
                    {
                        npc.rotation -= num227;
                    }
                }
                if (npc.rotation > num226 - num227 && npc.rotation < num226 + num227)
                {
                    npc.rotation = num226;
                }
                if (npc.rotation < 0f)
                {
                    npc.rotation += 6.283f;
                }
                else if ((double)npc.rotation > 6.283)
                {
                    npc.rotation -= 6.283f;
                }
                if (npc.rotation > num226 - num227 && npc.rotation < num226 + num227)
                {
                    npc.rotation = num226;
                }
                if (Main.dayTime || dead)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.04f;
                    if (npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                        return;
                    }
                }
                else if (npc.ai[0] == 0f)
                {
                    if (npc.ai[1] == 0f)
                    {
                        float num229 = 5f;
                        float num230 = 0.04f;
                        if (Main.expertMode)
                        {
                            num230 = 0.15f;
                            num229 = 7f;
                        }
                        Vector2 vector26 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num231 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector26.X;
                        float num232 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 200f - vector26.Y;
                        float num233 = (float)Math.Sqrt((double)(num231 * num231 + num232 * num232));
                        float num234 = num233;
                        num233 = num229 / num233;
                        num231 *= num233;
                        num232 *= num233;
                        if (npc.velocity.X < num231)
                        {
                            npc.velocity.X = npc.velocity.X + num230;
                            if (npc.velocity.X < 0f && num231 > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + num230;
                            }
                        }
                        else if (npc.velocity.X > num231)
                        {
                            npc.velocity.X = npc.velocity.X - num230;
                            if (npc.velocity.X > 0f && num231 < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - num230;
                            }
                        }
                        if (npc.velocity.Y < num232)
                        {
                            npc.velocity.Y = npc.velocity.Y + num230;
                            if (npc.velocity.Y < 0f && num232 > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + num230;
                            }
                        }
                        else if (npc.velocity.Y > num232)
                        {
                            npc.velocity.Y = npc.velocity.Y - num230;
                            if (npc.velocity.Y > 0f && num232 < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - num230;
                            }
                        }
                        npc.ai[2] += 1f;
                        float num235 = 600f;
                        if (Main.expertMode)
                        {
                            num235 *= 0.35f;
                        }
                        if (npc.ai[2] >= num235)
                        {
                            npc.ai[1] = 1f;
                            npc.ai[2] = 0f;
                            npc.ai[3] = 0f;
                            npc.target = 255;
                            npc.netUpdate = true;
                        }
                        else if ((npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y && num234 < 500f) || (Main.expertMode && num234 < 500f))
                        {
                            if (!Main.player[npc.target].dead)
                            {
                                npc.ai[3] += 1f;
                            }
                            float num236 = 110f;
                            if (Main.expertMode)
                            {
                                num236 *= 0.4f;
                            }
                            if (npc.ai[3] >= num236)
                            {
                                npc.ai[3] = 0f;
                                npc.rotation = num226;
                                float num237 = 5f;
                                if (Main.expertMode)
                                {
                                    num237 = 6f;
                                }
                                float num238 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector26.X;
                                float num239 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector26.Y;
                                float num240 = (float)Math.Sqrt((double)(num238 * num238 + num239 * num239));
                                num240 = num237 / num240;
                                Vector2 position3 = vector26;
                                Vector2 vector27;
                                vector27.X = num238 * num240;
                                vector27.Y = num239 * num240;
                                position3.X += vector27.X * 10f;
                                position3.Y += vector27.Y * 10f;
                                if (Main.netMode != 1)
                                {
                                    int num241 = NPC.NewNPC((int)position3.X, (int)position3.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num241].velocity.X = vector27.X;
                                    Main.npc[num241].velocity.Y = vector27.Y;
                                    if (Main.netMode == 2 && num241 < 200)
                                    {
                                        NetMessage.SendData(23, -1, -1, null, num241, 0f, 0f, 0f, 0, 0, 0);
                                    }
                                }
                            }
                        }
                    }
                    else if (npc.ai[1] == 1f)
                    {
                        npc.rotation = num226;
                        float num243 = 6f;
                        if (Main.expertMode)
                        {
                            num243 = 7f;
                        }
                        Vector2 vector28 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num244 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector28.X;
                        float num245 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector28.Y;
                        float num246 = (float)Math.Sqrt((double)(num244 * num244 + num245 * num245));
                        num246 = num243 / num246;
                        npc.velocity.X = num244 * num246;
                        npc.velocity.Y = num245 * num246;
                        npc.ai[1] = 2f;
                        npc.netUpdate = true;
                        if (npc.netSpam > 10)
                        {
                            npc.netSpam = 10;
                        }
                    }
                    else if (npc.ai[1] == 2f)
                    {
                        npc.ai[2] += 1f;
                        if (npc.ai[2] >= 40f)
                        {
                            npc.velocity *= 0.98f;
                            if (Main.expertMode)
                            {
                                npc.velocity *= 0.985f;
                            }
                            if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                            {
                                npc.velocity.X = 0f;
                            }
                            if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                            {
                                npc.velocity.Y = 0f;
                            }
                        }
                        else
                        {
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                        }
                        int num247 = 150;
                        if (Main.expertMode)
                        {
                            num247 = 100;
                        }
                        if (npc.ai[2] >= (float)num247)
                        {
                            npc.ai[3] += 1f;
                            npc.ai[2] = 0f;
                            npc.target = 255;
                            npc.rotation = num226;
                            if (npc.ai[3] >= 3f)
                            {
                                npc.ai[1] = 0f;
                                npc.ai[3] = 0f;
                            }
                            else
                            {
                                npc.ai[1] = 1f;
                            }
                        }
                    }
                    float num248 = 0.5f;
                    if (Main.expertMode)
                    {
                        num248 = 0.65f;
                    }
                    if ((float)npc.life < (float)npc.lifeMax * num248)
                    {
                        npc.ai[0] = 1f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                        npc.ai[3] = 0f;
                        npc.netUpdate = true;
                        if (npc.netSpam > 10)
                        {
                            npc.netSpam = 10;
                            return;
                        }
                    }
                }
                else if (npc.ai[0] == 1f || npc.ai[0] == 2f)
                {
                    if (npc.ai[0] == 1f)
                    {
                        npc.ai[2] += 0.005f;
                        if ((double)npc.ai[2] > 0.5)
                        {
                            npc.ai[2] = 0.5f;
                        }
                    }
                    else
                    {
                        npc.ai[2] -= 0.005f;
                        if (npc.ai[2] < 0f)
                        {
                            npc.ai[2] = 0f;
                        }
                    }
                    npc.rotation += npc.ai[2];
                    npc.ai[1] += 1f;
                    if (Main.expertMode && npc.ai[1] % 20f == 0f)
                    {
                        float num249 = 5f;
                        Vector2 vector29 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num250 = (float)Main.rand.Next(-200, 200);
                        float num251 = (float)Main.rand.Next(-200, 200);
                        float num252 = (float)Math.Sqrt((double)(num250 * num250 + num251 * num251));
                        num252 = num249 / num252;
                        Vector2 position4 = vector29;
                        Vector2 vector30;
                        vector30.X = num250 * num252;
                        vector30.Y = num251 * num252;
                        position4.X += vector30.X * 10f;
                        position4.Y += vector30.Y * 10f;
                        if (Main.netMode != 1)
                        {
                            int num253 = NPC.NewNPC((int)position4.X, (int)position4.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num253].velocity.X = vector30.X;
                            Main.npc[num253].velocity.Y = vector30.Y;
                            if (Main.netMode == 2 && num253 < 200)
                            {
                                NetMessage.SendData(23, -1, -1, null, num253, 0f, 0f, 0f, 0, 0, 0);
                            }
                        }
                    }
                    if (npc.ai[1] == 100f)
                    {
                        npc.ai[0] += 1f;
                        npc.ai[1] = 0f;
                        if (npc.ai[0] == 3f)
                        {
                            npc.ai[2] = 0f;
                        }
                    }
                    npc.velocity.X *= 0.98f;
                    npc.velocity.Y *= 0.98f;
                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                    {
                        npc.velocity.X = 0f;
                    }
                    if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                    {
                        npc.velocity.Y = 0f;
                        return;
                    }
                }
                else
                {
                    npc.defense = 0;
                    npc.damage = 23;
                    if (Main.expertMode)
                    {
                        if (flag30)
                        {
                            npc.defense = -15;
                        }
                        if (flag31)
                        {
                            npc.damage = (int)(20f * Main.expertDamage);
                            npc.defense = -30;
                        }
                        else
                        {
                            npc.damage = (int)(18f * Main.expertDamage);
                        }
                    }
                    if (npc.ai[1] == 0f && flag30)
                    {
                        npc.ai[1] = 5f;
                    }
                    if (npc.ai[1] == 0f)
                    {
                        float num257 = 6f;
                        float num258 = 0.07f;
                        Vector2 vector31 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num259 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector31.X;
                        float num260 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 120f - vector31.Y;
                        float num261 = (float)Math.Sqrt((double)(num259 * num259 + num260 * num260));
                        if (num261 > 400f && Main.expertMode)
                        {
                            num257 += 1f;
                            num258 += 0.05f;
                            if (num261 > 600f)
                            {
                                num257 += 1f;
                                num258 += 0.05f;
                                if (num261 > 800f)
                                {
                                    num257 += 1f;
                                    num258 += 0.05f;
                                }
                            }
                        }
                        num261 = num257 / num261;
                        num259 *= num261;
                        num260 *= num261;
                        if (npc.velocity.X < num259)
                        {
                            npc.velocity.X = npc.velocity.X + num258;
                            if (npc.velocity.X < 0f && num259 > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + num258;
                            }
                        }
                        else if (npc.velocity.X > num259)
                        {
                            npc.velocity.X = npc.velocity.X - num258;
                            if (npc.velocity.X > 0f && num259 < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - num258;
                            }
                        }
                        if (npc.velocity.Y < num260)
                        {
                            npc.velocity.Y = npc.velocity.Y + num258;
                            if (npc.velocity.Y < 0f && num260 > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + num258;
                            }
                        }
                        else if (npc.velocity.Y > num260)
                        {
                            npc.velocity.Y = npc.velocity.Y - num258;
                            if (npc.velocity.Y > 0f && num260 < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - num258;
                            }
                        }
                        npc.ai[2] += 1f;
                        if (npc.ai[2] >= 200f)
                        {
                            npc.ai[1] = 1f;
                            npc.ai[2] = 0f;
                            npc.ai[3] = 0f;
                            if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.35)
                            {
                                npc.ai[1] = 3f;
                            }
                            npc.target = 255;
                            npc.netUpdate = true;
                        }
                        if (Main.expertMode && flag31)
                        {
                            npc.TargetClosest(true);
                            npc.netUpdate = true;
                            npc.ai[1] = 3f;
                            npc.ai[2] = 0f;
                            npc.ai[3] -= 1000f;
                        }
                    }
                    else if (npc.ai[1] == 1f)
                    {
                        npc.rotation = num226;
                        float num262 = 6.8f;
                        if (Main.expertMode && npc.ai[3] == 1f)
                        {
                            num262 *= 1.15f;
                        }
                        if (Main.expertMode && npc.ai[3] == 2f)
                        {
                            num262 *= 1.3f;
                        }
                        Vector2 vector32 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num263 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector32.X;
                        float num264 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector32.Y;
                        float num265 = (float)Math.Sqrt((double)(num263 * num263 + num264 * num264));
                        num265 = num262 / num265;
                        npc.velocity.X = num263 * num265;
                        npc.velocity.Y = num264 * num265;
                        npc.ai[1] = 2f;
                        npc.netUpdate = true;
                        if (npc.netSpam > 10)
                        {
                            npc.netSpam = 10;
                        }
                    }
                    else if (npc.ai[1] == 2f)
                    {
                        float num266 = 40f;
                        npc.ai[2] += 1f;
                        if (Main.expertMode)
                        {
                            num266 = 50f;
                        }
                        if (npc.ai[2] >= num266)
                        {
                            npc.velocity *= 0.97f;
                            if (Main.expertMode)
                            {
                                npc.velocity *= 0.98f;
                            }
                            if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                            {
                                npc.velocity.X = 0f;
                            }
                            if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                            {
                                npc.velocity.Y = 0f;
                            }
                        }
                        else
                        {
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                        }
                        int num267 = 130;
                        if (Main.expertMode)
                        {
                            num267 = 90;
                        }
                        if (npc.ai[2] >= (float)num267)
                        {
                            npc.ai[3] += 1f;
                            npc.ai[2] = 0f;
                            npc.target = 255;
                            npc.rotation = num226;
                            if (npc.ai[3] >= 3f)
                            {
                                npc.ai[1] = 0f;
                                npc.ai[3] = 0f;
                                if (Main.expertMode && Main.netMode != 1 && (double)npc.life < (double)npc.lifeMax * 0.5)
                                {
                                    npc.ai[1] = 3f;
                                    npc.ai[3] += (float)Main.rand.Next(1, 4);
                                }
                                npc.netUpdate = true;
                                if (npc.netSpam > 10)
                                {
                                    npc.netSpam = 10;
                                }
                            }
                            else
                            {
                                npc.ai[1] = 1f;
                            }
                        }
                    }
                    else if (npc.ai[1] == 3f)
                    {
                        if (npc.ai[3] == 4f && flag30 && npc.Center.Y > Main.player[npc.target].Center.Y)
                        {
                            npc.TargetClosest(true);
                            npc.ai[1] = 0f;
                            npc.ai[2] = 0f;
                            npc.ai[3] = 0f;
                            npc.netUpdate = true;
                            if (npc.netSpam > 10)
                            {
                                npc.netSpam = 10;
                            }
                        }
                        else if (Main.netMode != 1)
                        {
                            npc.TargetClosest(true);
                            float num268 = 20f;
                            Vector2 vector33 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num269 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector33.X;
                            float num270 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector33.Y;
                            float num271 = Math.Abs(Main.player[npc.target].velocity.X) + Math.Abs(Main.player[npc.target].velocity.Y) / 4f;
                            num271 += 10f - num271;
                            if (num271 < 5f)
                            {
                                num271 = 5f;
                            }
                            if (num271 > 15f)
                            {
                                num271 = 15f;
                            }
                            if (npc.ai[2] == -1f && !flag31)
                            {
                                num271 *= 4f;
                                num268 *= 1.3f;
                            }
                            if (flag31)
                            {
                                num271 *= 2f;
                            }
                            num269 -= Main.player[npc.target].velocity.X * num271;
                            num270 -= Main.player[npc.target].velocity.Y * num271 / 4f;
                            num269 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
                            num270 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
                            if (flag31)
                            {
                                num269 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
                                num270 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
                            }
                            float num272 = (float)Math.Sqrt((double)(num269 * num269 + num270 * num270));
                            float num273 = num272;
                            num272 = num268 / num272;
                            npc.velocity.X = num269 * num272;
                            npc.velocity.Y = num270 * num272;
                            npc.velocity.X = npc.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
                            npc.velocity.Y = npc.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
                            if (flag31)
                            {
                                npc.velocity.X = npc.velocity.X + (float)Main.rand.Next(-50, 51) * 0.1f;
                                npc.velocity.Y = npc.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.1f;
                                float num274 = Math.Abs(npc.velocity.X);
                                float num275 = Math.Abs(npc.velocity.Y);
                                if (npc.Center.X > Main.player[npc.target].Center.X)
                                {
                                    num275 *= -1f;
                                }
                                if (npc.Center.Y > Main.player[npc.target].Center.Y)
                                {
                                    num274 *= -1f;
                                }
                                npc.velocity.X = num275 + npc.velocity.X;
                                npc.velocity.Y = num274 + npc.velocity.Y;
                                npc.velocity.Normalize();
                                npc.velocity *= num268;
                                npc.velocity.X = npc.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
                                npc.velocity.Y = npc.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
                            }
                            else if (num273 < 100f)
                            {
                                if (Math.Abs(npc.velocity.X) > Math.Abs(npc.velocity.Y))
                                {
                                    float num276 = Math.Abs(npc.velocity.X);
                                    float num277 = Math.Abs(npc.velocity.Y);
                                    if (npc.Center.X > Main.player[npc.target].Center.X)
                                    {
                                        num277 *= -1f;
                                    }
                                    if (npc.Center.Y > Main.player[npc.target].Center.Y)
                                    {
                                        num276 *= -1f;
                                    }
                                    npc.velocity.X = num277;
                                    npc.velocity.Y = num276;
                                }
                            }
                            else if (Math.Abs(npc.velocity.X) > Math.Abs(npc.velocity.Y))
                            {
                                float num278 = (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) / 2f;
                                float num279 = num278;
                                if (npc.Center.X > Main.player[npc.target].Center.X)
                                {
                                    num279 *= -1f;
                                }
                                if (npc.Center.Y > Main.player[npc.target].Center.Y)
                                {
                                    num278 *= -1f;
                                }
                                npc.velocity.X = num279;
                                npc.velocity.Y = num278;
                            }
                            npc.ai[1] = 4f;
                            npc.netUpdate = true;
                            if (npc.netSpam > 10)
                            {
                                npc.netSpam = 10;
                            }
                        }
                    }
                    else if (npc.ai[1] == 4f)
                    {
                        float num280 = num223;
                        npc.ai[2] += 1f;
                        if (npc.ai[2] == num280 && Vector2.Distance(npc.position, Main.player[npc.target].position) < 200f)
                        {
                            npc.ai[2] -= 1f;
                        }
                        if (npc.ai[2] >= num280)
                        {
                            npc.velocity *= 0.95f;
                            if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                            {
                                npc.velocity.X = 0f;
                            }
                            if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                            {
                                npc.velocity.Y = 0f;
                            }
                        }
                        else
                        {
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                        }
                        float num281 = num280 + 13f;
                        if (npc.ai[2] >= num281)
                        {
                            npc.netUpdate = true;
                            if (npc.netSpam > 10)
                            {
                                npc.netSpam = 10;
                            }
                            npc.ai[3] += 1f;
                            npc.ai[2] = 0f;
                            if (npc.ai[3] >= 5f)
                            {
                                npc.ai[1] = 0f;
                                npc.ai[3] = 0f;
                            }
                            else
                            {
                                npc.ai[1] = 3f;
                            }
                        }
                    }
                    else if (npc.ai[1] == 5f)
                    {
                        float num282 = 600f;
                        float num283 = 9f;
                        float num284 = 0.3f;
                        Vector2 vector34 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num285 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector34.X;
                        float num286 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) + num282 - vector34.Y;
                        float num287 = (float)Math.Sqrt((double)(num285 * num285 + num286 * num286));
                        num287 = num283 / num287;
                        num285 *= num287;
                        num286 *= num287;
                        if (npc.velocity.X < num285)
                        {
                            npc.velocity.X = npc.velocity.X + num284;
                            if (npc.velocity.X < 0f && num285 > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + num284;
                            }
                        }
                        else if (npc.velocity.X > num285)
                        {
                            npc.velocity.X = npc.velocity.X - num284;
                            if (npc.velocity.X > 0f && num285 < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - num284;
                            }
                        }
                        if (npc.velocity.Y < num286)
                        {
                            npc.velocity.Y = npc.velocity.Y + num284;
                            if (npc.velocity.Y < 0f && num286 > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + num284;
                            }
                        }
                        else if (npc.velocity.Y > num286)
                        {
                            npc.velocity.Y = npc.velocity.Y - num284;
                            if (npc.velocity.Y > 0f && num286 < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - num284;
                            }
                        }
                        npc.ai[2] += 1f;
                        if (npc.ai[2] >= 70f)
                        {
                            npc.TargetClosest(true);
                            npc.ai[1] = 3f;
                            npc.ai[2] = -1f;
                            npc.ai[3] = (float)Main.rand.Next(-3, 1);
                            npc.netUpdate = true;
                        }
                    }
                    if (flag31 && npc.ai[1] == 5f)
                    {
                        npc.ai[1] = 3f;
                        return;
                    }
                }
            }
            else if (npc.aiStyle == 5)
            {
                if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
                {
                    npc.TargetClosest(true);
                }
                float num288 = 6f;
                float num289 = 0.05f;
                if (npc.type == 6 || npc.type == 173)
                {
                    num288 = 4f;
                    num289 = 0.02f;
                    if (npc.type == 6 && Main.expertMode)
                    {
                        num289 = 0.035f;
                    }
                }
                else if (npc.type == 94)
                {
                    num288 = 4.2f;
                    num289 = 0.022f;
                }
                else if (npc.type == 252)
                {
                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        num288 = 6f;
                        num289 = 0.1f;
                    }
                    else
                    {
                        num289 = 0.01f;
                        num288 = 2f;
                    }
                }
                else if (npc.type == 42 || (npc.type >= 231 && npc.type <= 235))
                {
                    num288 = 3.5f;
                    num289 = 0.021f;
                    if (npc.type == 231)
                    {
                        num288 = 3f;
                        num289 = 0.017f;
                    }
                    num288 *= 1f - npc.scale;
                    num289 *= 1f - npc.scale;
                }
                else if (npc.type == 205)
                {
                    num288 = 3.25f;
                    num289 = 0.018f;
                }
                else if (npc.type == 176)
                {
                    num288 = 4f;
                    num289 = 0.017f;
                }
                else if (npc.type == 23)
                {
                    num288 = 1f;
                    num289 = 0.03f;
                }
                else if (npc.type == 5)
                {
                    num288 = 5f;
                    num289 = 0.03f;
                }
                else if (npc.type == 210 || npc.type == 211)
                {
                    npc.localAI[0] += 1f;
                    float num290 = (npc.localAI[0] - 60f) / 60f;
                    if (num290 > 1f)
                    {
                        num290 = 1f;
                    }
                    else
                    {
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                        if (npc.velocity.Y > 6f)
                        {
                            npc.velocity.Y = 6f;
                        }
                        if (npc.velocity.Y < -6f)
                        {
                            npc.velocity.Y = -6f;
                        }
                    }
                    num288 = 5f;
                    num289 = 0.1f;
                    num289 *= num290;
                }
                Vector2 vector35 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                float num291 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
                float num292 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
                num291 = (float)((int)(num291 / 8f) * 8);
                num292 = (float)((int)(num292 / 8f) * 8);
                vector35.X = (float)((int)(vector35.X / 8f) * 8);
                vector35.Y = (float)((int)(vector35.Y / 8f) * 8);
                num291 -= vector35.X;
                num292 -= vector35.Y;
                float num293 = (float)Math.Sqrt((double)(num291 * num291 + num292 * num292));
                float num294 = num293;
                bool flag32 = false;
                if (num293 > 600f)
                {
                    flag32 = true;
                }
                if (num293 == 0f)
                {
                    num291 = npc.velocity.X;
                    num292 = npc.velocity.Y;
                }
                else
                {
                    num293 = num288 / num293;
                    num291 *= num293;
                    num292 *= num293;
                }
                if (npc.type == 6 || npc.type == 42 || npc.type == 94 || npc.type == 139 || npc.type == 173 || npc.type == 176 || npc.type == 205 || npc.type == 210 || npc.type == 211 || (npc.type >= 231 && npc.type <= 235))
                {
                    if (num294 > 100f || npc.type == 42 || npc.type == 94 || npc.type == 176 || npc.type == 210 || npc.type == 211 || (npc.type >= 231 && npc.type <= 235))
                    {
                        npc.ai[0] += 1f;
                        if (npc.ai[0] > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.023f;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.023f;
                        }
                        if (npc.ai[0] < -100f || npc.ai[0] > 100f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.023f;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X - 0.023f;
                        }
                        if (npc.ai[0] > 200f)
                        {
                            npc.ai[0] = -200f;
                        }
                    }
                    if (num294 < 150f && (npc.type == 6 || npc.type == 94 || npc.type == 173))
                    {
                        npc.velocity.X = npc.velocity.X + num291 * 0.007f;
                        npc.velocity.Y = npc.velocity.Y + num292 * 0.007f;
                    }
                }
                if (Main.player[npc.target].dead)
                {
                    num291 = (float)npc.direction * num288 / 2f;
                    num292 = -num288 / 2f;
                }
                if (npc.velocity.X < num291)
                {
                    npc.velocity.X = npc.velocity.X + num289;
                    if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.X < 0f && num291 > 0f)
                    {
                        npc.velocity.X = npc.velocity.X + num289;
                    }
                }
                else if (npc.velocity.X > num291)
                {
                    npc.velocity.X = npc.velocity.X - num289;
                    if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.X > 0f && num291 < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - num289;
                    }
                }
                if (npc.velocity.Y < num292)
                {
                    npc.velocity.Y = npc.velocity.Y + num289;
                    if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.Y < 0f && num292 > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + num289;
                    }
                }
                else if (npc.velocity.Y > num292)
                {
                    npc.velocity.Y = npc.velocity.Y - num289;
                    if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.Y > 0f && num292 < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - num289;
                    }
                }
                if (npc.type == 23)
                {
                    if (num291 > 0f)
                    {
                        npc.spriteDirection = 1;
                        npc.rotation = (float)Math.Atan2((double)num292, (double)num291);
                    }
                    else if (num291 < 0f)
                    {
                        npc.spriteDirection = -1;
                        npc.rotation = (float)Math.Atan2((double)num292, (double)num291) + 3.14f;
                    }
                }
                else if (npc.type == 139)
                {
                    npc.localAI[0] += 1f;
                    if (npc.justHit)
                    {
                        npc.localAI[0] = 0f;
                    }
                    if (Main.netMode != 1 && npc.localAI[0] >= 120f)
                    {
                        npc.localAI[0] = 0f;
                        if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                        {
                            int num295 = 25;
                            if (Main.expertMode)
                            {
                                num295 = 22;
                            }
                            int num296 = 84;
                            Projectile.NewProjectile(vector35.X, vector35.Y, num291, num292, num296, num295, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                    int num297 = (int)npc.position.X + npc.width / 2;
                    int num298 = (int)npc.position.Y + npc.height / 2;
                    num297 /= 16;
                    num298 /= 16;
                    if (num291 > 0f)
                    {
                        npc.spriteDirection = 1;
                        npc.rotation = (float)Math.Atan2((double)num292, (double)num291);
                    }
                    if (num291 < 0f)
                    {
                        npc.spriteDirection = -1;
                        npc.rotation = (float)Math.Atan2((double)num292, (double)num291) + 3.14f;
                    }
                }
                else if (npc.type == 6 || npc.type == 94 || npc.type == 173)
                {
                    npc.rotation = (float)Math.Atan2((double)num292, (double)num291) - 1.57f;
                }
                else if (npc.type == 42 || npc.type == 176 || npc.type == 205 || (npc.type >= 231 && npc.type <= 235))
                {
                    if (npc.velocity.X > 0f)
                    {
                        npc.spriteDirection = 1;
                    }
                    if (npc.velocity.X < 0f)
                    {
                        npc.spriteDirection = -1;
                    }
                    npc.rotation = npc.velocity.X * 0.1f;
                }
                else
                {
                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                }
                if (npc.type == 6 || npc.type == 23 || npc.type == 42 || npc.type == 94 || npc.type == 139 || npc.type == 173 || npc.type == 176 || npc.type == 205 || npc.type == 210 || npc.type == 211 || (npc.type >= 231 && npc.type <= 235))
                {
                    float num299 = 0.7f;
                    if (npc.type == 6 || npc.type == 173)
                    {
                        num299 = 0.4f;
                    }
                    if (npc.collideX)
                    {
                        npc.netUpdate = true;
                        npc.velocity.X = npc.oldVelocity.X * -num299;
                        if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                        {
                            npc.velocity.X = 2f;
                        }
                        if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                        {
                            npc.velocity.X = -2f;
                        }
                    }
                    if (npc.collideY)
                    {
                        npc.netUpdate = true;
                        npc.velocity.Y = npc.oldVelocity.Y * -num299;
                        if (npc.velocity.Y > 0f && (double)npc.velocity.Y < 1.5)
                        {
                            npc.velocity.Y = 2f;
                        }
                        if (npc.velocity.Y < 0f && (double)npc.velocity.Y > -1.5)
                        {
                            npc.velocity.Y = -2f;
                        }
                    }
                }
                if ((npc.type == 6 || npc.type == 94 || npc.type == 173) && npc.wet)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.3f;
                    if (npc.velocity.Y < -2f)
                    {
                        npc.velocity.Y = -2f;
                    }
                }
                if (npc.type == 205 && npc.wet)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                    npc.TargetClosest(true);
                }
                if (npc.type == 42 || npc.type == 176 || (npc.type >= 231 && npc.type <= 235))
                {
                    if (npc.wet)
                    {
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.95f;
                        }
                        npc.velocity.Y = npc.velocity.Y - 0.5f;
                        if (npc.velocity.Y < -4f)
                        {
                            npc.velocity.Y = -4f;
                        }
                        npc.TargetClosest(true);
                    }
                    if (npc.ai[1] == 101f)
                    {
                        npc.ai[1] = 0f;
                    }
                    if (Main.netMode != 1)
                    {
                        npc.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * npc.scale;
                        if (npc.type == 176)
                        {
                            npc.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * npc.scale;
                        }
                        if (Main.player[npc.target].stealth == 0f && Main.player[npc.target].itemAnimation == 0)
                        {
                            npc.ai[1] = 0f;
                        }
                        if (npc.ai[1] >= 130f)
                        {
                            if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num304 = 8f;
                                Vector2 vector36 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)(npc.height / 2));
                                float num305 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector36.X + (float)Main.rand.Next(-20, 21);
                                float num306 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector36.Y + (float)Main.rand.Next(-20, 21);
                                if ((num305 < 0f && npc.velocity.X < 0f) || (num305 > 0f && npc.velocity.X > 0f))
                                {
                                    float num307 = (float)Math.Sqrt((double)(num305 * num305 + num306 * num306));
                                    num307 = num304 / num307;
                                    num305 *= num307;
                                    num306 *= num307;
                                    int num308 = (int)(10f * npc.scale);
                                    if (npc.type == 176)
                                    {
                                        num308 = (int)(30f * npc.scale);
                                    }
                                    int num309 = 55;
                                    int num310 = Projectile.NewProjectile(vector36.X, vector36.Y, num305, num306, num309, num308, 0f, Main.myPlayer, 0f, 0f);
                                    Main.projectile[num310].timeLeft = 300;
                                    npc.ai[1] = 101f;
                                    npc.netUpdate = true;
                                }
                                else
                                {
                                    npc.ai[1] = 0f;
                                }
                            }
                            else
                            {
                                npc.ai[1] = 0f;
                            }
                        }
                    }
                }
                if (npc.type == 139 && flag32)
                {
                    if ((npc.velocity.X > 0f && num291 > 0f) || (npc.velocity.X < 0f && num291 < 0f))
                    {
                        if (Math.Abs(npc.velocity.X) < 12f)
                        {
                            npc.velocity.X = npc.velocity.X * 1.05f;
                        }
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                }
                if (Main.netMode != 1 && npc.type == 94 && !Main.player[npc.target].dead)
                {
                    if (npc.justHit)
                    {
                        npc.localAI[0] = 0f;
                    }
                    npc.localAI[0] += 1f;
                    if (npc.localAI[0] == 180f)
                    {
                        if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                        {
                            NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2) + npc.velocity.X), (int)(npc.position.Y + (float)(npc.height / 2) + npc.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
                        }
                        npc.localAI[0] = 0f;
                    }
                }
                if ((Main.dayTime && npc.type != 173 && npc.type != 6 && npc.type != 23 && npc.type != 42 && npc.type != 94 && npc.type != 176 && npc.type != 205 && npc.type != 210 && npc.type != 211 && npc.type != 252 && (npc.type < 231 || npc.type > 235)) || Main.player[npc.target].dead)
                {
                    npc.velocity.Y = npc.velocity.Y - num289 * 2f;
                    if (npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                    }
                }
                if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
                {
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.aiStyle == 6)
            {
                if (npc.type == 117 && npc.localAI[1] == 0f)
                {
                    npc.localAI[1] = 1f;
                }
                if (npc.type == 454 && npc.localAI[3] == 0f)
                {
                    npc.localAI[3] = 1f;
                }
                if (npc.type >= 454 && npc.type <= 459)
                {
                    npc.dontTakeDamage = (npc.alpha > 0);
                    if (npc.type == 454 || (npc.type != 454 && Main.npc[(int)npc.ai[1]].alpha < 85))
                    {
                        npc.alpha -= 42;
                        if (npc.alpha < 0)
                        {
                            npc.alpha = 0;
                        }
                    }
                }
                else if (npc.type == 402 && npc.ai[1] == 0f)
                {
                    npc.ai[1] = (float)Main.rand.Next(-2, 0);
                    npc.netUpdate = true;
                }
                if (Main.netMode != 1 && Main.expertMode)
                {
                    if (npc.type == 14 && (double)(npc.position.Y / 16f) < Main.worldSurface)
                    {
                        if (Main.rand.Next(900) == 0)
                        {
                            npc.TargetClosest(true);
                            if (Collision.CanHitLine(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                            {
                                NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2) + npc.velocity.X), (int)(npc.position.Y + (float)(npc.height / 2) + npc.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
                            }
                        }
                    }
                    else if (npc.type == 13)
                    {
                        int num315 = 90;
                        num315 += (int)((float)npc.life / (float)npc.lifeMax * 60f * 5f);
                        if (Main.rand.Next(num315) == 0)
                        {
                            npc.TargetClosest(true);
                            if (Collision.CanHitLine(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                            {
                                NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2) + npc.velocity.X), (int)(npc.position.Y + (float)(npc.height / 2) + npc.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
                            }
                        }
                    }
                }
                if (npc.type >= 13 && npc.type <= 15)
                {
                    npc.realLife = -1;
                }
                else if (npc.ai[3] > 0f)
                {
                    npc.realLife = (int)npc.ai[3];
                }
                if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
                {
                    npc.TargetClosest(true);
                }
                if (Main.player[npc.target].dead && npc.timeLeft > 300)
                {
                    npc.timeLeft = 300;
                }
                if (Main.netMode != 1)
                {
                    if (npc.type == 87 && npc.ai[0] == 0f)
                    {
                        npc.ai[3] = (float)npc.whoAmI;
                        npc.realLife = npc.whoAmI;
                        int num316 = npc.whoAmI;
                        for (int num317 = 0; num317 < 14; num317++)
                        {
                            int num318 = 89;
                            if (num317 == 1 || num317 == 8)
                            {
                                num318 = 88;
                            }
                            else if (num317 == 11)
                            {
                                num318 = 90;
                            }
                            else if (num317 == 12)
                            {
                                num318 = 91;
                            }
                            else if (num317 == 13)
                            {
                                num318 = 92;
                            }
                            int num319 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num318, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num319].ai[3] = (float)npc.whoAmI;
                            Main.npc[num319].realLife = npc.whoAmI;
                            Main.npc[num319].ai[1] = (float)num316;
                            Main.npc[num316].ai[0] = (float)num319;
                            NetMessage.SendData(23, -1, -1, null, num319, 0f, 0f, 0f, 0, 0, 0);
                            num316 = num319;
                        }
                    }
                    if (npc.type == 454 && npc.ai[0] == 0f)
                    {
                        npc.ai[3] = (float)npc.whoAmI;
                        npc.realLife = npc.whoAmI;
                        int num320 = npc.whoAmI;
                        for (int num321 = 0; num321 < 30; num321++)
                        {
                            int num322 = 456;
                            if ((num321 - 2) % 4 == 0 && num321 < 26)
                            {
                                num322 = 455;
                            }
                            else if (num321 == 27)
                            {
                                num322 = 457;
                            }
                            else if (num321 == 28)
                            {
                                num322 = 458;
                            }
                            else if (num321 == 29)
                            {
                                num322 = 459;
                            }
                            int num323 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num322, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num323].ai[3] = (float)npc.whoAmI;
                            Main.npc[num323].realLife = npc.whoAmI;
                            Main.npc[num323].ai[1] = (float)num320;
                            Main.npc[num320].ai[0] = (float)num323;
                            NetMessage.SendData(23, -1, -1, null, num323, 0f, 0f, 0f, 0, 0, 0);
                            num320 = num323;
                        }
                    }
                    if (npc.type == 513 && npc.ai[0] == 0f)
                    {
                        npc.ai[3] = (float)npc.whoAmI;
                        npc.realLife = npc.whoAmI;
                        int num324 = npc.whoAmI;
                        int num325 = Main.rand.Next(6, 10);
                        for (int num326 = 0; num326 < num325; num326++)
                        {
                            int num327 = 514;
                            if (num326 == num325 - 1)
                            {
                                num327 = 515;
                            }
                            int num328 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num327, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num328].ai[3] = (float)npc.whoAmI;
                            Main.npc[num328].realLife = npc.whoAmI;
                            Main.npc[num328].ai[1] = (float)num324;
                            Main.npc[num324].ai[0] = (float)num328;
                            NetMessage.SendData(23, -1, -1, null, num328, 0f, 0f, 0f, 0, 0, 0);
                            num324 = num328;
                        }
                    }
                    if (npc.type == 510 && npc.ai[0] == 0f)
                    {
                        npc.ai[3] = (float)npc.whoAmI;
                        npc.realLife = npc.whoAmI;
                        int num329 = npc.whoAmI;
                        int num330 = Main.rand.Next(12, 21);
                        for (int num331 = 0; num331 < num330; num331++)
                        {
                            int num332 = 511;
                            if (num331 == num330 - 1)
                            {
                                num332 = 512;
                            }
                            int num333 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num332, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num333].ai[3] = (float)npc.whoAmI;
                            Main.npc[num333].realLife = npc.whoAmI;
                            Main.npc[num333].ai[1] = (float)num329;
                            Main.npc[num329].ai[0] = (float)num333;
                            NetMessage.SendData(23, -1, -1, null, num333, 0f, 0f, 0f, 0, 0, 0);
                            num329 = num333;
                        }
                    }
                    else if ((npc.type == 7 || npc.type == 8 || npc.type == 10 || npc.type == 11 || npc.type == 13 || npc.type == 14 || npc.type == 39 || npc.type == 40 || npc.type == 95 || npc.type == 96 || npc.type == 98 || npc.type == 99 || npc.type == 117 || npc.type == 118) && npc.ai[0] == 0f)
                    {
                        if (npc.type == 7 || npc.type == 10 || npc.type == 13 || npc.type == 39 || npc.type == 95 || npc.type == 98 || npc.type == 117)
                        {
                            if (npc.type < 13 || npc.type > 15)
                            {
                                npc.ai[3] = (float)npc.whoAmI;
                                npc.realLife = npc.whoAmI;
                            }
                            npc.ai[2] = (float)Main.rand.Next(8, 13);
                            if (npc.type == 10)
                            {
                                npc.ai[2] = (float)Main.rand.Next(4, 7);
                            }
                            if (npc.type == 13)
                            {
                                npc.ai[2] = (float)Main.rand.Next(45, 56);
                                if (Main.expertMode)
                                {
                                    npc.ai[2] = (float)((int)(npc.ai[2] * 1.1f));
                                }
                            }
                            if (npc.type == 39)
                            {
                                npc.ai[2] = (float)Main.rand.Next(12, 19);
                            }
                            if (npc.type == 95)
                            {
                                npc.ai[2] = (float)Main.rand.Next(6, 12);
                            }
                            if (npc.type == 98)
                            {
                                npc.ai[2] = (float)Main.rand.Next(20, 26);
                            }
                            if (npc.type == 117)
                            {
                                npc.ai[2] = (float)Main.rand.Next(3, 6);
                            }
                            npc.ai[0] = (float)NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), npc.type + 1, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        }
                        else if ((npc.type == 8 || npc.type == 11 || npc.type == 14 || npc.type == 40 || npc.type == 96 || npc.type == 99 || npc.type == 118) && npc.ai[2] > 0f)
                        {
                            npc.ai[0] = (float)NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), npc.type, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        }
                        else
                        {
                            npc.ai[0] = (float)NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), npc.type + 1, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        }
                        if (npc.type < 13 || npc.type > 15)
                        {
                            Main.npc[(int)npc.ai[0]].ai[3] = npc.ai[3];
                            Main.npc[(int)npc.ai[0]].realLife = npc.realLife;
                        }
                        Main.npc[(int)npc.ai[0]].ai[1] = (float)npc.whoAmI;
                        Main.npc[(int)npc.ai[0]].ai[2] = npc.ai[2] - 1f;
                        npc.netUpdate = true;
                    }
                    if (npc.type == 412 && npc.ai[0] == 0f)
                    {
                        npc.ai[3] = (float)npc.whoAmI;
                        npc.realLife = npc.whoAmI;
                        int num334 = npc.whoAmI;
                        int num335 = 30;
                        for (int num336 = 0; num336 < num335; num336++)
                        {
                            int num337 = 413;
                            if (num336 == num335 - 1)
                            {
                                num337 = 414;
                            }
                            int num338 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num337, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num338].ai[3] = (float)npc.whoAmI;
                            Main.npc[num338].realLife = npc.whoAmI;
                            Main.npc[num338].ai[1] = (float)num334;
                            Main.npc[num334].ai[0] = (float)num338;
                            NetMessage.SendData(23, -1, -1, null, num338, 0f, 0f, 0f, 0, 0, 0);
                            num334 = num338;
                        }
                    }
                    int num75 = npc.type;
                    if (num75 <= 100)
                    {
                        switch (num75)
                        {
                            case 8:
                            case 9:
                            case 11:
                            case 12:
                                break;
                            case 10:
                                goto IL_15374;
                            default:
                                switch (num75)
                                {
                                    case 40:
                                    case 41:
                                        break;
                                    default:
                                        switch (num75)
                                        {
                                            case 88:
                                            case 89:
                                            case 90:
                                            case 91:
                                            case 92:
                                            case 96:
                                            case 97:
                                            case 99:
                                            case 100:
                                                break;
                                            case 93:
                                            case 94:
                                            case 95:
                                            case 98:
                                                goto IL_15374;
                                            default:
                                                goto IL_15374;
                                        }
                                        break;
                                }
                                break;
                        }
                    }
                    else if (num75 <= 414)
                    {
                        switch (num75)
                        {
                            case 118:
                            case 119:
                                break;
                            default:
                                switch (num75)
                                {
                                    case 413:
                                    case 414:
                                        break;
                                    default:
                                        goto IL_15374;
                                }
                                break;
                        }
                    }
                    else
                    {
                        switch (num75)
                        {
                            case 455:
                            case 456:
                            case 457:
                            case 458:
                            case 459:
                                break;
                            default:
                                switch (num75)
                                {
                                    case 511:
                                    case 512:
                                    case 514:
                                    case 515:
                                        break;
                                    case 513:
                                        goto IL_15374;
                                    default:
                                        goto IL_15374;
                                }
                                break;
                        }
                    }
                    if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != npc.aiStyle)
                    {
                        npc.life = 0;
                        npc.HitEffect(0, 10.0);
                        npc.active = false;
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                    }
                IL_15374:
                    num75 = npc.type;
                    if (num75 <= 99)
                    {
                        switch (num75)
                        {
                            case 7:
                            case 8:
                            case 10:
                            case 11:
                                break;
                            case 9:
                                goto IL_154F7;
                            default:
                                switch (num75)
                                {
                                    case 39:
                                    case 40:
                                        break;
                                    default:
                                        switch (num75)
                                        {
                                            case 87:
                                            case 88:
                                            case 89:
                                            case 90:
                                            case 91:
                                            case 95:
                                            case 96:
                                            case 98:
                                            case 99:
                                                break;
                                            case 92:
                                            case 93:
                                            case 94:
                                            case 97:
                                                goto IL_154F7;
                                            default:
                                                goto IL_154F7;
                                        }
                                        break;
                                }
                                break;
                        }
                    }
                    else if (num75 <= 413)
                    {
                        switch (num75)
                        {
                            case 117:
                            case 118:
                                break;
                            default:
                                switch (num75)
                                {
                                    case 412:
                                    case 413:
                                        break;
                                    default:
                                        goto IL_154F7;
                                }
                                break;
                        }
                    }
                    else
                    {
                        switch (num75)
                        {
                            case 454:
                            case 455:
                            case 456:
                            case 457:
                            case 458:
                                break;
                            default:
                                switch (num75)
                                {
                                    case 510:
                                    case 511:
                                    case 513:
                                    case 514:
                                        break;
                                    case 512:
                                        goto IL_154F7;
                                    default:
                                        goto IL_154F7;
                                }
                                break;
                        }
                    }
                    if (!Main.npc[(int)npc.ai[0]].active || Main.npc[(int)npc.ai[0]].aiStyle != npc.aiStyle)
                    {
                        npc.life = 0;
                        npc.HitEffect(0, 10.0);
                        npc.active = false;
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                    }
                IL_154F7:
                    if (npc.type == 13 || npc.type == 14 || npc.type == 15)
                    {
                        if (!Main.npc[(int)npc.ai[1]].active && !Main.npc[(int)npc.ai[0]].active)
                        {
                            npc.life = 0;
                            npc.HitEffect(0, 10.0);
                            npc.checkDead();
                            npc.active = false;
                            NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                        }
                        if (npc.type == 13 && !Main.npc[(int)npc.ai[0]].active)
                        {
                            npc.life = 0;
                            npc.HitEffect(0, 10.0);
                            npc.checkDead();
                            npc.active = false;
                            NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                        }
                        if (npc.type == 15 && !Main.npc[(int)npc.ai[1]].active)
                        {
                            npc.life = 0;
                            npc.HitEffect(0, 10.0);
                            npc.checkDead();
                            npc.active = false;
                            NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                        }
                        if (npc.type == 14 && (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != npc.aiStyle))
                        {
                            npc.type = 13;
                            int whoAmI = npc.whoAmI;
                            float num339 = (float)npc.life / (float)npc.lifeMax;
                            float num340 = npc.ai[0];
                            npc.SetDefaultsKeepPlayerInteraction(npc.type);
                            npc.life = (int)((float)npc.lifeMax * num339);
                            npc.ai[0] = num340;
                            npc.TargetClosest(true);
                            npc.netUpdate = true;
                            npc.whoAmI = whoAmI;
                        }
                        if (npc.type == 14 && (!Main.npc[(int)npc.ai[0]].active || Main.npc[(int)npc.ai[0]].aiStyle != npc.aiStyle))
                        {
                            int whoAmI2 = npc.whoAmI;
                            float num341 = (float)npc.life / (float)npc.lifeMax;
                            float num342 = npc.ai[1];
                            npc.SetDefaultsKeepPlayerInteraction(npc.type);
                            npc.life = (int)((float)npc.lifeMax * num341);
                            npc.ai[1] = num342;
                            npc.TargetClosest(true);
                            npc.netUpdate = true;
                            npc.whoAmI = whoAmI2;
                        }
                    }
                    if (!npc.active && Main.netMode == 2)
                    {
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                    }
                }
                int num343 = (int)(npc.position.X / 16f) - 1;
                int num344 = (int)((npc.position.X + (float)npc.width) / 16f) + 2;
                int num345 = (int)(npc.position.Y / 16f) - 1;
                int num346 = (int)((npc.position.Y + (float)npc.height) / 16f) + 2;
                if (num343 < 0)
                {
                    num343 = 0;
                }
                if (num344 > Main.maxTilesX)
                {
                    num344 = Main.maxTilesX;
                }
                if (num345 < 0)
                {
                    num345 = 0;
                }
                if (num346 > Main.maxTilesY)
                {
                    num346 = Main.maxTilesY;
                }
                bool flag33 = false;
                if (npc.type >= 87 && npc.type <= 92)
                {
                    flag33 = true;
                }
                if (npc.type >= 454 && npc.type <= 459)
                {
                    flag33 = true;
                }
                if (npc.type == 402 && npc.ai[1] == -1f)
                {
                    flag33 = true;
                }
                if (npc.type >= 412 && npc.type <= 414)
                {
                    flag33 = true;
                }
                if (!flag33)
                {
                    for (int num347 = num343; num347 < num344; num347++)
                    {
                        for (int num348 = num345; num348 < num346; num348++)
                        {
                            if (Main.tile[num347, num348] != null && ((Main.tile[num347, num348].nactive() && (Main.tileSolid[(int)Main.tile[num347, num348].type] || (Main.tileSolidTop[(int)Main.tile[num347, num348].type] && Main.tile[num347, num348].frameY == 0))) || Main.tile[num347, num348].liquid > 64))
                            {
                                Vector2 vector37;
                                vector37.X = (float)(num347 * 16);
                                vector37.Y = (float)(num348 * 16);
                                if (npc.position.X + (float)npc.width > vector37.X && npc.position.X < vector37.X + 16f && npc.position.Y + (float)npc.height > vector37.Y && npc.position.Y < vector37.Y + 16f)
                                {
                                    flag33 = true;
                                    if (Main.rand.Next(100) == 0 && npc.type != 117 && Main.tile[num347, num348].nactive())
                                    {
                                        WorldGen.KillTile(num347, num348, true, true, false);
                                    }
                                }
                            }
                        }
                    }
                }
                if (!flag33 && (npc.type == 7 || npc.type == 10 || npc.type == 13 || npc.type == 39 || npc.type == 95 || npc.type == 98 || npc.type == 117 || npc.type == 375 || npc.type == 454 || npc.type == 510 || npc.type == 513))
                {
                    Rectangle rectangle = new Rectangle((int)npc.position.X, (int)npc.position.Y, npc.width, npc.height);
                    int num349 = 1000;
                    bool flag34 = true;
                    for (int num350 = 0; num350 < 255; num350++)
                    {
                        if (Main.player[num350].active)
                        {
                            Rectangle rectangle2 = new Rectangle((int)Main.player[num350].position.X - num349, (int)Main.player[num350].position.Y - num349, num349 * 2, num349 * 2);
                            if (rectangle.Intersects(rectangle2))
                            {
                                flag34 = false;
                                break;
                            }
                        }
                    }
                    if (flag34)
                    {
                        flag33 = true;
                    }
                }
                if ((npc.type >= 87 && npc.type <= 92) || (npc.type >= 454 && npc.type <= 459))
                {
                    if (npc.velocity.X < 0f)
                    {
                        npc.spriteDirection = 1;
                    }
                    else if (npc.velocity.X > 0f)
                    {
                        npc.spriteDirection = -1;
                    }
                }
                if (npc.type == 414)
                {
                    if (npc.justHit)
                    {
                        npc.localAI[3] = 3f;
                    }
                    if (npc.localAI[2] > 0f)
                    {
                        npc.localAI[2] -= 16f;
                        if (npc.localAI[2] == 0f)
                        {
                            npc.localAI[2] = -128f;
                        }
                    }
                    else if (npc.localAI[2] < 0f)
                    {
                        npc.localAI[2] += 16f;
                    }
                    else if (npc.localAI[3] > 0f)
                    {
                        npc.localAI[2] = 128f;
                        npc.localAI[3] -= 1f;
                    }
                }
                float num351 = 8f;
                float num352 = 0.07f;
                if (npc.type == 95)
                {
                    num351 = 5.5f;
                    num352 = 0.045f;
                }
                if (npc.type == 10)
                {
                    num351 = 6f;
                    num352 = 0.05f;
                }
                if (npc.type == 513)
                {
                    num351 = 7f;
                    num352 = 0.03f;
                }
                if (npc.type == 13)
                {
                    num351 = 10f;
                    num352 = 0.07f;
                    if (Main.expertMode)
                    {
                        num351 = 12f;
                        num352 = 0.15f;
                    }
                }
                if (npc.type == 510)
                {
                    num351 = 10f;
                    num352 = 0.25f;
                }
                if (npc.type == 87)
                {
                    num351 = 11f;
                    num352 = 0.25f;
                }
                if (npc.type == 375)
                {
                    num351 = 6f;
                    num352 = 0.15f;
                }
                if (npc.type == 454)
                {
                    num351 = 20f;
                    num352 = 0.55f;
                }
                if (npc.type == 402)
                {
                    num351 = 6f;
                    num352 = 0.2f;
                }
                if (npc.type == 117 && Main.wof >= 0)
                {
                    float num353 = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
                    if ((double)num353 < 0.5)
                    {
                        num351 += 1f;
                        num352 += 0.1f;
                    }
                    if ((double)num353 < 0.25)
                    {
                        num351 += 1f;
                        num352 += 0.1f;
                    }
                    if ((double)num353 < 0.1)
                    {
                        num351 += 2f;
                        num352 += 0.1f;
                    }
                }
                Vector2 vector38 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                float num354 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
                float num355 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
                if (npc.type == 412)
                {
                    num351 = 10f;
                    num352 = 0.3f;
                    int num356 = -1;
                    int num357 = (int)(Main.player[npc.target].Center.X / 16f);
                    int num358 = (int)(Main.player[npc.target].Center.Y / 16f);
                    for (int num359 = num357 - 2; num359 <= num357 + 2; num359++)
                    {
                        for (int num360 = num358; num360 <= num358 + 15; num360++)
                        {
                            if (WorldGen.SolidTile2(num359, num360))
                            {
                                num356 = num360;
                                break;
                            }
                        }
                        if (num356 > 0)
                        {
                            break;
                        }
                    }
                    if (num356 > 0)
                    {
                        num356 *= 16;
                        float num361 = (float)(num356 - 800);
                        if (Main.player[npc.target].position.Y > num361)
                        {
                            num355 = num361;
                            if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) < 500f)
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    num354 = Main.player[npc.target].Center.X + 600f;
                                }
                                else
                                {
                                    num354 = Main.player[npc.target].Center.X - 600f;
                                }
                            }
                        }
                    }
                    else
                    {
                        num351 = 14f;
                        num352 = 0.5f;
                    }
                    float num362 = num351 * 1.3f;
                    float num363 = num351 * 0.7f;
                    float num364 = npc.velocity.Length();
                    if (num364 > 0f)
                    {
                        if (num364 > num362)
                        {
                            npc.velocity.Normalize();
                            npc.velocity *= num362;
                        }
                        else if (num364 < num363)
                        {
                            npc.velocity.Normalize();
                            npc.velocity *= num363;
                        }
                    }
                    if (num356 > 0)
                    {
                        for (int num365 = 0; num365 < 200; num365++)
                        {
                            if (Main.npc[num365].active && Main.npc[num365].type == npc.type && num365 != npc.whoAmI)
                            {
                                Vector2 vector39 = Main.npc[num365].Center - npc.Center;
                                if (vector39.Length() < 400f)
                                {
                                    vector39.Normalize();
                                    vector39 *= 1000f;
                                    num354 -= vector39.X;
                                    num355 -= vector39.Y;
                                }
                            }
                        }
                    }
                    else
                    {
                        for (int num366 = 0; num366 < 200; num366++)
                        {
                            if (Main.npc[num366].active && Main.npc[num366].type == npc.type && num366 != npc.whoAmI)
                            {
                                Vector2 vector40 = Main.npc[num366].Center - npc.Center;
                                if (vector40.Length() < 60f)
                                {
                                    vector40.Normalize();
                                    vector40 *= 200f;
                                    num354 -= vector40.X;
                                    num355 -= vector40.Y;
                                }
                            }
                        }
                    }
                }
                num354 = (float)((int)(num354 / 16f) * 16);
                num355 = (float)((int)(num355 / 16f) * 16);
                vector38.X = (float)((int)(vector38.X / 16f) * 16);
                vector38.Y = (float)((int)(vector38.Y / 16f) * 16);
                num354 -= vector38.X;
                num355 -= vector38.Y;
                if (npc.type == 375)
                {
                    num354 *= -1f;
                    num355 *= -1f;
                }
                float num367 = (float)Math.Sqrt((double)(num354 * num354 + num355 * num355));
                if (npc.ai[1] > 0f && npc.ai[1] < (float)Main.npc.Length)
                {
                    try
                    {
                        vector38 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        num354 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - vector38.X;
                        num355 = Main.npc[(int)npc.ai[1]].position.Y + (float)(Main.npc[(int)npc.ai[1]].height / 2) - vector38.Y;
                    }
                    catch
                    {
                    }
                    npc.rotation = (float)Math.Atan2((double)num355, (double)num354) + 1.57f;
                    num367 = (float)Math.Sqrt((double)(num354 * num354 + num355 * num355));
                    int num368 = npc.width;
                    if (npc.type >= 87 && npc.type <= 92)
                    {
                        num368 = 42;
                    }
                    if (npc.type >= 454 && npc.type <= 459)
                    {
                        num368 = 36;
                    }
                    if (npc.type >= 13 && npc.type <= 15)
                    {
                        num368 = (int)((float)num368 * npc.scale);
                    }
                    if (npc.type >= 412 && npc.type <= 414)
                    {
                        num368 += 6;
                    }
                    num367 = (num367 - (float)num368) / num367;
                    num354 *= num367;
                    num355 *= num367;
                    npc.velocity = Vector2.Zero;
                    npc.position.X = npc.position.X + num354;
                    npc.position.Y = npc.position.Y + num355;
                    if (npc.type >= 87 && npc.type <= 92)
                    {
                        if (num354 < 0f)
                        {
                            npc.spriteDirection = 1;
                        }
                        else if (num354 > 0f)
                        {
                            npc.spriteDirection = -1;
                        }
                    }
                    if (npc.type >= 454 && npc.type <= 459)
                    {
                        if (num354 < 0f)
                        {
                            npc.spriteDirection = 1;
                            return;
                        }
                        if (num354 > 0f)
                        {
                            npc.spriteDirection = -1;
                            return;
                        }
                    }
                }
                else
                {
                    if (!flag33)
                    {
                        npc.TargetClosest(true);
                        npc.velocity.Y = npc.velocity.Y + 0.11f;
                        if (npc.velocity.Y > num351)
                        {
                            npc.velocity.Y = num351;
                        }
                        if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num351 * 0.4)
                        {
                            if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - num352 * 1.1f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X + num352 * 1.1f;
                            }
                        }
                        else if (npc.velocity.Y == num351)
                        {
                            if (npc.velocity.X < num354)
                            {
                                npc.velocity.X = npc.velocity.X + num352;
                            }
                            else if (npc.velocity.X > num354)
                            {
                                npc.velocity.X = npc.velocity.X - num352;
                            }
                        }
                        else if (npc.velocity.Y > 4f)
                        {
                            if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X + num352 * 0.9f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X - num352 * 0.9f;
                            }
                        }
                    }
                    else
                    {
                        if (npc.type != 87 && npc.type != 117 && npc.type != 454 && npc.type != 412 && npc.soundDelay == 0)
                        {
                            float num369 = num367 / 40f;
                            if (num369 < 10f)
                            {
                                num369 = 10f;
                            }
                            if (num369 > 20f)
                            {
                                num369 = 20f;
                            }
                            npc.soundDelay = (int)num369;
                        }
                        num367 = (float)Math.Sqrt((double)(num354 * num354 + num355 * num355));
                        float num370 = Math.Abs(num354);
                        float num371 = Math.Abs(num355);
                        float num372 = num351 / num367;
                        num354 *= num372;
                        num355 *= num372;
                        bool flag35 = false;
                        if ((npc.type == 7 || npc.type == 13) && !Main.player[npc.target].ZoneCorrupt && !Main.player[npc.target].ZoneCrimson)
                        {
                            flag35 = true;
                        }
                        if (npc.type == 513 && (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0)
                        {
                            flag35 = true;
                        }
                        if (npc.type == 510 && (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0)
                        {
                            flag35 = true;
                        }
                        if (flag35)
                        {
                            bool flag36 = true;
                            for (int num373 = 0; num373 < 255; num373++)
                            {
                                if (Main.player[num373].active && !Main.player[num373].dead && Main.player[num373].ZoneCorrupt)
                                {
                                    flag36 = false;
                                }
                            }
                            if (flag36)
                            {
                                if (Main.netMode != 1 && (double)(npc.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
                                {
                                    npc.active = false;
                                    int num374 = (int)npc.ai[0];
                                    while (num374 > 0 && num374 < 200 && Main.npc[num374].active && Main.npc[num374].aiStyle == npc.aiStyle)
                                    {
                                        int num375 = (int)Main.npc[num374].ai[0];
                                        Main.npc[num374].active = false;
                                        npc.life = 0;
                                        if (Main.netMode == 2)
                                        {
                                            NetMessage.SendData(23, -1, -1, null, num374, 0f, 0f, 0f, 0, 0, 0);
                                        }
                                        num374 = num375;
                                    }
                                    if (Main.netMode == 2)
                                    {
                                        NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                    }
                                }
                                num354 = 0f;
                                num355 = num351;
                            }
                        }
                        bool flag37 = false;
                        if (npc.type == 87)
                        {
                            if (((npc.velocity.X > 0f && num354 < 0f) || (npc.velocity.X < 0f && num354 > 0f) || (npc.velocity.Y > 0f && num355 < 0f) || (npc.velocity.Y < 0f && num355 > 0f)) && Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) > num352 / 2f && num367 < 300f)
                            {
                                flag37 = true;
                                if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < num351)
                                {
                                    npc.velocity *= 1.1f;
                                }
                            }
                            if (npc.position.Y > Main.player[npc.target].position.Y || (double)(Main.player[npc.target].position.Y / 16f) > Main.worldSurface || Main.player[npc.target].dead)
                            {
                                flag37 = true;
                                if (Math.Abs(npc.velocity.X) < num351 / 2f)
                                {
                                    if (npc.velocity.X == 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - (float)npc.direction;
                                    }
                                    npc.velocity.X = npc.velocity.X * 1.1f;
                                }
                                else if (npc.velocity.Y > -num351)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num352;
                                }
                            }
                        }
                        if (npc.type == 454)
                        {
                            if (((npc.velocity.X > 0f && num354 < 0f) || (npc.velocity.X < 0f && num354 > 0f) || (npc.velocity.Y > 0f && num355 < 0f) || (npc.velocity.Y < 0f && num355 > 0f)) && Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) > num352 / 2f && num367 < 300f)
                            {
                                flag37 = true;
                                if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < num351)
                                {
                                    npc.velocity *= 1.1f;
                                }
                            }
                            if (npc.position.Y > Main.player[npc.target].position.Y || Main.player[npc.target].dead)
                            {
                                flag37 = true;
                                if (Math.Abs(npc.velocity.X) < num351 / 2f)
                                {
                                    if (npc.velocity.X == 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - (float)npc.direction;
                                    }
                                    npc.velocity.X = npc.velocity.X * 1.1f;
                                }
                                else if (npc.velocity.Y > -num351)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num352;
                                }
                            }
                        }
                        if (!flag37)
                        {
                            if ((npc.velocity.X > 0f && num354 > 0f) || (npc.velocity.X < 0f && num354 < 0f) || (npc.velocity.Y > 0f && num355 > 0f) || (npc.velocity.Y < 0f && num355 < 0f))
                            {
                                if (npc.velocity.X < num354)
                                {
                                    npc.velocity.X = npc.velocity.X + num352;
                                }
                                else if (npc.velocity.X > num354)
                                {
                                    npc.velocity.X = npc.velocity.X - num352;
                                }
                                if (npc.velocity.Y < num355)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num352;
                                }
                                else if (npc.velocity.Y > num355)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num352;
                                }
                                if ((double)Math.Abs(num355) < (double)num351 * 0.2 && ((npc.velocity.X > 0f && num354 < 0f) || (npc.velocity.X < 0f && num354 > 0f)))
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num352 * 2f;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num352 * 2f;
                                    }
                                }
                                if ((double)Math.Abs(num354) < (double)num351 * 0.2 && ((npc.velocity.Y > 0f && num355 < 0f) || (npc.velocity.Y < 0f && num355 > 0f)))
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num352 * 2f;
                                    }
                                    else
                                    {
                                        npc.velocity.X = npc.velocity.X - num352 * 2f;
                                    }
                                }
                            }
                            else if (num370 > num371)
                            {
                                if (npc.velocity.X < num354)
                                {
                                    npc.velocity.X = npc.velocity.X + num352 * 1.1f;
                                }
                                else if (npc.velocity.X > num354)
                                {
                                    npc.velocity.X = npc.velocity.X - num352 * 1.1f;
                                }
                                if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num351 * 0.5)
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num352;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num352;
                                    }
                                }
                            }
                            else
                            {
                                if (npc.velocity.Y < num355)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num352 * 1.1f;
                                }
                                else if (npc.velocity.Y > num355)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num352 * 1.1f;
                                }
                                if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num351 * 0.5)
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num352;
                                    }
                                    else
                                    {
                                        npc.velocity.X = npc.velocity.X - num352;
                                    }
                                }
                            }
                        }
                    }
                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) + 1.57f;
                    if (npc.type == 7 || npc.type == 10 || npc.type == 13 || npc.type == 39 || npc.type == 95 || npc.type == 98 || npc.type == 117 || npc.type == 510 || npc.type == 513)
                    {
                        if (flag33)
                        {
                            if (npc.localAI[0] != 1f)
                            {
                                npc.netUpdate = true;
                            }
                            npc.localAI[0] = 1f;
                        }
                        else
                        {
                            if (npc.localAI[0] != 0f)
                            {
                                npc.netUpdate = true;
                            }
                            npc.localAI[0] = 0f;
                        }
                        if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
                        {
                            npc.netUpdate = true;
                        }
                    }
                    if (npc.type == 454)
                    {
                        float num376 = Vector2.Distance(Main.player[npc.target].Center, npc.Center);
                        int num377 = 0;
                        if (Vector2.Normalize(Main.player[npc.target].Center - npc.Center).ToRotation().AngleTowards(npc.velocity.ToRotation(), 1.57079637f) == npc.velocity.ToRotation() && num376 < 350f)
                        {
                            num377 = 4;
                        }
                        if ((double)num377 > npc.frameCounter)
                        {
                            npc.frameCounter += 1.0;
                        }
                        if ((double)num377 < npc.frameCounter)
                        {
                            npc.frameCounter -= 1.0;
                        }
                        if (npc.frameCounter < 0.0)
                        {
                            npc.frameCounter = 0.0;
                        }
                        if (npc.frameCounter > 4.0)
                        {
                            npc.frameCounter = 4.0;
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 7)
            {
                bool flag38 = Main.raining;
                if (!Main.dayTime)
                {
                    flag38 = true;
                }
                if (Main.eclipse)
                {
                    flag38 = true;
                }
                if (Main.slimeRain)
                {
                    flag38 = true;
                }
                float num378 = 1f;
                if (Main.expertMode)
                {
                    npc.defense = (npc.dryadWard ? (npc.defDefense + 10) : npc.defDefense);
                }
                else
                {
                    npc.defense = (npc.dryadWard ? (npc.defDefense + 6) : npc.defDefense);
                }
                if (npc.townNPC || npc.type == 453)
                {
                    if (NpcMgr.downedBoss1)
                    {
                        num378 += 0.1f;
                        npc.defense += 3;
                    }
                    if (NpcMgr.downedBoss2)
                    {
                        num378 += 0.1f;
                        npc.defense += 3;
                    }
                    if (NpcMgr.downedBoss3)
                    {
                        num378 += 0.1f;
                        npc.defense += 3;
                    }
                    if (NpcMgr.downedQueenBee)
                    {
                        num378 += 0.1f;
                        npc.defense += 3;
                    }
                    if (Main.hardMode)
                    {
                        num378 += 0.4f;
                        npc.defense += 12;
                    }
                    if (NpcMgr.downedMechBoss1)
                    {
                        num378 += 0.15f;
                        npc.defense += 6;
                    }
                    if (NpcMgr.downedMechBoss2)
                    {
                        num378 += 0.15f;
                        npc.defense += 6;
                    }
                    if (NpcMgr.downedMechBoss3)
                    {
                        num378 += 0.15f;
                        npc.defense += 6;
                    }
                    if (NpcMgr.downedPlantBoss)
                    {
                        num378 += 0.15f;
                        npc.defense += 8;
                    }
                    if (NpcMgr.downedGolemBoss)
                    {
                        num378 += 0.15f;
                        npc.defense += 8;
                    }
                    if (NpcMgr.downedAncientCultist)
                    {
                        num378 += 0.15f;
                        npc.defense += 8;
                    }
                }
                if (npc.type == 142 && Main.netMode != 1 && !Main.xMas)
                {
                    npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                    if (Main.netMode == 2)
                    {
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, 9999f, 0f, 0f, 0, 0, 0);
                    }
                }
                if ((npc.type == 148 || npc.type == 149) && npc.localAI[0] == 0f)
                {
                    npc.localAI[0] = (float)Main.rand.Next(1, 5);
                }
                if (npc.type == 124)
                {
                    bool flag39 = false;
                    for (int num379 = 0; num379 < 1000; num379++)
                    {
                        if (Main.projectile[num379].active && Main.projectile[num379].type == 582 && Main.projectile[num379].ai[1] == (float)npc.whoAmI)
                        {
                            flag39 = true;
                            break;
                        }
                    }
                    npc.localAI[0] = (float)flag39.ToInt();
                }
                if ((npc.type == 362 || npc.type == 364) && Main.netMode != 1 && (npc.velocity.Y > 4f || npc.velocity.Y < -4f || npc.wet))
                {
                    int direction = npc.direction;
                    npc.Transform(npc.type + 1);
                    npc.TargetClosest(true);
                    npc.direction = direction;
                    npc.netUpdate = true;
                    return;
                }
                int num75 = npc.type;
                if (num75 <= 124)
                {
                    switch (num75)
                    {
                        case 107:
                            NpcMgr.savedGoblin = true;
                            break;
                        case 108:
                            NpcMgr.savedWizard = true;
                            break;
                        default:
                            if (num75 == 124)
                            {
                                NpcMgr.savedMech = true;
                            }
                            break;
                    }
                }
                else if (num75 != 353)
                {
                    if (num75 != 369)
                    {
                        if (num75 == 441)
                        {
                            NpcMgr.savedTaxCollector = true;
                        }
                    }
                    else
                    {
                        NpcMgr.savedAngler = true;
                    }
                }
                else
                {
                    NpcMgr.savedStylist = true;
                }
                if (npc.type >= 0 && npc.type < 540 && NPCID.Sets.TownCritter[npc.type] && npc.target == 255)
                {
                    npc.TargetClosest(true);
                    if (npc.position.X < Main.player[npc.target].position.X)
                    {
                        npc.direction = 1;
                        npc.spriteDirection = npc.direction;
                    }
                    if (npc.position.X > Main.player[npc.target].position.X)
                    {
                        npc.direction = -1;
                        npc.spriteDirection = npc.direction;
                    }
                    if (npc.homeTileX == -1)
                    {
                        npc.homeTileX = (int)((npc.position.X + (float)(npc.width / 2)) / 16f);
                    }
                }
                else if (npc.homeTileX == -1 && npc.homeTileY == -1 && npc.velocity.Y == 0f)
                {
                    npc.homeTileX = (int)npc.Center.X / 16;
                    npc.homeTileY = (int)(npc.position.Y + (float)npc.height + 4f) / 16;
                }
                bool flag40 = false;
                int num380 = npc.homeTileY;
                if (npc.type == 441)
                {
                    NPC.taxCollector = true;
                }
                npc.directionY = -1;
                if (npc.direction == 0)
                {
                    npc.direction = 1;
                }
                for (int num381 = 0; num381 < 255; num381++)
                {
                    if (Main.player[num381].active && Main.player[num381].talkNPC == npc.whoAmI)
                    {
                        flag40 = true;
                        if (npc.ai[0] != 0f)
                        {
                            npc.netUpdate = true;
                        }
                        npc.ai[0] = 0f;
                        npc.ai[1] = 300f;
                        npc.localAI[3] = 100f;
                        if (Main.player[num381].position.X + (float)(Main.player[num381].width / 2) < npc.position.X + (float)(npc.width / 2))
                        {
                            npc.direction = -1;
                        }
                        else
                        {
                            npc.direction = 1;
                        }
                    }
                }
                if (npc.ai[3] == 1f)
                {
                    npc.life = -1;
                    npc.HitEffect(0, 10.0);
                    npc.active = false;
                    npc.netUpdate = true;
                    return;
                }
                if (npc.type == 37 && Main.netMode != 1)
                {
                    npc.homeless = false;
                    npc.homeTileX = Main.dungeonX;
                    npc.homeTileY = Main.dungeonY;
                    if (NpcMgr.downedBoss3)
                    {
                        npc.ai[3] = 1f;
                        npc.netUpdate = true;
                    }
                }
                if (Main.netMode != 1 && npc.homeTileY > 0)
                {
                    while (!WorldGen.SolidTile(npc.homeTileX, num380) && num380 < Main.maxTilesY - 20)
                    {
                        num380++;
                    }
                }
                if (npc.type == 368)
                {
                    npc.homeless = true;
                    if (!Main.dayTime)
                    {
                        npc.homeTileX = (int)(npc.Center.X / 16f);
                        npc.homeTileY = (int)(npc.position.Y + (float)npc.height + 2f) / 16;
                        if (!flag40)
                        {
                            npc.ai[0] = 1f;
                            npc.ai[1] = 200f;
                        }
                        flag38 = false;
                    }
                }
                if (npc.type == 369 && npc.homeless && npc.wet)
                {
                    if (npc.Center.X / 16f < 380f || npc.Center.X / 16f > (float)(Main.maxTilesX - 380))
                    {
                        npc.homeTileX = Main.spawnTileX;
                        npc.homeTileY = Main.spawnTileY;
                        npc.ai[0] = 1f;
                        npc.ai[1] = 200f;
                    }
                    if (npc.position.X / 16f < 200f)
                    {
                        npc.direction = 1;
                    }
                    else if (npc.position.X / 16f > (float)(Main.maxTilesX - 200))
                    {
                        npc.direction = -1;
                    }
                }
                int num382 = (int)(npc.position.X + (float)(npc.width / 2)) / 16;
                int num383 = (int)(npc.position.Y + (float)npc.height + 1f) / 16;
                if (!WorldGen.InWorld(num382, num383, 0) || Main.tile[num382, num383] == null)
                {
                    return;
                }
                if (!npc.homeless && Main.netMode != 1 && npc.townNPC && (flag38 || Main.tileDungeon[(int)Main.tile[num382, num383].type]) && (num382 != npc.homeTileX || num383 != num380))
                {
                    bool flag41 = true;
                    for (int num384 = 0; num384 < 2; num384++)
                    {
                        Rectangle rectangle3 = new Rectangle((int)(npc.position.X + (float)(npc.width / 2) - (float)(NpcMgr.sWidth / 2) - (float)NpcMgr.safeRangeX), (int)(npc.position.Y + (float)(npc.height / 2) - (float)(NpcMgr.sHeight / 2) - (float)NpcMgr.safeRangeY), NpcMgr.sWidth + NpcMgr.safeRangeX * 2, NpcMgr.sHeight + NpcMgr.safeRangeY * 2);
                        if (num384 == 1)
                        {
                            rectangle3 = new Rectangle(npc.homeTileX * 16 + 8 - NpcMgr.sWidth / 2 - NpcMgr.safeRangeX, num380 * 16 + 8 - NpcMgr.sHeight / 2 - NpcMgr.safeRangeY, NpcMgr.sWidth + NpcMgr.safeRangeX * 2, NpcMgr.sHeight + NpcMgr.safeRangeY * 2);
                        }
                        for (int num385 = 0; num385 < 255; num385++)
                        {
                            if (Main.player[num385].active)
                            {
                                Rectangle rectangle4 = new Rectangle((int)Main.player[num385].position.X, (int)Main.player[num385].position.Y, Main.player[num385].width, Main.player[num385].height);
                                if (rectangle4.Intersects(rectangle3))
                                {
                                    flag41 = false;
                                    break;
                                }
                            }
                            if (!flag41)
                            {
                                break;
                            }
                        }
                    }
                    if (flag41)
                    {
                        if (npc.type == 37 || !Collision.SolidTiles(npc.homeTileX - 1, npc.homeTileX + 1, num380 - 3, num380 - 1))
                        {
                            npc.velocity.X = 0f;
                            npc.velocity.Y = 0f;
                            npc.position.X = (float)(npc.homeTileX * 16 + 8 - npc.width / 2);
                            npc.position.Y = (float)(num380 * 16 - npc.height) - 0.1f;
                            npc.netUpdate = true;
                        }
                        else
                        {
                            npc.homeless = true;
                            WorldGen.QuickFindHome(npc.whoAmI);
                        }
                    }
                }
                bool flag42 = npc.type == 300 || npc.type == 447;
                float num386 = 200f;
                if (NPCID.Sets.DangerDetectRange[npc.type] != -1)
                {
                    num386 = (float)NPCID.Sets.DangerDetectRange[npc.type];
                }
                bool flag43 = false;
                bool flag44 = false;
                float num387 = -1f;
                float num388 = -1f;
                int num389 = 0;
                int num390 = -1;
                int num391 = -1;
                if (Main.netMode != 1 && !flag40)
                {
                    for (int num392 = 0; num392 < 200; num392++)
                    {
                        if (Main.npc[num392].active && !Main.npc[num392].friendly && Main.npc[num392].damage > 0 && Main.npc[num392].Distance(npc.Center) < num386 && (npc.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num392].netID)))
                        {
                            flag43 = true;
                            float num393 = Main.npc[num392].Center.X - npc.Center.X;
                            if (num393 < 0f && (num387 == -1f || num393 > num387))
                            {
                                num387 = num393;
                                num390 = num392;
                            }
                            if (num393 > 0f && (num388 == -1f || num393 < num388))
                            {
                                num388 = num393;
                                num391 = num392;
                            }
                        }
                    }
                    if (flag43)
                    {
                        if (num387 == -1f)
                        {
                            num389 = 1;
                        }
                        else if (num388 == -1f)
                        {
                            num389 = -1;
                        }
                        else
                        {
                            num389 = (num388 < -num387).ToDirectionInt();
                        }
                        float num394 = 0f;
                        if (num387 != -1f)
                        {
                            num394 = -num387;
                        }
                        if (num394 == 0f || (num388 < num394 && num388 > 0f))
                        {
                            num394 = num388;
                        }
                        if (npc.ai[0] == 8f)
                        {
                            if (npc.direction == -num389)
                            {
                                npc.ai[0] = 1f;
                                npc.ai[1] = (float)(300 + Main.rand.Next(300));
                                npc.ai[2] = 0f;
                                npc.localAI[3] = 0f;
                                npc.netUpdate = true;
                            }
                        }
                        else if (npc.ai[0] != 10f && npc.ai[0] != 12f && npc.ai[0] != 13f && npc.ai[0] != 14f && npc.ai[0] != 15f)
                        {
                            if (NPCID.Sets.PrettySafe[npc.type] != -1 && (float)NPCID.Sets.PrettySafe[npc.type] < num394)
                            {
                                flag43 = false;
                                flag44 = true;
                            }
                            else if (npc.ai[0] != 1f)
                            {
                                bool flag45 = npc.ai[0] == 3f || npc.ai[0] == 4f || npc.ai[0] == 16f || npc.ai[0] == 17f;
                                if (flag45)
                                {
                                    NPC nPC = Main.npc[(int)npc.ai[2]];
                                    if (nPC.active)
                                    {
                                        nPC.ai[0] = 1f;
                                        nPC.ai[1] = (float)(120 + Main.rand.Next(120));
                                        nPC.ai[2] = 0f;
                                        nPC.localAI[3] = 0f;
                                        nPC.direction = -num389;
                                        nPC.netUpdate = true;
                                    }
                                }
                                npc.ai[0] = 1f;
                                npc.ai[1] = (float)(120 + Main.rand.Next(120));
                                npc.ai[2] = 0f;
                                npc.localAI[3] = 0f;
                                npc.direction = -num389;
                                npc.netUpdate = true;
                            }
                            else if (npc.ai[0] == 1f && npc.direction != -num389)
                            {
                                npc.direction = -num389;
                                npc.netUpdate = true;
                            }
                        }
                    }
                }
                if (npc.ai[0] == 0f)
                {
                    if (npc.localAI[3] > 0f)
                    {
                        npc.localAI[3] -= 1f;
                    }
                    if (flag38 && !flag40 && !NPCID.Sets.TownCritter[npc.type])
                    {
                        if (Main.netMode != 1)
                        {
                            if (num382 == npc.homeTileX && num383 == num380)
                            {
                                if (npc.velocity.X != 0f)
                                {
                                    npc.netUpdate = true;
                                }
                                if (npc.velocity.X > 0.1f)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.1f;
                                }
                                else if (npc.velocity.X < -0.1f)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                }
                                else
                                {
                                    npc.velocity.X = 0f;
                                }
                            }
                            else
                            {
                                if (num382 > npc.homeTileX)
                                {
                                    npc.direction = -1;
                                }
                                else
                                {
                                    npc.direction = 1;
                                }
                                npc.ai[0] = 1f;
                                npc.ai[1] = (float)(200 + Main.rand.Next(200));
                                npc.ai[2] = 0f;
                                npc.localAI[3] = 0f;
                                npc.netUpdate = true;
                            }
                        }
                    }
                    else
                    {
                        if (flag42)
                        {
                            npc.velocity.X = npc.velocity.X * 0.5f;
                        }
                        if (npc.velocity.X > 0.1f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X < -0.1f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else
                        {
                            npc.velocity.X = 0f;
                        }
                        if (Main.netMode != 1)
                        {
                            if (npc.ai[1] > 0f)
                            {
                                npc.ai[1] -= 1f;
                            }
                            if (npc.ai[1] <= 0f)
                            {
                                npc.ai[0] = 1f;
                                npc.ai[1] = (float)(200 + Main.rand.Next(300));
                                npc.ai[2] = 0f;
                                if (NPCID.Sets.TownCritter[npc.type])
                                {
                                    npc.ai[1] += (float)Main.rand.Next(200, 400);
                                }
                                npc.localAI[3] = 0f;
                                npc.netUpdate = true;
                            }
                        }
                    }
                    if (Main.netMode != 1 && (!flag38 || (num382 == npc.homeTileX && num383 == num380)))
                    {
                        if (num382 < npc.homeTileX - 25 || num382 > npc.homeTileX + 25)
                        {
                            if (npc.localAI[3] == 0f)
                            {
                                if (num382 < npc.homeTileX - 50 && npc.direction == -1)
                                {
                                    npc.direction = 1;
                                    npc.netUpdate = true;
                                }
                                else if (num382 > npc.homeTileX + 50 && npc.direction == 1)
                                {
                                    npc.direction = -1;
                                    npc.netUpdate = true;
                                }
                            }
                        }
                        else if (Main.rand.Next(80) == 0 && npc.localAI[3] == 0f)
                        {
                            npc.localAI[3] = 200f;
                            npc.direction *= -1;
                            npc.netUpdate = true;
                        }
                    }
                }
                else if (npc.ai[0] == 1f)
                {
                    if (Main.netMode != 1 && flag38 && num382 == npc.homeTileX && num383 == npc.homeTileY && !NPCID.Sets.TownCritter[npc.type])
                    {
                        npc.ai[0] = 0f;
                        npc.ai[1] = (float)(200 + Main.rand.Next(200));
                        npc.localAI[3] = 60f;
                        npc.netUpdate = true;
                    }
                    else
                    {
                        bool flag46 = Collision.DrownCollision(npc.position, npc.width, npc.height, 1f);
                        if (!flag46)
                        {
                            if (Main.netMode != 1 && !npc.homeless && !Main.tileDungeon[(int)Main.tile[num382, num383].type] && (num382 < npc.homeTileX - 35 || num382 > npc.homeTileX + 35))
                            {
                                if (npc.position.X < (float)(npc.homeTileX * 16) && npc.direction == -1)
                                {
                                    npc.ai[1] -= 5f;
                                }
                                else if (npc.position.X > (float)(npc.homeTileX * 16) && npc.direction == 1)
                                {
                                    npc.ai[1] -= 5f;
                                }
                            }
                            npc.ai[1] -= 1f;
                        }
                        if (npc.ai[1] <= 0f)
                        {
                            npc.ai[0] = 0f;
                            npc.ai[1] = (float)(300 + Main.rand.Next(300));
                            npc.ai[2] = 0f;
                            if (NPCID.Sets.TownCritter[npc.type])
                            {
                                npc.ai[1] -= (float)Main.rand.Next(100);
                            }
                            else
                            {
                                npc.ai[1] += (float)Main.rand.Next(900);
                            }
                            npc.localAI[3] = 60f;
                            npc.netUpdate = true;
                        }
                        if (npc.closeDoor && ((npc.position.X + (float)(npc.width / 2)) / 16f > (float)(npc.doorX + 2) || (npc.position.X + (float)(npc.width / 2)) / 16f < (float)(npc.doorX - 2)))
                        {
                            Tile tileSafely = Framing.GetTileSafely(npc.doorX, npc.doorY);
                            if (tileSafely.type == 11)
                            {
                                bool flag47 = WorldGen.CloseDoor(npc.doorX, npc.doorY, false);
                                if (flag47)
                                {
                                    npc.closeDoor = false;
                                    NetMessage.SendData(19, -1, -1, null, 1, (float)npc.doorX, (float)npc.doorY, (float)npc.direction, 0, 0, 0);
                                }
                                if ((npc.position.X + (float)(npc.width / 2)) / 16f > (float)(npc.doorX + 4) || (npc.position.X + (float)(npc.width / 2)) / 16f < (float)(npc.doorX - 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f > (float)(npc.doorY + 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f < (float)(npc.doorY - 4))
                                {
                                    npc.closeDoor = false;
                                }
                            }
                            else if (tileSafely.type == 389)
                            {
                                bool flag48 = WorldGen.ShiftTallGate(npc.doorX, npc.doorY, true);
                                if (flag48)
                                {
                                    npc.closeDoor = false;
                                    NetMessage.SendData(19, -1, -1, null, 5, (float)npc.doorX, (float)npc.doorY, 0f, 0, 0, 0);
                                }
                                if ((npc.position.X + (float)(npc.width / 2)) / 16f > (float)(npc.doorX + 4) || (npc.position.X + (float)(npc.width / 2)) / 16f < (float)(npc.doorX - 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f > (float)(npc.doorY + 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f < (float)(npc.doorY - 4))
                                {
                                    npc.closeDoor = false;
                                }
                            }
                            else
                            {
                                npc.closeDoor = false;
                            }
                        }
                        float num395 = 1f;
                        float num396 = 0.07f;
                        if (npc.type == 299 || npc.type == 539 || npc.type == 538)
                        {
                            num395 = 1.5f;
                        }
                        if (flag42)
                        {
                            num395 = 2f;
                            num396 = 1f;
                        }
                        if (npc.friendly && (flag43 || flag46))
                        {
                            num395 = 1.5f;
                            float num397 = 1f - (float)npc.life / (float)npc.lifeMax;
                            num395 += num397 * 0.9f;
                            num396 = 0.1f;
                        }
                        if (npc.velocity.X < -num395 || npc.velocity.X > num395)
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity *= 0.8f;
                            }
                        }
                        else if (npc.velocity.X < num395 && npc.direction == 1)
                        {
                            npc.velocity.X = npc.velocity.X + num396;
                            if (npc.velocity.X > num395)
                            {
                                npc.velocity.X = num395;
                            }
                        }
                        else if (npc.velocity.X > -num395 && npc.direction == -1)
                        {
                            npc.velocity.X = npc.velocity.X - num396;
                            if (npc.velocity.X > num395)
                            {
                                npc.velocity.X = num395;
                            }
                        }
                        bool holdsMatching = true;
                        if ((float)(npc.homeTileY * 16 - 32) > npc.position.Y)
                        {
                            holdsMatching = false;
                        }
                        if ((npc.direction == 1 && npc.position.Y + (float)(npc.width / 2) > (float)(npc.homeTileX * 16)) || (npc.direction == -1 && npc.position.Y + (float)(npc.width / 2) < (float)(npc.homeTileX * 16)))
                        {
                            holdsMatching = true;
                        }
                        if (npc.velocity.Y == 0f)
                        {
                            Collision.StepDown(ref npc.position, ref npc.velocity, npc.width, npc.height, ref npc.stepSpeed, ref npc.gfxOffY, 1, false);
                        }
                        if (npc.velocity.Y >= 0f)
                        {
                            Collision.StepUp(ref npc.position, ref npc.velocity, npc.width, npc.height, ref npc.stepSpeed, ref npc.gfxOffY, 1, holdsMatching, 1);
                        }
                        if (npc.velocity.Y == 0f)
                        {
                            int num398 = (int)((npc.position.X + (float)(npc.width / 2) + (float)(15 * npc.direction)) / 16f);
                            int num399 = (int)((npc.position.Y + (float)npc.height - 16f) / 16f);
                            bool flag49 = false;
                            bool flag50 = true;
                            if (npc.townNPC && npc.ai[1] < 30f)
                            {
                                flag49 = !Utils.PlotTileLine(npc.Top, npc.Bottom, (float)npc.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs));
                                if (!flag49)
                                {
                                    Rectangle hitbox = npc.Hitbox;
                                    hitbox.X -= 20;
                                    hitbox.Width += 40;
                                    for (int num400 = 0; num400 < 200; num400++)
                                    {
                                        if (Main.npc[num400].active && Main.npc[num400].friendly && num400 != npc.whoAmI && Main.npc[num400].velocity.X == 0f && hitbox.Intersects(Main.npc[num400].Hitbox))
                                        {
                                            flag49 = true;
                                            break;
                                        }
                                    }
                                }
                            }
                            if (!flag49 && flag46)
                            {
                                flag49 = true;
                            }
                            if (flag50 && (NPCID.Sets.TownCritter[npc.type] || num382 < npc.homeTileX - 35 || num382 > npc.homeTileX + 35))
                            {
                                flag50 = false;
                            }
                            if (flag50)
                            {
                                int num401 = 0;
                                for (int num402 = -1; num402 <= 4; num402++)
                                {
                                    Tile tileSafely2 = Framing.GetTileSafely(num398 - npc.direction * num401, num399 + num402);
                                    if (tileSafely2.lava() && tileSafely2.liquid > 0)
                                    {
                                        flag50 = true;
                                        break;
                                    }
                                    if (tileSafely2.nactive() && Main.tileSolid[(int)tileSafely2.type])
                                    {
                                        flag50 = false;
                                    }
                                }
                            }
                            if (!flag50 && npc.wet)
                            {
                                bool flag51 = flag46;
                                bool flag52 = false;
                                if (!flag51)
                                {
                                    flag52 = Collision.DrownCollision(npc.position + new Vector2((float)(npc.width * npc.direction), 0f), npc.width, npc.height, 1f);
                                }
                                flag52 = (flag52 || Collision.DrownCollision(npc.position + new Vector2((float)(npc.width * npc.direction), (float)(npc.height * 2 - 16 - (flag51 ? 16 : 0))), npc.width, 16 + (flag51 ? 16 : 0), 1f));
                                if (flag52 && npc.localAI[3] <= 0f)
                                {
                                    flag50 = true;
                                    npc.localAI[3] = 600f;
                                }
                            }
                            if (npc.position.X == npc.localAI[3])
                            {
                                npc.direction *= -1;
                                npc.netUpdate = true;
                                npc.localAI[3] = 600f;
                            }
                            if (flag46)
                            {
                                if (npc.localAI[3] > 0f)
                                {
                                    npc.localAI[3] -= 1f;
                                }
                            }
                            else
                            {
                                npc.localAI[3] = -1f;
                            }
                            Tile tileSafely3 = Framing.GetTileSafely(num398, num399);
                            Tile tileSafely4 = Framing.GetTileSafely(num398, num399 - 1);
                            Tile tileSafely5 = Framing.GetTileSafely(num398, num399 - 2);
                            if (npc.townNPC && tileSafely5.nactive() && (tileSafely5.type == 10 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag38))
                            {
                                if (Main.netMode != 1)
                                {
                                    if (WorldGen.OpenDoor(num398, num399 - 2, npc.direction))
                                    {
                                        npc.closeDoor = true;
                                        npc.doorX = num398;
                                        npc.doorY = num399 - 2;
                                        NetMessage.SendData(19, -1, -1, null, 0, (float)num398, (float)(num399 - 2), (float)npc.direction, 0, 0, 0);
                                        npc.netUpdate = true;
                                        npc.ai[1] += 80f;
                                    }
                                    else if (WorldGen.OpenDoor(num398, num399 - 2, -npc.direction))
                                    {
                                        npc.closeDoor = true;
                                        npc.doorX = num398;
                                        npc.doorY = num399 - 2;
                                        NetMessage.SendData(19, -1, -1, null, 0, (float)num398, (float)(num399 - 2), (float)(-(float)npc.direction), 0, 0, 0);
                                        npc.netUpdate = true;
                                        npc.ai[1] += 80f;
                                    }
                                    else if (WorldGen.ShiftTallGate(num398, num399 - 2, false))
                                    {
                                        npc.closeDoor = true;
                                        npc.doorX = num398;
                                        npc.doorY = num399 - 2;
                                        NetMessage.SendData(19, -1, -1, null, 4, (float)num398, (float)(num399 - 2), 0f, 0, 0, 0);
                                        npc.netUpdate = true;
                                        npc.ai[1] += 80f;
                                    }
                                    else
                                    {
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                    }
                                }
                            }
                            else
                            {
                                if ((npc.velocity.X < 0f && npc.spriteDirection == -1) || (npc.velocity.X > 0f && npc.spriteDirection == 1))
                                {
                                    if (tileSafely5.nactive() && Main.tileSolid[(int)tileSafely5.type] && !Main.tileSolidTop[(int)tileSafely5.type])
                                    {
                                        if (!Collision.SolidTilesVersatile(num398 - npc.direction * 2, num398 - npc.direction, num399 - 5, num399 - 1) && !Collision.SolidTiles(num398, num398, num399 - 5, num399 - 3))
                                        {
                                            npc.velocity.Y = -6f;
                                            npc.netUpdate = true;
                                        }
                                        else if (flag42)
                                        {
                                            if (WorldGen.SolidTile((int)(npc.Center.X / 16f) + npc.direction, (int)(npc.Center.Y / 16f)))
                                            {
                                                npc.direction *= -1;
                                                npc.velocity.X = npc.velocity.X * 0f;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        else if (flag43)
                                        {
                                            flag49 = false;
                                            npc.velocity.X = 0f;
                                            npc.direction *= -1;
                                            npc.netUpdate = true;
                                            npc.ai[0] = 8f;
                                            npc.ai[1] = 240f;
                                        }
                                        else
                                        {
                                            npc.direction *= -1;
                                            npc.netUpdate = true;
                                        }
                                    }
                                    else if (tileSafely4.nactive() && Main.tileSolid[(int)tileSafely4.type] && !Main.tileSolidTop[(int)tileSafely4.type])
                                    {
                                        if (!Collision.SolidTilesVersatile(num398 - npc.direction * 2, num398 - npc.direction, num399 - 4, num399 - 1) && !Collision.SolidTiles(num398, num398, num399 - 4, num399 - 2))
                                        {
                                            npc.velocity.Y = -5f;
                                            npc.netUpdate = true;
                                        }
                                        else if (flag43)
                                        {
                                            flag49 = false;
                                            npc.velocity.X = 0f;
                                            npc.direction *= -1;
                                            npc.netUpdate = true;
                                            npc.ai[0] = 8f;
                                            npc.ai[1] = 240f;
                                        }
                                        else
                                        {
                                            npc.direction *= -1;
                                            npc.netUpdate = true;
                                        }
                                    }
                                    else if (npc.position.Y + (float)npc.height - (float)(num399 * 16) > 20f && tileSafely3.nactive() && Main.tileSolid[(int)tileSafely3.type] && !tileSafely3.topSlope())
                                    {
                                        if (!Collision.SolidTilesVersatile(num398 - npc.direction * 2, num398, num399 - 3, num399 - 1))
                                        {
                                            npc.velocity.Y = -4.4f;
                                            npc.netUpdate = true;
                                        }
                                        else if (flag43)
                                        {
                                            flag49 = false;
                                            npc.velocity.X = 0f;
                                            npc.direction *= -1;
                                            npc.netUpdate = true;
                                            npc.ai[0] = 8f;
                                            npc.ai[1] = 240f;
                                        }
                                        else
                                        {
                                            npc.direction *= -1;
                                            npc.netUpdate = true;
                                        }
                                    }
                                    else if (flag50)
                                    {
                                        npc.direction *= -1;
                                        npc.velocity.X = npc.velocity.X * -1f;
                                        npc.netUpdate = true;
                                        if (flag43)
                                        {
                                            flag49 = false;
                                            npc.velocity.X = 0f;
                                            npc.ai[0] = 8f;
                                            npc.ai[1] = 240f;
                                        }
                                    }
                                    if (flag49)
                                    {
                                        npc.ai[1] = 90f;
                                        npc.netUpdate = true;
                                    }
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.localAI[3] = npc.position.X;
                                    }
                                }
                                if (npc.velocity.Y < 0f && npc.wet)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 1.2f;
                                }
                                if (npc.velocity.Y < 0f && NPCID.Sets.TownCritter[npc.type] && !flag42)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 1.2f;
                                }
                            }
                        }
                    }
                }
                else if (npc.ai[0] == 2f || npc.ai[0] == 11f)
                {
                    if (Main.netMode != 1)
                    {
                        npc.localAI[3] -= 1f;
                        if (Main.rand.Next(60) == 0 && npc.localAI[3] == 0f)
                        {
                            npc.localAI[3] = 60f;
                            npc.direction *= -1;
                            npc.netUpdate = true;
                        }
                    }
                    npc.ai[1] -= 1f;
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    if (npc.ai[1] <= 0f)
                    {
                        npc.localAI[3] = 40f;
                        npc.ai[0] = 0f;
                        npc.ai[1] = (float)(60 + Main.rand.Next(60));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 3f || npc.ai[0] == 4f || npc.ai[0] == 5f || npc.ai[0] == 8f || npc.ai[0] == 9f || npc.ai[0] == 16f || npc.ai[0] == 17f)
                {
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    npc.ai[1] -= 1f;
                    if (npc.ai[0] == 8f && npc.ai[1] < 60f && flag43)
                    {
                        npc.ai[1] = 180f;
                        npc.netUpdate = true;
                    }
                    if (npc.ai[0] == 5f)
                    {
                        Point point = npc.Center.ToTileCoordinates();
                        Tile tile = Main.tile[point.X, point.Y];
                        if (tile.type != 15)
                        {
                            npc.ai[1] = 0f;
                        }
                    }
                    if (npc.ai[1] <= 0f)
                    {
                        npc.ai[0] = 0f;
                        npc.ai[1] = (float)(60 + Main.rand.Next(60));
                        npc.ai[2] = 0f;
                        npc.localAI[3] = (float)(30 + Main.rand.Next(60));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 6f || npc.ai[0] == 7f)
                {
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    npc.ai[1] -= 1f;
                    int num403 = (int)npc.ai[2];
                    if (num403 < 0 || num403 > 255 || !Main.player[num403].active || Main.player[num403].dead || Main.player[num403].Distance(npc.Center) > 200f || !Collision.CanHitLine(npc.Top, 0, 0, Main.player[num403].Top, 0, 0))
                    {
                        npc.ai[1] = 0f;
                    }
                    if (npc.ai[1] > 0f)
                    {
                        int num404 = (npc.Center.X < Main.player[num403].Center.X) ? 1 : -1;
                        if (num404 != npc.direction)
                        {
                            npc.netUpdate = true;
                        }
                        npc.direction = num404;
                    }
                    else
                    {
                        npc.ai[0] = 0f;
                        npc.ai[1] = (float)(60 + Main.rand.Next(60));
                        npc.ai[2] = 0f;
                        npc.localAI[3] = (float)(30 + Main.rand.Next(60));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 10f)
                {
                    int num405 = 0;
                    int num406 = 0;
                    float knockBack = 0f;
                    float scaleFactor7 = 0f;
                    int num407 = 0;
                    int num408 = 0;
                    int maxValue3 = 0;
                    float num409 = 0f;
                    float num410 = (float)NPCID.Sets.DangerDetectRange[npc.type];
                    float num411 = 0f;
                    if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                    {
                        npc.frameCounter = 0.0;
                        npc.localAI[3] = 0f;
                    }
                    if (npc.type == 38)
                    {
                        num405 = 30;
                        scaleFactor7 = 6f;
                        num406 = 20;
                        num407 = 10;
                        num408 = 180;
                        maxValue3 = 120;
                        num409 = 16f;
                        knockBack = 7f;
                    }
                    else if (npc.type == 208)
                    {
                        num405 = 588;
                        scaleFactor7 = 6f;
                        num406 = 30;
                        num407 = 10;
                        num408 = 60;
                        maxValue3 = 120;
                        num409 = 16f;
                        knockBack = 6f;
                    }
                    else if (npc.type == 17)
                    {
                        num405 = 48;
                        scaleFactor7 = 9f;
                        num406 = 12;
                        num407 = 10;
                        num408 = 60;
                        maxValue3 = 60;
                        num409 = 16f;
                        knockBack = 1.5f;
                    }
                    else if (npc.type == 369)
                    {
                        num405 = 520;
                        scaleFactor7 = 12f;
                        num406 = 10;
                        num407 = 10;
                        num408 = 0;
                        maxValue3 = 1;
                        num409 = 16f;
                        knockBack = 3f;
                    }
                    else if (npc.type == 453)
                    {
                        num405 = 21;
                        scaleFactor7 = 14f;
                        num406 = 14;
                        num407 = 10;
                        num408 = 0;
                        maxValue3 = 1;
                        num409 = 16f;
                        knockBack = 3f;
                    }
                    else if (npc.type == 107)
                    {
                        num405 = 24;
                        scaleFactor7 = 5f;
                        num406 = 15;
                        num407 = 10;
                        num408 = 60;
                        maxValue3 = 60;
                        num409 = 16f;
                        knockBack = 1f;
                    }
                    else if (npc.type == 124)
                    {
                        num405 = 582;
                        scaleFactor7 = 10f;
                        num406 = 11;
                        num407 = 1;
                        num408 = 30;
                        maxValue3 = 30;
                        knockBack = 3.5f;
                    }
                    else if (npc.type == 18)
                    {
                        num405 = 583;
                        scaleFactor7 = 8f;
                        num406 = 8;
                        num407 = 1;
                        num408 = 15;
                        maxValue3 = 10;
                        knockBack = 2f;
                        num409 = 10f;
                    }
                    else if (npc.type == 142)
                    {
                        num405 = 589;
                        scaleFactor7 = 7f;
                        num406 = 22;
                        num407 = 1;
                        num408 = 10;
                        maxValue3 = 1;
                        knockBack = 2f;
                        num409 = 10f;
                    }
                    if (Main.expertMode)
                    {
                        num406 = (int)((float)num406 * Main.expertNPCDamage);
                    }
                    num406 = (int)((float)num406 * num378);
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    npc.ai[1] -= 1f;
                    npc.localAI[3] += 1f;
                    if (npc.localAI[3] == (float)num407 && Main.netMode != 1)
                    {
                        Vector2 vector41 = -Vector2.UnitY;
                        if (num389 == 1 && npc.spriteDirection == 1 && num391 != -1)
                        {
                            vector41 = npc.DirectionTo(Main.npc[num391].Center + new Vector2(0f, -num409 * MathHelper.Clamp(npc.Distance(Main.npc[num391].Center) / num410, 0f, 1f)));
                        }
                        if (num389 == -1 && npc.spriteDirection == -1 && num390 != -1)
                        {
                            vector41 = npc.DirectionTo(Main.npc[num390].Center + new Vector2(0f, -num409 * MathHelper.Clamp(npc.Distance(Main.npc[num390].Center) / num410, 0f, 1f)));
                        }
                        if (vector41.HasNaNs() || Math.Sign(vector41.X) != npc.spriteDirection)
                        {
                            vector41 = new Vector2((float)npc.spriteDirection, -1f);
                        }
                        vector41 *= scaleFactor7;
                        vector41 += Utils.RandomVector2(Main.rand, -num411, num411);
                        int num412;
                        if (npc.type == 124)
                        {
                            num412 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector41.X, vector41.Y, num405, num406, knockBack, Main.myPlayer, 0f, (float)npc.whoAmI);
                        }
                        else if (npc.type == 142)
                        {
                            num412 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector41.X, vector41.Y, num405, num406, knockBack, Main.myPlayer, 0f, (float)Main.rand.Next(5));
                        }
                        else
                        {
                            num412 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector41.X, vector41.Y, num405, num406, knockBack, Main.myPlayer, 0f, 0f);
                        }
                        Main.projectile[num412].npcProj = true;
                        Main.projectile[num412].noDropItem = true;
                    }
                    if (npc.ai[1] <= 0f && !false)
                    {
                        npc.ai[0] = (float)((npc.localAI[2] == 8f && flag43) ? 8 : 0);
                        npc.ai[1] = (float)(num408 + Main.rand.Next(maxValue3));
                        npc.ai[2] = 0f;
                        npc.localAI[1] = (npc.localAI[3] = (float)(num408 / 2 + Main.rand.Next(maxValue3)));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 12f)
                {
                    int num413 = 0;
                    int num414 = 0;
                    float scaleFactor8 = 0f;
                    int num415 = 0;
                    int num416 = 0;
                    int maxValue4 = 0;
                    float knockBack2 = 0f;
                    int num417 = 0;
                    bool flag53 = false;
                    float num418 = 0f;
                    if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                    {
                        npc.frameCounter = 0.0;
                        npc.localAI[3] = 0f;
                    }
                    int num419 = -1;
                    if (num389 == 1 && npc.spriteDirection == 1)
                    {
                        num419 = num391;
                    }
                    if (num389 == -1 && npc.spriteDirection == -1)
                    {
                        num419 = num390;
                    }
                    if (npc.type == 19)
                    {
                        num413 = 14;
                        scaleFactor8 = 13f;
                        num414 = 24;
                        num416 = 14;
                        maxValue4 = 4;
                        knockBack2 = 3f;
                        num415 = 1;
                        num418 = 0.5f;
                        if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                        {
                            npc.frameCounter = 0.0;
                            npc.localAI[3] = 0f;
                        }
                        if (Main.hardMode)
                        {
                            num414 = 15;
                            if (npc.localAI[3] > (float)num415)
                            {
                                num415 = 10;
                                flag53 = true;
                            }
                            if (npc.localAI[3] > (float)num415)
                            {
                                num415 = 20;
                                flag53 = true;
                            }
                            if (npc.localAI[3] > (float)num415)
                            {
                                num415 = 30;
                                flag53 = true;
                            }
                        }
                    }
                    else if (npc.type == 227)
                    {
                        num413 = 587;
                        scaleFactor8 = 10f;
                        num414 = 8;
                        num416 = 10;
                        maxValue4 = 1;
                        knockBack2 = 1.75f;
                        num415 = 1;
                        num418 = 0.5f;
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 12;
                            flag53 = true;
                        }
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 24;
                            flag53 = true;
                        }
                        if (Main.hardMode)
                        {
                            num414 += 2;
                        }
                    }
                    else if (npc.type == 368)
                    {
                        num413 = 14;
                        scaleFactor8 = 13f;
                        num414 = 24;
                        num416 = 12;
                        maxValue4 = 5;
                        knockBack2 = 2f;
                        num415 = 1;
                        num418 = 0.2f;
                        if (Main.hardMode)
                        {
                            num414 = 30;
                            num413 = 357;
                        }
                    }
                    else if (npc.type == 22)
                    {
                        scaleFactor8 = 10f;
                        num414 = 8;
                        num415 = 1;
                        if (Main.hardMode)
                        {
                            num413 = 2;
                            num416 = 15;
                            maxValue4 = 10;
                            num414 += 6;
                        }
                        else
                        {
                            num413 = 1;
                            num416 = 30;
                            maxValue4 = 20;
                        }
                        knockBack2 = 2.75f;
                        num417 = 4;
                        num418 = 0.7f;
                    }
                    else if (npc.type == 228)
                    {
                        num413 = 267;
                        scaleFactor8 = 14f;
                        num414 = 20;
                        num415 = 1;
                        num416 = 10;
                        maxValue4 = 1;
                        knockBack2 = 3f;
                        num417 = 6;
                        num418 = 0.4f;
                    }
                    else if (npc.type == 178)
                    {
                        num413 = 242;
                        scaleFactor8 = 13f;
                        num414 = 15;
                        num416 = 10;
                        maxValue4 = 1;
                        knockBack2 = 2f;
                        num415 = 1;
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 8;
                            flag53 = true;
                        }
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 16;
                            flag53 = true;
                        }
                        num418 = 0.3f;
                    }
                    else if (npc.type == 229)
                    {
                        num413 = 14;
                        scaleFactor8 = 14f;
                        num414 = 24;
                        num416 = 10;
                        maxValue4 = 1;
                        knockBack2 = 2f;
                        num415 = 1;
                        num418 = 0.7f;
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 16;
                            flag53 = true;
                        }
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 24;
                            flag53 = true;
                        }
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 32;
                            flag53 = true;
                        }
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 40;
                            flag53 = true;
                        }
                        if (npc.localAI[3] > (float)num415)
                        {
                            num415 = 48;
                            flag53 = true;
                        }
                        if (npc.localAI[3] == 0f && num419 != -1 && npc.Distance(Main.npc[num419].Center) < (float)NPCID.Sets.PrettySafe[npc.type])
                        {
                            num418 = 0.1f;
                            num413 = 162;
                            num414 = 50;
                            knockBack2 = 10f;
                            scaleFactor8 = 24f;
                        }
                    }
                    else if (npc.type == 209)
                    {
                        int num420 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						134,
						133,
						135
					});
                        num413 = num420;
                        num415 = 1;
                        if (num413 == 135)
                        {
                            scaleFactor8 = 12f;
                            num414 = 30;
                            num416 = 30;
                            maxValue4 = 10;
                            knockBack2 = 7f;
                            num418 = 0.2f;
                        }
                        else if (num413 == 133)
                        {
                            scaleFactor8 = 10f;
                            num414 = 25;
                            num416 = 10;
                            maxValue4 = 1;
                            knockBack2 = 6f;
                            num418 = 0.2f;
                        }
                        else if (num413 == 134)
                        {
                            scaleFactor8 = 13f;
                            num414 = 20;
                            num416 = 20;
                            maxValue4 = 10;
                            knockBack2 = 4f;
                            num418 = 0.1f;
                        }
                    }
                    if (Main.expertMode)
                    {
                        num414 = (int)((float)num414 * Main.expertNPCDamage);
                    }
                    num414 = (int)((float)num414 * num378);
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    npc.ai[1] -= 1f;
                    npc.localAI[3] += 1f;
                    if (npc.localAI[3] == (float)num415 && Main.netMode != 1)
                    {
                        Vector2 vector42 = Vector2.Zero;
                        if (num419 != -1)
                        {
                            vector42 = npc.DirectionTo(Main.npc[num419].Center + new Vector2(0f, (float)(-(float)num417)));
                        }
                        if (vector42.HasNaNs() || Math.Sign(vector42.X) != npc.spriteDirection)
                        {
                            vector42 = new Vector2((float)npc.spriteDirection, 0f);
                        }
                        vector42 *= scaleFactor8;
                        vector42 += Utils.RandomVector2(Main.rand, -num418, num418);
                        int num421;
                        if (npc.type == 227)
                        {
                            num421 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector42.X, vector42.Y, num413, num414, knockBack2, Main.myPlayer, 0f, (float)Main.rand.Next(12) / 6f);
                        }
                        else
                        {
                            num421 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector42.X, vector42.Y, num413, num414, knockBack2, Main.myPlayer, 0f, 0f);
                        }
                        Main.projectile[num421].npcProj = true;
                        Main.projectile[num421].noDropItem = true;
                    }
                    if (npc.localAI[3] == (float)num415 && flag53 && num419 != -1)
                    {
                        Vector2 vector43 = npc.DirectionTo(Main.npc[num419].Center);
                        if (vector43.Y <= 0.5f && vector43.Y >= -0.5f)
                        {
                            npc.ai[2] = vector43.Y;
                        }
                    }
                    if (npc.ai[1] <= 0f && !false)
                    {
                        npc.ai[0] = (float)((npc.localAI[2] == 8f && flag43) ? 8 : 0);
                        npc.ai[1] = (float)(num416 + Main.rand.Next(maxValue4));
                        npc.ai[2] = 0f;
                        npc.localAI[1] = (npc.localAI[3] = (float)(num416 / 2 + Main.rand.Next(maxValue4)));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 13f)
                {
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                    {
                        npc.frameCounter = 0.0;
                    }
                    npc.ai[1] -= 1f;
                    npc.localAI[3] += 1f;
                    if (npc.localAI[3] == 1f && Main.netMode != 1)
                    {
                        Vector2 vec2 = npc.DirectionTo(Main.npc[(int)npc.ai[2]].Center + new Vector2(0f, -20f));
                        if (vec2.HasNaNs() || Math.Sign(vec2.X) == -npc.spriteDirection)
                        {
                            vec2 = new Vector2((float)npc.spriteDirection, -1f);
                        }
                        vec2 *= 8f;
                        int num422 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vec2.X, vec2.Y, 584, 0, 0f, Main.myPlayer, npc.ai[2], 0f);
                        Main.projectile[num422].npcProj = true;
                        Main.projectile[num422].noDropItem = true;
                    }
                    if (npc.ai[1] <= 0f)
                    {
                        npc.ai[0] = 0f;
                        npc.ai[1] = (float)(10 + Main.rand.Next(10));
                        npc.ai[2] = 0f;
                        npc.localAI[3] = (float)(5 + Main.rand.Next(10));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 14f)
                {
                    int num423 = 0;
                    int num424 = 0;
                    float scaleFactor9 = 0f;
                    int num425 = 0;
                    int num426 = 0;
                    int maxValue5 = 0;
                    float knockBack3 = 0f;
                    float num427 = 0f;
                    float num428 = (float)NPCID.Sets.DangerDetectRange[npc.type];
                    float num429 = 1f;
                    float num430 = 0f;
                    if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                    {
                        npc.frameCounter = 0.0;
                        npc.localAI[3] = 0f;
                    }
                    int num431 = -1;
                    if (num389 == 1 && npc.spriteDirection == 1)
                    {
                        num431 = num391;
                    }
                    if (num389 == -1 && npc.spriteDirection == -1)
                    {
                        num431 = num390;
                    }
                    if (npc.type == 54)
                    {
                        num423 = 585;
                        scaleFactor9 = 10f;
                        num424 = 16;
                        num425 = 30;
                        num426 = 20;
                        maxValue5 = 15;
                        knockBack3 = 2f;
                        num430 = 1f;
                    }
                    else if (npc.type == 108)
                    {
                        num423 = 15;
                        scaleFactor9 = 6f;
                        num424 = 18;
                        num425 = 15;
                        num426 = 15;
                        maxValue5 = 5;
                        knockBack3 = 3f;
                        num427 = 20f;
                    }
                    else if (npc.type == 160)
                    {
                        num423 = 590;
                        num424 = 40;
                        num425 = 15;
                        num426 = 10;
                        maxValue5 = 1;
                        knockBack3 = 3f;
                        while (npc.localAI[3] > (float)num425)
                        {
                            num425 += 15;
                        }
                    }
                    else if (npc.type == 20)
                    {
                        num423 = 586;
                        num425 = 24;
                        num426 = 10;
                        maxValue5 = 1;
                        knockBack3 = 3f;
                    }
                    if (Main.expertMode)
                    {
                        num424 = (int)((float)num424 * Main.expertNPCDamage);
                    }
                    num424 = (int)((float)num424 * num378);
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    npc.ai[1] -= 1f;
                    npc.localAI[3] += 1f;
                    if (npc.localAI[3] == (float)num425 && Main.netMode != 1)
                    {
                        Vector2 vector44 = Vector2.Zero;
                        if (num431 != -1)
                        {
                            vector44 = npc.DirectionTo(Main.npc[num431].Center + new Vector2(0f, -num427 * MathHelper.Clamp(npc.Distance(Main.npc[num431].Center) / num428, 0f, 1f)));
                        }
                        if (vector44.HasNaNs() || Math.Sign(vector44.X) != npc.spriteDirection)
                        {
                            vector44 = new Vector2((float)npc.spriteDirection, 0f);
                        }
                        vector44 *= scaleFactor9;
                        vector44 += Utils.RandomVector2(Main.rand, -num430, num430);
                        if (npc.type == 108)
                        {
                            int num432 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							1,
							1,
							1,
							1,
							2,
							2,
							3
						});
                            for (int num433 = 0; num433 < num432; num433++)
                            {
                                Vector2 vector45 = Utils.RandomVector2(Main.rand, -3.4f, 3.4f);
                                int num434 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector44.X + vector45.X, vector44.Y + vector45.Y, num423, num424, knockBack3, Main.myPlayer, 0f, 0f);
                                Main.projectile[num434].npcProj = true;
                                Main.projectile[num434].noDropItem = true;
                            }
                        }
                        else if (npc.type == 160)
                        {
                            if (num431 != -1)
                            {
                                Vector2 vector46 = Main.npc[num431].position - Main.npc[num431].Size * 2f + Main.npc[num431].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
                                int num435 = 10;
                                while (num435 > 0 && WorldGen.SolidTile(Framing.GetTileSafely((int)vector46.X / 16, (int)vector46.Y / 16)))
                                {
                                    num435--;
                                    vector46 = Main.npc[num431].position - Main.npc[num431].Size * 2f + Main.npc[num431].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
                                }
                                int num436 = Projectile.NewProjectile(vector46.X, vector46.Y, 0f, 0f, num423, num424, knockBack3, Main.myPlayer, 0f, 0f);
                                Main.projectile[num436].npcProj = true;
                                Main.projectile[num436].noDropItem = true;
                            }
                        }
                        else if (npc.type == 20)
                        {
                            int num437 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector44.X, vector44.Y, num423, num424, knockBack3, Main.myPlayer, 0f, (float)npc.whoAmI);
                            Main.projectile[num437].npcProj = true;
                            Main.projectile[num437].noDropItem = true;
                        }
                        else
                        {
                            int num438 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector44.X, vector44.Y, num423, num424, knockBack3, Main.myPlayer, 0f, 0f);
                            Main.projectile[num438].npcProj = true;
                            Main.projectile[num438].noDropItem = true;
                        }
                    }
                    if (num429 > 0f)
                    {
                        Vector3 vector47 = NPCID.Sets.MagicAuraColor[npc.type].ToVector3() * num429;
                    }
                    if (npc.ai[1] <= 0f && !false)
                    {
                        npc.ai[0] = (float)((npc.localAI[2] == 8f && flag43) ? 8 : 0);
                        npc.ai[1] = (float)(num426 + Main.rand.Next(maxValue5));
                        npc.ai[2] = 0f;
                        npc.localAI[1] = (npc.localAI[3] = (float)(num426 / 2 + Main.rand.Next(maxValue5)));
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[0] == 15f)
                {
                    int num439 = 0;
                    int maxValue6 = 0;
                    if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                    {
                        npc.frameCounter = 0.0;
                        npc.localAI[3] = 0f;
                    }
                    int num440 = 0;
                    float num441 = 0f;
                    int num442 = 0;
                    int num443 = 0;
                    if (num389 == 1)
                    {
                        int arg_1BD94_0 = npc.spriteDirection;
                    }
                    if (num389 == -1)
                    {
                        int arg_1BDA4_0 = npc.spriteDirection;
                    }
                    if (npc.type == 207)
                    {
                        num440 = 11;
                        num443 = (num442 = 32);
                        num439 = 12;
                        maxValue6 = 6;
                        num441 = 4.25f;
                    }
                    else if (npc.type == 441)
                    {
                        num440 = 9;
                        num443 = (num442 = 28);
                        num439 = 9;
                        maxValue6 = 3;
                        num441 = 3.5f;
                    }
                    else if (npc.type == 353)
                    {
                        num440 = 10;
                        num443 = (num442 = 32);
                        num439 = 15;
                        maxValue6 = 8;
                        num441 = 5f;
                    }
                    if (Main.expertMode)
                    {
                        num440 = (int)((float)num440 * Main.expertNPCDamage);
                    }
                    num440 = (int)((float)num440 * num378);
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    npc.ai[1] -= 1f;
                    if (Main.netMode != 1)
                    {
                        Tuple<Vector2, float> swingStats = npc.GetSwingStats(NPCID.Sets.AttackTime[npc.type] * 2, (int)npc.ai[1], npc.spriteDirection, num442, num443);
                        Rectangle rectangle5 = new Rectangle((int)swingStats.Item1.X, (int)swingStats.Item1.Y, num442, num443);
                        if (npc.spriteDirection == -1)
                        {
                            rectangle5.X -= num442;
                        }
                        rectangle5.Y -= num443;
                        npc.TweakSwingStats(NPCID.Sets.AttackTime[npc.type] * 2, (int)npc.ai[1], npc.spriteDirection, ref rectangle5);
                        int myPlayer = Main.myPlayer;
                        for (int num444 = 0; num444 < 200; num444++)
                        {
                            NPC nPC2 = Main.npc[num444];
                            if (nPC2.active && nPC2.immune[myPlayer] == 0 && !nPC2.dontTakeDamage && !nPC2.friendly && nPC2.damage > 0 && rectangle5.Intersects(nPC2.Hitbox) && (nPC2.noTileCollide || Collision.CanHit(npc.position, npc.width, npc.height, nPC2.position, nPC2.width, nPC2.height)))
                            {
                                nPC2.StrikeNPCNoInteraction(num440, num441, npc.spriteDirection, false, false, false);
                                if (Main.netMode != 0)
                                {
                                    NetMessage.SendData(28, -1, -1, null, num444, (float)num440, num441, (float)npc.spriteDirection, 0, 0, 0);
                                }
                                nPC2.netUpdate = true;
                                nPC2.immune[myPlayer] = (int)npc.ai[1] + 2;
                            }
                        }
                    }
                    if (npc.ai[1] <= 0f)
                    {
                        bool flag54 = false;
                        if (flag43)
                        {
                            int num445 = -num389;
                            if (!Collision.CanHit(npc.Center, 0, 0, npc.Center + Vector2.UnitX * (float)num445 * 32f, 0, 0) || npc.localAI[2] == 8f)
                            {
                                flag54 = true;
                            }
                            if (flag54)
                            {
                                int num446 = NPCID.Sets.AttackTime[npc.type];
                                int num447 = (num389 == 1) ? num391 : num390;
                                int num448 = (num389 == 1) ? num390 : num391;
                                if (num447 != -1 && !Collision.CanHit(npc.Center, 0, 0, Main.npc[num447].Center, 0, 0))
                                {
                                    if (num448 != -1 && Collision.CanHit(npc.Center, 0, 0, Main.npc[num448].Center, 0, 0))
                                    {
                                        num447 = num448;
                                    }
                                    else
                                    {
                                        num447 = -1;
                                    }
                                }
                                if (num447 != -1)
                                {
                                    npc.ai[0] = 15f;
                                    npc.ai[1] = (float)num446;
                                    npc.ai[2] = 0f;
                                    npc.localAI[3] = 0f;
                                    npc.direction = ((npc.position.X < Main.npc[num447].position.X) ? 1 : -1);
                                    npc.netUpdate = true;
                                }
                                else
                                {
                                    flag54 = false;
                                }
                            }
                        }
                        if (!flag54)
                        {
                            npc.ai[0] = (float)((npc.localAI[2] == 8f && flag43) ? 8 : 0);
                            npc.ai[1] = (float)(num439 + Main.rand.Next(maxValue6));
                            npc.ai[2] = 0f;
                            npc.localAI[1] = (npc.localAI[3] = (float)(num439 / 2 + Main.rand.Next(maxValue6)));
                            npc.netUpdate = true;
                        }
                    }
                }
                if (Main.netMode != 1 && (npc.townNPC || npc.type == 453) && !flag40)
                {
                    bool flag55 = npc.ai[0] < 2f && !flag43;
                    bool flag56 = (npc.ai[0] < 2f || npc.ai[0] == 8f) && (flag43 || flag44);
                    if (npc.localAI[1] > 0f)
                    {
                        npc.localAI[1] -= 1f;
                    }
                    if (npc.localAI[1] > 0f)
                    {
                        flag56 = false;
                    }
                    if (flag56 && npc.type == 124 && npc.localAI[0] == 1f)
                    {
                        flag56 = false;
                    }
                    if (flag56 && npc.type == 20)
                    {
                        flag56 = false;
                        for (int num449 = 0; num449 < 200; num449++)
                        {
                            NPC nPC3 = Main.npc[num449];
                            if (nPC3.active && nPC3.townNPC && npc.Distance(nPC3.Center) <= 1200f && nPC3.FindBuffIndex(165) == -1)
                            {
                                flag56 = true;
                                break;
                            }
                        }
                    }
                    if (flag55 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(300) == 0)
                    {
                        int num450 = 420;
                        if (Main.rand.Next(2) == 0)
                        {
                            num450 *= Main.rand.Next(1, 4);
                        }
                        else
                        {
                            num450 *= Main.rand.Next(1, 3);
                        }
                        int num451 = 100;
                        int num452 = 20;
                        for (int num453 = 0; num453 < 200; num453++)
                        {
                            NPC nPC4 = Main.npc[num453];
                            bool flag57 = (nPC4.ai[0] == 1f && nPC4.closeDoor) || (nPC4.ai[0] == 1f && nPC4.ai[1] > 200f) || nPC4.ai[0] > 1f;
                            if (nPC4 != npc && nPC4.active && nPC4.CanTalk && !flag57 && nPC4.Distance(npc.Center) < (float)num451 && nPC4.Distance(npc.Center) > (float)num452 && Collision.CanHit(npc.Center, 0, 0, nPC4.Center, 0, 0))
                            {
                                int num454 = (npc.position.X < nPC4.position.X).ToDirectionInt();
                                npc.ai[0] = 3f;
                                npc.ai[1] = (float)num450;
                                npc.ai[2] = (float)num453;
                                npc.direction = num454;
                                npc.netUpdate = true;
                                nPC4.ai[0] = 4f;
                                nPC4.ai[1] = (float)num450;
                                nPC4.ai[2] = (float)npc.whoAmI;
                                nPC4.direction = -num454;
                                nPC4.netUpdate = true;
                                break;
                            }
                        }
                    }
                    else if (flag55 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1800) == 0)
                    {
                        int num455 = 420;
                        if (Main.rand.Next(2) == 0)
                        {
                            num455 *= Main.rand.Next(1, 4);
                        }
                        else
                        {
                            num455 *= Main.rand.Next(1, 3);
                        }
                        int num456 = 100;
                        int num457 = 20;
                        for (int num458 = 0; num458 < 200; num458++)
                        {
                            NPC nPC5 = Main.npc[num458];
                            bool flag58 = (nPC5.ai[0] == 1f && nPC5.closeDoor) || (nPC5.ai[0] == 1f && nPC5.ai[1] > 200f) || nPC5.ai[0] > 1f;
                            if (nPC5 != npc && nPC5.active && nPC5.CanTalk && !flag58 && nPC5.Distance(npc.Center) < (float)num456 && nPC5.Distance(npc.Center) > (float)num457 && Collision.CanHit(npc.Center, 0, 0, nPC5.Center, 0, 0))
                            {
                                int num459 = (npc.position.X < nPC5.position.X).ToDirectionInt();
                                npc.ai[0] = 16f;
                                npc.ai[1] = (float)num455;
                                npc.ai[2] = (float)num458;
                                npc.localAI[2] = (float)Main.rand.Next(4);
                                npc.localAI[3] = (float)Main.rand.Next(3 - (int)npc.localAI[2]);
                                npc.direction = num459;
                                npc.netUpdate = true;
                                nPC5.ai[0] = 17f;
                                nPC5.ai[1] = (float)num455;
                                nPC5.ai[2] = (float)npc.whoAmI;
                                nPC5.localAI[2] = 0f;
                                nPC5.localAI[3] = 0f;
                                nPC5.direction = -num459;
                                nPC5.netUpdate = true;
                                break;
                            }
                        }
                    }
                    else if (flag55 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1200) == 0 && npc.type == 208)
                    {
                        int num460 = 300;
                        int num461 = 150;
                        for (int num462 = 0; num462 < 255; num462++)
                        {
                            Player player2 = Main.player[num462];
                            if (player2.active && !player2.dead && player2.Distance(npc.Center) < (float)num461 && Collision.CanHitLine(npc.Top, 0, 0, player2.Top, 0, 0))
                            {
                                int direction2 = (npc.position.X < player2.position.X).ToDirectionInt();
                                npc.ai[0] = 6f;
                                npc.ai[1] = (float)num460;
                                npc.ai[2] = (float)num462;
                                npc.direction = direction2;
                                npc.netUpdate = true;
                                break;
                            }
                        }
                    }
                    else if (flag55 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1800) == 0)
                    {
                        npc.ai[0] = 2f;
                        npc.ai[1] = (float)(45 * Main.rand.Next(1, 2));
                        npc.netUpdate = true;
                    }
                    else if (flag55 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(600) == 0 && npc.type == 229 && !flag44)
                    {
                        npc.ai[0] = 11f;
                        npc.ai[1] = (float)(30 * Main.rand.Next(1, 4));
                        npc.netUpdate = true;
                    }
                    else if (flag55 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1200) == 0)
                    {
                        int num463 = 220;
                        int num464 = 150;
                        for (int num465 = 0; num465 < 255; num465++)
                        {
                            Player player3 = Main.player[num465];
                            if (player3.active && !player3.dead && player3.Distance(npc.Center) < (float)num464 && Collision.CanHitLine(npc.Top, 0, 0, player3.Top, 0, 0))
                            {
                                int direction3 = (npc.position.X < player3.position.X).ToDirectionInt();
                                npc.ai[0] = 7f;
                                npc.ai[1] = (float)num463;
                                npc.ai[2] = (float)num465;
                                npc.direction = direction3;
                                npc.netUpdate = true;
                                break;
                            }
                        }
                    }
                    else if (flag55 && npc.ai[0] == 1f && npc.velocity.Y == 0f && Main.rand.Next(300) == 0)
                    {
                        Point b = npc.Center.ToTileCoordinates();
                        bool flag59 = WorldGen.InWorld(b.X, b.Y, 1);
                        if (flag59)
                        {
                            for (int num466 = 0; num466 < 200; num466++)
                            {
                                if (Main.npc[num466].active && Main.npc[num466].aiStyle == 7 && Main.npc[num466].townNPC && Main.npc[num466].ai[0] == 5f)
                                {
                                    Point a = Main.npc[num466].Center.ToTileCoordinates();
                                    if (a == b)
                                    {
                                        flag59 = false;
                                        break;
                                    }
                                }
                            }
                        }
                        if (flag59)
                        {
                            Tile tile2 = Main.tile[b.X, b.Y];
                            flag59 = (tile2.type == 15);
                            if (flag59 && tile2.frameY == 1080)
                            {
                                flag59 = false;
                            }
                            if (flag59)
                            {
                                npc.ai[0] = 5f;
                                npc.ai[1] = (float)(900 + Main.rand.Next(10800));
                                npc.direction = ((tile2.frameX == 0) ? -1 : 1);
                                npc.Bottom = new Vector2((float)(b.X * 16 + 8 + 2 * npc.direction), (float)(b.Y * 16 + 32));
                                npc.velocity = Vector2.Zero;
                                npc.localAI[3] = 0f;
                                npc.netUpdate = true;
                            }
                        }
                    }
                    else if (flag55 && npc.ai[0] == 1f && npc.velocity.Y == 0f && Main.rand.Next(600) == 0 && Utils.PlotTileLine(npc.Top, npc.Bottom, (float)npc.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs)))
                    {
                        Point point2 = (npc.Center + new Vector2((float)(npc.direction * 10), 0f)).ToTileCoordinates();
                        bool flag60 = WorldGen.InWorld(point2.X, point2.Y, 1);
                        if (flag60)
                        {
                            Tile tileSafely6 = Framing.GetTileSafely(point2.X, point2.Y);
                            if (!tileSafely6.nactive() || !TileID.Sets.InteractibleByNPCs[(int)tileSafely6.type])
                            {
                                flag60 = false;
                            }
                        }
                        if (flag60)
                        {
                            npc.ai[0] = 9f;
                            npc.ai[1] = (float)(40 + Main.rand.Next(90));
                            npc.velocity = Vector2.Zero;
                            npc.localAI[3] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                    if (npc.ai[0] < 2f && npc.velocity.Y == 0f && npc.type == 18)
                    {
                        int num467 = -1;
                        for (int num468 = 0; num468 < 200; num468++)
                        {
                            NPC nPC6 = Main.npc[num468];
                            if (nPC6.active && nPC6.townNPC && nPC6.life != nPC6.lifeMax && (num467 == -1 || nPC6.lifeMax - nPC6.life > Main.npc[num467].lifeMax - Main.npc[num467].life) && Collision.CanHitLine(npc.position, npc.width, npc.height, nPC6.position, nPC6.width, nPC6.height) && npc.Distance(nPC6.Center) < 500f)
                            {
                                num467 = num468;
                            }
                        }
                        if (num467 != -1)
                        {
                            npc.ai[0] = 13f;
                            npc.ai[1] = 34f;
                            npc.ai[2] = (float)num467;
                            npc.localAI[3] = 0f;
                            npc.direction = ((npc.position.X < Main.npc[num467].position.X) ? 1 : -1);
                            npc.netUpdate = true;
                        }
                    }
                    if (flag56 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 0 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                    {
                        int num469 = NPCID.Sets.AttackTime[npc.type];
                        int num470 = (num389 == 1) ? num391 : num390;
                        int num471 = (num389 == 1) ? num390 : num391;
                        if (num470 != -1 && !Collision.CanHit(npc.Center, 0, 0, Main.npc[num470].Center, 0, 0))
                        {
                            if (num471 != -1 && Collision.CanHit(npc.Center, 0, 0, Main.npc[num471].Center, 0, 0))
                            {
                                num470 = num471;
                            }
                            else
                            {
                                num470 = -1;
                            }
                        }
                        if (num470 != -1)
                        {
                            npc.localAI[2] = npc.ai[0];
                            npc.ai[0] = 10f;
                            npc.ai[1] = (float)num469;
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.direction = ((npc.position.X < Main.npc[num470].position.X) ? 1 : -1);
                            npc.netUpdate = true;
                        }
                    }
                    else if (flag56 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 1 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                    {
                        int num472 = NPCID.Sets.AttackTime[npc.type];
                        int num473 = (num389 == 1) ? num391 : num390;
                        int num474 = (num389 == 1) ? num390 : num391;
                        if (num473 != -1 && !Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num473].Center, 0, 0))
                        {
                            if (num474 != -1 && Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num474].Center, 0, 0))
                            {
                                num473 = num474;
                            }
                            else
                            {
                                num473 = -1;
                            }
                        }
                        if (num473 != -1)
                        {
                            Vector2 vector48 = npc.DirectionTo(Main.npc[num473].Center);
                            if (vector48.Y <= 0.5f && vector48.Y >= -0.5f)
                            {
                                npc.localAI[2] = npc.ai[0];
                                npc.ai[0] = 12f;
                                npc.ai[1] = (float)num472;
                                npc.ai[2] = vector48.Y;
                                npc.localAI[3] = 0f;
                                npc.direction = ((npc.position.X < Main.npc[num473].position.X) ? 1 : -1);
                                npc.netUpdate = true;
                            }
                        }
                    }
                    if (flag56 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 2 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                    {
                        int num475 = NPCID.Sets.AttackTime[npc.type];
                        int num476 = (num389 == 1) ? num391 : num390;
                        int num477 = (num389 == 1) ? num390 : num391;
                        if (num476 != -1 && !Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num476].Center, 0, 0))
                        {
                            if (num477 != -1 && Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num477].Center, 0, 0))
                            {
                                num476 = num477;
                            }
                            else
                            {
                                num476 = -1;
                            }
                        }
                        if (num476 != -1)
                        {
                            npc.localAI[2] = npc.ai[0];
                            npc.ai[0] = 14f;
                            npc.ai[1] = (float)num475;
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.direction = ((npc.position.X < Main.npc[num476].position.X) ? 1 : -1);
                            npc.netUpdate = true;
                        }
                        else if (npc.type == 20)
                        {
                            npc.localAI[2] = npc.ai[0];
                            npc.ai[0] = 14f;
                            npc.ai[1] = (float)num475;
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                    if (flag56 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 3 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                    {
                        int num478 = NPCID.Sets.AttackTime[npc.type];
                        int num479 = (num389 == 1) ? num391 : num390;
                        int num480 = (num389 == 1) ? num390 : num391;
                        if (num479 != -1 && !Collision.CanHit(npc.Center, 0, 0, Main.npc[num479].Center, 0, 0))
                        {
                            if (num480 != -1 && Collision.CanHit(npc.Center, 0, 0, Main.npc[num480].Center, 0, 0))
                            {
                                num479 = num480;
                            }
                            else
                            {
                                num479 = -1;
                            }
                        }
                        if (num479 != -1)
                        {
                            npc.localAI[2] = npc.ai[0];
                            npc.ai[0] = 15f;
                            npc.ai[1] = (float)num478;
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.direction = ((npc.position.X < Main.npc[num479].position.X) ? 1 : -1);
                            npc.netUpdate = true;
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 8)
            {
                npc.TargetClosest(true);
                npc.velocity.X = npc.velocity.X * 0.93f;
                if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                {
                    npc.velocity.X = 0f;
                }
                if (npc.ai[0] == 0f)
                {
                    npc.ai[0] = 500f;
                }
                if (npc.type == 172)
                {
                    if (npc.alpha < 255)
                    {
                        npc.alpha++;
                    }
                    if (npc.justHit)
                    {
                        npc.alpha = 0;
                    }
                }
                if (npc.ai[2] != 0f && npc.ai[3] != 0f)
                {
                    if (npc.type == 172)
                    {
                        npc.alpha = 255;
                    }

                    npc.position.X = npc.ai[2] * 16f - (float)(npc.width / 2) + 8f;
                    npc.position.Y = npc.ai[3] * 16f - (float)npc.height;
                    npc.velocity.X = 0f;
                    npc.velocity.Y = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] = 0f;
                }
                npc.ai[0] += 1f;
                if (npc.type == 283 || npc.type == 284)
                {
                    if (npc.ai[0] == 50f || npc.ai[0] == 100f || npc.ai[0] == 150f || npc.ai[0] == 200f || npc.ai[0] == 250f)
                    {
                        npc.ai[1] = 30f;
                        npc.netUpdate = true;
                    }
                    if (npc.ai[0] >= 400f)
                    {
                        npc.ai[0] = 700f;
                    }
                }
                else if (npc.type == 172)
                {
                    if (npc.ai[0] == 75f || npc.ai[0] == 150f || npc.ai[0] == 225f || npc.ai[0] == 300f || npc.ai[0] == 375f || npc.ai[0] == 450f)
                    {
                        npc.ai[1] = 30f;
                        npc.netUpdate = true;
                    }
                }
                else if (npc.type == 533)
                {
                    if (npc.ai[0] == 180f)
                    {
                        npc.ai[1] = 181f;
                        npc.netUpdate = true;
                    }
                }
                else if (npc.type == 281 || npc.type == 282)
                {
                    if (npc.ai[0] == 20f || npc.ai[0] == 40f || npc.ai[0] == 60f || npc.ai[0] == 120f || npc.ai[0] == 140f || npc.ai[0] == 160f || npc.ai[0] == 220f || npc.ai[0] == 240f || npc.ai[0] == 260f)
                    {
                        npc.ai[1] = 30f;
                        npc.netUpdate = true;
                    }
                    if (npc.ai[0] >= 460f)
                    {
                        npc.ai[0] = 700f;
                    }
                }
                else if (npc.ai[0] == 100f || npc.ai[0] == 200f || npc.ai[0] == 300f)
                {
                    npc.ai[1] = 30f;
                    npc.netUpdate = true;
                }
                if ((npc.type == 285 || npc.type == 286) && npc.ai[0] > 400f)
                {
                    npc.ai[0] = 650f;
                }
                if (npc.type == 533 && npc.ai[0] >= 360f)
                {
                    npc.ai[0] = 650f;
                }
                if (npc.ai[0] >= 650f && Main.netMode != 1)
                {
                    npc.ai[0] = 1f;
                    int num499 = (int)Main.player[npc.target].position.X / 16;
                    int num500 = (int)Main.player[npc.target].position.Y / 16;
                    int num501 = (int)npc.position.X / 16;
                    int num502 = (int)npc.position.Y / 16;
                    int num503 = 20;
                    int num504 = 0;
                    bool flag61 = false;
                    if (Math.Abs(npc.position.X - Main.player[npc.target].position.X) + Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                    {
                        num504 = 100;
                        flag61 = true;
                    }
                    while (!flag61 && num504 < 100)
                    {
                        num504++;
                        int num505 = Main.rand.Next(num499 - num503, num499 + num503);
                        int num506 = Main.rand.Next(num500 - num503, num500 + num503);
                        for (int num507 = num506; num507 < num500 + num503; num507++)
                        {
                            if ((num507 < num500 - 4 || num507 > num500 + 4 || num505 < num499 - 4 || num505 > num499 + 4) && (num507 < num502 - 1 || num507 > num502 + 1 || num505 < num501 - 1 || num505 > num501 + 1) && Main.tile[num505, num507].nactive())
                            {
                                bool flag62 = true;
                                if ((npc.type == 32 || (npc.type >= 281 && npc.type <= 286)) && !Main.wallDungeon[(int)Main.tile[num505, num507 - 1].wall])
                                {
                                    flag62 = false;
                                }
                                else if (Main.tile[num505, num507 - 1].lava())
                                {
                                    flag62 = false;
                                }
                                if (flag62 && Main.tileSolid[(int)Main.tile[num505, num507].type] && !Collision.SolidTiles(num505 - 1, num505 + 1, num507 - 4, num507 - 1))
                                {
                                    npc.ai[1] = 20f;
                                    npc.ai[2] = (float)num505;
                                    npc.ai[3] = (float)num507;
                                    flag61 = true;
                                    break;
                                }
                            }
                        }
                    }
                    npc.netUpdate = true;
                }
                if (npc.ai[1] > 0f)
                {
                    npc.ai[1] -= 1f;
                    if (npc.type == 533)
                    {
                        if (npc.ai[1] % 30f == 0f && npc.ai[1] / 30f < 5f)
                        {
                            if (Main.netMode != 1)
                            {
                                Point point3 = npc.Center.ToTileCoordinates();
                                Point point4 = Main.player[npc.target].Center.ToTileCoordinates();
                                Vector2 vector49 = Main.player[npc.target].Center - npc.Center;
                                int num508 = 6;
                                int num509 = 6;
                                int num510 = 0;
                                int num511 = 2;
                                int num512 = 0;
                                bool flag63 = false;
                                if (vector49.Length() > 2000f)
                                {
                                    flag63 = true;
                                }
                                while (!flag63)
                                {
                                    if (num512 >= 50)
                                    {
                                        break;
                                    }
                                    num512++;
                                    int num513 = Main.rand.Next(point4.X - num508, point4.X + num508 + 1);
                                    int num514 = Main.rand.Next(point4.Y - num508, point4.Y + num508 + 1);
                                    if ((num514 < point4.Y - num510 || num514 > point4.Y + num510 || num513 < point4.X - num510 || num513 > point4.X + num510) && (num514 < point3.Y - num509 || num514 > point3.Y + num509 || num513 < point3.X - num509 || num513 > point3.X + num509) && !Main.tile[num513, num514].nactive())
                                    {
                                        bool flag64 = true;
                                        if (flag64 && Main.tile[num513, num514].lava())
                                        {
                                            flag64 = false;
                                        }
                                        if (flag64 && Collision.SolidTiles(num513 - num511, num513 + num511, num514 - num511, num514 + num511))
                                        {
                                            flag64 = false;
                                        }
                                        if (flag64)
                                        {
                                            Projectile.NewProjectile((float)(num513 * 16 + 8), (float)(num514 * 16 + 8), 0f, 0f, 596, 0, 1f, Main.myPlayer, (float)npc.target, 0f);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    else if (npc.ai[1] == 25f)
                    {
                        if (npc.type >= 281 && npc.type <= 286)
                        {
                            if (Main.netMode != 1)
                            {
                                float num515 = 6f;
                                if (npc.type == 285 || npc.type == 286)
                                {
                                    num515 = 8f;
                                }
                                if (npc.type == 281 || npc.type == 282)
                                {
                                    num515 = 4f;
                                }
                                Vector2 vector50 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y);
                                float num516 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector50.X;
                                float num517 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector50.Y;
                                if (npc.type == 283 || npc.type == 284)
                                {
                                    num516 += (float)Main.rand.Next(-30, 31);
                                    num517 += (float)Main.rand.Next(-30, 31);
                                    num516 -= Main.player[npc.target].velocity.X * 10f;
                                    num517 -= Main.player[npc.target].velocity.Y * 10f;
                                }
                                float num518 = (float)Math.Sqrt((double)(num516 * num516 + num517 * num517));
                                num518 = num515 / num518;
                                num516 *= num518;
                                num517 *= num518;
                                int num519 = 30;
                                int num520 = 290;
                                if (npc.type == 285 || npc.type == 286)
                                {
                                    num520 = 291;
                                    num519 = 40;
                                }
                                if (npc.type == 281 || npc.type == 282)
                                {
                                    num520 = 293;
                                    num519 = 40;
                                }
                                if (Main.expertMode)
                                {
                                    num519 = (int)((double)num519 * 0.8);
                                }
                                int num521 = Projectile.NewProjectile(vector50.X, vector50.Y, num516, num517, num520, num519, 0f, Main.myPlayer, 0f, 0f);
                                Main.projectile[num521].timeLeft = 300;
                                if (num520 == 291)
                                {
                                    Main.projectile[num521].ai[0] = Main.player[npc.target].Center.X;
                                    Main.projectile[num521].ai[1] = Main.player[npc.target].Center.Y;
                                    Main.projectile[num521].netUpdate = true;
                                }
                                npc.localAI[0] = 0f;
                            }
                        }
                        else
                        {
                            if (Main.netMode != 1)
                            {
                                if (npc.type == 29 || npc.type == 45)
                                {
                                    NPC.NewNPC((int)npc.position.X + npc.width / 2, (int)npc.position.Y - 8, 30, 0, 0f, 0f, 0f, 0f, 255);
                                }
                                else if (npc.type == 32)
                                {
                                    NPC.NewNPC((int)npc.position.X + npc.width / 2, (int)npc.position.Y - 8, 33, 0, 0f, 0f, 0f, 0f, 255);
                                }
                                else if (npc.type == 172)
                                {
                                    float num522 = 10f;
                                    Vector2 vector51 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    float num523 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector51.X + (float)Main.rand.Next(-10, 11);
                                    float num524 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector51.Y + (float)Main.rand.Next(-10, 11);
                                    float num525 = (float)Math.Sqrt((double)(num523 * num523 + num524 * num524));
                                    num525 = num522 / num525;
                                    num523 *= num525;
                                    num524 *= num525;
                                    int num526 = 40;
                                    int num527 = 129;
                                    int num528 = Projectile.NewProjectile(vector51.X, vector51.Y, num523, num524, num527, num526, 0f, Main.myPlayer, 0f, 0f);
                                    Main.projectile[num528].timeLeft = 300;
                                    npc.localAI[0] = 0f;
                                }
                                else
                                {
                                    NPC.NewNPC((int)npc.position.X + npc.width / 2 + npc.direction * 8, (int)npc.position.Y + 20, 25, 0, 0f, 0f, 0f, 0f, 255);
                                }
                            }
                        }
                    }
                }
                if (npc.type == 29 || npc.type == 45)
                {
                    if (Main.rand.Next(5) == 0)
                    {
                        return;
                    }
                }
                else if (npc.type == 32)
                {
                    if (Main.rand.Next(3) != 0)
                    {
                        return;
                    }
                }
                else
                {
                    if (npc.type == 172)
                    {
                        return;
                    }
                    if (npc.type == 283 || npc.type == 284)
                    {
                        if (Main.rand.Next(2) == 0)
                        {
                            return;
                        }
                    }
                    else if (npc.type == 285 || npc.type == 286)
                    {
                        if (Main.rand.Next(2) == 0)
                        {
                            return;
                        }
                    }
                    else if (npc.type == 281 || npc.type == 282)
                    {
                        if (Main.rand.Next(2) == 0)
                        {
                            return;
                        }
                    }
                    else
                    {
                        if (npc.type == 533)
                        {
                            return;
                        }
                        if (Main.rand.Next(2) == 0)
                        {
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 9)
            {
                if (npc.type == 516)
                {
                    if (npc.alpha < 220)
                    {
                        npc.alpha += 40;
                    }
                    if (npc.ai[0] == 0f)
                    {
                        npc.ai[0] = 1f;
                        Vector2 vector52 = Main.player[npc.target].Center - npc.Center;
                        vector52.Normalize();
                        if (vector52.HasNaNs())
                        {
                            vector52 = -Vector2.UnitY;
                        }
                        vector52 = vector52.RotatedByRandom(1.5707963705062866).RotatedBy(-0.78539818525314331, default(Vector2));
                        if (vector52.Y > 0.2f)
                        {
                            vector52.Y = 0.2f;
                        }
                        npc.velocity = vector52 * (6f + Main.rand.NextFloat() * 4f);
                    }
                    if (npc.collideX || npc.collideY || npc.Distance(Main.player[npc.target].Center) < 20f)
                    {
                        npc.StrikeNPCNoInteraction(9999, 0f, npc.direction, false, false, false);
                    }
                }
                if (npc.target == 255)
                {
                    npc.TargetClosest(true);
                    float num538 = 6f;
                    if (npc.type == 25)
                    {
                        num538 = 5f;
                    }
                    if (npc.type == 112)
                    {
                        num538 = 7f;
                    }
                    Vector2 vector53 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num539 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector53.X;
                    float num540 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector53.Y;
                    float num541 = (float)Math.Sqrt((double)(num539 * num539 + num540 * num540));
                    num541 = num538 / num541;
                    npc.velocity.X = num539 * num541;
                    npc.velocity.Y = num540 * num541;
                }
                if (npc.type == 112)
                {
                    npc.damage = ((npc.ai[1] == 1f) ? 65 : npc.defDamage);
                    npc.ai[0] += 1f;
                    if (npc.ai[0] > 3f)
                    {
                        npc.ai[0] = 3f;
                    }
                    if (npc.ai[0] == 2f)
                    {
                        npc.position += npc.velocity;
                    }
                }
                if (npc.type == 112 && Collision.SolidCollision(npc.position, npc.width, npc.height))
                {
                    int arg_1FD8D_0 = Main.netMode;
                    npc.StrikeNPCNoInteraction(999, 0f, 0, false, false, false);
                }
                if (npc.timeLeft > 100)
                {
                    npc.timeLeft = 100;
                }
                if (npc.type != 516)
                {
                    for (int num544 = 0; num544 < 2; num544++)
                    {
                        if (npc.type == 30)
                        {
                            npc.alpha = 255;
                        }
                    }
                    npc.rotation += 0.4f * (float)npc.direction;
                    return;
                }
                npc.rotation += 0.1f * (float)npc.direction;
                float num556 = 15f;
                float num557 = 0.0833333358f;
                Vector2 center4 = npc.Center;
                Vector2 center5 = Main.player[npc.target].Center;
                Vector2 vec3 = center5 - center4;
                vec3.Normalize();
                if (vec3.HasNaNs())
                {
                    vec3 = new Vector2((float)npc.direction, 0f);
                }
                npc.velocity = (npc.velocity * (num556 - 1f) + vec3 * (npc.velocity.Length() + num557)) / num556;
                if (npc.velocity.Length() < 6f)
                {
                    npc.velocity *= 1.05f;
                    return;
                }
            }
            else if (npc.aiStyle == 10)
            {
                float num558 = 1f;
                float num559 = 0.011f;
                npc.TargetClosest(true);
                Vector2 vector54 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                float num560 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector54.X;
                float num561 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector54.Y;
                float num562 = (float)Math.Sqrt((double)(num560 * num560 + num561 * num561));
                float num563 = num562;
                npc.ai[1] += 1f;
                if (npc.ai[1] > 600f)
                {
                    num559 *= 8f;
                    num558 = 4f;
                    if (npc.ai[1] > 650f)
                    {
                        npc.ai[1] = 0f;
                    }
                }
                else if (num563 < 250f)
                {
                    npc.ai[0] += 0.9f;
                    if (npc.ai[0] > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.019f;
                    }
                    else
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.019f;
                    }
                    if (npc.ai[0] < -100f || npc.ai[0] > 100f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.019f;
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X - 0.019f;
                    }
                    if (npc.ai[0] > 200f)
                    {
                        npc.ai[0] = -200f;
                    }
                }
                if (num563 > 350f)
                {
                    num558 = 5f;
                    num559 = 0.3f;
                }
                else if (num563 > 300f)
                {
                    num558 = 3f;
                    num559 = 0.2f;
                }
                else if (num563 > 250f)
                {
                    num558 = 1.5f;
                    num559 = 0.1f;
                }
                num562 = num558 / num562;
                num560 *= num562;
                num561 *= num562;
                if (Main.player[npc.target].dead)
                {
                    num560 = (float)npc.direction * num558 / 2f;
                    num561 = -num558 / 2f;
                }
                if (npc.velocity.X < num560)
                {
                    npc.velocity.X = npc.velocity.X + num559;
                }
                else if (npc.velocity.X > num560)
                {
                    npc.velocity.X = npc.velocity.X - num559;
                }
                if (npc.velocity.Y < num561)
                {
                    npc.velocity.Y = npc.velocity.Y + num559;
                }
                else if (npc.velocity.Y > num561)
                {
                    npc.velocity.Y = npc.velocity.Y - num559;
                }
                if (num560 > 0f)
                {
                    npc.spriteDirection = -1;
                    npc.rotation = (float)Math.Atan2((double)num561, (double)num560);
                }
                if (num560 < 0f)
                {
                    npc.spriteDirection = 1;
                    npc.rotation = (float)Math.Atan2((double)num561, (double)num560) + 3.14f;
                }
                if (npc.type == 289)
                {
                    if (npc.justHit)
                    {
                        npc.ai[2] = 0f;
                        npc.ai[3] = 0f;
                    }
                    vector54 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    num560 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector54.X;
                    num561 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector54.Y;
                    num562 = (float)Math.Sqrt((double)(num560 * num560 + num561 * num561));
                    if (num562 > 500f)
                    {
                        npc.ai[2] = 0f;
                        npc.ai[3] = 0f;
                        return;
                    }
                    npc.ai[2] += 1f;
                    if (npc.ai[3] == 0f)
                    {
                        if (npc.ai[2] > 120f)
                        {
                            npc.ai[2] = 0f;
                            npc.ai[3] = 1f;
                            npc.netUpdate = true;
                            return;
                        }
                    }
                    else
                    {
                        if (npc.ai[2] > 40f)
                        {
                            npc.ai[3] = 0f;
                        }
                        if (Main.netMode != 1 && npc.ai[2] == 20f)
                        {
                            float num564 = 6f;
                            int num565 = 25;
                            int num566 = 299;
                            num562 = num564 / num562;
                            num560 *= num562;
                            num561 *= num562;
                            Projectile.NewProjectile(vector54.X, vector54.Y, num560, num561, num566, num565, 0f, Main.myPlayer, 0f, 0f);
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 11)
            {
                npc.defense = npc.defDefense;
                if (npc.ai[0] == 0f && Main.netMode != 1)
                {
                    npc.TargetClosest(true);
                    npc.ai[0] = 1f;
                    if (npc.type != 68)
                    {
                        int num567 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 36, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num567].ai[0] = -1f;
                        Main.npc[num567].ai[1] = (float)npc.whoAmI;
                        Main.npc[num567].target = npc.target;
                        Main.npc[num567].netUpdate = true;
                        num567 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 36, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num567].ai[0] = 1f;
                        Main.npc[num567].ai[1] = (float)npc.whoAmI;
                        Main.npc[num567].ai[3] = 150f;
                        Main.npc[num567].target = npc.target;
                        Main.npc[num567].netUpdate = true;
                    }
                }
                if (npc.type == 68 && npc.ai[1] != 3f && npc.ai[1] != 2f)
                {
                    npc.ai[1] = 2f;
                }
                if (Main.player[npc.target].dead || Math.Abs(npc.position.X - Main.player[npc.target].position.X) > 2000f || Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                {
                    npc.TargetClosest(true);
                    if (Main.player[npc.target].dead || Math.Abs(npc.position.X - Main.player[npc.target].position.X) > 2000f || Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                    {
                        npc.ai[1] = 3f;
                    }
                }
                if (Main.dayTime && npc.ai[1] != 3f && npc.ai[1] != 2f)
                {
                    npc.ai[1] = 2f;
                }
                int num568 = 0;
                if (Main.expertMode)
                {
                    for (int num569 = 0; num569 < 200; num569++)
                    {
                        if (Main.npc[num569].active && Main.npc[num569].type == npc.type + 1)
                        {
                            num568++;
                        }
                    }
                    npc.defense += num568 * 25;
                    if ((num568 < 2 || (double)npc.life < (double)npc.lifeMax * 0.75) && npc.ai[1] == 0f)
                    {
                        float num570 = 80f;
                        if (num568 == 0)
                        {
                            num570 /= 2f;
                        }
                        if (Main.netMode != 1 && npc.ai[2] % num570 == 0f)
                        {
                            Vector2 vector55 = npc.Center;
                            float num571 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector55.X;
                            float num572 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector55.Y;
                            Math.Sqrt((double)(num571 * num571 + num572 * num572));
                            if (Collision.CanHit(vector55, 1, 1, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num573 = 3f;
                                if (num568 == 0)
                                {
                                    num573 += 2f;
                                }
                                float num574 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector55.X + (float)Main.rand.Next(-20, 21);
                                float num575 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector55.Y + (float)Main.rand.Next(-20, 21);
                                float num576 = (float)Math.Sqrt((double)(num574 * num574 + num575 * num575));
                                num576 = num573 / num576;
                                num574 *= num576;
                                num575 *= num576;
                                Vector2 value12 = new Vector2(num574 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f, num575 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f);
                                value12.Normalize();
                                value12 *= num573;
                                value12 += npc.velocity;
                                num574 = value12.X;
                                num575 = value12.Y;
                                int num577 = 17;
                                int num578 = 270;
                                vector55 += value12 * 5f;
                                int num579 = Projectile.NewProjectile(vector55.X, vector55.Y, num574, num575, num578, num577, 0f, Main.myPlayer, -1f, 0f);
                                Main.projectile[num579].timeLeft = 300;
                            }
                        }
                    }
                }
                if (npc.ai[1] == 0f)
                {
                    npc.damage = npc.defDamage;
                    npc.ai[2] += 1f;
                    if (npc.ai[2] >= 800f)
                    {
                        npc.ai[2] = 0f;
                        npc.ai[1] = 1f;
                        npc.TargetClosest(true);
                        npc.netUpdate = true;
                    }
                    npc.rotation = npc.velocity.X / 15f;
                    float num580 = 0.02f;
                    float num581 = 2f;
                    float num582 = 0.05f;
                    float num583 = 8f;
                    if (Main.expertMode)
                    {
                        num580 = 0.03f;
                        num581 = 4f;
                        num582 = 0.07f;
                        num583 = 9.5f;
                    }
                    if (npc.position.Y > Main.player[npc.target].position.Y - 250f)
                    {
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.98f;
                        }
                        npc.velocity.Y = npc.velocity.Y - num580;
                        if (npc.velocity.Y > num581)
                        {
                            npc.velocity.Y = num581;
                        }
                    }
                    else if (npc.position.Y < Main.player[npc.target].position.Y - 250f)
                    {
                        if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.98f;
                        }
                        npc.velocity.Y = npc.velocity.Y + num580;
                        if (npc.velocity.Y < -num581)
                        {
                            npc.velocity.Y = -num581;
                        }
                    }
                    if (npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))
                    {
                        if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.98f;
                        }
                        npc.velocity.X = npc.velocity.X - num582;
                        if (npc.velocity.X > num583)
                        {
                            npc.velocity.X = num583;
                        }
                    }
                    if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))
                    {
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.98f;
                        }
                        npc.velocity.X = npc.velocity.X + num582;
                        if (npc.velocity.X < -num583)
                        {
                            npc.velocity.X = -num583;
                        }
                    }
                }
                else if (npc.ai[1] == 1f)
                {
                    npc.defense -= 10;
                    npc.ai[2] += 1f;
                    if (npc.ai[2] >= 400f)
                    {
                        npc.ai[2] = 0f;
                        npc.ai[1] = 0f;
                    }
                    npc.rotation += (float)npc.direction * 0.3f;
                    Vector2 vector56 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num584 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector56.X;
                    float num585 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector56.Y;
                    float num586 = (float)Math.Sqrt((double)(num584 * num584 + num585 * num585));
                    float num587 = 1.5f;
                    if (Main.expertMode)
                    {
                        npc.damage = (int)((double)npc.defDamage * 1.3);
                        num587 = 4f;
                        if (num586 > 150f)
                        {
                            num587 *= 1.05f;
                        }
                        if (num586 > 200f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 250f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 300f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 350f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 400f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 450f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 500f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 550f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num586 > 600f)
                        {
                            num587 *= 1.1f;
                        }
                        if (num568 == 0)
                        {
                            num587 *= 1.2f;
                        }
                        else if (num568 == 1)
                        {
                            num587 *= 1.1f;
                        }
                    }
                    num586 = num587 / num586;
                    npc.velocity.X = num584 * num586;
                    npc.velocity.Y = num585 * num586;
                }
                else if (npc.ai[1] == 2f)
                {
                    npc.damage = 1000;
                    npc.defense = 9999;
                    npc.rotation += (float)npc.direction * 0.3f;
                    Vector2 vector57 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num588 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector57.X;
                    float num589 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector57.Y;
                    float num590 = (float)Math.Sqrt((double)(num588 * num588 + num589 * num589));
                    num590 = 8f / num590;
                    npc.velocity.X = num588 * num590;
                    npc.velocity.Y = num589 * num590;
                }
                else if (npc.ai[1] == 3f)
                {
                    npc.velocity.Y = npc.velocity.Y + 0.1f;
                    if (npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                    }
                    npc.velocity.X = npc.velocity.X * 0.95f;
                    if (npc.timeLeft > 50)
                    {
                        npc.timeLeft = 50;
                    }
                }
                if (npc.ai[1] != 2f && npc.ai[1] != 3f && npc.type != 68)
                {
                    if (num568 == 0 && Main.expertMode)
                    {
                        return;
                    }
                    return;
                }
            }
            else if (npc.aiStyle == 12)
            {
                npc.spriteDirection = -(int)npc.ai[0];
                if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != 11)
                {
                    npc.ai[2] += 10f;
                    if (npc.ai[2] > 50f || Main.netMode != 2)
                    {
                        npc.life = -1;
                        npc.HitEffect(0, 10.0);
                        npc.active = false;
                    }
                }
                if (npc.ai[2] == 0f || npc.ai[2] == 3f)
                {
                    if (Main.npc[(int)npc.ai[1]].ai[1] == 3f && npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                    }
                    if (Main.npc[(int)npc.ai[1]].ai[1] != 0f)
                    {
                        if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y - 100f)
                        {
                            if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.96f;
                            }
                            npc.velocity.Y = npc.velocity.Y - 0.07f;
                            if (npc.velocity.Y > 6f)
                            {
                                npc.velocity.Y = 6f;
                            }
                        }
                        else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 100f)
                        {
                            if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.96f;
                            }
                            npc.velocity.Y = npc.velocity.Y + 0.07f;
                            if (npc.velocity.Y < -6f)
                            {
                                npc.velocity.Y = -6f;
                            }
                        }
                        if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 120f * npc.ai[0])
                        {
                            if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.96f;
                            }
                            npc.velocity.X = npc.velocity.X - 0.1f;
                            if (npc.velocity.X > 8f)
                            {
                                npc.velocity.X = 8f;
                            }
                        }
                        if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 120f * npc.ai[0])
                        {
                            if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.96f;
                            }
                            npc.velocity.X = npc.velocity.X + 0.1f;
                            if (npc.velocity.X < -8f)
                            {
                                npc.velocity.X = -8f;
                            }
                        }
                    }
                    else
                    {
                        npc.ai[3] += 1f;
                        if (Main.expertMode)
                        {
                            npc.ai[3] += 0.5f;
                        }
                        if (npc.ai[3] >= 300f)
                        {
                            npc.ai[2] += 1f;
                            npc.ai[3] = 0f;
                            npc.netUpdate = true;
                        }
                        if (Main.expertMode)
                        {
                            if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y + 230f)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.04f;
                                if (npc.velocity.Y > 3f)
                                {
                                    npc.velocity.Y = 3f;
                                }
                            }
                            else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y + 230f)
                            {
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.04f;
                                if (npc.velocity.Y < -3f)
                                {
                                    npc.velocity.Y = -3f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0])
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.07f;
                                if (npc.velocity.X > 8f)
                                {
                                    npc.velocity.X = 8f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0])
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.07f;
                                if (npc.velocity.X < -8f)
                                {
                                    npc.velocity.X = -8f;
                                }
                            }
                        }
                        if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y + 230f)
                        {
                            if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.96f;
                            }
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if (npc.velocity.Y > 3f)
                            {
                                npc.velocity.Y = 3f;
                            }
                        }
                        else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y + 230f)
                        {
                            if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.96f;
                            }
                            npc.velocity.Y = npc.velocity.Y + 0.04f;
                            if (npc.velocity.Y < -3f)
                            {
                                npc.velocity.Y = -3f;
                            }
                        }
                        if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0])
                        {
                            if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.96f;
                            }
                            npc.velocity.X = npc.velocity.X - 0.07f;
                            if (npc.velocity.X > 8f)
                            {
                                npc.velocity.X = 8f;
                            }
                        }
                        if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0])
                        {
                            if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.96f;
                            }
                            npc.velocity.X = npc.velocity.X + 0.07f;
                            if (npc.velocity.X < -8f)
                            {
                                npc.velocity.X = -8f;
                            }
                        }
                    }
                    Vector2 vector58 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num593 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector58.X;
                    float num594 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector58.Y;
                    Math.Sqrt((double)(num593 * num593 + num594 * num594));
                    npc.rotation = (float)Math.Atan2((double)num594, (double)num593) + 1.57f;
                    return;
                }
                if (npc.ai[2] == 1f)
                {
                    Vector2 vector59 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num595 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector59.X;
                    float num596 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector59.Y;
                    float num597 = (float)Math.Sqrt((double)(num595 * num595 + num596 * num596));
                    npc.rotation = (float)Math.Atan2((double)num596, (double)num595) + 1.57f;
                    npc.velocity.X = npc.velocity.X * 0.95f;
                    npc.velocity.Y = npc.velocity.Y - 0.1f;
                    if (Main.expertMode)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.06f;
                        if (npc.velocity.Y < -13f)
                        {
                            npc.velocity.Y = -13f;
                        }
                    }
                    else if (npc.velocity.Y < -8f)
                    {
                        npc.velocity.Y = -8f;
                    }
                    if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 200f)
                    {
                        npc.TargetClosest(true);
                        npc.ai[2] = 2f;
                        vector59 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        num595 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector59.X;
                        num596 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector59.Y;
                        num597 = (float)Math.Sqrt((double)(num595 * num595 + num596 * num596));
                        if (Main.expertMode)
                        {
                            num597 = 21f / num597;
                        }
                        else
                        {
                            num597 = 18f / num597;
                        }
                        npc.velocity.X = num595 * num597;
                        npc.velocity.Y = num596 * num597;
                        npc.netUpdate = true;
                        return;
                    }
                }
                else if (npc.ai[2] == 2f)
                {
                    if (npc.position.Y > Main.player[npc.target].position.Y || npc.velocity.Y < 0f)
                    {
                        npc.ai[2] = 3f;
                        return;
                    }
                }
                else if (npc.ai[2] == 4f)
                {
                    Vector2 vector60 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num598 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector60.X;
                    float num599 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector60.Y;
                    float num600 = (float)Math.Sqrt((double)(num598 * num598 + num599 * num599));
                    npc.rotation = (float)Math.Atan2((double)num599, (double)num598) + 1.57f;
                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                    npc.velocity.X = npc.velocity.X + 0.1f * -npc.ai[0];
                    if (Main.expertMode)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f * -npc.ai[0];
                        if (npc.velocity.X < -12f)
                        {
                            npc.velocity.X = -12f;
                        }
                        else if (npc.velocity.X > 12f)
                        {
                            npc.velocity.X = 12f;
                        }
                    }
                    else if (npc.velocity.X < -8f)
                    {
                        npc.velocity.X = -8f;
                    }
                    else if (npc.velocity.X > 8f)
                    {
                        npc.velocity.X = 8f;
                    }
                    if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 500f || npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) + 500f)
                    {
                        npc.TargetClosest(true);
                        npc.ai[2] = 5f;
                        vector60 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        num598 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector60.X;
                        num599 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector60.Y;
                        num600 = (float)Math.Sqrt((double)(num598 * num598 + num599 * num599));
                        if (Main.expertMode)
                        {
                            num600 = 22f / num600;
                        }
                        else
                        {
                            num600 = 17f / num600;
                        }
                        npc.velocity.X = num598 * num600;
                        npc.velocity.Y = num599 * num600;
                        npc.netUpdate = true;
                        return;
                    }
                }
                else if (npc.ai[2] == 5f && ((npc.velocity.X > 0f && npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2)) || (npc.velocity.X < 0f && npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))))
                {
                    npc.ai[2] = 0f;
                    return;
                }
            }
            else if (npc.aiStyle == 13)
            {
                if (npc.ai[0] < 0f || npc.ai[0] >= (float)Main.maxTilesX || npc.ai[1] < 0f || npc.ai[1] >= (float)Main.maxTilesX)
                {
                    return;
                }
                if (Main.tile[(int)npc.ai[0], (int)npc.ai[1]] == null)
                {
                    Main.tile[(int)npc.ai[0], (int)npc.ai[1]] = new Tile();
                }
                if (!Main.tile[(int)npc.ai[0], (int)npc.ai[1]].active())
                {
                    npc.life = -1;
                    npc.HitEffect(0, 10.0);
                    npc.active = false;
                    return;
                }
                npc.TargetClosest(true);
                float num601 = 0.035f;
                float num602 = 150f;
                if (npc.type == 43)
                {
                    num602 = 250f;
                }
                if (npc.type == 101)
                {
                    num602 = 175f;
                }
                if (npc.type == 259)
                {
                    num602 = 100f;
                }
                if (npc.type == 175)
                {
                    num602 = 500f;
                    num601 = 0.05f;
                }
                if (npc.type == 260)
                {
                    num602 = 350f;
                    num601 = 0.15f;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] > 300f)
                {
                    num602 = (float)((int)((double)num602 * 1.3));
                    if (npc.ai[2] > 450f)
                    {
                        npc.ai[2] = 0f;
                    }
                }
                Vector2 vector61 = new Vector2(npc.ai[0] * 16f + 8f, npc.ai[1] * 16f + 8f);
                float num603 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - (float)(npc.width / 2) - vector61.X;
                float num604 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - (float)(npc.height / 2) - vector61.Y;
                float num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
                if (num605 > num602)
                {
                    num605 = num602 / num605;
                    num603 *= num605;
                    num604 *= num605;
                }
                if (npc.position.X < npc.ai[0] * 16f + 8f + num603)
                {
                    npc.velocity.X = npc.velocity.X + num601;
                    if (npc.velocity.X < 0f && num603 > 0f)
                    {
                        npc.velocity.X = npc.velocity.X + num601 * 1.5f;
                    }
                }
                else if (npc.position.X > npc.ai[0] * 16f + 8f + num603)
                {
                    npc.velocity.X = npc.velocity.X - num601;
                    if (npc.velocity.X > 0f && num603 < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - num601 * 1.5f;
                    }
                }
                if (npc.position.Y < npc.ai[1] * 16f + 8f + num604)
                {
                    npc.velocity.Y = npc.velocity.Y + num601;
                    if (npc.velocity.Y < 0f && num604 > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + num601 * 1.5f;
                    }
                }
                else if (npc.position.Y > npc.ai[1] * 16f + 8f + num604)
                {
                    npc.velocity.Y = npc.velocity.Y - num601;
                    if (npc.velocity.Y > 0f && num604 < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - num601 * 1.5f;
                    }
                }
                if (npc.type == 43)
                {
                    if (npc.velocity.X > 3f)
                    {
                        npc.velocity.X = 3f;
                    }
                    if (npc.velocity.X < -3f)
                    {
                        npc.velocity.X = -3f;
                    }
                    if (npc.velocity.Y > 3f)
                    {
                        npc.velocity.Y = 3f;
                    }
                    if (npc.velocity.Y < -3f)
                    {
                        npc.velocity.Y = -3f;
                    }
                }
                else if (npc.type == 175)
                {
                    if (npc.velocity.X > 4f)
                    {
                        npc.velocity.X = 4f;
                    }
                    if (npc.velocity.X < -4f)
                    {
                        npc.velocity.X = -4f;
                    }
                    if (npc.velocity.Y > 4f)
                    {
                        npc.velocity.Y = 4f;
                    }
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                }
                else
                {
                    if (npc.velocity.X > 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                    if (npc.velocity.X < -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                    if (npc.velocity.Y > 2f)
                    {
                        npc.velocity.Y = 2f;
                    }
                    if (npc.velocity.Y < -2f)
                    {
                        npc.velocity.Y = -2f;
                    }
                }
                if (npc.type == 259 || npc.type == 260)
                {
                    npc.rotation = (float)Math.Atan2((double)num604, (double)num603) + 1.57f;
                }
                else
                {
                    if (num603 > 0f)
                    {
                        npc.spriteDirection = 1;
                        npc.rotation = (float)Math.Atan2((double)num604, (double)num603);
                    }
                    if (num603 < 0f)
                    {
                        npc.spriteDirection = -1;
                        npc.rotation = (float)Math.Atan2((double)num604, (double)num603) + 3.14f;
                    }
                }
                if (npc.collideX)
                {
                    npc.netUpdate = true;
                    npc.velocity.X = npc.oldVelocity.X * -0.7f;
                    if (npc.velocity.X > 0f && npc.velocity.X < 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                    if (npc.velocity.X < 0f && npc.velocity.X > -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                }
                if (npc.collideY)
                {
                    npc.netUpdate = true;
                    npc.velocity.Y = npc.oldVelocity.Y * -0.7f;
                    if (npc.velocity.Y > 0f && npc.velocity.Y < 2f)
                    {
                        npc.velocity.Y = 2f;
                    }
                    if (npc.velocity.Y < 0f && npc.velocity.Y > -2f)
                    {
                        npc.velocity.Y = -2f;
                    }
                }
                if (Main.netMode != 1)
                {
                    if (npc.type == 101 && !Main.player[npc.target].dead)
                    {
                        if (npc.justHit)
                        {
                            npc.localAI[0] = 0f;
                        }
                        npc.localAI[0] += 1f;
                        if (npc.localAI[0] >= 120f)
                        {
                            if (!Collision.SolidCollision(npc.position, npc.width, npc.height) && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num606 = 10f;
                                vector61 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                num603 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector61.X + (float)Main.rand.Next(-10, 11);
                                num604 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector61.Y + (float)Main.rand.Next(-10, 11);
                                num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
                                num605 = num606 / num605;
                                num603 *= num605;
                                num604 *= num605;
                                int num607 = 22;
                                if (Main.expertMode)
                                {
                                    num607 = (int)((double)num607 * 0.8);
                                }
                                int num608 = 96;
                                int num609 = Projectile.NewProjectile(vector61.X, vector61.Y, num603, num604, num608, num607, 0f, Main.myPlayer, 0f, 0f);
                                Main.projectile[num609].timeLeft = 300;
                                npc.localAI[0] = 0f;
                            }
                            else
                            {
                                npc.localAI[0] = 100f;
                            }
                        }
                    }
                    if (npc.type == 260 && !Main.player[npc.target].dead)
                    {
                        if (npc.justHit)
                        {
                            npc.localAI[0] = 0f;
                        }
                        npc.localAI[0] += 1f;
                        if (npc.localAI[0] >= 150f)
                        {
                            if (!Collision.SolidCollision(npc.position, npc.width, npc.height))
                            {
                                float num610 = 14f;
                                vector61 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                num603 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector61.X + (float)Main.rand.Next(-10, 11);
                                float num611 = Math.Abs(num603 * 0.1f);
                                if (num604 > 0f)
                                {
                                    num611 = 0f;
                                }
                                num604 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector61.Y + (float)Main.rand.Next(-10, 11) - num611;
                                num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
                                num605 = num610 / num605;
                                num603 *= num605;
                                num604 *= num605;
                                int num612 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 261, 0, 0f, 0f, 0f, 0f, 255);
                                Main.npc[num612].velocity.X = num603;
                                Main.npc[num612].velocity.Y = num604;
                                Main.npc[num612].netUpdate = true;
                                npc.localAI[0] = 0f;
                                return;
                            }
                            npc.localAI[0] = 250f;
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 14)
            {
                npc.noGravity = true;
                if (npc.collideX)
                {
                    npc.velocity.X = npc.oldVelocity.X * -0.5f;
                    if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                    if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                }
                if (npc.collideY)
                {
                    npc.velocity.Y = npc.oldVelocity.Y * -0.5f;
                    if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                    {
                        npc.velocity.Y = 1f;
                    }
                    if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                    {
                        npc.velocity.Y = -1f;
                    }
                }
                if (npc.type == 226)
                {
                    int direction4 = 1;
                    int num615 = 1;
                    if (npc.velocity.X < 0f)
                    {
                        direction4 = -1;
                    }
                    if (npc.velocity.Y < 0f)
                    {
                        num615 = -1;
                    }
                    npc.TargetClosest(true);
                    if (!Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.direction = direction4;
                        npc.directionY = num615;
                    }
                }
                else
                {
                    npc.TargetClosest(true);
                }
                if (npc.type == 158)
                {
                    if ((double)npc.position.Y < Main.worldSurface * 16.0 && Main.dayTime && !Main.eclipse)
                    {
                        npc.directionY = -1;
                        npc.direction *= -1;
                    }
                    if (npc.direction == -1 && npc.velocity.X > -7f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.2f;
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X < -7f)
                        {
                            npc.velocity.X = -7f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 7f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.2f;
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X > 7f)
                        {
                            npc.velocity.X = 7f;
                        }
                    }
                    if (npc.directionY == -1 && npc.velocity.Y > -7f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.2f;
                        if (npc.velocity.Y > 4f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.1f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        if (npc.velocity.Y < -7f)
                        {
                            npc.velocity.Y = -7f;
                        }
                    }
                    else if (npc.directionY == 1 && npc.velocity.Y < 7f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.2f;
                        if (npc.velocity.Y < -4f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.1f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        if (npc.velocity.Y > 7f)
                        {
                            npc.velocity.Y = 7f;
                        }
                    }
                }
                else if (npc.type == 226)
                {
                    if (npc.direction == -1 && npc.velocity.X > -4f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.2f;
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = -4f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 4f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.2f;
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = 4f;
                        }
                    }
                    if (npc.directionY == -1 && (double)npc.velocity.Y > -2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.1f;
                        if ((double)npc.velocity.Y > 2.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.03f;
                        }
                        if ((double)npc.velocity.Y < -2.5)
                        {
                            npc.velocity.Y = -2.5f;
                        }
                    }
                    else if (npc.directionY == 1 && (double)npc.velocity.Y < 2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                        if ((double)npc.velocity.Y < -2.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.03f;
                        }
                        if ((double)npc.velocity.Y > 2.5)
                        {
                            npc.velocity.Y = 2.5f;
                        }
                    }
                }
                else
                {
                    if (npc.direction == -1 && npc.velocity.X > -4f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = -4f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 4f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = 4f;
                        }
                    }
                    if (npc.directionY == -1 && (double)npc.velocity.Y > -1.5)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.04f;
                        if ((double)npc.velocity.Y > 1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.03f;
                        }
                        if ((double)npc.velocity.Y < -1.5)
                        {
                            npc.velocity.Y = -1.5f;
                        }
                    }
                    else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.04f;
                        if ((double)npc.velocity.Y < -1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.03f;
                        }
                        if ((double)npc.velocity.Y > 1.5)
                        {
                            npc.velocity.Y = 1.5f;
                        }
                    }
                }
                if (npc.type == 49 || npc.type == 51 || npc.type == 60 || npc.type == 62 || npc.type == 66 || npc.type == 93 || npc.type == 137 || npc.type == 150 || npc.type == 151 || npc.type == 152)
                {
                    if (npc.wet)
                    {
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.95f;
                        }
                        npc.velocity.Y = npc.velocity.Y - 0.5f;
                        if (npc.velocity.Y < -4f)
                        {
                            npc.velocity.Y = -4f;
                        }
                        npc.TargetClosest(true);
                    }
                    if (npc.type == 60)
                    {
                        if (npc.direction == -1 && npc.velocity.X > -4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                            if (npc.velocity.X > 4f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.07f;
                            }
                            else if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.03f;
                            }
                            if (npc.velocity.X < -4f)
                            {
                                npc.velocity.X = -4f;
                            }
                        }
                        else if (npc.direction == 1 && npc.velocity.X < 4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                            if (npc.velocity.X < -4f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.07f;
                            }
                            else if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.03f;
                            }
                            if (npc.velocity.X > 4f)
                            {
                                npc.velocity.X = 4f;
                            }
                        }
                        if (npc.directionY == -1 && (double)npc.velocity.Y > -1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.03f;
                            }
                            else if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.02f;
                            }
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = -1.5f;
                            }
                        }
                        else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.04f;
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.03f;
                            }
                            else if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.02f;
                            }
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = 1.5f;
                            }
                        }
                    }
                    else
                    {
                        if (npc.direction == -1 && npc.velocity.X > -4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                            if (npc.velocity.X > 4f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.05f;
                            }
                            if (npc.velocity.X < -4f)
                            {
                                npc.velocity.X = -4f;
                            }
                        }
                        else if (npc.direction == 1 && npc.velocity.X < 4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                            if (npc.velocity.X < -4f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            else if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.05f;
                            }
                            if (npc.velocity.X > 4f)
                            {
                                npc.velocity.X = 4f;
                            }
                        }
                        if (npc.directionY == -1 && (double)npc.velocity.Y > -1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                            }
                            else if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.03f;
                            }
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = -1.5f;
                            }
                        }
                        else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.04f;
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                            else if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.03f;
                            }
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = 1.5f;
                            }
                        }
                    }
                }
                if (npc.type == 158 && Main.netMode != 1)
                {
                    Vector2 vector62 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num616 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector62.X;
                    float num617 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector62.Y;
                    float num618 = (float)Math.Sqrt((double)(num616 * num616 + num617 * num617));
                    if (num618 < 200f && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y + (float)Main.player[npc.target].height && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.Transform(159);
                    }
                }
                npc.ai[1] += 1f;
                if (npc.type == 158)
                {
                    npc.ai[1] += 1f;
                }
                if (npc.ai[1] > 200f)
                {
                    if (!Main.player[npc.target].wet && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.ai[1] = 0f;
                    }
                    float num619 = 0.2f;
                    float num620 = 0.1f;
                    float num621 = 4f;
                    float num622 = 1.5f;
                    if (npc.type == 48 || npc.type == 62 || npc.type == 66)
                    {
                        num619 = 0.12f;
                        num620 = 0.07f;
                        num621 = 3f;
                        num622 = 1.25f;
                    }
                    if (npc.ai[1] > 1000f)
                    {
                        npc.ai[1] = 0f;
                    }
                    npc.ai[2] += 1f;
                    if (npc.ai[2] > 0f)
                    {
                        if (npc.velocity.Y < num622)
                        {
                            npc.velocity.Y = npc.velocity.Y + num620;
                        }
                    }
                    else if (npc.velocity.Y > -num622)
                    {
                        npc.velocity.Y = npc.velocity.Y - num620;
                    }
                    if (npc.ai[2] < -150f || npc.ai[2] > 150f)
                    {
                        if (npc.velocity.X < num621)
                        {
                            npc.velocity.X = npc.velocity.X + num619;
                        }
                    }
                    else if (npc.velocity.X > -num621)
                    {
                        npc.velocity.X = npc.velocity.X - num619;
                    }
                    if (npc.ai[2] > 300f)
                    {
                        npc.ai[2] = -300f;
                    }
                }
                if (Main.netMode != 1)
                {
                    if (npc.type == 48)
                    {
                        npc.ai[0] += 1f;
                        if (npc.ai[0] == 30f || npc.ai[0] == 60f || npc.ai[0] == 90f)
                        {
                            if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num623 = 6f;
                                Vector2 vector63 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num624 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector63.X + (float)Main.rand.Next(-100, 101);
                                float num625 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector63.Y + (float)Main.rand.Next(-100, 101);
                                float num626 = (float)Math.Sqrt((double)(num624 * num624 + num625 * num625));
                                num626 = num623 / num626;
                                num624 *= num626;
                                num625 *= num626;
                                int num627 = 15;
                                int num628 = 38;
                                int num629 = Projectile.NewProjectile(vector63.X, vector63.Y, num624, num625, num628, num627, 0f, Main.myPlayer, 0f, 0f);
                                Main.projectile[num629].timeLeft = 300;
                            }
                        }
                        else if (npc.ai[0] >= (float)(400 + Main.rand.Next(400)))
                        {
                            npc.ai[0] = 0f;
                        }
                    }
                    if (npc.type == 62 || npc.type == 66)
                    {
                        npc.ai[0] += 1f;
                        if (npc.ai[0] == 20f || npc.ai[0] == 40f || npc.ai[0] == 60f || npc.ai[0] == 80f)
                        {
                            if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num630 = 0.2f;
                                Vector2 vector64 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num631 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector64.X + (float)Main.rand.Next(-100, 101);
                                float num632 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector64.Y + (float)Main.rand.Next(-100, 101);
                                float num633 = (float)Math.Sqrt((double)(num631 * num631 + num632 * num632));
                                num633 = num630 / num633;
                                num631 *= num633;
                                num632 *= num633;
                                int num634 = 21;
                                int num635 = 44;
                                int num636 = Projectile.NewProjectile(vector64.X, vector64.Y, num631, num632, num635, num634, 0f, Main.myPlayer, 0f, 0f);
                                Main.projectile[num636].timeLeft = 300;
                            }
                        }
                        else if (npc.ai[0] >= (float)(300 + Main.rand.Next(300)))
                        {
                            npc.ai[0] = 0f;
                        }
                    }
                    if (npc.type == 156)
                    {
                        npc.ai[0] += 1f;
                        if (npc.ai[0] == 20f || npc.ai[0] == 40f || npc.ai[0] == 60f || npc.ai[0] == 80f || npc.ai[0] == 100f)
                        {
                            if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num637 = 0.2f;
                                Vector2 value13 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num638 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - value13.X + (float)Main.rand.Next(-50, 51);
                                float num639 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - value13.Y + (float)Main.rand.Next(-50, 51);
                                float num640 = (float)Math.Sqrt((double)(num638 * num638 + num639 * num639));
                                num640 = num637 / num640;
                                num638 *= num640;
                                num639 *= num640;
                                int num641 = 80;
                                int num642 = 115;
                                value13 += npc.velocity * 5f;
                                int num643 = Projectile.NewProjectile(value13.X + num638 * 100f, value13.Y + num639 * 100f, num638, num639, num642, num641, 0f, Main.myPlayer, 0f, 0f);
                                Main.projectile[num643].timeLeft = 300;
                                return;
                            }
                        }
                        else if (npc.ai[0] >= (float)(250 + Main.rand.Next(250)))
                        {
                            npc.ai[0] = 0f;
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 15)
            {
                float num644 = 1f;
                bool flag65 = false;
                bool flag66 = false;
                npc.aiAction = 0;
                if (npc.ai[3] == 0f && npc.life > 0)
                {
                    npc.ai[3] = (float)npc.lifeMax;
                }
                if (npc.localAI[3] == 0f && Main.netMode != 1)
                {
                    npc.ai[0] = -100f;
                    npc.localAI[3] = 1f;
                    npc.TargetClosest(true);
                    npc.netUpdate = true;
                }
                if (Main.player[npc.target].dead)
                {
                    npc.TargetClosest(true);
                    if (Main.player[npc.target].dead)
                    {
                        npc.timeLeft = 0;
                        if (Main.player[npc.target].Center.X < npc.Center.X)
                        {
                            npc.direction = 1;
                        }
                        else
                        {
                            npc.direction = -1;
                        }
                    }
                }
                if (!Main.player[npc.target].dead && npc.ai[2] >= 300f && npc.ai[1] < 5f && npc.velocity.Y == 0f)
                {
                    npc.ai[2] = 0f;
                    npc.ai[0] = 0f;
                    npc.ai[1] = 5f;
                    if (Main.netMode != 1)
                    {
                        npc.TargetClosest(false);
                        Point point5 = npc.Center.ToTileCoordinates();
                        Point point6 = Main.player[npc.target].Center.ToTileCoordinates();
                        Vector2 vector65 = Main.player[npc.target].Center - npc.Center;
                        int num645 = 10;
                        int num646 = 0;
                        int num647 = 7;
                        int num648 = 0;
                        bool flag67 = false;
                        if (vector65.Length() > 2000f)
                        {
                            flag67 = true;
                            num648 = 100;
                        }
                        while (!flag67 && num648 < 100)
                        {
                            num648++;
                            int num649 = Main.rand.Next(point6.X - num645, point6.X + num645 + 1);
                            int num650 = Main.rand.Next(point6.Y - num645, point6.Y + 1);
                            if ((num650 < point6.Y - num647 || num650 > point6.Y + num647 || num649 < point6.X - num647 || num649 > point6.X + num647) && (num650 < point5.Y - num646 || num650 > point5.Y + num646 || num649 < point5.X - num646 || num649 > point5.X + num646) && !Main.tile[num649, num650].nactive())
                            {
                                int num651 = num650;
                                int num652 = 0;
                                bool flag68 = Main.tile[num649, num651].nactive() && Main.tileSolid[(int)Main.tile[num649, num651].type] && !Main.tileSolidTop[(int)Main.tile[num649, num651].type];
                                if (flag68)
                                {
                                    num652 = 1;
                                }
                                else
                                {
                                    while (num652 < 150 && num651 + num652 < Main.maxTilesY)
                                    {
                                        int num653 = num651 + num652;
                                        bool flag69 = Main.tile[num649, num653].nactive() && Main.tileSolid[(int)Main.tile[num649, num653].type] && !Main.tileSolidTop[(int)Main.tile[num649, num653].type];
                                        if (flag69)
                                        {
                                            num652--;
                                            break;
                                        }
                                        num652++;
                                    }
                                }
                                num650 += num652;
                                bool flag70 = true;
                                if (flag70 && Main.tile[num649, num650].lava())
                                {
                                    flag70 = false;
                                }
                                if (flag70 && !Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                                {
                                    flag70 = false;
                                }
                                if (flag70)
                                {
                                    npc.localAI[1] = (float)(num649 * 16 + 8);
                                    npc.localAI[2] = (float)(num650 * 16 + 16);
                                    break;
                                }
                            }
                        }
                        if (num648 >= 100)
                        {
                            Vector2 bottom = Main.player[(int)Player.FindClosest(npc.position, npc.width, npc.height)].Bottom;
                            npc.localAI[1] = bottom.X;
                            npc.localAI[2] = bottom.Y;
                        }
                    }
                }
                if (!Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                {
                    npc.ai[2] += 1f;
                }
                if (Math.Abs(npc.Top.Y - Main.player[npc.target].Bottom.Y) > 320f)
                {
                    npc.ai[2] += 1f;
                }
                if (npc.ai[1] == 5f)
                {
                    npc.aiAction = 1;
                    npc.ai[0] += 1f;
                    num644 = MathHelper.Clamp((60f - npc.ai[0]) / 60f, 0f, 1f);
                    num644 = 0.5f + num644 * 0.5f;
                    if (npc.ai[0] >= 60f && Main.netMode != 1)
                    {
                        npc.Bottom = new Vector2(npc.localAI[1], npc.localAI[2]);
                        npc.ai[1] = 6f;
                        npc.ai[0] = 0f;
                        npc.netUpdate = true;
                    }
                    if (Main.netMode == 1 && npc.ai[0] >= 120f)
                    {
                        npc.ai[1] = 6f;
                        npc.ai[0] = 0f;
                    }
                }
                else if (npc.ai[1] == 6f)
                {
                    flag65 = true;
                    npc.aiAction = 0;
                    npc.ai[0] += 1f;
                    num644 = MathHelper.Clamp(npc.ai[0] / 30f, 0f, 1f);
                    num644 = 0.5f + num644 * 0.5f;
                    if (npc.ai[0] >= 30f && Main.netMode != 1)
                    {
                        npc.ai[1] = 0f;
                        npc.ai[0] = 0f;
                        npc.netUpdate = true;
                        npc.TargetClosest(true);
                    }
                    if (Main.netMode == 1 && npc.ai[0] >= 60f)
                    {
                        npc.ai[1] = 0f;
                        npc.ai[0] = 0f;
                        npc.TargetClosest(true);
                    }
                }
                npc.dontTakeDamage = (npc.hide = flag66);
                if (npc.velocity.Y == 0f)
                {
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                    {
                        npc.velocity.X = 0f;
                    }
                    if (!flag65)
                    {
                        npc.ai[0] += 2f;
                        if ((double)npc.life < (double)npc.lifeMax * 0.8)
                        {
                            npc.ai[0] += 1f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.6)
                        {
                            npc.ai[0] += 1f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.4)
                        {
                            npc.ai[0] += 2f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.2)
                        {
                            npc.ai[0] += 3f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.1)
                        {
                            npc.ai[0] += 4f;
                        }
                        if (npc.ai[0] >= 0f)
                        {
                            npc.netUpdate = true;
                            npc.TargetClosest(true);
                            if (npc.ai[1] == 3f)
                            {
                                npc.velocity.Y = -13f;
                                npc.velocity.X = npc.velocity.X + 3.5f * (float)npc.direction;
                                npc.ai[0] = -200f;
                                npc.ai[1] = 0f;
                            }
                            else if (npc.ai[1] == 2f)
                            {
                                npc.velocity.Y = -6f;
                                npc.velocity.X = npc.velocity.X + 4.5f * (float)npc.direction;
                                npc.ai[0] = -120f;
                                npc.ai[1] += 1f;
                            }
                            else
                            {
                                npc.velocity.Y = -8f;
                                npc.velocity.X = npc.velocity.X + 4f * (float)npc.direction;
                                npc.ai[0] = -120f;
                                npc.ai[1] += 1f;
                            }
                        }
                        else if (npc.ai[0] >= -30f)
                        {
                            npc.aiAction = 1;
                        }
                    }
                }
                else if (npc.target < 255 && ((npc.direction == 1 && npc.velocity.X < 3f) || (npc.direction == -1 && npc.velocity.X > -3f)))
                {
                    if ((npc.direction == -1 && (double)npc.velocity.X < 0.1) || (npc.direction == 1 && (double)npc.velocity.X > -0.1))
                    {
                        npc.velocity.X = npc.velocity.X + 0.2f * (float)npc.direction;
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X * 0.93f;
                    }
                }
                if (npc.life > 0)
                {
                    float num659 = (float)npc.life / (float)npc.lifeMax;
                    num659 = num659 * 0.5f + 0.75f;
                    num659 *= num644;
                    if (num659 != npc.scale)
                    {
                        npc.position.X = npc.position.X + (float)(npc.width / 2);
                        npc.position.Y = npc.position.Y + (float)npc.height;
                        npc.scale = num659;
                        npc.width = (int)(98f * npc.scale);
                        npc.height = (int)(92f * npc.scale);
                        npc.position.X = npc.position.X - (float)(npc.width / 2);
                        npc.position.Y = npc.position.Y - (float)npc.height;
                    }
                    if (Main.netMode != 1)
                    {
                        int num660 = (int)((double)npc.lifeMax * 0.05);
                        if ((float)(npc.life + num660) < npc.ai[3])
                        {
                            npc.ai[3] = (float)npc.life;
                            int num661 = Main.rand.Next(1, 4);
                            for (int num662 = 0; num662 < num661; num662++)
                            {
                                int x = (int)(npc.position.X + (float)Main.rand.Next(npc.width - 32));
                                int y = (int)(npc.position.Y + (float)Main.rand.Next(npc.height - 32));
                                int num663 = 1;
                                if (Main.expertMode && Main.rand.Next(4) == 0)
                                {
                                    num663 = 535;
                                }
                                int num664 = NPC.NewNPC(x, y, num663, 0, 0f, 0f, 0f, 0f, 255);
                                Main.npc[num664].SetDefaults(num663, -1f);
                                Main.npc[num664].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
                                Main.npc[num664].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
                                Main.npc[num664].ai[0] = (float)(-1000 * Main.rand.Next(3));
                                Main.npc[num664].ai[1] = 0f;
                                if (Main.netMode == 2 && num664 < 200)
                                {
                                    NetMessage.SendData(23, -1, -1, null, num664, 0f, 0f, 0f, 0, 0, 0);
                                }
                            }
                            return;
                        }
                    }
                }
            }
            else if (npc.aiStyle == 16)
            {
                if (npc.direction == 0)
                {
                    npc.TargetClosest(true);
                }
                if (npc.wet)
                {
                    bool flag71 = false;
                    if (npc.type != 55)
                    {
                        npc.TargetClosest(false);
                        if (Main.player[npc.target].wet && !Main.player[npc.target].dead)
                        {
                            flag71 = true;
                        }
                    }
                    if (!flag71)
                    {
                        if (npc.collideX)
                        {
                            npc.velocity.X = npc.velocity.X * -1f;
                            npc.direction *= -1;
                            npc.netUpdate = true;
                        }
                        if (npc.collideY)
                        {
                            npc.netUpdate = true;
                            if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = Math.Abs(npc.velocity.Y) * -1f;
                                npc.directionY = -1;
                                npc.ai[0] = -1f;
                            }
                            else if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = Math.Abs(npc.velocity.Y);
                                npc.directionY = 1;
                                npc.ai[0] = 1f;
                            }
                        }
                    }
                    if (flag71)
                    {
                        npc.TargetClosest(true);
                        if (npc.type == 157)
                        {
                            if (npc.velocity.X > 0f && npc.direction < 0)
                            {
                                npc.velocity.X = npc.velocity.X * 0.95f;
                            }
                            if (npc.velocity.X < 0f && npc.direction > 0)
                            {
                                npc.velocity.X = npc.velocity.X * 0.95f;
                            }
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.25f;
                            npc.velocity.Y = npc.velocity.Y + (float)npc.directionY * 0.2f;
                            if (npc.velocity.X > 8f)
                            {
                                npc.velocity.X = 7f;
                            }
                            if (npc.velocity.X < -8f)
                            {
                                npc.velocity.X = -7f;
                            }
                            if (npc.velocity.Y > 5f)
                            {
                                npc.velocity.Y = 4f;
                            }
                            if (npc.velocity.Y < -5f)
                            {
                                npc.velocity.Y = -4f;
                            }
                        }
                        else if (npc.type == 65 || npc.type == 102)
                        {
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.15f;
                            npc.velocity.Y = npc.velocity.Y + (float)npc.directionY * 0.15f;
                            if (npc.velocity.X > 5f)
                            {
                                npc.velocity.X = 5f;
                            }
                            if (npc.velocity.X < -5f)
                            {
                                npc.velocity.X = -5f;
                            }
                            if (npc.velocity.Y > 3f)
                            {
                                npc.velocity.Y = 3f;
                            }
                            if (npc.velocity.Y < -3f)
                            {
                                npc.velocity.Y = -3f;
                            }
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.1f;
                            npc.velocity.Y = npc.velocity.Y + (float)npc.directionY * 0.1f;
                            if (npc.velocity.X > 3f)
                            {
                                npc.velocity.X = 3f;
                            }
                            if (npc.velocity.X < -3f)
                            {
                                npc.velocity.X = -3f;
                            }
                            if (npc.velocity.Y > 2f)
                            {
                                npc.velocity.Y = 2f;
                            }
                            if (npc.velocity.Y < -2f)
                            {
                                npc.velocity.Y = -2f;
                            }
                        }
                    }
                    else
                    {
                        if (npc.type == 157)
                        {
                            if (Main.player[npc.target].position.Y > npc.position.Y)
                            {
                                npc.directionY = 1;
                            }
                            else
                            {
                                npc.directionY = -1;
                            }
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.2f;
                            if (npc.velocity.X < -2f || npc.velocity.X > 2f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.95f;
                            }
                            if (npc.ai[0] == -1f)
                            {
                                float num665 = -0.6f;
                                if (npc.directionY < 0)
                                {
                                    num665 = -1f;
                                }
                                if (npc.directionY > 0)
                                {
                                    num665 = -0.2f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.02f;
                                if (npc.velocity.Y < num665)
                                {
                                    npc.ai[0] = 1f;
                                }
                            }
                            else
                            {
                                float num666 = 0.6f;
                                if (npc.directionY < 0)
                                {
                                    num666 = 0.2f;
                                }
                                if (npc.directionY > 0)
                                {
                                    num666 = 1f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.02f;
                                if (npc.velocity.Y > num666)
                                {
                                    npc.ai[0] = -1f;
                                }
                            }
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.1f;
                            if (npc.velocity.X < -1f || npc.velocity.X > 1f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.95f;
                            }
                            if (npc.ai[0] == -1f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.01f;
                                if ((double)npc.velocity.Y < -0.3)
                                {
                                    npc.ai[0] = 1f;
                                }
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.01f;
                                if ((double)npc.velocity.Y > 0.3)
                                {
                                    npc.ai[0] = -1f;
                                }
                            }
                        }
                        int num667 = (int)(npc.position.X + (float)(npc.width / 2)) / 16;
                        int num668 = (int)(npc.position.Y + (float)(npc.height / 2)) / 16;
                        if (Main.tile[num667, num668 - 1] == null)
                        {
                            Main.tile[num667, num668 - 1] = new Tile();
                        }
                        if (Main.tile[num667, num668 + 1] == null)
                        {
                            Main.tile[num667, num668 + 1] = new Tile();
                        }
                        if (Main.tile[num667, num668 + 2] == null)
                        {
                            Main.tile[num667, num668 + 2] = new Tile();
                        }
                        if (Main.tile[num667, num668 - 1].liquid > 128)
                        {
                            if (Main.tile[num667, num668 + 1].active())
                            {
                                npc.ai[0] = -1f;
                            }
                            else if (Main.tile[num667, num668 + 2].active())
                            {
                                npc.ai[0] = -1f;
                            }
                        }
                        if (npc.type != 157 && ((double)npc.velocity.Y > 0.4 || (double)npc.velocity.Y < -0.4))
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.95f;
                        }
                    }
                }
                else
                {
                    if (npc.velocity.Y == 0f)
                    {
                        if (npc.type == 65)
                        {
                            npc.velocity.X = npc.velocity.X * 0.94f;
                            if ((double)npc.velocity.X > -0.2 && (double)npc.velocity.X < 0.2)
                            {
                                npc.velocity.X = 0f;
                            }
                        }
                        else if (Main.netMode != 1)
                        {
                            npc.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
                            npc.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
                            npc.netUpdate = true;
                        }
                    }
                    npc.velocity.Y = npc.velocity.Y + 0.3f;
                    if (npc.velocity.Y > 10f)
                    {
                        npc.velocity.Y = 10f;
                    }
                    npc.ai[0] = 1f;
                }
                npc.rotation = npc.velocity.Y * (float)npc.direction * 0.1f;
                if ((double)npc.rotation < -0.2)
                {
                    npc.rotation = -0.2f;
                }
                if ((double)npc.rotation > 0.2)
                {
                    npc.rotation = 0.2f;
                    return;
                }
            }
            else if (npc.aiStyle == 17)
            {
                npc.noGravity = true;
                if (npc.ai[0] == 0f)
                {
                    npc.noGravity = false;
                    npc.TargetClosest(true);
                    if (Main.netMode != 1)
                    {
                        if (npc.velocity.X != 0f || npc.velocity.Y < 0f || (double)npc.velocity.Y > 0.3)
                        {
                            npc.ai[0] = 1f;
                            npc.netUpdate = true;
                        }
                        else
                        {
                            Rectangle rectangle6 = new Rectangle((int)Main.player[npc.target].position.X, (int)Main.player[npc.target].position.Y, Main.player[npc.target].width, Main.player[npc.target].height);
                            Rectangle rectangle7 = new Rectangle((int)npc.position.X - 100, (int)npc.position.Y - 100, npc.width + 200, npc.height + 200);
                            if (rectangle7.Intersects(rectangle6) || npc.life < npc.lifeMax)
                            {
                                npc.ai[0] = 1f;
                                npc.velocity.Y = npc.velocity.Y - 6f;
                                npc.netUpdate = true;
                            }
                        }
                    }
                }
                else if (!Main.player[npc.target].dead)
                {
                    if (npc.collideX)
                    {
                        npc.velocity.X = npc.oldVelocity.X * -0.5f;
                        if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                        {
                            npc.velocity.X = 2f;
                        }
                        if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                        {
                            npc.velocity.X = -2f;
                        }
                    }
                    if (npc.collideY)
                    {
                        npc.velocity.Y = npc.oldVelocity.Y * -0.5f;
                        if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                        {
                            npc.velocity.Y = 1f;
                        }
                        if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                        {
                            npc.velocity.Y = -1f;
                        }
                    }
                    npc.TargetClosest(true);
                    if (npc.direction == -1 && npc.velocity.X > -3f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X > 3f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X < -3f)
                        {
                            npc.velocity.X = -3f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 3f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X < -3f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X > 3f)
                        {
                            npc.velocity.X = 3f;
                        }
                    }
                    float num669 = Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2)));
                    float num670 = Main.player[npc.target].position.Y - (float)(npc.height / 2);
                    if (num669 > 50f)
                    {
                        num670 -= 100f;
                    }
                    if (npc.position.Y < num670)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.05f;
                        if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.01f;
                        }
                    }
                    else
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.05f;
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.01f;
                        }
                    }
                    if (npc.velocity.Y < -3f)
                    {
                        npc.velocity.Y = -3f;
                    }
                    if (npc.velocity.Y > 3f)
                    {
                        npc.velocity.Y = 3f;
                    }
                }
                if (npc.wet)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                    npc.TargetClosest(true);
                    return;
                }
            }
            else if (npc.aiStyle == 18)
            {
                bool flag72 = false;
                if (npc.wet && npc.ai[1] == 1f)
                {
                    flag72 = true;
                }
                else
                {
                    npc.dontTakeDamage = false;
                }
                if (Main.expertMode && (npc.type == 63 || npc.type == 64 || npc.type == 103 || npc.type == 242))
                {
                    if (npc.wet)
                    {
                        if (npc.target >= 0 && Main.player[npc.target].wet && !Main.player[npc.target].dead && (Main.player[npc.target].Center - npc.Center).Length() < 150f)
                        {
                            if (npc.ai[1] == 0f)
                            {
                                npc.ai[2] += 2f;
                            }
                            else
                            {
                                npc.ai[2] -= 0.25f;
                            }
                        }
                        if (flag72)
                        {
                            npc.dontTakeDamage = true;
                            npc.ai[2] += 1f;
                            if (npc.ai[2] >= 120f)
                            {
                                npc.ai[1] = 0f;
                            }
                        }
                        else
                        {
                            npc.ai[2] += 1f;
                            if (npc.ai[2] >= 420f)
                            {
                                npc.ai[1] = 1f;
                                npc.ai[2] = 0f;
                            }
                        }
                    }
                    else
                    {
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                }
                float num671 = 1f;
                if (flag72)
                {
                    num671 += 0.5f;
                }
                if (npc.direction == 0)
                {
                    npc.TargetClosest(true);
                }
                if (flag72)
                {
                    return;
                }
                if (!npc.wet)
                {
                    npc.rotation += npc.velocity.X * 0.1f;
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.98f;
                        if ((double)npc.velocity.X > -0.01 && (double)npc.velocity.X < 0.01)
                        {
                            npc.velocity.X = 0f;
                        }
                    }
                    npc.velocity.Y = npc.velocity.Y + 0.2f;
                    if (npc.velocity.Y > 10f)
                    {
                        npc.velocity.Y = 10f;
                    }
                    npc.ai[0] = 1f;
                    return;
                }
                if (npc.collideX)
                {
                    npc.velocity.X = npc.velocity.X * -1f;
                    npc.direction *= -1;
                }
                if (npc.collideY)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = Math.Abs(npc.velocity.Y) * -1f;
                        npc.directionY = -1;
                        npc.ai[0] = -1f;
                    }
                    else if (npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = Math.Abs(npc.velocity.Y);
                        npc.directionY = 1;
                        npc.ai[0] = 1f;
                    }
                }
                bool flag73 = false;
                if (!npc.friendly)
                {
                    npc.TargetClosest(false);
                    if (Main.player[npc.target].wet && !Main.player[npc.target].dead)
                    {
                        flag73 = true;
                    }
                }
                if (flag73)
                {
                    npc.localAI[2] = 1f;
                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) + 1.57f;
                    npc.velocity *= 0.98f;
                    float num672 = 0.2f;
                    if (npc.type == 103)
                    {
                        npc.velocity *= 0.98f;
                        num672 = 0.6f;
                    }
                    if (npc.type == 221)
                    {
                        npc.velocity *= 0.99f;
                        num672 = 1f;
                    }
                    if (npc.type == 242)
                    {
                        npc.velocity *= 0.995f;
                        num672 = 3f;
                    }
                    if (npc.velocity.X > -num672 && npc.velocity.X < num672 && npc.velocity.Y > -num672 && npc.velocity.Y < num672)
                    {
                        if (npc.type == 221)
                        {
                            npc.localAI[0] = 1f;
                        }
                        npc.TargetClosest(true);
                        float num673 = 7f;
                        if (npc.type == 103)
                        {
                            num673 = 9f;
                        }
                        Vector2 vector66 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num674 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector66.X;
                        float num675 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector66.Y;
                        float num676 = (float)Math.Sqrt((double)(num674 * num674 + num675 * num675));
                        num676 = num673 / num676;
                        num674 *= num676;
                        num675 *= num676;
                        npc.velocity.X = num674;
                        npc.velocity.Y = num675;
                        return;
                    }
                }
                else
                {
                    npc.localAI[2] = 0f;
                    npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.02f;
                    npc.rotation = npc.velocity.X * 0.4f;
                    if (npc.velocity.X < -1f || npc.velocity.X > 1f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    if (npc.ai[0] == -1f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.01f;
                        if (npc.velocity.Y < -1f)
                        {
                            npc.ai[0] = 1f;
                        }
                    }
                    else
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.01f;
                        if (npc.velocity.Y > 1f)
                        {
                            npc.ai[0] = -1f;
                        }
                    }
                    int num677 = (int)(npc.position.X + (float)(npc.width / 2)) / 16;
                    int num678 = (int)(npc.position.Y + (float)(npc.height / 2)) / 16;
                    if (Main.tile[num677, num678 - 1] == null)
                    {
                        Main.tile[num677, num678 - 1] = new Tile();
                    }
                    if (Main.tile[num677, num678 + 1] == null)
                    {
                        Main.tile[num677, num678 + 1] = new Tile();
                    }
                    if (Main.tile[num677, num678 + 2] == null)
                    {
                        Main.tile[num677, num678 + 2] = new Tile();
                    }
                    if (Main.tile[num677, num678 - 1].liquid > 128)
                    {
                        if (Main.tile[num677, num678 + 1].active())
                        {
                            npc.ai[0] = -1f;
                        }
                        else if (Main.tile[num677, num678 + 2].active())
                        {
                            npc.ai[0] = -1f;
                        }
                    }
                    else
                    {
                        npc.ai[0] = 1f;
                    }
                    if ((double)npc.velocity.Y > 1.2 || (double)npc.velocity.Y < -1.2)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.99f;
                        return;
                    }
                }
            }
            else
            {
                if (npc.aiStyle == 19)
                {
                    npc.TargetClosest(true);
                    float num679 = 12f;
                    Vector2 vector67 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num680 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector67.X;
                    float num681 = Main.player[npc.target].position.Y - vector67.Y;
                    float num682 = (float)Math.Sqrt((double)(num680 * num680 + num681 * num681));
                    num682 = num679 / num682;
                    num680 *= num682;
                    num681 *= num682;
                    bool flag74 = false;
                    if (npc.directionY < 0)
                    {
                        npc.rotation = (float)(Math.Atan2((double)num681, (double)num680) + 1.57);
                        flag74 = ((double)npc.rotation >= -1.2 && (double)npc.rotation <= 1.2);
                        if ((double)npc.rotation < -0.8)
                        {
                            npc.rotation = -0.8f;
                        }
                        else if ((double)npc.rotation > 0.8)
                        {
                            npc.rotation = 0.8f;
                        }
                        if (npc.velocity.X != 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                            if ((double)npc.velocity.X > -0.1 || (double)npc.velocity.X < 0.1)
                            {
                                npc.netUpdate = true;
                                npc.velocity.X = 0f;
                            }
                        }
                    }
                    if (npc.ai[0] > 0f)
                    {
                        npc.ai[0] -= 1f;
                    }
                    if (Main.netMode != 1 && flag74 && npc.ai[0] == 0f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        npc.ai[0] = 200f;
                        int num683 = 10;
                        int num684 = 31;
                        int num685 = Projectile.NewProjectile(vector67.X, vector67.Y, num680, num681, num684, num683, 0f, Main.myPlayer, 0f, 0f);
                        Main.projectile[num685].ai[0] = 2f;
                        Main.projectile[num685].timeLeft = 300;
                        Main.projectile[num685].friendly = false;
                        NetMessage.SendData(27, -1, -1, null, num685, 0f, 0f, 0f, 0, 0, 0);
                        npc.netUpdate = true;
                    }
                    try
                    {
                        int num686 = (int)npc.position.X / 16;
                        int num687 = (int)(npc.position.X + (float)(npc.width / 2)) / 16;
                        int num688 = (int)(npc.position.X + (float)npc.width) / 16;
                        int num689 = (int)(npc.position.Y + (float)npc.height) / 16;
                        bool flag75 = false;
                        if (Main.tile[num686, num689] == null)
                        {
                            Main.tile[num686, num689] = new Tile();
                        }
                        if (Main.tile[num687, num689] == null)
                        {
                            Main.tile[num686, num689] = new Tile();
                        }
                        if (Main.tile[num688, num689] == null)
                        {
                            Main.tile[num686, num689] = new Tile();
                        }
                        if ((Main.tile[num686, num689].nactive() && Main.tileSolid[(int)Main.tile[num686, num689].type]) || (Main.tile[num687, num689].nactive() && Main.tileSolid[(int)Main.tile[num687, num689].type]) || (Main.tile[num688, num689].nactive() && Main.tileSolid[(int)Main.tile[num688, num689].type]))
                        {
                            flag75 = true;
                        }
                        if (flag75)
                        {
                            npc.noGravity = true;
                            npc.noTileCollide = true;
                            npc.velocity.Y = -0.2f;
                        }
                        else
                        {
                            npc.noGravity = false;
                            npc.noTileCollide = false;
                        }
                        return;
                    }
                    catch
                    {
                        return;
                    }
                }
                if (npc.aiStyle == 20)
                {
                    if (npc.ai[0] == 0f)
                    {
                        if (Main.netMode != 1)
                        {
                            npc.TargetClosest(true);
                            npc.direction *= -1;
                            npc.directionY *= -1;
                            npc.position.Y = npc.position.Y + (float)(npc.height / 2 + 8);
                            npc.ai[1] = npc.position.X + (float)(npc.width / 2);
                            npc.ai[2] = npc.position.Y + (float)(npc.height / 2);
                            if (npc.direction == 0)
                            {
                                npc.direction = 1;
                            }
                            if (npc.directionY == 0)
                            {
                                npc.directionY = 1;
                            }
                            npc.ai[3] = 1f + (float)Main.rand.Next(15) * 0.1f;
                            npc.velocity.Y = (float)(npc.directionY * 6) * npc.ai[3];
                            npc.ai[0] += 1f;
                            npc.netUpdate = true;
                            return;
                        }
                        npc.ai[1] = npc.position.X + (float)(npc.width / 2);
                        npc.ai[2] = npc.position.Y + (float)(npc.height / 2);
                        return;
                    }
                    else
                    {
                        float num691 = 6f * npc.ai[3];
                        float num692 = 0.2f * npc.ai[3];
                        float num693 = num691 / num692 / 2f;
                        if (npc.ai[0] >= 1f && npc.ai[0] < (float)((int)num693))
                        {
                            npc.velocity.Y = (float)npc.directionY * num691;
                            npc.ai[0] += 1f;
                            return;
                        }
                        if (npc.ai[0] >= (float)((int)num693))
                        {
                            npc.velocity.Y = 0f;
                            npc.directionY *= -1;
                            npc.velocity.X = num691 * (float)npc.direction;
                            npc.ai[0] = -1f;
                            return;
                        }
                        if (npc.directionY > 0)
                        {
                            if (npc.velocity.Y >= num691)
                            {
                                npc.directionY *= -1;
                                npc.velocity.Y = num691;
                            }
                        }
                        else if (npc.directionY < 0 && npc.velocity.Y <= -num691)
                        {
                            npc.directionY *= -1;
                            npc.velocity.Y = -num691;
                        }
                        if (npc.direction > 0)
                        {
                            if (npc.velocity.X >= num691)
                            {
                                npc.direction *= -1;
                                npc.velocity.X = num691;
                            }
                        }
                        else if (npc.direction < 0 && npc.velocity.X <= -num691)
                        {
                            npc.direction *= -1;
                            npc.velocity.X = -num691;
                        }
                        npc.velocity.X = npc.velocity.X + num692 * (float)npc.direction;
                        npc.velocity.Y = npc.velocity.Y + num692 * (float)npc.directionY;
                        return;
                    }
                }
                else
                {
                    if (npc.aiStyle == 21)
                    {
                        if (npc.ai[0] == 0f)
                        {
                            npc.TargetClosest(true);
                            npc.directionY = 1;
                            npc.ai[0] = 1f;
                        }
                        int num694 = 6;
                        if (npc.ai[1] == 0f)
                        {
                            npc.rotation += (float)(npc.direction * npc.directionY) * 0.13f;
                            if (npc.collideY)
                            {
                                npc.ai[0] = 2f;
                            }
                            if (!npc.collideY && npc.ai[0] == 2f)
                            {
                                npc.direction = -npc.direction;
                                npc.ai[1] = 1f;
                                npc.ai[0] = 1f;
                            }
                            if (npc.collideX)
                            {
                                npc.directionY = -npc.directionY;
                                npc.ai[1] = 1f;
                            }
                        }
                        else
                        {
                            npc.rotation -= (float)(npc.direction * npc.directionY) * 0.13f;
                            if (npc.collideX)
                            {
                                npc.ai[0] = 2f;
                            }
                            if (!npc.collideX && npc.ai[0] == 2f)
                            {
                                npc.directionY = -npc.directionY;
                                npc.ai[1] = 0f;
                                npc.ai[0] = 1f;
                            }
                            if (npc.collideY)
                            {
                                npc.direction = -npc.direction;
                                npc.ai[1] = 0f;
                            }
                        }
                        npc.velocity.X = (float)(num694 * npc.direction);
                        npc.velocity.Y = (float)(num694 * npc.directionY);
                        float num695 = (float)(270 - (int)Main.mouseTextColor) / 400f;
                        return;
                    }
                    if (npc.aiStyle == 22)
                    {
                        bool flag76 = false;
                        bool flag77 = npc.type == 330 && !Main.pumpkinMoon;
                        if (npc.type == 253 && !Main.eclipse)
                        {
                            flag77 = true;
                        }
                        if (npc.type == 490 && Main.dayTime)
                        {
                            flag77 = true;
                        }
                        if (npc.justHit)
                        {
                            npc.ai[2] = 0f;
                        }
                        if (!flag77)
                        {
                            if (npc.ai[2] >= 0f)
                            {
                                int num696 = 16;
                                bool flag78 = false;
                                bool flag79 = false;
                                if (npc.position.X > npc.ai[0] - (float)num696 && npc.position.X < npc.ai[0] + (float)num696)
                                {
                                    flag78 = true;
                                }
                                else if ((npc.velocity.X < 0f && npc.direction > 0) || (npc.velocity.X > 0f && npc.direction < 0))
                                {
                                    flag78 = true;
                                }
                                num696 += 24;
                                if (npc.position.Y > npc.ai[1] - (float)num696 && npc.position.Y < npc.ai[1] + (float)num696)
                                {
                                    flag79 = true;
                                }
                                if (flag78 && flag79)
                                {
                                    npc.ai[2] += 1f;
                                    if (npc.ai[2] >= 30f && num696 == 16)
                                    {
                                        flag76 = true;
                                    }
                                    if (npc.ai[2] >= 60f)
                                    {
                                        npc.ai[2] = -200f;
                                        npc.direction *= -1;
                                        npc.velocity.X = npc.velocity.X * -1f;
                                        npc.collideX = false;
                                    }
                                }
                                else
                                {
                                    npc.ai[0] = npc.position.X;
                                    npc.ai[1] = npc.position.Y;
                                    npc.ai[2] = 0f;
                                }
                                npc.TargetClosest(true);
                            }
                            else if (npc.type == 253)
                            {
                                npc.TargetClosest(true);
                                npc.ai[2] += 2f;
                            }
                            else
                            {
                                if (npc.type == 330)
                                {
                                    npc.ai[2] += 0.1f;
                                }
                                else
                                {
                                    npc.ai[2] += 1f;
                                }
                                if (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) > npc.position.X + (float)(npc.width / 2))
                                {
                                    npc.direction = -1;
                                }
                                else
                                {
                                    npc.direction = 1;
                                }
                            }
                        }
                        int num697 = (int)((npc.position.X + (float)(npc.width / 2)) / 16f) + npc.direction * 2;
                        int num698 = (int)((npc.position.Y + (float)npc.height) / 16f);
                        bool flag80 = true;
                        bool flag81 = false;
                        int num699 = 3;
                        if (npc.type == 122)
                        {
                            if (npc.justHit)
                            {
                                npc.ai[3] = 0f;
                                npc.localAI[1] = 0f;
                            }
                            float num700 = 7f;
                            Vector2 vector68 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num701 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector68.X;
                            float num702 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector68.Y;
                            float num703 = (float)Math.Sqrt((double)(num701 * num701 + num702 * num702));
                            num703 = num700 / num703;
                            num701 *= num703;
                            num702 *= num703;
                            if (Main.netMode != 1 && npc.ai[3] == 32f && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                            {
                                int num704 = 25;
                                int num705 = 84;
                                Projectile.NewProjectile(vector68.X, vector68.Y, num701, num702, num705, num704, 0f, Main.myPlayer, 0f, 0f);
                            }
                            num699 = 8;
                            if (npc.ai[3] > 0f)
                            {
                                npc.ai[3] += 1f;
                                if (npc.ai[3] >= 64f)
                                {
                                    npc.ai[3] = 0f;
                                }
                            }
                            if (Main.netMode != 1 && npc.ai[3] == 0f)
                            {
                                npc.localAI[1] += 1f;
                                if (npc.localAI[1] > 120f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                                {
                                    npc.localAI[1] = 0f;
                                    npc.ai[3] = 1f;
                                    npc.netUpdate = true;
                                }
                            }
                        }
                        else if (npc.type == 75)
                        {
                            num699 = 4;
                        }
                        else if (npc.type == 169)
                        {
                            npc.alpha = 30;
                            if (npc.justHit)
                            {
                                npc.ai[3] = 0f;
                                npc.localAI[1] = 0f;
                            }
                            float num708 = 5f;
                            Vector2 vector69 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num709 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector69.X;
                            float num710 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector69.Y;
                            float num711 = (float)Math.Sqrt((double)(num709 * num709 + num710 * num710));
                            num711 = num708 / num711;
                            num709 *= num711;
                            num710 *= num711;
                            if (num709 > 0f)
                            {
                                npc.direction = 1;
                            }
                            else
                            {
                                npc.direction = -1;
                            }
                            npc.spriteDirection = npc.direction;
                            if (npc.direction < 0)
                            {
                                npc.rotation = (float)Math.Atan2((double)(-(double)num710), (double)(-(double)num709));
                            }
                            else
                            {
                                npc.rotation = (float)Math.Atan2((double)num710, (double)num709);
                            }
                            if (Main.netMode != 1 && npc.ai[3] == 16f)
                            {
                                int num712 = 45;
                                int num713 = 128;
                                Projectile.NewProjectile(vector69.X, vector69.Y, num709, num710, num713, num712, 0f, Main.myPlayer, 0f, 0f);
                            }
                            num699 = 10;
                            if (npc.ai[3] > 0f)
                            {
                                npc.ai[3] += 1f;
                                if (npc.ai[3] >= 64f)
                                {
                                    npc.ai[3] = 0f;
                                }
                            }
                            if (Main.netMode != 1 && npc.ai[3] == 0f)
                            {
                                npc.localAI[1] += 1f;
                                if (npc.localAI[1] > 120f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                {
                                    npc.localAI[1] = 0f;
                                    npc.ai[3] = 1f;
                                    npc.netUpdate = true;
                                }
                            }
                        }
                        else if (npc.type == 268)
                        {
                            npc.rotation = npc.velocity.X * 0.1f;
                            if (Main.player[npc.target].Center.Y < npc.Center.Y)
                            {
                                num699 = 12;
                            }
                            else
                            {
                                num699 = 6;
                            }
                            if (Main.netMode != 1 && !npc.confused)
                            {
                                npc.ai[3] += 1f;
                                if (npc.justHit)
                                {
                                    npc.ai[3] = -45f;
                                    npc.localAI[1] = 0f;
                                }
                                if (Main.netMode != 1 && npc.ai[3] >= (float)(60 + Main.rand.Next(60)))
                                {
                                    npc.ai[3] = 0f;
                                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].head))
                                    {
                                        float num714 = 10f;
                                        Vector2 vector70 = new Vector2(npc.position.X + (float)npc.width * 0.5f - 4f, npc.position.Y + (float)npc.height * 0.7f);
                                        float num715 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector70.X;
                                        float num716 = Math.Abs(num715) * 0.1f;
                                        float num717 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector70.Y - num716;
                                        num715 += (float)Main.rand.Next(-10, 11);
                                        num717 += (float)Main.rand.Next(-30, 21);
                                        float num718 = (float)Math.Sqrt((double)(num715 * num715 + num717 * num717));
                                        num718 = num714 / num718;
                                        num715 *= num718;
                                        num717 *= num718;
                                        int num719 = 40;
                                        int num720 = 288;
                                        Projectile.NewProjectile(vector70.X, vector70.Y, num715, num717, num720, num719, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                }
                            }
                        }
                        if (npc.type == 490)
                        {
                            num699 = 4;
                            if (npc.target >= 0)
                            {
                                float num721 = (Main.player[npc.target].Center - npc.Center).Length();
                                num721 /= 70f;
                                if (num721 > 8f)
                                {
                                    num721 = 8f;
                                }
                                num699 += (int)num721;
                            }
                        }
                        for (int num722 = num698; num722 < num698 + num699; num722++)
                        {
                            if (Main.tile[num697, num722] == null)
                            {
                                Main.tile[num697, num722] = new Tile();
                            }
                            if ((Main.tile[num697, num722].nactive() && Main.tileSolid[(int)Main.tile[num697, num722].type]) || Main.tile[num697, num722].liquid > 0)
                            {
                                if (num722 <= num698 + 1)
                                {
                                    flag81 = true;
                                }
                                flag80 = false;
                                break;
                            }
                        }
                        if (Main.player[npc.target].npcTypeNoAggro[npc.type])
                        {
                            bool flag82 = false;
                            for (int num723 = num698; num723 < num698 + num699 - 2; num723++)
                            {
                                if (Main.tile[num697, num723] == null)
                                {
                                    Main.tile[num697, num723] = new Tile();
                                }
                                if ((Main.tile[num697, num723].nactive() && Main.tileSolid[(int)Main.tile[num697, num723].type]) || Main.tile[num697, num723].liquid > 0)
                                {
                                    flag82 = true;
                                    break;
                                }
                            }
                            npc.directionY = (!flag82).ToDirectionInt();
                        }
                        if (npc.type == 169 || npc.type == 268)
                        {
                            for (int num724 = num698 - 3; num724 < num698; num724++)
                            {
                                if (Main.tile[num697, num724] == null)
                                {
                                    Main.tile[num697, num724] = new Tile();
                                }
                                if ((Main.tile[num697, num724].nactive() && Main.tileSolid[(int)Main.tile[num697, num724].type]) || Main.tile[num697, num724].liquid > 0)
                                {
                                    flag81 = false;
                                    flag76 = true;
                                    break;
                                }
                            }
                        }
                        if (flag76)
                        {
                            flag81 = false;
                            flag80 = true;
                            if (npc.type == 268)
                            {
                                npc.velocity.Y = npc.velocity.Y + 2f;
                            }
                        }
                        if (flag80)
                        {
                            if (npc.type == 75 || npc.type == 169)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.2f;
                                if (npc.velocity.Y > 2f)
                                {
                                    npc.velocity.Y = 2f;
                                }
                            }
                            else if (npc.type == 490)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.03f;
                                if ((double)npc.velocity.Y > 0.75)
                                {
                                    npc.velocity.Y = 0.75f;
                                }
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                                if (npc.velocity.Y > 3f)
                                {
                                    npc.velocity.Y = 3f;
                                }
                            }
                        }
                        else
                        {
                            if (npc.type == 75 || npc.type == 169)
                            {
                                if ((npc.directionY < 0 && npc.velocity.Y > 0f) || flag81)
                                {
                                    npc.velocity.Y = npc.velocity.Y - 0.2f;
                                }
                            }
                            else if (npc.type == 490)
                            {
                                if ((npc.directionY < 0 && npc.velocity.Y > 0f) || flag81)
                                {
                                    npc.velocity.Y = npc.velocity.Y - 0.075f;
                                }
                                if (npc.velocity.Y < -0.75f)
                                {
                                    npc.velocity.Y = -0.75f;
                                }
                            }
                            else if (npc.directionY < 0 && npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                            }
                            if (npc.velocity.Y < -4f)
                            {
                                npc.velocity.Y = -4f;
                            }
                        }
                        if (npc.type == 75 && npc.wet)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.2f;
                            if (npc.velocity.Y < -2f)
                            {
                                npc.velocity.Y = -2f;
                            }
                        }
                        if (npc.collideX)
                        {
                            npc.velocity.X = npc.oldVelocity.X * -0.4f;
                            if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 1f)
                            {
                                npc.velocity.X = 1f;
                            }
                            if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -1f)
                            {
                                npc.velocity.X = -1f;
                            }
                        }
                        if (npc.collideY)
                        {
                            npc.velocity.Y = npc.oldVelocity.Y * -0.25f;
                            if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                            {
                                npc.velocity.Y = 1f;
                            }
                            if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                            {
                                npc.velocity.Y = -1f;
                            }
                        }
                        float num725 = 2f;
                        if (npc.type == 75)
                        {
                            num725 = 3f;
                        }
                        if (npc.type == 253)
                        {
                            num725 = 4f;
                        }
                        if (npc.type == 490)
                        {
                            num725 = 1.5f;
                        }
                        if (npc.type == 330)
                        {
                            npc.alpha = 0;
                            num725 = 4f;
                            if (!flag77)
                            {
                                npc.TargetClosest(true);
                            }
                            else if (npc.timeLeft > 10)
                            {
                                npc.timeLeft = 10;
                            }
                            if (npc.direction < 0 && npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if (npc.direction > 0 && npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                        }
                        if (npc.direction == -1 && npc.velocity.X > -num725)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                            if (npc.velocity.X > num725)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else if (npc.velocity.X > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.05f;
                            }
                            if (npc.velocity.X < -num725)
                            {
                                npc.velocity.X = -num725;
                            }
                        }
                        else if (npc.direction == 1 && npc.velocity.X < num725)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                            if (npc.velocity.X < -num725)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            else if (npc.velocity.X < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.05f;
                            }
                            if (npc.velocity.X > num725)
                            {
                                npc.velocity.X = num725;
                            }
                        }
                        if (npc.type == 490)
                        {
                            num725 = 1f;
                        }
                        else
                        {
                            num725 = 1.5f;
                        }
                        if (npc.directionY == -1 && npc.velocity.Y > -num725)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if (npc.velocity.Y > num725)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                            }
                            else if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.03f;
                            }
                            if (npc.velocity.Y < -num725)
                            {
                                npc.velocity.Y = -num725;
                            }
                        }
                        else if (npc.directionY == 1 && npc.velocity.Y < num725)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.04f;
                            if (npc.velocity.Y < -num725)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                            else if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.03f;
                            }
                            if (npc.velocity.Y > num725)
                            {
                                npc.velocity.Y = num725;
                            }
                        }
                        if (npc.type == 122)
                        {
                            return;
                        }
                    }
                    else if (npc.aiStyle == 23)
                    {
                        npc.noGravity = true;
                        npc.noTileCollide = true;
                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
                        {
                            npc.TargetClosest(true);
                        }
                        if (npc.ai[0] == 0f)
                        {
                            float num726 = 9f;
                            Vector2 vector71 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num727 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector71.X;
                            float num728 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector71.Y;
                            float num729 = (float)Math.Sqrt((double)(num727 * num727 + num728 * num728));
                            num729 = num726 / num729;
                            num727 *= num729;
                            num728 *= num729;
                            npc.velocity.X = num727;
                            npc.velocity.Y = num728;
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) + 0.785f;
                            npc.ai[0] = 1f;
                            npc.ai[1] = 0f;
                            npc.netUpdate = true;
                            return;
                        }
                        if (npc.ai[0] == 1f)
                        {
                            if (npc.justHit)
                            {
                                npc.ai[0] = 2f;
                                npc.ai[1] = 0f;
                            }
                            npc.velocity *= 0.99f;
                            npc.ai[1] += 1f;
                            if (npc.ai[1] >= 100f)
                            {
                                npc.netUpdate = true;
                                npc.ai[0] = 2f;
                                npc.ai[1] = 0f;
                                npc.velocity.X = 0f;
                                npc.velocity.Y = 0f;
                                return;
                            }
                        }
                        else
                        {
                            if (npc.justHit)
                            {
                                npc.ai[0] = 2f;
                                npc.ai[1] = 0f;
                            }
                            npc.velocity *= 0.96f;
                            npc.ai[1] += 1f;
                            float num730 = npc.ai[1] / 120f;
                            num730 = 0.1f + num730 * 0.4f;
                            npc.rotation += num730 * (float)npc.direction;
                            if (npc.ai[1] >= 120f)
                            {
                                npc.netUpdate = true;
                                npc.ai[0] = 0f;
                                npc.ai[1] = 0f;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 24)
                    {
                        npc.noGravity = true;
                        if (npc.ai[0] == 0f)
                        {
                            npc.noGravity = false;
                            npc.TargetClosest(true);
                            if (Main.netMode != 1)
                            {
                                if (npc.velocity.X != 0f || npc.velocity.Y < 0f || (double)npc.velocity.Y > 0.3)
                                {
                                    npc.ai[0] = 1f;
                                    npc.netUpdate = true;
                                    npc.direction = -npc.direction;
                                }
                                else
                                {
                                    Rectangle rectangle8 = new Rectangle((int)Main.player[npc.target].position.X, (int)Main.player[npc.target].position.Y, Main.player[npc.target].width, Main.player[npc.target].height);
                                    Rectangle rectangle9 = new Rectangle((int)npc.position.X - 100, (int)npc.position.Y - 100, npc.width + 200, npc.height + 200);
                                    if (rectangle9.Intersects(rectangle8) || npc.life < npc.lifeMax)
                                    {
                                        npc.ai[0] = 1f;
                                        npc.velocity.Y = npc.velocity.Y - 6f;
                                        npc.netUpdate = true;
                                        npc.direction = -npc.direction;
                                    }
                                }
                            }
                        }
                        else if (!Main.player[npc.target].dead)
                        {
                            if (npc.collideX)
                            {
                                npc.direction *= -1;
                                npc.velocity.X = npc.oldVelocity.X * -0.5f;
                                if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                                {
                                    npc.velocity.X = 2f;
                                }
                                if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                                {
                                    npc.velocity.X = -2f;
                                }
                            }
                            if (npc.collideY)
                            {
                                npc.velocity.Y = npc.oldVelocity.Y * -0.5f;
                                if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                                {
                                    npc.velocity.Y = 1f;
                                }
                                if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                                {
                                    npc.velocity.Y = -1f;
                                }
                            }
                            if (npc.direction == -1 && npc.velocity.X > -3f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                                if (npc.velocity.X > 3f)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.1f;
                                }
                                else if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.05f;
                                }
                                if (npc.velocity.X < -3f)
                                {
                                    npc.velocity.X = -3f;
                                }
                            }
                            else if (npc.direction == 1 && npc.velocity.X < 3f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                                if (npc.velocity.X < -3f)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                }
                                else if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.05f;
                                }
                                if (npc.velocity.X > 3f)
                                {
                                    npc.velocity.X = 3f;
                                }
                            }
                            int num731 = (int)((npc.position.X + (float)(npc.width / 2)) / 16f) + npc.direction;
                            int num732 = (int)((npc.position.Y + (float)npc.height) / 16f);
                            bool flag83 = true;
                            int num733 = 15;
                            bool flag84 = false;
                            for (int num734 = num732; num734 < num732 + num733; num734++)
                            {
                                if (Main.tile[num731, num734] == null)
                                {
                                    Main.tile[num731, num734] = new Tile();
                                }
                                if ((Main.tile[num731, num734].nactive() && Main.tileSolid[(int)Main.tile[num731, num734].type]) || Main.tile[num731, num734].liquid > 0)
                                {
                                    if (num734 < num732 + 5)
                                    {
                                        flag84 = true;
                                    }
                                    flag83 = false;
                                    break;
                                }
                            }
                            if (flag83)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                            }
                            if (flag84)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.2f;
                            }
                            if (npc.velocity.Y > 2f)
                            {
                                npc.velocity.Y = 2f;
                            }
                            if (npc.velocity.Y < -4f)
                            {
                                npc.velocity.Y = -4f;
                            }
                        }
                        if (npc.wet)
                        {
                            npc.ai[1] = 0f;
                            if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.95f;
                            }
                            npc.velocity.Y = npc.velocity.Y - 0.5f;
                            if (npc.velocity.Y < -4f)
                            {
                                npc.velocity.Y = -4f;
                            }
                            npc.TargetClosest(true);
                            return;
                        }
                    }
                    else if (npc.aiStyle == 25)
                    {
                        bool flag85 = npc.type == 341 && !Main.snowMoon;
                        if (npc.ai[3] == 0f)
                        {
                            npc.position.X = npc.position.X + 8f;
                            if (npc.position.Y / 16f > (float)(Main.maxTilesY - 200))
                            {
                                npc.ai[3] = 3f;
                            }
                            else if ((double)(npc.position.Y / 16f) > Main.worldSurface)
                            {
                                npc.TargetClosest(true);
                                if (Main.player[npc.target].ZoneSnow)
                                {
                                    npc.ai[3] = 4f;
                                }
                                else
                                {
                                    npc.ai[3] = 2f;
                                }
                            }
                            else
                            {
                                npc.ai[3] = 1f;
                            }
                        }
                        if (npc.type == 341)
                        {
                            npc.ai[3] = 1f;
                        }
                        if (npc.ai[0] == 0f)
                        {
                            if (!flag85)
                            {
                                npc.TargetClosest(true);
                            }
                            if (Main.netMode != 1)
                            {
                                if (npc.velocity.X != 0f || npc.velocity.Y < 0f || (double)npc.velocity.Y > 0.3)
                                {
                                    npc.ai[0] = 1f;
                                    npc.netUpdate = true;
                                    return;
                                }
                                Rectangle rectangle10 = new Rectangle((int)Main.player[npc.target].position.X, (int)Main.player[npc.target].position.Y, Main.player[npc.target].width, Main.player[npc.target].height);
                                Rectangle rectangle11 = new Rectangle((int)npc.position.X - 100, (int)npc.position.Y - 100, npc.width + 200, npc.height + 200);
                                if (rectangle11.Intersects(rectangle10) || npc.life < npc.lifeMax)
                                {
                                    npc.ai[0] = 1f;
                                    npc.netUpdate = true;
                                    return;
                                }
                            }
                        }
                        else if (npc.velocity.Y == 0f)
                        {
                            npc.ai[2] += 1f;
                            int num735 = 20;
                            if (npc.ai[1] == 0f)
                            {
                                num735 = 12;
                            }
                            if (npc.ai[2] < (float)num735)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                                return;
                            }
                            npc.ai[2] = 0f;
                            if (!flag85)
                            {
                                npc.TargetClosest(true);
                            }
                            if (npc.direction == 0)
                            {
                                npc.direction = -1;
                            }
                            npc.spriteDirection = npc.direction;
                            npc.ai[1] += 1f;
                            if (npc.ai[1] == 2f)
                            {
                                npc.velocity.X = (float)npc.direction * 2.5f;
                                npc.velocity.Y = -8f;
                                npc.ai[1] = 0f;
                            }
                            else
                            {
                                npc.velocity.X = (float)npc.direction * 3.5f;
                                npc.velocity.Y = -4f;
                            }
                            npc.netUpdate = true;
                            return;
                        }
                        else
                        {
                            if (npc.direction == 1 && npc.velocity.X < 1f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                                return;
                            }
                            if (npc.direction == -1 && npc.velocity.X > -1f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 26)
                    {
                        int num736 = 30;
                        int num737 = 10;
                        bool flag86 = false;
                        bool flag87 = false;
                        bool flag88 = false;
                        if (npc.velocity.Y == 0f && ((npc.velocity.X > 0f && npc.direction < 0) || (npc.velocity.X < 0f && npc.direction > 0)))
                        {
                            flag87 = true;
                            npc.ai[3] += 1f;
                        }
                        if (npc.position.X == npc.oldPosition.X || npc.ai[3] >= (float)num736 || flag87)
                        {
                            npc.ai[3] += 1f;
                            flag88 = true;
                        }
                        else if (npc.ai[3] > 0f)
                        {
                            npc.ai[3] -= 1f;
                        }
                        if (npc.ai[3] > (float)(num736 * num737))
                        {
                            npc.ai[3] = 0f;
                        }
                        if (npc.justHit)
                        {
                            npc.ai[3] = 0f;
                        }
                        if (npc.ai[3] == (float)num736)
                        {
                            npc.netUpdate = true;
                        }
                        Vector2 vector72 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num738 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector72.X;
                        float num739 = Main.player[npc.target].position.Y - vector72.Y;
                        float num740 = (float)Math.Sqrt((double)(num738 * num738 + num739 * num739));
                        if (num740 < 200f && !flag88)
                        {
                            npc.ai[3] = 0f;
                        }
                        if (npc.type == 410)
                        {
                            npc.ai[1] += 1f;
                            bool flag89 = npc.ai[1] >= 240f;
                            if (!flag89 && npc.velocity.Y == 0f)
                            {
                                for (int num741 = 0; num741 < 255; num741++)
                                {
                                    if (Main.player[num741].active && !Main.player[num741].dead && Main.player[num741].Distance(npc.Center) < 800f && Main.player[num741].Center.Y < npc.Center.Y && Math.Abs(Main.player[num741].Center.X - npc.Center.X) < 20f)
                                    {
                                        flag89 = true;
                                        break;
                                    }
                                }
                            }
                            if (flag89 && Main.netMode != 1)
                            {
                                for (int num742 = 0; num742 < 3; num742++)
                                {
                                    Projectile.NewProjectile(npc.Center.X, npc.Center.Y, (Main.rand.NextFloat() - 0.5f) * 2f, -4f - 10f * Main.rand.NextFloat(), 538, 50, 0f, Main.myPlayer, 0f, 0f);
                                }
                                npc.HitEffect(9999, 10.0);
                                npc.active = false;
                                return;
                            }
                        }
                        else if (npc.type == 423)
                        {
                            if (npc.ai[2] == 1f)
                            {
                                npc.ai[1] += 1f;
                                npc.velocity.X = npc.velocity.X * 0.7f;
                                if (npc.velocity.X > -0.5f && npc.velocity.X < 0.5f)
                                {
                                    npc.velocity.X = 0f;
                                }
                                if (npc.ai[1] == 30f && Main.netMode != 1)
                                {
                                    int num744 = Main.expertMode ? 35 : 50;
                                    Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * -20), npc.Center.Y, (float)(npc.spriteDirection * -7), 0f, 575, num744, 0f, Main.myPlayer, (float)npc.target, 0f);
                                }
                                if (npc.ai[1] >= 60f)
                                {
                                    npc.ai[1] = (float)(-(float)Main.rand.Next(320, 601));
                                    npc.ai[2] = 0f;
                                }
                            }
                            else
                            {
                                npc.ai[1] += 1f;
                                if (npc.ai[1] >= 180f && num740 < 500f && npc.velocity.Y == 0f)
                                {
                                    flag86 = true;
                                    npc.ai[1] = 0f;
                                    npc.ai[2] = 1f;
                                    npc.netUpdate = true;
                                }
                                else if (npc.velocity.Y == 0f && num740 < 100f && Math.Abs(npc.velocity.X) > 3f && ((npc.Center.X < Main.player[npc.target].Center.X && npc.velocity.X > 0f) || (npc.Center.X > Main.player[npc.target].Center.X && npc.velocity.X < 0f)))
                                {
                                    npc.velocity.Y = npc.velocity.Y - 4f;
                                }
                            }
                        }
                        else if ((npc.type == 155 || npc.type == 329) && npc.velocity.Y == 0f && num740 < 100f && Math.Abs(npc.velocity.X) > 3f && ((npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) && npc.velocity.X > 0f) || (npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) && npc.velocity.X < 0f)))
                        {
                            npc.velocity.Y = npc.velocity.Y - 4f;
                        }
                        if (npc.ai[3] < (float)num736)
                        {
                            if ((npc.type == 329 || npc.type == 315) && !Main.pumpkinMoon)
                            {
                                if (npc.timeLeft > 10)
                                {
                                    npc.timeLeft = 10;
                                }
                            }
                            else
                            {
                                npc.TargetClosest(true);
                            }
                        }
                        else
                        {
                            if (npc.velocity.X == 0f)
                            {
                                if (npc.velocity.Y == 0f)
                                {
                                    npc.ai[0] += 1f;
                                    if (npc.ai[0] >= 2f)
                                    {
                                        npc.direction *= -1;
                                        npc.spriteDirection = npc.direction;
                                        npc.ai[0] = 0f;
                                    }
                                }
                            }
                            else
                            {
                                npc.ai[0] = 0f;
                            }
                            npc.directionY = -1;
                            if (npc.direction == 0)
                            {
                                npc.direction = 1;
                            }
                        }
                        float num745 = 6f;
                        float num746 = 0.07f;
                        if (!flag86 && (npc.velocity.Y == 0f || npc.wet || (npc.velocity.X <= 0f && npc.direction < 0) || (npc.velocity.X >= 0f && npc.direction > 0)))
                        {
                            if (npc.type == 155)
                            {
                                if (npc.velocity.X > 0f && npc.direction < 0)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.95f;
                                }
                                if (npc.velocity.X < 0f && npc.direction > 0)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.95f;
                                }
                            }
                            else if (npc.type == 329)
                            {
                                if (npc.velocity.X > 0f && npc.direction < 0)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                if (npc.velocity.X < 0f && npc.direction > 0)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                if (npc.direction > 0 && npc.velocity.X < 3f)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                }
                                if (npc.direction < 0 && npc.velocity.X > -3f)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.1f;
                                }
                            }
                            else if (npc.type == 315)
                            {
                                if (npc.velocity.X > 0f && npc.direction < 0)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.95f;
                                }
                                if (npc.velocity.X < 0f && npc.direction > 0)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.95f;
                                }
                                if (npc.velocity.X < -num745 || npc.velocity.X > num745)
                                {
                                    if (npc.velocity.Y == 0f)
                                    {
                                        npc.velocity *= 0.8f;
                                    }
                                }
                                else if (npc.velocity.X < num745 && npc.direction == 1)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.07f;
                                    if (npc.velocity.X > num745)
                                    {
                                        npc.velocity.X = num745;
                                    }
                                }
                                else if (npc.velocity.X > -num745 && npc.direction == -1)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.07f;
                                    if (npc.velocity.X < -num745)
                                    {
                                        npc.velocity.X = -num745;
                                    }
                                }
                            }
                            else if (npc.type == 410)
                            {
                                if (Math.Sign(npc.velocity.X) != npc.direction)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                num745 = 6f;
                                num746 = 0.2f;
                            }
                            else if (npc.type == 423)
                            {
                                if (Math.Sign(npc.velocity.X) != npc.direction)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.85f;
                                }
                                num745 = 10f;
                                num746 = 0.2f;
                            }
                            if (npc.velocity.X < -num745 || npc.velocity.X > num745)
                            {
                                if (npc.velocity.Y == 0f)
                                {
                                    npc.velocity *= 0.8f;
                                }
                            }
                            else if (npc.velocity.X < num745 && npc.direction == 1)
                            {
                                npc.velocity.X = npc.velocity.X + num746;
                                if (npc.velocity.X > num745)
                                {
                                    npc.velocity.X = num745;
                                }
                            }
                            else if (npc.velocity.X > -num745 && npc.direction == -1)
                            {
                                npc.velocity.X = npc.velocity.X - num746;
                                if (npc.velocity.X < -num745)
                                {
                                    npc.velocity.X = -num745;
                                }
                            }
                        }
                        if (npc.velocity.Y >= 0f)
                        {
                            int num747 = 0;
                            if (npc.velocity.X < 0f)
                            {
                                num747 = -1;
                            }
                            if (npc.velocity.X > 0f)
                            {
                                num747 = 1;
                            }
                            Vector2 position5 = npc.position;
                            position5.X += npc.velocity.X;
                            int num748 = (int)((position5.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 1) * num747)) / 16f);
                            int num749 = (int)((position5.Y + (float)npc.height - 1f) / 16f);
                            if (Main.tile[num748, num749] == null)
                            {
                                Main.tile[num748, num749] = new Tile();
                            }
                            if (Main.tile[num748, num749 - 1] == null)
                            {
                                Main.tile[num748, num749 - 1] = new Tile();
                            }
                            if (Main.tile[num748, num749 - 2] == null)
                            {
                                Main.tile[num748, num749 - 2] = new Tile();
                            }
                            if (Main.tile[num748, num749 - 3] == null)
                            {
                                Main.tile[num748, num749 - 3] = new Tile();
                            }
                            if (Main.tile[num748, num749 + 1] == null)
                            {
                                Main.tile[num748, num749 + 1] = new Tile();
                            }
                            if ((float)(num748 * 16) < position5.X + (float)npc.width && (float)(num748 * 16 + 16) > position5.X && ((Main.tile[num748, num749].nactive() && !Main.tile[num748, num749].topSlope() && !Main.tile[num748, num749 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num748, num749].type] && !Main.tileSolidTop[(int)Main.tile[num748, num749].type]) || (Main.tile[num748, num749 - 1].halfBrick() && Main.tile[num748, num749 - 1].nactive())) && (!Main.tile[num748, num749 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 1].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 1].type] || (Main.tile[num748, num749 - 1].halfBrick() && (!Main.tile[num748, num749 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 4].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 4].type]))) && (!Main.tile[num748, num749 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 2].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 2].type]) && (!Main.tile[num748, num749 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 3].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 3].type]) && (!Main.tile[num748 - num747, num749 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num748 - num747, num749 - 3].type]))
                            {
                                float num750 = (float)(num749 * 16);
                                if (Main.tile[num748, num749].halfBrick())
                                {
                                    num750 += 8f;
                                }
                                if (Main.tile[num748, num749 - 1].halfBrick())
                                {
                                    num750 -= 8f;
                                }
                                if (num750 < position5.Y + (float)npc.height)
                                {
                                    float num751 = position5.Y + (float)npc.height - num750;
                                    if ((double)num751 <= 16.1)
                                    {
                                        npc.gfxOffY += npc.position.Y + (float)npc.height - num750;
                                        npc.position.Y = num750 - (float)npc.height;
                                        if (num751 < 9f)
                                        {
                                            npc.stepSpeed = 1f;
                                        }
                                        else
                                        {
                                            npc.stepSpeed = 2f;
                                        }
                                    }
                                }
                            }
                        }
                        if (npc.velocity.Y == 0f)
                        {
                            int num752 = (int)((npc.position.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 2) * npc.direction) + npc.velocity.X * 5f) / 16f);
                            int num753 = (int)((npc.position.Y + (float)npc.height - 15f) / 16f);
                            if (Main.tile[num752, num753] == null)
                            {
                                Main.tile[num752, num753] = new Tile();
                            }
                            if (Main.tile[num752, num753 - 1] == null)
                            {
                                Main.tile[num752, num753 - 1] = new Tile();
                            }
                            if (Main.tile[num752, num753 - 2] == null)
                            {
                                Main.tile[num752, num753 - 2] = new Tile();
                            }
                            if (Main.tile[num752, num753 - 3] == null)
                            {
                                Main.tile[num752, num753 - 3] = new Tile();
                            }
                            if (Main.tile[num752, num753 + 1] == null)
                            {
                                Main.tile[num752, num753 + 1] = new Tile();
                            }
                            if (Main.tile[num752 + npc.direction, num753 - 1] == null)
                            {
                                Main.tile[num752 + npc.direction, num753 - 1] = new Tile();
                            }
                            if (Main.tile[num752 + npc.direction, num753 + 1] == null)
                            {
                                Main.tile[num752 + npc.direction, num753 + 1] = new Tile();
                            }
                            if (Main.tile[num752 - npc.direction, num753 + 1] == null)
                            {
                                Main.tile[num752 - npc.direction, num753 + 1] = new Tile();
                            }
                            int num754 = npc.spriteDirection;
                            if (npc.type == 423 || npc.type == 410)
                            {
                                num754 *= -1;
                            }
                            if ((npc.velocity.X < 0f && num754 == -1) || (npc.velocity.X > 0f && num754 == 1))
                            {
                                bool flag90 = npc.type == 410 || npc.type == 423;
                                float num755 = 3f;
                                if (Main.tile[num752, num753 - 2].nactive() && Main.tileSolid[(int)Main.tile[num752, num753 - 2].type])
                                {
                                    if (Main.tile[num752, num753 - 3].nactive() && Main.tileSolid[(int)Main.tile[num752, num753 - 3].type])
                                    {
                                        npc.velocity.Y = -8.5f;
                                        npc.netUpdate = true;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = -7.5f;
                                        npc.netUpdate = true;
                                    }
                                }
                                else if (Main.tile[num752, num753 - 1].nactive() && !Main.tile[num752, num753 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num752, num753 - 1].type])
                                {
                                    npc.velocity.Y = -7f;
                                    npc.netUpdate = true;
                                }
                                else if (npc.position.Y + (float)npc.height - (float)(num753 * 16) > 20f && Main.tile[num752, num753].nactive() && !Main.tile[num752, num753].topSlope() && Main.tileSolid[(int)Main.tile[num752, num753].type])
                                {
                                    npc.velocity.Y = -6f;
                                    npc.netUpdate = true;
                                }
                                else if ((npc.directionY < 0 || Math.Abs(npc.velocity.X) > num755) && (!flag90 || !Main.tile[num752, num753 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num752, num753 + 1].type]) && (!Main.tile[num752, num753 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num752, num753 + 2].type]) && (!Main.tile[num752 + npc.direction, num753 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num752 + npc.direction, num753 + 3].type]))
                                {
                                    npc.velocity.Y = -8f;
                                    npc.netUpdate = true;
                                }
                            }
                        }
                        if (npc.type == 423 && Math.Abs(npc.velocity.X) >= num745 * 0.95f)
                        {
                            return;
                        }
                    }
                    else if (npc.aiStyle == 27)
                    {
                        if (npc.position.X < 160f || npc.position.X > (float)((Main.maxTilesX - 10) * 16))
                        {
                            npc.active = false;
                        }
                        if (npc.localAI[0] == 0f)
                        {
                            npc.localAI[0] = 1f;
                            Main.wofB = -1;
                            Main.wofT = -1;
                        }
                        npc.ai[1] += 1f;
                        if (npc.ai[2] == 0f)
                        {
                            if ((double)npc.life < (double)npc.lifeMax * 0.5)
                            {
                                npc.ai[1] += 1f;
                            }
                            if ((double)npc.life < (double)npc.lifeMax * 0.2)
                            {
                                npc.ai[1] += 1f;
                            }
                            if (npc.ai[1] > 2700f)
                            {
                                npc.ai[2] = 1f;
                            }
                        }
                        if (npc.ai[2] > 0f && npc.ai[1] > 60f)
                        {
                            int num757 = 3;
                            if ((double)npc.life < (double)npc.lifeMax * 0.3)
                            {
                                num757++;
                            }
                            npc.ai[2] += 1f;
                            npc.ai[1] = 0f;
                            if (npc.ai[2] > (float)num757)
                            {
                                npc.ai[2] = 0f;
                            }
                            if (Main.netMode != 1)
                            {
                                int num758 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)(npc.height / 2) + 20f), 117, 1, 0f, 0f, 0f, 0f, 255);
                                Main.npc[num758].velocity.X = (float)(npc.direction * 8);
                            }
                        }
                        npc.localAI[3] += 1f;
                        if (npc.localAI[3] >= (float)(600 + Main.rand.Next(1000)))
                        {
                            npc.localAI[3] = (float)(-(float)Main.rand.Next(200));
                        }
                        Main.wof = npc.whoAmI;
                        int num759 = (int)(npc.position.X / 16f);
                        int num760 = (int)((npc.position.X + (float)npc.width) / 16f);
                        int num761 = (int)((npc.position.Y + (float)(npc.height / 2)) / 16f);
                        int num762 = 0;
                        int num763 = num761 + 7;
                        while (num762 < 15 && num763 > Main.maxTilesY - 200)
                        {
                            num763++;
                            for (int num764 = num759; num764 <= num760; num764++)
                            {
                                try
                                {
                                    if (WorldGen.SolidTile(num764, num763) || Main.tile[num764, num763].liquid > 0)
                                    {
                                        num762++;
                                    }
                                }
                                catch
                                {
                                    num762 += 15;
                                }
                            }
                        }
                        num763 += 4;
                        if (Main.wofB == -1)
                        {
                            Main.wofB = num763 * 16;
                        }
                        else if (Main.wofB > num763 * 16)
                        {
                            Main.wofB--;
                            if (Main.wofB < num763 * 16)
                            {
                                Main.wofB = num763 * 16;
                            }
                        }
                        else if (Main.wofB < num763 * 16)
                        {
                            Main.wofB++;
                            if (Main.wofB > num763 * 16)
                            {
                                Main.wofB = num763 * 16;
                            }
                        }
                        num762 = 0;
                        num763 = num761 - 7;
                        while (num762 < 15 && num763 < Main.maxTilesY - 10)
                        {
                            num763--;
                            for (int num765 = num759; num765 <= num760; num765++)
                            {
                                try
                                {
                                    if (WorldGen.SolidTile(num765, num763) || Main.tile[num765, num763].liquid > 0)
                                    {
                                        num762++;
                                    }
                                }
                                catch
                                {
                                    num762 += 15;
                                }
                            }
                        }
                        num763 -= 4;
                        if (Main.wofT == -1)
                        {
                            Main.wofT = num763 * 16;
                        }
                        else if (Main.wofT > num763 * 16)
                        {
                            Main.wofT--;
                            if (Main.wofT < num763 * 16)
                            {
                                Main.wofT = num763 * 16;
                            }
                        }
                        else if (Main.wofT < num763 * 16)
                        {
                            Main.wofT++;
                            if (Main.wofT > num763 * 16)
                            {
                                Main.wofT = num763 * 16;
                            }
                        }
                        float num766 = (float)((Main.wofB + Main.wofT) / 2 - npc.height / 2);
                        if (npc.position.Y > num766 + 1f)
                        {
                            npc.velocity.Y = -1f;
                        }
                        else if (npc.position.Y < num766 - 1f)
                        {
                            npc.velocity.Y = 1f;
                        }
                        npc.velocity.Y = 0f;
                        npc.position.Y = num766;
                        float num767 = 1.5f;
                        if ((double)npc.life < (double)npc.lifeMax * 0.75)
                        {
                            num767 += 0.25f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.5)
                        {
                            num767 += 0.4f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                        {
                            num767 += 0.5f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.1)
                        {
                            num767 += 0.6f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.66 && Main.expertMode)
                        {
                            num767 += 0.3f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.33 && Main.expertMode)
                        {
                            num767 += 0.3f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.05 && Main.expertMode)
                        {
                            num767 += 0.6f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.035 && Main.expertMode)
                        {
                            num767 += 0.6f;
                        }
                        if ((double)npc.life < (double)npc.lifeMax * 0.025 && Main.expertMode)
                        {
                            num767 += 0.6f;
                        }
                        if (Main.expertMode)
                        {
                            num767 *= 1.35f;
                            num767 += 0.35f;
                        }
                        if (npc.velocity.X == 0f)
                        {
                            npc.TargetClosest(true);
                            npc.velocity.X = (float)npc.direction;
                        }
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = -num767;
                            npc.direction = -1;
                        }
                        else
                        {
                            npc.velocity.X = num767;
                            npc.direction = 1;
                        }
                        npc.spriteDirection = npc.direction;
                        Vector2 vector77 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num768 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector77.X;
                        float num769 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector77.Y;
                        float num770 = (float)Math.Sqrt((double)(num768 * num768 + num769 * num769));
                        num768 *= num770;
                        num769 *= num770;
                        if (npc.direction > 0)
                        {
                            if (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) > npc.position.X + (float)(npc.width / 2))
                            {
                                npc.rotation = (float)Math.Atan2((double)(-(double)num769), (double)(-(double)num768)) + 3.14f;
                            }
                            else
                            {
                                npc.rotation = 0f;
                            }
                        }
                        else if (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) < npc.position.X + (float)(npc.width / 2))
                        {
                            npc.rotation = (float)Math.Atan2((double)num769, (double)num768) + 3.14f;
                        }
                        else
                        {
                            npc.rotation = 0f;
                        }
                        if (Main.expertMode && Main.netMode != 1)
                        {
                            int num771 = (int)(1f + (float)npc.life / (float)npc.lifeMax * 10f);
                            num771 *= num771;
                            if (num771 < 400)
                            {
                                num771 = (num771 * 19 + 400) / 20;
                            }
                            if (num771 < 60)
                            {
                                num771 = (num771 * 3 + 60) / 4;
                            }
                            if (num771 < 20)
                            {
                                num771 = (num771 + 20) / 2;
                            }
                            num771 = (int)((double)num771 * 0.7);
                            if (Main.rand.Next(num771) == 0)
                            {
                                int num772 = 0;
                                float[] array2 = new float[10];
                                for (int num773 = 0; num773 < 200; num773++)
                                {
                                    if (num772 < 10 && Main.npc[num773].active && Main.npc[num773].type == 115)
                                    {
                                        array2[num772] = Main.npc[num773].ai[0];
                                        num772++;
                                    }
                                }
                                int maxValue7 = 1 + num772 * 2;
                                if (num772 < 10 && Main.rand.Next(maxValue7) <= 1)
                                {
                                    int num774 = -1;
                                    for (int num775 = 0; num775 < 1000; num775++)
                                    {
                                        int num776 = Main.rand.Next(10);
                                        float num777 = (float)num776 * 0.1f - 0.05f;
                                        bool flag91 = true;
                                        for (int num778 = 0; num778 < num772; num778++)
                                        {
                                            if (num777 == array2[num778])
                                            {
                                                flag91 = false;
                                                break;
                                            }
                                        }
                                        if (flag91)
                                        {
                                            num774 = num776;
                                            break;
                                        }
                                    }
                                    if (num774 >= 0)
                                    {
                                        int num779 = NPC.NewNPC((int)npc.position.X, (int)num766, 115, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                        Main.npc[num779].ai[0] = (float)num774 * 0.1f - 0.05f;
                                    }
                                }
                            }
                        }
                        if (npc.localAI[0] == 1f && Main.netMode != 1)
                        {
                            npc.localAI[0] = 2f;
                            num766 = (float)((Main.wofB + Main.wofT) / 2);
                            num766 = (num766 + (float)Main.wofT) / 2f;
                            int num780 = NPC.NewNPC((int)npc.position.X, (int)num766, 114, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num780].ai[0] = 1f;
                            num766 = (float)((Main.wofB + Main.wofT) / 2);
                            num766 = (num766 + (float)Main.wofB) / 2f;
                            num780 = NPC.NewNPC((int)npc.position.X, (int)num766, 114, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num780].ai[0] = -1f;
                            num766 = (float)((Main.wofB + Main.wofT) / 2);
                            num766 = (num766 + (float)Main.wofB) / 2f;
                            for (int num781 = 0; num781 < 11; num781++)
                            {
                                num780 = NPC.NewNPC((int)npc.position.X, (int)num766, 115, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                Main.npc[num780].ai[0] = (float)num781 * 0.1f - 0.05f;
                            }
                            return;
                        }
                    }
                    else if (npc.aiStyle == 28)
                    {
                        if (Main.wof < 0)
                        {
                            npc.active = false;
                            return;
                        }
                        npc.realLife = Main.wof;
                        if (Main.npc[Main.wof].life > 0)
                        {
                            npc.life = Main.npc[Main.wof].life;
                        }
                        npc.TargetClosest(true);
                        npc.position.X = Main.npc[Main.wof].position.X;
                        npc.direction = Main.npc[Main.wof].direction;
                        npc.spriteDirection = npc.direction;
                        float num782 = (float)((Main.wofB + Main.wofT) / 2);
                        if (npc.ai[0] > 0f)
                        {
                            num782 = (num782 + (float)Main.wofT) / 2f;
                        }
                        else
                        {
                            num782 = (num782 + (float)Main.wofB) / 2f;
                        }
                        num782 -= (float)(npc.height / 2);
                        if (npc.position.Y > num782 + 1f)
                        {
                            npc.velocity.Y = -1f;
                        }
                        else if (npc.position.Y < num782 - 1f)
                        {
                            npc.velocity.Y = 1f;
                        }
                        else
                        {
                            npc.velocity.Y = 0f;
                            npc.position.Y = num782;
                        }
                        if (npc.velocity.Y > 5f)
                        {
                            npc.velocity.Y = 5f;
                        }
                        if (npc.velocity.Y < -5f)
                        {
                            npc.velocity.Y = -5f;
                        }
                        Vector2 vector78 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num783 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector78.X;
                        float num784 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector78.Y;
                        float num785 = (float)Math.Sqrt((double)(num783 * num783 + num784 * num784));
                        num783 *= num785;
                        num784 *= num785;
                        bool flag92 = true;
                        if (npc.direction > 0)
                        {
                            if (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) > npc.position.X + (float)(npc.width / 2))
                            {
                                npc.rotation = (float)Math.Atan2((double)(-(double)num784), (double)(-(double)num783)) + 3.14f;
                            }
                            else
                            {
                                npc.rotation = 0f;
                                flag92 = false;
                            }
                        }
                        else if (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) < npc.position.X + (float)(npc.width / 2))
                        {
                            npc.rotation = (float)Math.Atan2((double)num784, (double)num783) + 3.14f;
                        }
                        else
                        {
                            npc.rotation = 0f;
                            flag92 = false;
                        }
                        if (Main.netMode != 1)
                        {
                            int num786 = 4;
                            npc.localAI[1] += 1f;
                            if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
                            {
                                npc.localAI[1] += 1f;
                                num786++;
                            }
                            if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
                            {
                                npc.localAI[1] += 1f;
                                num786++;
                            }
                            if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
                            {
                                npc.localAI[1] += 1f;
                                num786 += 2;
                            }
                            if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
                            {
                                npc.localAI[1] += 2f;
                                num786 += 3;
                            }
                            if (Main.expertMode)
                            {
                                npc.localAI[1] += 0.5f;
                                num786++;
                                if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
                                {
                                    npc.localAI[1] += 2f;
                                    num786 += 3;
                                }
                            }
                            if (npc.localAI[2] == 0f)
                            {
                                if (npc.localAI[1] > 600f)
                                {
                                    npc.localAI[2] = 1f;
                                    npc.localAI[1] = 0f;
                                    return;
                                }
                            }
                            else if (npc.localAI[1] > 45f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                npc.localAI[1] = 0f;
                                npc.localAI[2] += 1f;
                                if (npc.localAI[2] >= (float)num786)
                                {
                                    npc.localAI[2] = 0f;
                                }
                                if (flag92)
                                {
                                    float num787 = 9f;
                                    int num788 = 11;
                                    int num789 = 83;
                                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
                                    {
                                        num788++;
                                        num787 += 1f;
                                    }
                                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
                                    {
                                        num788++;
                                        num787 += 1f;
                                    }
                                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
                                    {
                                        num788 += 2;
                                        num787 += 2f;
                                    }
                                    vector78 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    num783 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector78.X;
                                    num784 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector78.Y;
                                    num785 = (float)Math.Sqrt((double)(num783 * num783 + num784 * num784));
                                    num785 = num787 / num785;
                                    num783 *= num785;
                                    num784 *= num785;
                                    vector78.X += num783;
                                    vector78.Y += num784;
                                    Projectile.NewProjectile(vector78.X, vector78.Y, num783, num784, num789, num788, 0f, Main.myPlayer, 0f, 0f);
                                    return;
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 29)
                    {
                        if (npc.justHit)
                        {
                            npc.ai[1] = 10f;
                        }
                        if (Main.wof < 0)
                        {
                            npc.active = false;
                            return;
                        }
                        npc.TargetClosest(true);
                        float num790 = 0.1f;
                        float num791 = 300f;
                        if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
                        {
                            npc.damage = (int)(75f * Main.damageMultiplier);
                            npc.defense = 40;
                            if (!Main.expertMode)
                            {
                                num791 = 900f;
                            }
                            else
                            {
                                num790 += 0.1f;
                            }
                        }
                        else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
                        {
                            npc.damage = (int)(60f * Main.damageMultiplier);
                            npc.defense = 30;
                            if (!Main.expertMode)
                            {
                                num791 = 700f;
                            }
                            else
                            {
                                num790 += 0.066f;
                            }
                        }
                        else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
                        {
                            npc.damage = (int)(45f * Main.damageMultiplier);
                            npc.defense = 20;
                            if (!Main.expertMode)
                            {
                                num791 = 500f;
                            }
                            else
                            {
                                num790 += 0.033f;
                            }
                        }
                        if (Main.expertMode)
                        {
                            npc.defense = npc.defDefense;
                            if (npc.whoAmI % 4 == 0)
                            {
                                num791 *= 1.75f;
                            }
                            if (npc.whoAmI % 4 == 1)
                            {
                                num791 *= 1.5f;
                            }
                            if (npc.whoAmI % 4 == 2)
                            {
                                num791 *= 1.25f;
                            }
                            if (npc.whoAmI % 3 == 0)
                            {
                                num791 *= 1.5f;
                            }
                            if (npc.whoAmI % 3 == 1)
                            {
                                num791 *= 1.25f;
                            }
                            num791 *= 0.75f;
                        }
                        float num792 = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
                        float num793 = Main.npc[Main.wof].position.Y;
                        float num794 = (float)(Main.wofB - Main.wofT);
                        num793 = (float)Main.wofT + num794 * npc.ai[0];
                        npc.ai[2] += 1f;
                        if (npc.ai[2] > 100f)
                        {
                            num791 = (float)((int)(num791 * 1.3f));
                            if (npc.ai[2] > 200f)
                            {
                                npc.ai[2] = 0f;
                            }
                        }
                        Vector2 vector79 = new Vector2(num792, num793);
                        float num795 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - (float)(npc.width / 2) - vector79.X;
                        float num796 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - (float)(npc.height / 2) - vector79.Y;
                        float num797 = (float)Math.Sqrt((double)(num795 * num795 + num796 * num796));
                        if (npc.ai[1] == 0f)
                        {
                            if (num797 > num791)
                            {
                                num797 = num791 / num797;
                                num795 *= num797;
                                num796 *= num797;
                            }
                            if (npc.position.X < num792 + num795)
                            {
                                npc.velocity.X = npc.velocity.X + num790;
                                if (npc.velocity.X < 0f && num795 > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num790 * 2.5f;
                                }
                            }
                            else if (npc.position.X > num792 + num795)
                            {
                                npc.velocity.X = npc.velocity.X - num790;
                                if (npc.velocity.X > 0f && num795 < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num790 * 2.5f;
                                }
                            }
                            if (npc.position.Y < num793 + num796)
                            {
                                npc.velocity.Y = npc.velocity.Y + num790;
                                if (npc.velocity.Y < 0f && num796 > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num790 * 2.5f;
                                }
                            }
                            else if (npc.position.Y > num793 + num796)
                            {
                                npc.velocity.Y = npc.velocity.Y - num790;
                                if (npc.velocity.Y > 0f && num796 < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num790 * 2.5f;
                                }
                            }
                            float num798 = 4f;
                            if (Main.expertMode && Main.wof >= 0)
                            {
                                float num799 = 1.5f;
                                float num800 = (float)(Main.npc[Main.wof].life / Main.npc[Main.wof].lifeMax);
                                if ((double)num800 < 0.75)
                                {
                                    num799 += 0.7f;
                                }
                                if ((double)num800 < 0.5)
                                {
                                    num799 += 0.7f;
                                }
                                if ((double)num800 < 0.25)
                                {
                                    num799 += 0.9f;
                                }
                                if ((double)num800 < 0.1)
                                {
                                    num799 += 0.9f;
                                }
                                num799 *= 1.25f;
                                num799 += 0.3f;
                                num798 += num799 * 0.35f;
                                if (npc.Center.X < Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X > 0f)
                                {
                                    num798 += 6f;
                                }
                                if (npc.Center.X > Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X < 0f)
                                {
                                    num798 += 6f;
                                }
                            }
                            if (npc.velocity.X > num798)
                            {
                                npc.velocity.X = num798;
                            }
                            if (npc.velocity.X < -num798)
                            {
                                npc.velocity.X = -num798;
                            }
                            if (npc.velocity.Y > num798)
                            {
                                npc.velocity.Y = num798;
                            }
                            if (npc.velocity.Y < -num798)
                            {
                                npc.velocity.Y = -num798;
                            }
                        }
                        else if (npc.ai[1] > 0f)
                        {
                            npc.ai[1] -= 1f;
                        }
                        else
                        {
                            npc.ai[1] = 0f;
                        }
                        if (num795 > 0f)
                        {
                            npc.spriteDirection = 1;
                            npc.rotation = (float)Math.Atan2((double)num796, (double)num795);
                        }
                        if (num795 < 0f)
                        {
                            npc.spriteDirection = -1;
                            npc.rotation = (float)Math.Atan2((double)num796, (double)num795) + 3.14f;
                        }
                        return;
                    }
                    else if (npc.aiStyle == 30)
                    {
                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                        {
                            npc.TargetClosest(true);
                        }
                        bool dead2 = Main.player[npc.target].dead;
                        float num801 = npc.position.X + (float)(npc.width / 2) - Main.player[npc.target].position.X - (float)(Main.player[npc.target].width / 2);
                        float num802 = npc.position.Y + (float)npc.height - 59f - Main.player[npc.target].position.Y - (float)(Main.player[npc.target].height / 2);
                        float num803 = (float)Math.Atan2((double)num802, (double)num801) + 1.57f;
                        if (num803 < 0f)
                        {
                            num803 += 6.283f;
                        }
                        else if ((double)num803 > 6.283)
                        {
                            num803 -= 6.283f;
                        }
                        float num804 = 0.1f;
                        if (npc.rotation < num803)
                        {
                            if ((double)(num803 - npc.rotation) > 3.1415)
                            {
                                npc.rotation -= num804;
                            }
                            else
                            {
                                npc.rotation += num804;
                            }
                        }
                        else if (npc.rotation > num803)
                        {
                            if ((double)(npc.rotation - num803) > 3.1415)
                            {
                                npc.rotation += num804;
                            }
                            else
                            {
                                npc.rotation -= num804;
                            }
                        }
                        if (npc.rotation > num803 - num804 && npc.rotation < num803 + num804)
                        {
                            npc.rotation = num803;
                        }
                        if (npc.rotation < 0f)
                        {
                            npc.rotation += 6.283f;
                        }
                        else if ((double)npc.rotation > 6.283)
                        {
                            npc.rotation -= 6.283f;
                        }
                        if (npc.rotation > num803 - num804 && npc.rotation < num803 + num804)
                        {
                            npc.rotation = num803;
                        }
                        if (Main.netMode != 1 && !Main.dayTime && !dead2 && npc.timeLeft < 10)
                        {
                            for (int num806 = 0; num806 < 200; num806++)
                            {
                                if (num806 != npc.whoAmI && Main.npc[num806].active && (Main.npc[num806].type == 125 || Main.npc[num806].type == 126) && Main.npc[num806].timeLeft - 1 > npc.timeLeft)
                                {
                                    npc.timeLeft = Main.npc[num806].timeLeft - 1;
                                }
                            }
                        }
                        if (Main.dayTime || dead2)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if (npc.timeLeft > 10)
                            {
                                npc.timeLeft = 10;
                                return;
                            }
                        }
                        else if (npc.ai[0] == 0f)
                        {
                            if (npc.ai[1] == 0f)
                            {
                                float num807 = 7f;
                                float num808 = 0.1f;
                                if (Main.expertMode)
                                {
                                    num807 = 8.25f;
                                    num808 = 0.115f;
                                }
                                int num809 = 1;
                                if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                                {
                                    num809 = -1;
                                }
                                Vector2 vector80 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num810 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) + (float)(num809 * 300) - vector80.X;
                                float num811 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 300f - vector80.Y;
                                float num812 = (float)Math.Sqrt((double)(num810 * num810 + num811 * num811));
                                float num813 = num812;
                                num812 = num807 / num812;
                                num810 *= num812;
                                num811 *= num812;
                                if (npc.velocity.X < num810)
                                {
                                    npc.velocity.X = npc.velocity.X + num808;
                                    if (npc.velocity.X < 0f && num810 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num808;
                                    }
                                }
                                else if (npc.velocity.X > num810)
                                {
                                    npc.velocity.X = npc.velocity.X - num808;
                                    if (npc.velocity.X > 0f && num810 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num808;
                                    }
                                }
                                if (npc.velocity.Y < num811)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num808;
                                    if (npc.velocity.Y < 0f && num811 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num808;
                                    }
                                }
                                else if (npc.velocity.Y > num811)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num808;
                                    if (npc.velocity.Y > 0f && num811 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num808;
                                    }
                                }
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 600f)
                                {
                                    npc.ai[1] = 1f;
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 0f;
                                    npc.target = 255;
                                    npc.netUpdate = true;
                                }
                                else if (npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y && num813 < 400f)
                                {
                                    if (!Main.player[npc.target].dead)
                                    {
                                        npc.ai[3] += 1f;
                                        if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.9)
                                        {
                                            npc.ai[3] += 0.3f;
                                        }
                                        if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.8)
                                        {
                                            npc.ai[3] += 0.3f;
                                        }
                                        if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.7)
                                        {
                                            npc.ai[3] += 0.3f;
                                        }
                                        if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.6)
                                        {
                                            npc.ai[3] += 0.3f;
                                        }
                                    }
                                    if (npc.ai[3] >= 60f)
                                    {
                                        npc.ai[3] = 0f;
                                        vector80 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        num810 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector80.X;
                                        num811 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector80.Y;
                                        if (Main.netMode != 1)
                                        {
                                            float num814 = 9f;
                                            int num815 = 20;
                                            int num816 = 83;
                                            if (Main.expertMode)
                                            {
                                                num814 = 10.5f;
                                                num815 = 19;
                                            }
                                            num812 = (float)Math.Sqrt((double)(num810 * num810 + num811 * num811));
                                            num812 = num814 / num812;
                                            num810 *= num812;
                                            num811 *= num812;
                                            num810 += (float)Main.rand.Next(-40, 41) * 0.08f;
                                            num811 += (float)Main.rand.Next(-40, 41) * 0.08f;
                                            vector80.X += num810 * 15f;
                                            vector80.Y += num811 * 15f;
                                            Projectile.NewProjectile(vector80.X, vector80.Y, num810, num811, num816, num815, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                    }
                                }
                            }
                            else if (npc.ai[1] == 1f)
                            {
                                npc.rotation = num803;
                                float num817 = 12f;
                                if (Main.expertMode)
                                {
                                    num817 = 15f;
                                }
                                Vector2 vector81 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num818 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector81.X;
                                float num819 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector81.Y;
                                float num820 = (float)Math.Sqrt((double)(num818 * num818 + num819 * num819));
                                num820 = num817 / num820;
                                npc.velocity.X = num818 * num820;
                                npc.velocity.Y = num819 * num820;
                                npc.ai[1] = 2f;
                            }
                            else if (npc.ai[1] == 2f)
                            {
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 25f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                    {
                                        npc.velocity.X = 0f;
                                    }
                                    if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                                    {
                                        npc.velocity.Y = 0f;
                                    }
                                }
                                else
                                {
                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                                }
                                if (npc.ai[2] >= 70f)
                                {
                                    npc.ai[3] += 1f;
                                    npc.ai[2] = 0f;
                                    npc.target = 255;
                                    npc.rotation = num803;
                                    if (npc.ai[3] >= 4f)
                                    {
                                        npc.ai[1] = 0f;
                                        npc.ai[3] = 0f;
                                    }
                                    else
                                    {
                                        npc.ai[1] = 1f;
                                    }
                                }
                            }
                            if ((double)npc.life < (double)npc.lifeMax * 0.4)
                            {
                                npc.ai[0] = 1f;
                                npc.ai[1] = 0f;
                                npc.ai[2] = 0f;
                                npc.ai[3] = 0f;
                                npc.netUpdate = true;
                                return;
                            }
                        }
                        else if (npc.ai[0] == 1f || npc.ai[0] == 2f)
                        {
                            if (npc.ai[0] == 1f)
                            {
                                npc.ai[2] += 0.005f;
                                if ((double)npc.ai[2] > 0.5)
                                {
                                    npc.ai[2] = 0.5f;
                                }
                            }
                            else
                            {
                                npc.ai[2] -= 0.005f;
                                if (npc.ai[2] < 0f)
                                {
                                    npc.ai[2] = 0f;
                                }
                            }
                            npc.rotation += npc.ai[2];
                            npc.ai[1] += 1f;
                            if (npc.ai[1] == 100f)
                            {
                                npc.ai[0] += 1f;
                                npc.ai[1] = 0f;
                                if (npc.ai[0] == 3f)
                                {
                                    npc.ai[2] = 0f;
                                }
                            }
                            npc.velocity.X *= 0.98f;
                            npc.velocity.Y *= 0.98f;
                            if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                            {
                                npc.velocity.X = 0f;
                            }
                            if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                            {
                                npc.velocity.Y = 0f;
                                return;
                            }
                        }
                        else
                        {
                            npc.damage = (int)((double)npc.defDamage * 1.5);
                            npc.defense = npc.defDefense + 10;
                            //npc.soundHit = 4;
                            if (npc.ai[1] == 0f)
                            {
                                float num823 = 8f;
                                float num824 = 0.15f;
                                if (Main.expertMode)
                                {
                                    num823 = 9.5f;
                                    num824 = 0.175f;
                                }
                                Vector2 vector82 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num825 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector82.X;
                                float num826 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 300f - vector82.Y;
                                float num827 = (float)Math.Sqrt((double)(num825 * num825 + num826 * num826));
                                num827 = num823 / num827;
                                num825 *= num827;
                                num826 *= num827;
                                if (npc.velocity.X < num825)
                                {
                                    npc.velocity.X = npc.velocity.X + num824;
                                    if (npc.velocity.X < 0f && num825 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num824;
                                    }
                                }
                                else if (npc.velocity.X > num825)
                                {
                                    npc.velocity.X = npc.velocity.X - num824;
                                    if (npc.velocity.X > 0f && num825 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num824;
                                    }
                                }
                                if (npc.velocity.Y < num826)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num824;
                                    if (npc.velocity.Y < 0f && num826 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num824;
                                    }
                                }
                                else if (npc.velocity.Y > num826)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num824;
                                    if (npc.velocity.Y > 0f && num826 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num824;
                                    }
                                }
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 300f)
                                {
                                    npc.ai[1] = 1f;
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 0f;
                                    npc.TargetClosest(true);
                                    npc.netUpdate = true;
                                }
                                vector82 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                num825 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector82.X;
                                num826 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector82.Y;
                                npc.rotation = (float)Math.Atan2((double)num826, (double)num825) - 1.57f;
                                if (Main.netMode != 1)
                                {
                                    npc.localAI[1] += 1f;
                                    if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                    {
                                        npc.localAI[1] += 2f;
                                    }
                                    if (npc.localAI[1] > 180f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                    {
                                        npc.localAI[1] = 0f;
                                        float num828 = 8.5f;
                                        int num829 = 25;
                                        int num830 = 100;
                                        if (Main.expertMode)
                                        {
                                            num828 = 10f;
                                            num829 = 23;
                                        }
                                        num827 = (float)Math.Sqrt((double)(num825 * num825 + num826 * num826));
                                        num827 = num828 / num827;
                                        num825 *= num827;
                                        num826 *= num827;
                                        vector82.X += num825 * 15f;
                                        vector82.Y += num826 * 15f;
                                        Projectile.NewProjectile(vector82.X, vector82.Y, num825, num826, num830, num829, 0f, Main.myPlayer, 0f, 0f);
                                        return;
                                    }
                                }
                            }
                            else
                            {
                                int num831 = 1;
                                if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                                {
                                    num831 = -1;
                                }
                                float num832 = 8f;
                                float num833 = 0.2f;
                                if (Main.expertMode)
                                {
                                    num832 = 9.5f;
                                    num833 = 0.25f;
                                }
                                Vector2 vector83 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num834 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) + (float)(num831 * 340) - vector83.X;
                                float num835 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector83.Y;
                                float num836 = (float)Math.Sqrt((double)(num834 * num834 + num835 * num835));
                                num836 = num832 / num836;
                                num834 *= num836;
                                num835 *= num836;
                                if (npc.velocity.X < num834)
                                {
                                    npc.velocity.X = npc.velocity.X + num833;
                                    if (npc.velocity.X < 0f && num834 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num833;
                                    }
                                }
                                else if (npc.velocity.X > num834)
                                {
                                    npc.velocity.X = npc.velocity.X - num833;
                                    if (npc.velocity.X > 0f && num834 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num833;
                                    }
                                }
                                if (npc.velocity.Y < num835)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num833;
                                    if (npc.velocity.Y < 0f && num835 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num833;
                                    }
                                }
                                else if (npc.velocity.Y > num835)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num833;
                                    if (npc.velocity.Y > 0f && num835 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num833;
                                    }
                                }
                                vector83 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                num834 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector83.X;
                                num835 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector83.Y;
                                npc.rotation = (float)Math.Atan2((double)num835, (double)num834) - 1.57f;
                                if (Main.netMode != 1)
                                {
                                    npc.localAI[1] += 1f;
                                    if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                    {
                                        npc.localAI[1] += 0.5f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        npc.localAI[1] += 0.75f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                    {
                                        npc.localAI[1] += 1.5f;
                                    }
                                    if (Main.expertMode)
                                    {
                                        npc.localAI[1] += 1.5f;
                                    }
                                    if (npc.localAI[1] > 60f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                    {
                                        npc.localAI[1] = 0f;
                                        float num837 = 9f;
                                        int num838 = 18;
                                        int num839 = 100;
                                        if (Main.expertMode)
                                        {
                                            num838 = 17;
                                        }
                                        num836 = (float)Math.Sqrt((double)(num834 * num834 + num835 * num835));
                                        num836 = num837 / num836;
                                        num834 *= num836;
                                        num835 *= num836;
                                        vector83.X += num834 * 15f;
                                        vector83.Y += num835 * 15f;
                                        Projectile.NewProjectile(vector83.X, vector83.Y, num834, num835, num839, num838, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                }
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 180f)
                                {
                                    npc.ai[1] = 0f;
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 0f;
                                    npc.TargetClosest(true);
                                    npc.netUpdate = true;
                                    return;
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 31)
                    {
                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                        {
                            npc.TargetClosest(true);
                        }
                        bool dead3 = Main.player[npc.target].dead;
                        float num840 = npc.position.X + (float)(npc.width / 2) - Main.player[npc.target].position.X - (float)(Main.player[npc.target].width / 2);
                        float num841 = npc.position.Y + (float)npc.height - 59f - Main.player[npc.target].position.Y - (float)(Main.player[npc.target].height / 2);
                        float num842 = (float)Math.Atan2((double)num841, (double)num840) + 1.57f;
                        if (num842 < 0f)
                        {
                            num842 += 6.283f;
                        }
                        else if ((double)num842 > 6.283)
                        {
                            num842 -= 6.283f;
                        }
                        float num843 = 0.15f;
                        if (npc.rotation < num842)
                        {
                            if ((double)(num842 - npc.rotation) > 3.1415)
                            {
                                npc.rotation -= num843;
                            }
                            else
                            {
                                npc.rotation += num843;
                            }
                        }
                        else if (npc.rotation > num842)
                        {
                            if ((double)(npc.rotation - num842) > 3.1415)
                            {
                                npc.rotation += num843;
                            }
                            else
                            {
                                npc.rotation -= num843;
                            }
                        }
                        if (npc.rotation > num842 - num843 && npc.rotation < num842 + num843)
                        {
                            npc.rotation = num842;
                        }
                        if (npc.rotation < 0f)
                        {
                            npc.rotation += 6.283f;
                        }
                        else if ((double)npc.rotation > 6.283)
                        {
                            npc.rotation -= 6.283f;
                        }
                        if (npc.rotation > num842 - num843 && npc.rotation < num842 + num843)
                        {
                            npc.rotation = num842;
                        }
                        if (Main.netMode != 1 && !Main.dayTime && !dead3 && npc.timeLeft < 10)
                        {
                            for (int num845 = 0; num845 < 200; num845++)
                            {
                                if (num845 != npc.whoAmI && Main.npc[num845].active && (Main.npc[num845].type == 125 || Main.npc[num845].type == 126) && Main.npc[num845].timeLeft - 1 > npc.timeLeft)
                                {
                                    npc.timeLeft = Main.npc[num845].timeLeft - 1;
                                }
                            }
                        }
                        if (Main.dayTime || dead3)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                            if (npc.timeLeft > 10)
                            {
                                npc.timeLeft = 10;
                                return;
                            }
                        }
                        else if (npc.ai[0] == 0f)
                        {
                            if (npc.ai[1] == 0f)
                            {
                                npc.TargetClosest(true);
                                float num846 = 12f;
                                float num847 = 0.4f;
                                int num848 = 1;
                                if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                                {
                                    num848 = -1;
                                }
                                Vector2 vector84 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num849 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) + (float)(num848 * 400) - vector84.X;
                                float num850 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector84.Y;
                                float num851 = (float)Math.Sqrt((double)(num849 * num849 + num850 * num850));
                                num851 = num846 / num851;
                                num849 *= num851;
                                num850 *= num851;
                                if (npc.velocity.X < num849)
                                {
                                    npc.velocity.X = npc.velocity.X + num847;
                                    if (npc.velocity.X < 0f && num849 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num847;
                                    }
                                }
                                else if (npc.velocity.X > num849)
                                {
                                    npc.velocity.X = npc.velocity.X - num847;
                                    if (npc.velocity.X > 0f && num849 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num847;
                                    }
                                }
                                if (npc.velocity.Y < num850)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num847;
                                    if (npc.velocity.Y < 0f && num850 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num847;
                                    }
                                }
                                else if (npc.velocity.Y > num850)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num847;
                                    if (npc.velocity.Y > 0f && num850 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num847;
                                    }
                                }
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 600f)
                                {
                                    npc.ai[1] = 1f;
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 0f;
                                    npc.target = 255;
                                    npc.netUpdate = true;
                                }
                                else
                                {
                                    if (!Main.player[npc.target].dead)
                                    {
                                        npc.ai[3] += 1f;
                                        if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.8)
                                        {
                                            npc.ai[3] += 0.6f;
                                        }
                                    }
                                    if (npc.ai[3] >= 60f)
                                    {
                                        npc.ai[3] = 0f;
                                        vector84 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        num849 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector84.X;
                                        num850 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector84.Y;
                                        if (Main.netMode != 1)
                                        {
                                            float num852 = 12f;
                                            int num853 = 25;
                                            int num854 = 96;
                                            if (Main.expertMode)
                                            {
                                                num852 = 14f;
                                                num853 = 22;
                                            }
                                            num851 = (float)Math.Sqrt((double)(num849 * num849 + num850 * num850));
                                            num851 = num852 / num851;
                                            num849 *= num851;
                                            num850 *= num851;
                                            num849 += (float)Main.rand.Next(-40, 41) * 0.05f;
                                            num850 += (float)Main.rand.Next(-40, 41) * 0.05f;
                                            vector84.X += num849 * 4f;
                                            vector84.Y += num850 * 4f;
                                            Projectile.NewProjectile(vector84.X, vector84.Y, num849, num850, num854, num853, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                    }
                                }
                            }
                            else if (npc.ai[1] == 1f)
                            {
                                npc.rotation = num842;
                                float num855 = 13f;
                                if (Main.expertMode)
                                {
                                    if ((double)npc.life < (double)npc.lifeMax * 0.9)
                                    {
                                        num855 += 0.5f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.8)
                                    {
                                        num855 += 0.5f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.7)
                                    {
                                        num855 += 0.55f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.6)
                                    {
                                        num855 += 0.6f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        num855 += 0.65f;
                                    }
                                }
                                Vector2 vector85 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num856 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector85.X;
                                float num857 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector85.Y;
                                float num858 = (float)Math.Sqrt((double)(num856 * num856 + num857 * num857));
                                num858 = num855 / num858;
                                npc.velocity.X = num856 * num858;
                                npc.velocity.Y = num857 * num858;
                                npc.ai[1] = 2f;
                            }
                            else if (npc.ai[1] == 2f)
                            {
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 8f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                    {
                                        npc.velocity.X = 0f;
                                    }
                                    if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                                    {
                                        npc.velocity.Y = 0f;
                                    }
                                }
                                else
                                {
                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                                }
                                if (npc.ai[2] >= 42f)
                                {
                                    npc.ai[3] += 1f;
                                    npc.ai[2] = 0f;
                                    npc.target = 255;
                                    npc.rotation = num842;
                                    if (npc.ai[3] >= 10f)
                                    {
                                        npc.ai[1] = 0f;
                                        npc.ai[3] = 0f;
                                    }
                                    else
                                    {
                                        npc.ai[1] = 1f;
                                    }
                                }
                            }
                            if ((double)npc.life < (double)npc.lifeMax * 0.4)
                            {
                                npc.ai[0] = 1f;
                                npc.ai[1] = 0f;
                                npc.ai[2] = 0f;
                                npc.ai[3] = 0f;
                                npc.netUpdate = true;
                                return;
                            }
                        }
                        else if (npc.ai[0] == 1f || npc.ai[0] == 2f)
                        {
                            if (npc.ai[0] == 1f)
                            {
                                npc.ai[2] += 0.005f;
                                if ((double)npc.ai[2] > 0.5)
                                {
                                    npc.ai[2] = 0.5f;
                                }
                            }
                            else
                            {
                                npc.ai[2] -= 0.005f;
                                if (npc.ai[2] < 0f)
                                {
                                    npc.ai[2] = 0f;
                                }
                            }
                            npc.rotation += npc.ai[2];
                            npc.ai[1] += 1f;
                            if (npc.ai[1] == 100f)
                            {
                                npc.ai[0] += 1f;
                                npc.ai[1] = 0f;
                                if (npc.ai[0] == 3f)
                                {
                                    npc.ai[2] = 0f;
                                }
                            }
                            npc.velocity.X = npc.velocity.X * 0.98f;
                            npc.velocity.Y = npc.velocity.Y * 0.98f;
                            if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                            {
                                npc.velocity.X = 0f;
                            }
                            if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                            {
                                npc.velocity.Y = 0f;
                                return;
                            }
                        }
                        else
                        {
                            //npc.soundHit = 4;
                            npc.damage = (int)((double)npc.defDamage * 1.5);
                            npc.defense = npc.defDefense + 18;
                            if (npc.ai[1] == 0f)
                            {
                                float num861 = 4f;
                                float num862 = 0.1f;
                                int num863 = 1;
                                if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                                {
                                    num863 = -1;
                                }
                                Vector2 vector86 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num864 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) + (float)(num863 * 180) - vector86.X;
                                float num865 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector86.Y;
                                float num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
                                if (Main.expertMode)
                                {
                                    if (num866 > 300f)
                                    {
                                        num861 += 0.5f;
                                    }
                                    if (num866 > 400f)
                                    {
                                        num861 += 0.5f;
                                    }
                                    if (num866 > 500f)
                                    {
                                        num861 += 0.55f;
                                    }
                                    if (num866 > 600f)
                                    {
                                        num861 += 0.55f;
                                    }
                                    if (num866 > 700f)
                                    {
                                        num861 += 0.6f;
                                    }
                                    if (num866 > 800f)
                                    {
                                        num861 += 0.6f;
                                    }
                                }
                                num866 = num861 / num866;
                                num864 *= num866;
                                num865 *= num866;
                                if (npc.velocity.X < num864)
                                {
                                    npc.velocity.X = npc.velocity.X + num862;
                                    if (npc.velocity.X < 0f && num864 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num862;
                                    }
                                }
                                else if (npc.velocity.X > num864)
                                {
                                    npc.velocity.X = npc.velocity.X - num862;
                                    if (npc.velocity.X > 0f && num864 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num862;
                                    }
                                }
                                if (npc.velocity.Y < num865)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num862;
                                    if (npc.velocity.Y < 0f && num865 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num862;
                                    }
                                }
                                else if (npc.velocity.Y > num865)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num862;
                                    if (npc.velocity.Y > 0f && num865 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num862;
                                    }
                                }
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 400f)
                                {
                                    npc.ai[1] = 1f;
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 0f;
                                    npc.target = 255;
                                    npc.netUpdate = true;
                                }
                                if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                {
                                    npc.localAI[2] += 1f;
                                    if (npc.localAI[2] > 22f)
                                    {
                                        npc.localAI[2] = 0f;
                                    }
                                    if (Main.netMode != 1)
                                    {
                                        npc.localAI[1] += 1f;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            npc.localAI[1] += 1f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            npc.localAI[1] += 1f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            npc.localAI[1] += 1f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                        {
                                            npc.localAI[1] += 2f;
                                        }
                                        if (npc.localAI[1] > 8f)
                                        {
                                            npc.localAI[1] = 0f;
                                            float num867 = 6f;
                                            int num868 = 30;
                                            if (Main.expertMode)
                                            {
                                                num868 = 27;
                                            }
                                            int num869 = 101;
                                            vector86 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                            num864 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector86.X;
                                            num865 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector86.Y;
                                            num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
                                            num866 = num867 / num866;
                                            num864 *= num866;
                                            num865 *= num866;
                                            num865 += (float)Main.rand.Next(-40, 41) * 0.01f;
                                            num864 += (float)Main.rand.Next(-40, 41) * 0.01f;
                                            num865 += npc.velocity.Y * 0.5f;
                                            num864 += npc.velocity.X * 0.5f;
                                            vector86.X -= num864 * 1f;
                                            vector86.Y -= num865 * 1f;
                                            Projectile.NewProjectile(vector86.X, vector86.Y, num864, num865, num869, num868, 0f, Main.myPlayer, 0f, 0f);
                                            return;
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (npc.ai[1] == 1f)
                                {
                                    npc.rotation = num842;
                                    float num870 = 14f;
                                    if (Main.expertMode)
                                    {
                                        num870 += 2.5f;
                                    }
                                    Vector2 vector87 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    float num871 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector87.X;
                                    float num872 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector87.Y;
                                    float num873 = (float)Math.Sqrt((double)(num871 * num871 + num872 * num872));
                                    num873 = num870 / num873;
                                    npc.velocity.X = num871 * num873;
                                    npc.velocity.Y = num872 * num873;
                                    npc.ai[1] = 2f;
                                    return;
                                }
                                if (npc.ai[1] == 2f)
                                {
                                    npc.ai[2] += 1f;
                                    if (Main.expertMode)
                                    {
                                        npc.ai[2] += 0.5f;
                                    }
                                    if (npc.ai[2] >= 50f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.93f;
                                        npc.velocity.Y = npc.velocity.Y * 0.93f;
                                        if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                        {
                                            npc.velocity.X = 0f;
                                        }
                                        if ((double)npc.velocity.Y > -0.1 && (double)npc.velocity.Y < 0.1)
                                        {
                                            npc.velocity.Y = 0f;
                                        }
                                    }
                                    else
                                    {
                                        npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
                                    }
                                    if (npc.ai[2] >= 80f)
                                    {
                                        npc.ai[3] += 1f;
                                        npc.ai[2] = 0f;
                                        npc.target = 255;
                                        npc.rotation = num842;
                                        if (npc.ai[3] >= 6f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[3] = 0f;
                                            return;
                                        }
                                        npc.ai[1] = 1f;
                                        return;
                                    }
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 32)
                    {
                        npc.damage = npc.defDamage;
                        npc.defense = npc.defDefense;
                        if (npc.ai[0] == 0f && Main.netMode != 1)
                        {
                            npc.TargetClosest(true);
                            npc.ai[0] = 1f;
                            int num874 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 128, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num874].ai[0] = -1f;
                            Main.npc[num874].ai[1] = (float)npc.whoAmI;
                            Main.npc[num874].target = npc.target;
                            Main.npc[num874].netUpdate = true;
                            num874 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 129, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num874].ai[0] = 1f;
                            Main.npc[num874].ai[1] = (float)npc.whoAmI;
                            Main.npc[num874].target = npc.target;
                            Main.npc[num874].netUpdate = true;
                            num874 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 130, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num874].ai[0] = -1f;
                            Main.npc[num874].ai[1] = (float)npc.whoAmI;
                            Main.npc[num874].target = npc.target;
                            Main.npc[num874].ai[3] = 150f;
                            Main.npc[num874].netUpdate = true;
                            num874 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 131, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            Main.npc[num874].ai[0] = 1f;
                            Main.npc[num874].ai[1] = (float)npc.whoAmI;
                            Main.npc[num874].target = npc.target;
                            Main.npc[num874].netUpdate = true;
                            Main.npc[num874].ai[3] = 150f;
                        }
                        if (Main.player[npc.target].dead || Math.Abs(npc.position.X - Main.player[npc.target].position.X) > 6000f || Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 6000f)
                        {
                            npc.TargetClosest(true);
                            if (Main.player[npc.target].dead || Math.Abs(npc.position.X - Main.player[npc.target].position.X) > 6000f || Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 6000f)
                            {
                                npc.ai[1] = 3f;
                            }
                        }
                        if (Main.dayTime && npc.ai[1] != 3f && npc.ai[1] != 2f)
                        {
                            npc.ai[1] = 2f;
                        }
                        if (npc.ai[1] == 0f)
                        {
                            npc.ai[2] += 1f;
                            if (npc.ai[2] >= 600f)
                            {
                                npc.ai[2] = 0f;
                                npc.ai[1] = 1f;
                                npc.TargetClosest(true);
                                npc.netUpdate = true;
                            }
                            npc.rotation = npc.velocity.X / 15f;
                            if (npc.position.Y > Main.player[npc.target].position.Y - 200f)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.98f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                                if (npc.velocity.Y > 2f)
                                {
                                    npc.velocity.Y = 2f;
                                }
                            }
                            else if (npc.position.Y < Main.player[npc.target].position.Y - 500f)
                            {
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.98f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                                if (npc.velocity.Y < -2f)
                                {
                                    npc.velocity.Y = -2f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) + 100f)
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.1f;
                                if (npc.velocity.X > 8f)
                                {
                                    npc.velocity.X = 8f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - 100f)
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.1f;
                                if (npc.velocity.X < -8f)
                                {
                                    npc.velocity.X = -8f;
                                    return;
                                }
                            }
                        }
                        else
                        {
                            if (npc.ai[1] == 1f)
                            {
                                npc.defense *= 2;
                                npc.damage *= 2;
                                npc.ai[2] += 1f;
                                if (npc.ai[2] >= 400f)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[1] = 0f;
                                }
                                npc.rotation += (float)npc.direction * 0.3f;
                                Vector2 vector88 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num875 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector88.X;
                                float num876 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector88.Y;
                                float num877 = (float)Math.Sqrt((double)(num875 * num875 + num876 * num876));
                                num877 = 2f / num877;
                                npc.velocity.X = num875 * num877;
                                npc.velocity.Y = num876 * num877;
                                return;
                            }
                            if (npc.ai[1] == 2f)
                            {
                                npc.damage = 1000;
                                npc.defense = 9999;
                                npc.rotation += (float)npc.direction * 0.3f;
                                Vector2 vector89 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num878 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector89.X;
                                float num879 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector89.Y;
                                float num880 = (float)Math.Sqrt((double)(num878 * num878 + num879 * num879));
                                float num881 = 10f;
                                num881 += num880 / 100f;
                                if (num881 < 8f)
                                {
                                    num881 = 8f;
                                }
                                if (num881 > 32f)
                                {
                                    num881 = 32f;
                                }
                                num880 = num881 / num880;
                                npc.velocity.X = num878 * num880;
                                npc.velocity.Y = num879 * num880;
                                return;
                            }
                            if (npc.ai[1] == 3f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                                }
                                npc.velocity.X = npc.velocity.X * 0.95f;
                                if (npc.timeLeft > 500)
                                {
                                    npc.timeLeft = 500;
                                    return;
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 33)
                    {
                        Vector2 vector90 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num882 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector90.X;
                        float num883 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector90.Y;
                        float num884 = (float)Math.Sqrt((double)(num882 * num882 + num883 * num883));
                        if (npc.ai[2] != 99f)
                        {
                            if (num884 > 800f)
                            {
                                npc.ai[2] = 99f;
                            }
                        }
                        else if (num884 < 400f)
                        {
                            npc.ai[2] = 0f;
                        }
                        npc.spriteDirection = -(int)npc.ai[0];
                        if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != 32)
                        {
                            npc.ai[2] += 10f;
                            if (npc.ai[2] > 50f || Main.netMode != 2)
                            {
                                npc.life = -1;
                                npc.HitEffect(0, 10.0);
                                npc.active = false;
                            }
                        }
                        if (npc.ai[2] == 99f)
                        {
                            if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                                if (npc.velocity.Y > 8f)
                                {
                                    npc.velocity.Y = 8f;
                                }
                            }
                            else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y)
                            {
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                                if (npc.velocity.Y < -8f)
                                {
                                    npc.velocity.Y = -8f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2))
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.5f;
                                if (npc.velocity.X > 12f)
                                {
                                    npc.velocity.X = 12f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2))
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.5f;
                                if (npc.velocity.X < -12f)
                                {
                                    npc.velocity.X = -12f;
                                    return;
                                }
                            }
                        }
                        else
                        {
                            if (npc.ai[2] == 0f || npc.ai[2] == 3f)
                            {
                                if (Main.npc[(int)npc.ai[1]].ai[1] == 3f && npc.timeLeft > 10)
                                {
                                    npc.timeLeft = 10;
                                }
                                if (Main.npc[(int)npc.ai[1]].ai[1] != 0f)
                                {
                                    npc.TargetClosest(true);
                                    if (Main.player[npc.target].dead)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                                        if (npc.velocity.Y > 16f)
                                        {
                                            npc.velocity.Y = 16f;
                                        }
                                    }
                                    else
                                    {
                                        Vector2 vector91 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num885 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector91.X;
                                        float num886 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector91.Y;
                                        float num887 = (float)Math.Sqrt((double)(num885 * num885 + num886 * num886));
                                        num887 = 7f / num887;
                                        num885 *= num887;
                                        num886 *= num887;
                                        npc.rotation = (float)Math.Atan2((double)num886, (double)num885) - 1.57f;
                                        if (npc.velocity.X > num885)
                                        {
                                            if (npc.velocity.X > 0f)
                                            {
                                                npc.velocity.X = npc.velocity.X * 0.97f;
                                            }
                                            npc.velocity.X = npc.velocity.X - 0.05f;
                                        }
                                        if (npc.velocity.X < num885)
                                        {
                                            if (npc.velocity.X < 0f)
                                            {
                                                npc.velocity.X = npc.velocity.X * 0.97f;
                                            }
                                            npc.velocity.X = npc.velocity.X + 0.05f;
                                        }
                                        if (npc.velocity.Y > num886)
                                        {
                                            if (npc.velocity.Y > 0f)
                                            {
                                                npc.velocity.Y = npc.velocity.Y * 0.97f;
                                            }
                                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                                        }
                                        if (npc.velocity.Y < num886)
                                        {
                                            if (npc.velocity.Y < 0f)
                                            {
                                                npc.velocity.Y = npc.velocity.Y * 0.97f;
                                            }
                                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                                        }
                                    }
                                    npc.ai[3] += 1f;
                                    if (npc.ai[3] >= 600f)
                                    {
                                        npc.ai[2] = 0f;
                                        npc.ai[3] = 0f;
                                        npc.netUpdate = true;
                                    }
                                }
                                else
                                {
                                    npc.ai[3] += 1f;
                                    if (npc.ai[3] >= 300f)
                                    {
                                        npc.ai[2] += 1f;
                                        npc.ai[3] = 0f;
                                        npc.netUpdate = true;
                                    }
                                    if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y + 320f)
                                    {
                                        if (npc.velocity.Y > 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.96f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y - 0.04f;
                                        if (npc.velocity.Y > 3f)
                                        {
                                            npc.velocity.Y = 3f;
                                        }
                                    }
                                    else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y + 260f)
                                    {
                                        if (npc.velocity.Y < 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.96f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y + 0.04f;
                                        if (npc.velocity.Y < -3f)
                                        {
                                            npc.velocity.Y = -3f;
                                        }
                                    }
                                    if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2))
                                    {
                                        if (npc.velocity.X > 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.96f;
                                        }
                                        npc.velocity.X = npc.velocity.X - 0.3f;
                                        if (npc.velocity.X > 12f)
                                        {
                                            npc.velocity.X = 12f;
                                        }
                                    }
                                    if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 250f)
                                    {
                                        if (npc.velocity.X < 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.96f;
                                        }
                                        npc.velocity.X = npc.velocity.X + 0.3f;
                                        if (npc.velocity.X < -12f)
                                        {
                                            npc.velocity.X = -12f;
                                        }
                                    }
                                }
                                Vector2 vector92 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num888 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector92.X;
                                float num889 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector92.Y;
                                Math.Sqrt((double)(num888 * num888 + num889 * num889));
                                npc.rotation = (float)Math.Atan2((double)num889, (double)num888) + 1.57f;
                                return;
                            }
                            if (npc.ai[2] == 1f)
                            {
                                Vector2 vector93 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num890 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector93.X;
                                float num891 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector93.Y;
                                float num892 = (float)Math.Sqrt((double)(num890 * num890 + num891 * num891));
                                npc.rotation = (float)Math.Atan2((double)num891, (double)num890) + 1.57f;
                                npc.velocity.X = npc.velocity.X * 0.95f;
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                                if (npc.velocity.Y < -8f)
                                {
                                    npc.velocity.Y = -8f;
                                }
                                if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 200f)
                                {
                                    npc.TargetClosest(true);
                                    npc.ai[2] = 2f;
                                    vector93 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    num890 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector93.X;
                                    num891 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector93.Y;
                                    num892 = (float)Math.Sqrt((double)(num890 * num890 + num891 * num891));
                                    num892 = 22f / num892;
                                    npc.velocity.X = num890 * num892;
                                    npc.velocity.Y = num891 * num892;
                                    npc.netUpdate = true;
                                    return;
                                }
                            }
                            else if (npc.ai[2] == 2f)
                            {
                                if (npc.position.Y > Main.player[npc.target].position.Y || npc.velocity.Y < 0f)
                                {
                                    npc.ai[2] = 3f;
                                    return;
                                }
                            }
                            else
                            {
                                if (npc.ai[2] == 4f)
                                {
                                    npc.TargetClosest(true);
                                    Vector2 vector94 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    float num893 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector94.X;
                                    float num894 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector94.Y;
                                    float num895 = (float)Math.Sqrt((double)(num893 * num893 + num894 * num894));
                                    num895 = 7f / num895;
                                    num893 *= num895;
                                    num894 *= num895;
                                    if (npc.velocity.X > num893)
                                    {
                                        if (npc.velocity.X > 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.97f;
                                        }
                                        npc.velocity.X = npc.velocity.X - 0.05f;
                                    }
                                    if (npc.velocity.X < num893)
                                    {
                                        if (npc.velocity.X < 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.97f;
                                        }
                                        npc.velocity.X = npc.velocity.X + 0.05f;
                                    }
                                    if (npc.velocity.Y > num894)
                                    {
                                        if (npc.velocity.Y > 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.97f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y - 0.05f;
                                    }
                                    if (npc.velocity.Y < num894)
                                    {
                                        if (npc.velocity.Y < 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.97f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y + 0.05f;
                                    }
                                    npc.ai[3] += 1f;
                                    if (npc.ai[3] >= 600f)
                                    {
                                        npc.ai[2] = 0f;
                                        npc.ai[3] = 0f;
                                        npc.netUpdate = true;
                                    }
                                    vector94 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    num893 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector94.X;
                                    num894 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector94.Y;
                                    num895 = (float)Math.Sqrt((double)(num893 * num893 + num894 * num894));
                                    npc.rotation = (float)Math.Atan2((double)num894, (double)num893) + 1.57f;
                                    return;
                                }
                                if (npc.ai[2] == 5f && ((npc.velocity.X > 0f && npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2)) || (npc.velocity.X < 0f && npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))))
                                {
                                    npc.ai[2] = 0f;
                                    return;
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 34)
                    {
                        npc.spriteDirection = -(int)npc.ai[0];
                        Vector2 vector95 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num896 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector95.X;
                        float num897 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector95.Y;
                        float num898 = (float)Math.Sqrt((double)(num896 * num896 + num897 * num897));
                        if (npc.ai[2] != 99f)
                        {
                            if (num898 > 800f)
                            {
                                npc.ai[2] = 99f;
                            }
                        }
                        else if (num898 < 400f)
                        {
                            npc.ai[2] = 0f;
                        }
                        if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != 32)
                        {
                            npc.ai[2] += 10f;
                            if (npc.ai[2] > 50f || Main.netMode != 2)
                            {
                                npc.life = -1;
                                npc.HitEffect(0, 10.0);
                                npc.active = false;
                            }
                        }
                        if (npc.ai[2] == 99f)
                        {
                            if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.1f;
                                if (npc.velocity.Y > 8f)
                                {
                                    npc.velocity.Y = 8f;
                                }
                            }
                            else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y)
                            {
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.96f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.1f;
                                if (npc.velocity.Y < -8f)
                                {
                                    npc.velocity.Y = -8f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2))
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.5f;
                                if (npc.velocity.X > 12f)
                                {
                                    npc.velocity.X = 12f;
                                }
                            }
                            if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2))
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.96f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.5f;
                                if (npc.velocity.X < -12f)
                                {
                                    npc.velocity.X = -12f;
                                    return;
                                }
                            }
                        }
                        else
                        {
                            if (npc.ai[2] == 0f || npc.ai[2] == 3f)
                            {
                                if (Main.npc[(int)npc.ai[1]].ai[1] == 3f && npc.timeLeft > 10)
                                {
                                    npc.timeLeft = 10;
                                }
                                if (Main.npc[(int)npc.ai[1]].ai[1] != 0f)
                                {
                                    npc.TargetClosest(true);
                                    npc.TargetClosest(true);
                                    if (Main.player[npc.target].dead)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                                        if (npc.velocity.Y > 16f)
                                        {
                                            npc.velocity.Y = 16f;
                                        }
                                    }
                                    else
                                    {
                                        Vector2 vector96 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num899 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector96.X;
                                        float num900 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector96.Y;
                                        float num901 = (float)Math.Sqrt((double)(num899 * num899 + num900 * num900));
                                        num901 = 12f / num901;
                                        num899 *= num901;
                                        num900 *= num901;
                                        npc.rotation = (float)Math.Atan2((double)num900, (double)num899) - 1.57f;
                                        if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < 2f)
                                        {
                                            npc.rotation = (float)Math.Atan2((double)num900, (double)num899) - 1.57f;
                                            npc.velocity.X = num899;
                                            npc.velocity.Y = num900;
                                            npc.netUpdate = true;
                                        }
                                        else
                                        {
                                            npc.velocity *= 0.97f;
                                        }
                                        npc.ai[3] += 1f;
                                        if (npc.ai[3] >= 600f)
                                        {
                                            npc.ai[2] = 0f;
                                            npc.ai[3] = 0f;
                                            npc.netUpdate = true;
                                        }
                                    }
                                }
                                else
                                {
                                    npc.ai[3] += 1f;
                                    if (npc.ai[3] >= 600f)
                                    {
                                        npc.ai[2] += 1f;
                                        npc.ai[3] = 0f;
                                        npc.netUpdate = true;
                                    }
                                    if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y + 300f)
                                    {
                                        if (npc.velocity.Y > 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.96f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y - 0.1f;
                                        if (npc.velocity.Y > 3f)
                                        {
                                            npc.velocity.Y = 3f;
                                        }
                                    }
                                    else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y + 230f)
                                    {
                                        if (npc.velocity.Y < 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.96f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                                        if (npc.velocity.Y < -3f)
                                        {
                                            npc.velocity.Y = -3f;
                                        }
                                    }
                                    if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) + 250f)
                                    {
                                        if (npc.velocity.X > 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.94f;
                                        }
                                        npc.velocity.X = npc.velocity.X - 0.3f;
                                        if (npc.velocity.X > 9f)
                                        {
                                            npc.velocity.X = 9f;
                                        }
                                    }
                                    if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2))
                                    {
                                        if (npc.velocity.X < 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.94f;
                                        }
                                        npc.velocity.X = npc.velocity.X + 0.2f;
                                        if (npc.velocity.X < -8f)
                                        {
                                            npc.velocity.X = -8f;
                                        }
                                    }
                                }
                                Vector2 vector97 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num902 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector97.X;
                                float num903 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector97.Y;
                                Math.Sqrt((double)(num902 * num902 + num903 * num903));
                                npc.rotation = (float)Math.Atan2((double)num903, (double)num902) + 1.57f;
                                return;
                            }
                            if (npc.ai[2] == 1f)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                                Vector2 vector98 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num904 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 280f * npc.ai[0] - vector98.X;
                                float num905 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector98.Y;
                                float num906 = (float)Math.Sqrt((double)(num904 * num904 + num905 * num905));
                                npc.rotation = (float)Math.Atan2((double)num905, (double)num904) + 1.57f;
                                npc.velocity.X = (npc.velocity.X * 5f + Main.npc[(int)npc.ai[1]].velocity.X) / 6f;
                                npc.velocity.X = npc.velocity.X + 0.5f;
                                npc.velocity.Y = npc.velocity.Y - 0.5f;
                                if (npc.velocity.Y < -9f)
                                {
                                    npc.velocity.Y = -9f;
                                }
                                if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 280f)
                                {
                                    npc.TargetClosest(true);
                                    npc.ai[2] = 2f;
                                    vector98 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    num904 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector98.X;
                                    num905 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector98.Y;
                                    num906 = (float)Math.Sqrt((double)(num904 * num904 + num905 * num905));
                                    num906 = 20f / num906;
                                    npc.velocity.X = num904 * num906;
                                    npc.velocity.Y = num905 * num906;
                                    npc.netUpdate = true;
                                    return;
                                }
                            }
                            else if (npc.ai[2] == 2f)
                            {
                                if (npc.position.Y > Main.player[npc.target].position.Y || npc.velocity.Y < 0f)
                                {
                                    if (npc.ai[3] >= 4f)
                                    {
                                        npc.ai[2] = 3f;
                                        npc.ai[3] = 0f;
                                        return;
                                    }
                                    npc.ai[2] = 1f;
                                    npc.ai[3] += 1f;
                                    return;
                                }
                            }
                            else if (npc.ai[2] == 4f)
                            {
                                Vector2 vector99 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num907 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector99.X;
                                float num908 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector99.Y;
                                float num909 = (float)Math.Sqrt((double)(num907 * num907 + num908 * num908));
                                npc.rotation = (float)Math.Atan2((double)num908, (double)num907) + 1.57f;
                                npc.velocity.Y = (npc.velocity.Y * 5f + Main.npc[(int)npc.ai[1]].velocity.Y) / 6f;
                                npc.velocity.X = npc.velocity.X + 0.5f;
                                if (npc.velocity.X > 12f)
                                {
                                    npc.velocity.X = 12f;
                                }
                                if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 500f || npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) + 500f)
                                {
                                    npc.TargetClosest(true);
                                    npc.ai[2] = 5f;
                                    vector99 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    num907 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector99.X;
                                    num908 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector99.Y;
                                    num909 = (float)Math.Sqrt((double)(num907 * num907 + num908 * num908));
                                    num909 = 17f / num909;
                                    npc.velocity.X = num907 * num909;
                                    npc.velocity.Y = num908 * num909;
                                    npc.netUpdate = true;
                                    return;
                                }
                            }
                            else if (npc.ai[2] == 5f && npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - 100f)
                            {
                                if (npc.ai[3] >= 4f)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[3] = 0f;
                                    return;
                                }
                                npc.ai[2] = 4f;
                                npc.ai[3] += 1f;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 35)
                    {
                        npc.spriteDirection = -(int)npc.ai[0];
                        if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != 32)
                        {
                            npc.ai[2] += 10f;
                            if (npc.ai[2] > 50f || Main.netMode != 2)
                            {
                                npc.life = -1;
                                npc.HitEffect(0, 10.0);
                                npc.active = false;
                            }
                        }
                        if (npc.ai[2] == 0f)
                        {
                            if (Main.npc[(int)npc.ai[1]].ai[1] == 3f && npc.timeLeft > 10)
                            {
                                npc.timeLeft = 10;
                            }
                            if (Main.npc[(int)npc.ai[1]].ai[1] != 0f)
                            {
                                npc.localAI[0] += 2f;
                                if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y - 100f)
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y - 0.07f;
                                    if (npc.velocity.Y > 6f)
                                    {
                                        npc.velocity.Y = 6f;
                                    }
                                }
                                else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 100f)
                                {
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y + 0.07f;
                                    if (npc.velocity.Y < -6f)
                                    {
                                        npc.velocity.Y = -6f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 120f * npc.ai[0])
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X - 0.1f;
                                    if (npc.velocity.X > 8f)
                                    {
                                        npc.velocity.X = 8f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 120f * npc.ai[0])
                                {
                                    if (npc.velocity.X < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                    if (npc.velocity.X < -8f)
                                    {
                                        npc.velocity.X = -8f;
                                    }
                                }
                            }
                            else
                            {
                                npc.ai[3] += 1f;
                                if (npc.ai[3] >= 1100f)
                                {
                                    npc.localAI[0] = 0f;
                                    npc.ai[2] = 1f;
                                    npc.ai[3] = 0f;
                                    npc.netUpdate = true;
                                }
                                if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y - 150f)
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y - 0.04f;
                                    if (npc.velocity.Y > 3f)
                                    {
                                        npc.velocity.Y = 3f;
                                    }
                                }
                                else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 150f)
                                {
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y + 0.04f;
                                    if (npc.velocity.Y < -3f)
                                    {
                                        npc.velocity.Y = -3f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) + 200f)
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X - 0.2f;
                                    if (npc.velocity.X > 8f)
                                    {
                                        npc.velocity.X = 8f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) + 160f)
                                {
                                    if (npc.velocity.X < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X + 0.2f;
                                    if (npc.velocity.X < -8f)
                                    {
                                        npc.velocity.X = -8f;
                                    }
                                }
                            }
                            Vector2 vector100 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num910 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector100.X;
                            float num911 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector100.Y;
                            float num912 = (float)Math.Sqrt((double)(num910 * num910 + num911 * num911));
                            npc.rotation = (float)Math.Atan2((double)num911, (double)num910) + 1.57f;
                            if (Main.netMode != 1)
                            {
                                npc.localAI[0] += 1f;
                                if (npc.localAI[0] > 140f)
                                {
                                    npc.localAI[0] = 0f;
                                    float num913 = 12f;
                                    int num914 = 0;
                                    int num915 = 102;
                                    num912 = num913 / num912;
                                    num910 = -num910 * num912;
                                    num911 = -num911 * num912;
                                    num910 += (float)Main.rand.Next(-40, 41) * 0.01f;
                                    num911 += (float)Main.rand.Next(-40, 41) * 0.01f;
                                    vector100.X += num910 * 4f;
                                    vector100.Y += num911 * 4f;
                                    Projectile.NewProjectile(vector100.X, vector100.Y, num910, num911, num915, num914, 0f, Main.myPlayer, 0f, 0f);
                                    return;
                                }
                            }
                        }
                        else if (npc.ai[2] == 1f)
                        {
                            npc.ai[3] += 1f;
                            if (npc.ai[3] >= 300f)
                            {
                                npc.localAI[0] = 0f;
                                npc.ai[2] = 0f;
                                npc.ai[3] = 0f;
                                npc.netUpdate = true;
                            }
                            Vector2 vector101 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num916 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - vector101.X;
                            float num917 = Main.npc[(int)npc.ai[1]].position.Y - vector101.Y;
                            num917 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 80f - vector101.Y;
                            float num918 = (float)Math.Sqrt((double)(num916 * num916 + num917 * num917));
                            num918 = 6f / num918;
                            num916 *= num918;
                            num917 *= num918;
                            if (npc.velocity.X > num916)
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.04f;
                            }
                            if (npc.velocity.X < num916)
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.04f;
                            }
                            if (npc.velocity.Y > num917)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.08f;
                            }
                            if (npc.velocity.Y < num917)
                            {
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.08f;
                            }
                            npc.TargetClosest(true);
                            vector101 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            num916 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector101.X;
                            num917 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector101.Y;
                            num918 = (float)Math.Sqrt((double)(num916 * num916 + num917 * num917));
                            npc.rotation = (float)Math.Atan2((double)num917, (double)num916) - 1.57f;
                            if (Main.netMode != 1)
                            {
                                npc.localAI[0] += 1f;
                                if (npc.localAI[0] > 40f)
                                {
                                    npc.localAI[0] = 0f;
                                    float num919 = 10f;
                                    int num920 = 0;
                                    int num921 = 102;
                                    num918 = num919 / num918;
                                    num916 *= num918;
                                    num917 *= num918;
                                    num916 += (float)Main.rand.Next(-40, 41) * 0.01f;
                                    num917 += (float)Main.rand.Next(-40, 41) * 0.01f;
                                    vector101.X += num916 * 4f;
                                    vector101.Y += num917 * 4f;
                                    Projectile.NewProjectile(vector101.X, vector101.Y, num916, num917, num921, num920, 0f, Main.myPlayer, 0f, 0f);
                                    return;
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 36)
                    {
                        npc.spriteDirection = -(int)npc.ai[0];
                        if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != 32)
                        {
                            npc.ai[2] += 10f;
                            if (npc.ai[2] > 50f || Main.netMode != 2)
                            {
                                npc.life = -1;
                                npc.HitEffect(0, 10.0);
                                npc.active = false;
                            }
                        }
                        if (npc.ai[2] == 0f || npc.ai[2] == 3f)
                        {
                            if (Main.npc[(int)npc.ai[1]].ai[1] == 3f && npc.timeLeft > 10)
                            {
                                npc.timeLeft = 10;
                            }
                            if (Main.npc[(int)npc.ai[1]].ai[1] != 0f)
                            {
                                npc.localAI[0] += 3f;
                                if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y - 100f)
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y - 0.07f;
                                    if (npc.velocity.Y > 6f)
                                    {
                                        npc.velocity.Y = 6f;
                                    }
                                }
                                else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 100f)
                                {
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y + 0.07f;
                                    if (npc.velocity.Y < -6f)
                                    {
                                        npc.velocity.Y = -6f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 120f * npc.ai[0])
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X - 0.1f;
                                    if (npc.velocity.X > 8f)
                                    {
                                        npc.velocity.X = 8f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 120f * npc.ai[0])
                                {
                                    if (npc.velocity.X < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                    if (npc.velocity.X < -8f)
                                    {
                                        npc.velocity.X = -8f;
                                    }
                                }
                            }
                            else
                            {
                                npc.ai[3] += 1f;
                                if (npc.ai[3] >= 800f)
                                {
                                    npc.ai[2] += 1f;
                                    npc.ai[3] = 0f;
                                    npc.netUpdate = true;
                                }
                                if (npc.position.Y > Main.npc[(int)npc.ai[1]].position.Y - 100f)
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y - 0.1f;
                                    if (npc.velocity.Y > 3f)
                                    {
                                        npc.velocity.Y = 3f;
                                    }
                                }
                                else if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 100f)
                                {
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                    }
                                    npc.velocity.Y = npc.velocity.Y + 0.1f;
                                    if (npc.velocity.Y < -3f)
                                    {
                                        npc.velocity.Y = -3f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 180f * npc.ai[0])
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X - 0.14f;
                                    if (npc.velocity.X > 8f)
                                    {
                                        npc.velocity.X = 8f;
                                    }
                                }
                                if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 180f * npc.ai[0])
                                {
                                    if (npc.velocity.X < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                    }
                                    npc.velocity.X = npc.velocity.X + 0.14f;
                                    if (npc.velocity.X < -8f)
                                    {
                                        npc.velocity.X = -8f;
                                    }
                                }
                            }
                            npc.TargetClosest(true);
                            Vector2 vector102 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num922 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector102.X;
                            float num923 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector102.Y;
                            float num924 = (float)Math.Sqrt((double)(num922 * num922 + num923 * num923));
                            npc.rotation = (float)Math.Atan2((double)num923, (double)num922) - 1.57f;
                            if (Main.netMode != 1)
                            {
                                npc.localAI[0] += 1f;
                                if (npc.localAI[0] > 200f)
                                {
                                    npc.localAI[0] = 0f;
                                    float num925 = 8f;
                                    int num926 = 25;
                                    int num927 = 100;
                                    num924 = num925 / num924;
                                    num922 *= num924;
                                    num923 *= num924;
                                    num922 += (float)Main.rand.Next(-40, 41) * 0.05f;
                                    num923 += (float)Main.rand.Next(-40, 41) * 0.05f;
                                    vector102.X += num922 * 8f;
                                    vector102.Y += num923 * 8f;
                                    Projectile.NewProjectile(vector102.X, vector102.Y, num922, num923, num927, num926, 0f, Main.myPlayer, 0f, 0f);
                                    return;
                                }
                            }
                        }
                        else if (npc.ai[2] == 1f)
                        {
                            npc.ai[3] += 1f;
                            if (npc.ai[3] >= 200f)
                            {
                                npc.localAI[0] = 0f;
                                npc.ai[2] = 0f;
                                npc.ai[3] = 0f;
                                npc.netUpdate = true;
                            }
                            Vector2 vector103 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num928 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - 350f - vector103.X;
                            float num929 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 20f - vector103.Y;
                            float num930 = (float)Math.Sqrt((double)(num928 * num928 + num929 * num929));
                            num930 = 7f / num930;
                            num928 *= num930;
                            num929 *= num930;
                            if (npc.velocity.X > num928)
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            if (npc.velocity.X < num928)
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            if (npc.velocity.Y > num929)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                                npc.velocity.Y = npc.velocity.Y - 0.03f;
                            }
                            if (npc.velocity.Y < num929)
                            {
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                                npc.velocity.Y = npc.velocity.Y + 0.03f;
                            }
                            npc.TargetClosest(true);
                            vector103 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            num928 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector103.X;
                            num929 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector103.Y;
                            num930 = (float)Math.Sqrt((double)(num928 * num928 + num929 * num929));
                            npc.rotation = (float)Math.Atan2((double)num929, (double)num928) - 1.57f;
                            if (Main.netMode == 1)
                            {
                                npc.localAI[0] += 1f;
                                if (npc.localAI[0] > 80f)
                                {
                                    npc.localAI[0] = 0f;
                                    float num931 = 10f;
                                    int num932 = 25;
                                    int num933 = 100;
                                    num930 = num931 / num930;
                                    num928 *= num930;
                                    num929 *= num930;
                                    num928 += (float)Main.rand.Next(-40, 41) * 0.05f;
                                    num929 += (float)Main.rand.Next(-40, 41) * 0.05f;
                                    vector103.X += num928 * 8f;
                                    vector103.Y += num929 * 8f;
                                    Projectile.NewProjectile(vector103.X, vector103.Y, num928, num929, num933, num932, 0f, Main.myPlayer, 0f, 0f);
                                    return;
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 37)
                    {
                        if (npc.ai[3] > 0f)
                        {
                            npc.realLife = (int)npc.ai[3];
                        }
                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
                        {
                            npc.TargetClosest(true);
                        }
                        if (npc.type >= 134 && npc.type <= 136)
                        {
                            npc.velocity.Length();
                            if (npc.type == 134 || (npc.type != 134 && Main.npc[(int)npc.ai[1]].alpha < 128))
                            {
                                npc.alpha -= 42;
                                if (npc.alpha < 0)
                                {
                                    npc.alpha = 0;
                                }
                            }
                        }
                        if (npc.type > 134)
                        {
                            bool flag93 = false;
                            if (npc.ai[1] <= 0f)
                            {
                                flag93 = true;
                            }
                            else if (Main.npc[(int)npc.ai[1]].life <= 0)
                            {
                                flag93 = true;
                            }
                            if (flag93)
                            {
                                npc.life = 0;
                                npc.HitEffect(0, 10.0);
                                npc.checkDead();
                            }
                        }
                        if (Main.netMode != 1)
                        {
                            if (npc.ai[0] == 0f && npc.type == 134)
                            {
                                npc.ai[3] = (float)npc.whoAmI;
                                npc.realLife = npc.whoAmI;
                                int num936 = npc.whoAmI;
                                int num937 = 80;
                                for (int num938 = 0; num938 <= num937; num938++)
                                {
                                    int num939 = 135;
                                    if (num938 == num937)
                                    {
                                        num939 = 136;
                                    }
                                    int num940 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num939, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num940].ai[3] = (float)npc.whoAmI;
                                    Main.npc[num940].realLife = npc.whoAmI;
                                    Main.npc[num940].ai[1] = (float)num936;
                                    Main.npc[num936].ai[0] = (float)num940;
                                    NetMessage.SendData(23, -1, -1, null, num940, 0f, 0f, 0f, 0, 0, 0);
                                    num936 = num940;
                                }
                            }
                            if (npc.type == 135)
                            {
                                npc.localAI[0] += (float)Main.rand.Next(4);
                                if (npc.localAI[0] >= (float)Main.rand.Next(1400, 26000))
                                {
                                    npc.localAI[0] = 0f;
                                    npc.TargetClosest(true);
                                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                    {
                                        float num941 = 8f;
                                        Vector2 vector104 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)(npc.height / 2));
                                        float num942 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector104.X + (float)Main.rand.Next(-20, 21);
                                        float num943 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector104.Y + (float)Main.rand.Next(-20, 21);
                                        float num944 = (float)Math.Sqrt((double)(num942 * num942 + num943 * num943));
                                        num944 = num941 / num944;
                                        num942 *= num944;
                                        num943 *= num944;
                                        num942 += (float)Main.rand.Next(-20, 21) * 0.05f;
                                        num943 += (float)Main.rand.Next(-20, 21) * 0.05f;
                                        int num945 = 22;
                                        if (Main.expertMode)
                                        {
                                            num945 = 18;
                                        }
                                        int num946 = 100;
                                        vector104.X += num942 * 5f;
                                        vector104.Y += num943 * 5f;
                                        int num947 = Projectile.NewProjectile(vector104.X, vector104.Y, num942, num943, num946, num945, 0f, Main.myPlayer, 0f, 0f);
                                        Main.projectile[num947].timeLeft = 300;
                                        npc.netUpdate = true;
                                    }
                                }
                            }
                        }
                        int num948 = (int)(npc.position.X / 16f) - 1;
                        int num949 = (int)((npc.position.X + (float)npc.width) / 16f) + 2;
                        int num950 = (int)(npc.position.Y / 16f) - 1;
                        int num951 = (int)((npc.position.Y + (float)npc.height) / 16f) + 2;
                        if (num948 < 0)
                        {
                            num948 = 0;
                        }
                        if (num949 > Main.maxTilesX)
                        {
                            num949 = Main.maxTilesX;
                        }
                        if (num950 < 0)
                        {
                            num950 = 0;
                        }
                        if (num951 > Main.maxTilesY)
                        {
                            num951 = Main.maxTilesY;
                        }
                        bool flag94 = false;
                        if (!flag94)
                        {
                            for (int num952 = num948; num952 < num949; num952++)
                            {
                                for (int num953 = num950; num953 < num951; num953++)
                                {
                                    if (Main.tile[num952, num953] != null && ((Main.tile[num952, num953].nactive() && (Main.tileSolid[(int)Main.tile[num952, num953].type] || (Main.tileSolidTop[(int)Main.tile[num952, num953].type] && Main.tile[num952, num953].frameY == 0))) || Main.tile[num952, num953].liquid > 64))
                                    {
                                        Vector2 vector105;
                                        vector105.X = (float)(num952 * 16);
                                        vector105.Y = (float)(num953 * 16);
                                        if (npc.position.X + (float)npc.width > vector105.X && npc.position.X < vector105.X + 16f && npc.position.Y + (float)npc.height > vector105.Y && npc.position.Y < vector105.Y + 16f)
                                        {
                                            flag94 = true;
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        if (!flag94)
                        {
                            npc.localAI[1] = 1f;
                            if (npc.type == 134)
                            {
                                Rectangle rectangle12 = new Rectangle((int)npc.position.X, (int)npc.position.Y, npc.width, npc.height);
                                int num954 = 1000;
                                bool flag95 = true;
                                if (npc.position.Y > Main.player[npc.target].position.Y)
                                {
                                    for (int num955 = 0; num955 < 255; num955++)
                                    {
                                        if (Main.player[num955].active)
                                        {
                                            Rectangle rectangle13 = new Rectangle((int)Main.player[num955].position.X - num954, (int)Main.player[num955].position.Y - num954, num954 * 2, num954 * 2);
                                            if (rectangle12.Intersects(rectangle13))
                                            {
                                                flag95 = false;
                                                break;
                                            }
                                        }
                                    }
                                    if (flag95)
                                    {
                                        flag94 = true;
                                    }
                                }
                            }
                        }
                        else
                        {
                            npc.localAI[1] = 0f;
                        }
                        float num956 = 16f;
                        if (Main.dayTime || Main.player[npc.target].dead)
                        {
                            flag94 = false;
                            npc.velocity.Y = npc.velocity.Y + 1f;
                            if ((double)npc.position.Y > Main.worldSurface * 16.0)
                            {
                                npc.velocity.Y = npc.velocity.Y + 1f;
                                num956 = 32f;
                            }
                            if ((double)npc.position.Y > Main.rockLayer * 16.0)
                            {
                                for (int num957 = 0; num957 < 200; num957++)
                                {
                                    if (Main.npc[num957].aiStyle == npc.aiStyle)
                                    {
                                        Main.npc[num957].active = false;
                                    }
                                }
                            }
                        }
                        float num958 = 0.1f;
                        float num959 = 0.15f;
                        Vector2 vector106 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num960 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
                        float num961 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
                        num960 = (float)((int)(num960 / 16f) * 16);
                        num961 = (float)((int)(num961 / 16f) * 16);
                        vector106.X = (float)((int)(vector106.X / 16f) * 16);
                        vector106.Y = (float)((int)(vector106.Y / 16f) * 16);
                        num960 -= vector106.X;
                        num961 -= vector106.Y;
                        float num962 = (float)Math.Sqrt((double)(num960 * num960 + num961 * num961));
                        if (npc.ai[1] > 0f && npc.ai[1] < (float)Main.npc.Length)
                        {
                            try
                            {
                                vector106 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                num960 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - vector106.X;
                                num961 = Main.npc[(int)npc.ai[1]].position.Y + (float)(Main.npc[(int)npc.ai[1]].height / 2) - vector106.Y;
                            }
                            catch
                            {
                            }
                            npc.rotation = (float)Math.Atan2((double)num961, (double)num960) + 1.57f;
                            num962 = (float)Math.Sqrt((double)(num960 * num960 + num961 * num961));
                            int num963 = (int)(44f * npc.scale);
                            num962 = (num962 - (float)num963) / num962;
                            num960 *= num962;
                            num961 *= num962;
                            npc.velocity = Vector2.Zero;
                            npc.position.X = npc.position.X + num960;
                            npc.position.Y = npc.position.Y + num961;
                            return;
                        }
                        if (!flag94)
                        {
                            npc.TargetClosest(true);
                            npc.velocity.Y = npc.velocity.Y + 0.15f;
                            if (npc.velocity.Y > num956)
                            {
                                npc.velocity.Y = num956;
                            }
                            if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num956 * 0.4)
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num958 * 1.1f;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X + num958 * 1.1f;
                                }
                            }
                            else if (npc.velocity.Y == num956)
                            {
                                if (npc.velocity.X < num960)
                                {
                                    npc.velocity.X = npc.velocity.X + num958;
                                }
                                else if (npc.velocity.X > num960)
                                {
                                    npc.velocity.X = npc.velocity.X - num958;
                                }
                            }
                            else if (npc.velocity.Y > 4f)
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num958 * 0.9f;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X - num958 * 0.9f;
                                }
                            }
                        }
                        else
                        {
                            if (npc.soundDelay == 0)
                            {
                                float num964 = num962 / 40f;
                                if (num964 < 10f)
                                {
                                    num964 = 10f;
                                }
                                if (num964 > 20f)
                                {
                                    num964 = 20f;
                                }
                                npc.soundDelay = (int)num964;
                            }
                            num962 = (float)Math.Sqrt((double)(num960 * num960 + num961 * num961));
                            float num965 = Math.Abs(num960);
                            float num966 = Math.Abs(num961);
                            float num967 = num956 / num962;
                            num960 *= num967;
                            num961 *= num967;
                            if (((npc.velocity.X > 0f && num960 > 0f) || (npc.velocity.X < 0f && num960 < 0f)) && ((npc.velocity.Y > 0f && num961 > 0f) || (npc.velocity.Y < 0f && num961 < 0f)))
                            {
                                if (npc.velocity.X < num960)
                                {
                                    npc.velocity.X = npc.velocity.X + num959;
                                }
                                else if (npc.velocity.X > num960)
                                {
                                    npc.velocity.X = npc.velocity.X - num959;
                                }
                                if (npc.velocity.Y < num961)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num959;
                                }
                                else if (npc.velocity.Y > num961)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num959;
                                }
                            }
                            if ((npc.velocity.X > 0f && num960 > 0f) || (npc.velocity.X < 0f && num960 < 0f) || (npc.velocity.Y > 0f && num961 > 0f) || (npc.velocity.Y < 0f && num961 < 0f))
                            {
                                if (npc.velocity.X < num960)
                                {
                                    npc.velocity.X = npc.velocity.X + num958;
                                }
                                else if (npc.velocity.X > num960)
                                {
                                    npc.velocity.X = npc.velocity.X - num958;
                                }
                                if (npc.velocity.Y < num961)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num958;
                                }
                                else if (npc.velocity.Y > num961)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num958;
                                }
                                if ((double)Math.Abs(num961) < (double)num956 * 0.2 && ((npc.velocity.X > 0f && num960 < 0f) || (npc.velocity.X < 0f && num960 > 0f)))
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num958 * 2f;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num958 * 2f;
                                    }
                                }
                                if ((double)Math.Abs(num960) < (double)num956 * 0.2 && ((npc.velocity.Y > 0f && num961 < 0f) || (npc.velocity.Y < 0f && num961 > 0f)))
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num958 * 2f;
                                    }
                                    else
                                    {
                                        npc.velocity.X = npc.velocity.X - num958 * 2f;
                                    }
                                }
                            }
                            else if (num965 > num966)
                            {
                                if (npc.velocity.X < num960)
                                {
                                    npc.velocity.X = npc.velocity.X + num958 * 1.1f;
                                }
                                else if (npc.velocity.X > num960)
                                {
                                    npc.velocity.X = npc.velocity.X - num958 * 1.1f;
                                }
                                if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num956 * 0.5)
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num958;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num958;
                                    }
                                }
                            }
                            else
                            {
                                if (npc.velocity.Y < num961)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num958 * 1.1f;
                                }
                                else if (npc.velocity.Y > num961)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num958 * 1.1f;
                                }
                                if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num956 * 0.5)
                                {
                                    if (npc.velocity.X > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num958;
                                    }
                                    else
                                    {
                                        npc.velocity.X = npc.velocity.X - num958;
                                    }
                                }
                            }
                        }
                        npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) + 1.57f;
                        if (npc.type == 134)
                        {
                            if (flag94)
                            {
                                if (npc.localAI[0] != 1f)
                                {
                                    npc.netUpdate = true;
                                }
                                npc.localAI[0] = 1f;
                            }
                            else
                            {
                                if (npc.localAI[0] != 0f)
                                {
                                    npc.netUpdate = true;
                                }
                                npc.localAI[0] = 0f;
                            }
                            if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
                            {
                                npc.netUpdate = true;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 38)
                    {
                        float num968 = 4f;
                        float num969 = 1f;
                        if (npc.type == 143)
                        {
                            num968 = 3f;
                            num969 = 0.7f;
                        }
                        if (npc.type == 145)
                        {
                            num968 = 3.5f;
                            num969 = 0.8f;
                        }
                        if (npc.type == 143)
                        {
                            npc.ai[2] += 1f;
                            if (npc.ai[2] >= 120f)
                            {
                                npc.ai[2] = 0f;
                                if (Main.netMode != 1)
                                {
                                    Vector2 vector107 = new Vector2(npc.position.X + (float)npc.width * 0.5f - (float)(npc.direction * 12), npc.position.Y + (float)npc.height * 0.5f);
                                    float speedX = (float)(12 * npc.spriteDirection);
                                    float speedY = 0f;
                                    if (Main.netMode != 1)
                                    {
                                        int num970 = 25;
                                        int num971 = 110;
                                        int num972 = Projectile.NewProjectile(vector107.X, vector107.Y, speedX, speedY, num971, num970, 0f, Main.myPlayer, 0f, 0f);
                                        Main.projectile[num972].ai[0] = 2f;
                                        Main.projectile[num972].timeLeft = 300;
                                        Main.projectile[num972].friendly = false;
                                        NetMessage.SendData(27, -1, -1, null, num972, 0f, 0f, 0f, 0, 0, 0);
                                        npc.netUpdate = true;
                                    }
                                }
                            }
                        }
                        if (npc.type == 144 && npc.ai[1] >= 3f)
                        {
                            npc.TargetClosest(true);
                            npc.spriteDirection = npc.direction;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                                npc.ai[2] += 1f;
                                if ((double)npc.velocity.X > -0.3 && (double)npc.velocity.X < 0.3)
                                {
                                    npc.velocity.X = 0f;
                                }
                                if (npc.ai[2] >= 200f)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[1] = 0f;
                                }
                            }
                        }
                        else if (npc.type == 145 && npc.ai[1] >= 3f)
                        {
                            npc.TargetClosest(true);
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                                npc.ai[2] += 1f;
                                if ((double)npc.velocity.X > -0.3 && (double)npc.velocity.X < 0.3)
                                {
                                    npc.velocity.X = 0f;
                                }
                                if (npc.ai[2] >= 16f)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[1] = 0f;
                                }
                            }
                            if (npc.velocity.X == 0f && npc.velocity.Y == 0f && npc.ai[2] == 8f)
                            {
                                float num973 = 10f;
                                Vector2 vector108 = new Vector2(npc.position.X + (float)npc.width * 0.5f - (float)(npc.direction * 12), npc.position.Y + (float)npc.height * 0.25f);
                                float num974 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector108.X;
                                float num975 = Main.player[npc.target].position.Y - vector108.Y;
                                float num976 = (float)Math.Sqrt((double)(num974 * num974 + num975 * num975));
                                num976 = num973 / num976;
                                num974 *= num976;
                                num975 *= num976;
                                if (Main.netMode != 1)
                                {
                                    int num977 = 35;
                                    int num978 = 109;
                                    int num979 = Projectile.NewProjectile(vector108.X, vector108.Y, num974, num975, num978, num977, 0f, Main.myPlayer, 0f, 0f);
                                    Main.projectile[num979].ai[0] = 2f;
                                    Main.projectile[num979].timeLeft = 300;
                                    Main.projectile[num979].friendly = false;
                                    NetMessage.SendData(27, -1, -1, null, num979, 0f, 0f, 0f, 0, 0, 0);
                                    npc.netUpdate = true;
                                }
                            }
                        }
                        else
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                if (npc.localAI[2] == npc.position.X)
                                {
                                    npc.direction *= -1;
                                    npc.ai[3] = 60f;
                                }
                                npc.localAI[2] = npc.position.X;
                                if (npc.ai[3] == 0f)
                                {
                                    npc.TargetClosest(true);
                                }
                                npc.ai[0] += 1f;
                                if (npc.ai[0] > 2f)
                                {
                                    npc.ai[0] = 0f;
                                    npc.ai[1] += 1f;
                                    npc.velocity.Y = -8.2f;
                                    npc.velocity.X = npc.velocity.X + (float)npc.direction * num969 * 1.1f;
                                }
                                else
                                {
                                    npc.velocity.Y = -6f;
                                    npc.velocity.X = npc.velocity.X + (float)npc.direction * num969 * 0.9f;
                                }
                                npc.spriteDirection = npc.direction;
                            }
                            npc.velocity.X = npc.velocity.X + (float)npc.direction * num969 * 0.01f;
                        }
                        if (npc.ai[3] > 0f)
                        {
                            npc.ai[3] -= 1f;
                        }
                        if (npc.velocity.X > num968 && npc.direction > 0)
                        {
                            npc.velocity.X = 4f;
                        }
                        if (npc.velocity.X < -num968 && npc.direction < 0)
                        {
                            npc.velocity.X = -4f;
                            return;
                        }
                    }
                    else if (npc.aiStyle == 39)
                    {
                        if (npc.target < 0 || Main.player[npc.target].dead || npc.direction == 0)
                        {
                            npc.TargetClosest(true);
                        }
                        bool flag96 = true;
                        int num980 = 0;
                        if (npc.velocity.X < 0f)
                        {
                            num980 = -1;
                        }
                        if (npc.velocity.X > 0f)
                        {
                            num980 = 1;
                        }
                        Vector2 position6 = npc.position;
                        position6.X += npc.velocity.X;
                        int num981 = (int)((position6.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 1) * num980)) / 16f);
                        int num982 = (int)((position6.Y + (float)npc.height - 1f) / 16f);
                        if ((float)(num981 * 16) < position6.X + (float)npc.width && (float)(num981 * 16 + 16) > position6.X && ((Main.tile[num981, num982].nactive() && !Main.tile[num981, num982].topSlope() && !Main.tile[num981, num982 - 1].topSlope() && ((Main.tileSolid[(int)Main.tile[num981, num982].type] && !Main.tileSolidTop[(int)Main.tile[num981, num982].type]) || (flag96 && Main.tileSolidTop[(int)Main.tile[num981, num982].type] && (!Main.tileSolid[(int)Main.tile[num981, num982 - 1].type] || !Main.tile[num981, num982 - 1].nactive()) && Main.tile[num981, num982].type != 16 && Main.tile[num981, num982].type != 18 && Main.tile[num981, num982].type != 134))) || (Main.tile[num981, num982 - 1].halfBrick() && Main.tile[num981, num982 - 1].nactive())) && (!Main.tile[num981, num982 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 1].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 1].type] || (Main.tile[num981, num982 - 1].halfBrick() && (!Main.tile[num981, num982 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 4].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 4].type]))) && (!Main.tile[num981, num982 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 2].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 2].type]) && (!Main.tile[num981, num982 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 3].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 3].type]) && (!Main.tile[num981 - num980, num982 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num981 - num980, num982 - 3].type] || Main.tileSolidTop[(int)Main.tile[num981 - num980, num982 - 3].type]))
                        {
                            float num983 = (float)(num982 * 16);
                            if (Main.tile[num981, num982].halfBrick())
                            {
                                num983 += 8f;
                            }
                            if (Main.tile[num981, num982 - 1].halfBrick())
                            {
                                num983 -= 8f;
                            }
                            if (num983 < position6.Y + (float)npc.height)
                            {
                                float num984 = position6.Y + (float)npc.height - num983;
                                if ((double)num984 <= 16.1)
                                {
                                    npc.gfxOffY += npc.position.Y + (float)npc.height - num983;
                                    npc.position.Y = num983 - (float)npc.height;
                                    if (num984 < 9f)
                                    {
                                        npc.stepSpeed = 0.75f;
                                    }
                                    else
                                    {
                                        npc.stepSpeed = 1.5f;
                                    }
                                }
                            }
                        }
                        if (npc.justHit && npc.type != 417)
                        {
                            npc.ai[0] = 0f;
                            npc.ai[1] = 0f;
                            npc.TargetClosest(true);
                        }
                        if (npc.ai[0] == 0f)
                        {
                            if (npc.velocity.X < 0f)
                            {
                                npc.direction = -1;
                            }
                            else if (npc.velocity.X > 0f)
                            {
                                npc.direction = 1;
                            }
                            npc.spriteDirection = npc.direction;
                            Vector2 vector109 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num986 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector109.X;
                            float num987 = Main.player[npc.target].position.Y - vector109.Y;
                            float num988 = (float)Math.Sqrt((double)(num986 * num986 + num987 * num987));
                            bool flag97 = Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                            if (npc.type >= 496 && npc.type <= 497)
                            {
                                if (num988 > 200f && flag97)
                                {
                                    npc.ai[1] += 2f;
                                }
                                if (num988 > 600f && (flag97 || npc.position.Y + (float)npc.height > Main.player[npc.target].position.Y - 200f))
                                {
                                    npc.ai[1] += 4f;
                                }
                            }
                            else
                            {
                                if (num988 > 200f && flag97)
                                {
                                    npc.ai[1] += 4f;
                                }
                                if (num988 > 600f && (flag97 || npc.position.Y + (float)npc.height > Main.player[npc.target].position.Y - 200f))
                                {
                                    npc.ai[1] += 10f;
                                }
                                if (npc.wet)
                                {
                                    npc.ai[1] = 1000f;
                                }
                            }
                            npc.defense = npc.defDefense;
                            npc.damage = npc.defDamage;
                            if (npc.type >= 496 && npc.type <= 497)
                            {
                                npc.knockBackResist = 0.75f * Main.knockBackMultiplier;
                            }
                            else
                            {
                                npc.knockBackResist = 0.3f * Main.knockBackMultiplier;
                            }
                            npc.ai[1] += 1f;
                            if (npc.ai[1] >= 400f)
                            {
                                npc.ai[1] = 0f;
                                npc.ai[0] = 1f;
                            }
                            if (!npc.justHit && npc.velocity.X != npc.oldVelocity.X)
                            {
                                npc.direction *= -1;
                            }
                            if (npc.velocity.Y == 0f && Main.player[npc.target].position.Y < npc.position.Y + (float)npc.height)
                            {
                                int num989;
                                int num990;
                                if (npc.direction > 0)
                                {
                                    num989 = (int)(((double)npc.position.X + (double)npc.width * 0.5) / 16.0);
                                    num990 = num989 + 3;
                                }
                                else
                                {
                                    num990 = (int)(((double)npc.position.X + (double)npc.width * 0.5) / 16.0);
                                    num989 = num990 - 3;
                                }
                                int num991 = (int)((npc.position.Y + (float)npc.height + 2f) / 16f) - 1;
                                int num992 = num991 + 4;
                                bool flag98 = false;
                                for (int num993 = num989; num993 <= num990; num993++)
                                {
                                    for (int num994 = num991; num994 <= num992; num994++)
                                    {
                                        if (Main.tile[num993, num994] != null && Main.tile[num993, num994].nactive() && Main.tileSolid[(int)Main.tile[num993, num994].type])
                                        {
                                            flag98 = true;
                                        }
                                    }
                                }
                                if (!flag98)
                                {
                                    npc.direction *= -1;
                                    npc.velocity.X = 0.1f * (float)npc.direction;
                                }
                            }
                            if (npc.type >= 496 && npc.type <= 497)
                            {
                                float num995 = 0.5f;
                                if (npc.velocity.X < -num995 || npc.velocity.X > num995)
                                {
                                    if (npc.velocity.Y == 0f)
                                    {
                                        npc.velocity *= 0.8f;
                                        return;
                                    }
                                }
                                else if (npc.velocity.X < num995 && npc.direction == 1)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.07f;
                                    if (npc.velocity.X > num995)
                                    {
                                        npc.velocity.X = num995;
                                        return;
                                    }
                                }
                                else if (npc.velocity.X > -num995 && npc.direction == -1)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.07f;
                                    if (npc.velocity.X < -num995)
                                    {
                                        npc.velocity.X = -num995;
                                        return;
                                    }
                                }
                            }
                            else
                            {
                                float num996 = 1f;
                                if (num988 < 400f)
                                {
                                    if (npc.velocity.X < -num996 || npc.velocity.X > num996)
                                    {
                                        if (npc.velocity.Y == 0f)
                                        {
                                            npc.velocity *= 0.8f;
                                            return;
                                        }
                                    }
                                    else if (npc.velocity.X < num996 && npc.direction == 1)
                                    {
                                        npc.velocity.X = npc.velocity.X + 0.07f;
                                        if (npc.velocity.X > num996)
                                        {
                                            npc.velocity.X = num996;
                                            return;
                                        }
                                    }
                                    else if (npc.velocity.X > -num996 && npc.direction == -1)
                                    {
                                        npc.velocity.X = npc.velocity.X - 0.07f;
                                        if (npc.velocity.X < -num996)
                                        {
                                            npc.velocity.X = -num996;
                                            return;
                                        }
                                    }
                                }
                                else if (npc.velocity.X < -1.5f || npc.velocity.X > 1.5f)
                                {
                                    if (npc.velocity.Y == 0f)
                                    {
                                        npc.velocity *= 0.8f;
                                        return;
                                    }
                                }
                                else if (npc.velocity.X < 1.5f && npc.direction == 1)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.07f;
                                    if (npc.velocity.X > 1.5f)
                                    {
                                        npc.velocity.X = 1.5f;
                                        return;
                                    }
                                }
                                else if (npc.velocity.X > -1.5f && npc.direction == -1)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.07f;
                                    if (npc.velocity.X < -1.5f)
                                    {
                                        npc.velocity.X = -1.5f;
                                        return;
                                    }
                                }
                            }
                        }
                        else if (npc.ai[0] == 1f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.5f;
                            if (npc.type >= 496 && npc.type <= 497)
                            {
                                npc.ai[1] += 0.5f;
                            }
                            else
                            {
                                npc.ai[1] += 1f;
                            }
                            if (npc.ai[1] >= 30f)
                            {
                                npc.netUpdate = true;
                                npc.TargetClosest(true);
                                npc.ai[1] = 0f;
                                npc.ai[2] = 0f;
                                npc.ai[0] = 3f;
                                if (npc.type == 417)
                                {
                                    npc.ai[0] = 6f;
                                    npc.ai[2] = (float)Main.rand.Next(2, 5);
                                    return;
                                }
                            }
                        }
                        else
                        {
                            if (npc.ai[0] == 3f)
                            {
                                if (Main.expertMode)
                                {
                                    if (npc.type >= 496 && npc.type <= 497)
                                    {
                                        npc.damage = (int)((double)npc.defDamage * 1.5 * 0.9);
                                    }
                                    else
                                    {
                                        npc.damage = (int)((double)(npc.defDamage * 2) * 0.9);
                                    }
                                }
                                else if (npc.type >= 496 && npc.type <= 497)
                                {
                                    npc.damage = (int)((double)npc.defDamage * 1.5);
                                }
                                else
                                {
                                    npc.damage = npc.defDamage * 2;
                                }
                                npc.defense = npc.defDefense * 2;
                                npc.ai[1] += 1f;
                                if (npc.ai[1] == 1f)
                                {
                                    npc.netUpdate = true;
                                    npc.TargetClosest(true);
                                    npc.ai[2] += 0.3f;
                                    npc.rotation += npc.ai[2] * (float)npc.direction;
                                    npc.ai[1] += 1f;
                                    bool flag99 = Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                                    float num998 = 10f;
                                    if (!flag99)
                                    {
                                        num998 = 6f;
                                    }
                                    if (npc.type >= 496 && npc.type <= 497)
                                    {
                                        num998 *= 0.75f;
                                    }
                                    Vector2 vector110 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    float num999 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector110.X;
                                    float num1000 = Math.Abs(num999) * 0.2f;
                                    if (npc.directionY > 0)
                                    {
                                        num1000 = 0f;
                                    }
                                    float num1001 = Main.player[npc.target].position.Y - vector110.Y - num1000;
                                    float num1002 = (float)Math.Sqrt((double)(num999 * num999 + num1001 * num1001));
                                    npc.netUpdate = true;
                                    num1002 = num998 / num1002;
                                    num999 *= num1002;
                                    num1001 *= num1002;
                                    if (!flag99)
                                    {
                                        num1001 = -10f;
                                    }
                                    npc.velocity.X = num999;
                                    npc.velocity.Y = num1001;
                                    npc.ai[3] = npc.velocity.X;
                                }
                                else
                                {
                                    if (npc.position.X + (float)npc.width > Main.player[npc.target].position.X && npc.position.X < Main.player[npc.target].position.X + (float)Main.player[npc.target].width && npc.position.Y < Main.player[npc.target].position.Y + (float)Main.player[npc.target].height)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.8f;
                                        npc.ai[3] = 0f;
                                        if (npc.velocity.Y < 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y + 0.2f;
                                        }
                                    }
                                    if (npc.ai[3] != 0f)
                                    {
                                        npc.velocity.X = npc.ai[3];
                                        npc.velocity.Y = npc.velocity.Y - 0.22f;
                                    }
                                    if (npc.ai[1] >= 90f)
                                    {
                                        npc.noGravity = false;
                                        npc.ai[1] = 0f;
                                        npc.ai[0] = 4f;
                                    }
                                }
                                if (npc.wet && npc.directionY < 0)
                                {
                                    npc.velocity.Y = npc.velocity.Y - 0.3f;
                                }
                                npc.rotation += npc.ai[2] * (float)npc.direction;
                                return;
                            }
                            if (npc.ai[0] == 4f)
                            {
                                if (npc.wet && npc.directionY < 0)
                                {
                                    npc.velocity.Y = npc.velocity.Y - 0.3f;
                                }
                                npc.velocity.X = npc.velocity.X * 0.96f;
                                if (npc.ai[2] > 0f)
                                {
                                    npc.ai[2] -= 0.01f;
                                    npc.rotation += npc.ai[2] * (float)npc.direction;
                                }
                                else if (npc.velocity.Y >= 0f)
                                {
                                    npc.rotation = 0f;
                                }
                                if (npc.ai[2] <= 0f && (npc.velocity.Y == 0f || npc.wet))
                                {
                                    npc.netUpdate = true;
                                    npc.rotation = 0f;
                                    npc.ai[2] = 0f;
                                    npc.ai[1] = 0f;
                                    npc.ai[0] = 5f;
                                    return;
                                }
                            }
                            else
                            {
                                if (npc.ai[0] == 6f)
                                {
                                    npc.damage = (int)((float)npc.defDamage * (Main.expertMode ? 1.4f : 1.8f));
                                    npc.defense = npc.defDefense * 2;
                                    npc.knockBackResist = 0f;
                                    npc.ai[1] += 1f;
                                    if (npc.ai[3] > 0f)
                                    {
                                        npc.ai[3] += 1f;
                                        if (npc.ai[3] >= 10f)
                                        {
                                            npc.ai[3] = 0f;
                                        }
                                    }
                                    if (npc.ai[1] == 1f)
                                    {
                                        npc.netUpdate = true;
                                        npc.TargetClosest(true);
                                        bool flag100 = Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                                        float num1010 = 16f;
                                        if (!flag100)
                                        {
                                            num1010 = 10f;
                                        }
                                        Vector2 vector112 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num1011 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector112.X;
                                        float num1012 = Math.Abs(num1011) * 0.2f;
                                        if (npc.directionY > 0)
                                        {
                                            num1012 = 0f;
                                        }
                                        float num1013 = Main.player[npc.target].position.Y - vector112.Y - num1012;
                                        float num1014 = (float)Math.Sqrt((double)(num1011 * num1011 + num1013 * num1013));
                                        npc.netUpdate = true;
                                        num1014 = num1010 / num1014;
                                        num1011 *= num1014;
                                        num1013 *= num1014;
                                        if (!flag100)
                                        {
                                            num1013 = -12f;
                                        }
                                        npc.velocity.X = num1011;
                                        npc.velocity.Y = num1013;
                                    }
                                    else
                                    {
                                        if (npc.position.X + (float)npc.width > Main.player[npc.target].position.X && npc.position.X < Main.player[npc.target].position.X + (float)Main.player[npc.target].width && npc.position.Y < Main.player[npc.target].position.Y + (float)Main.player[npc.target].height)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.9f;
                                            if (npc.velocity.Y < 0f)
                                            {
                                                npc.velocity.Y = npc.velocity.Y + 0.2f;
                                            }
                                        }
                                        if (npc.ai[2] == 0f || npc.ai[1] >= 1200f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 5f;
                                        }
                                    }
                                    if (npc.wet && npc.directionY < 0)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - 0.3f;
                                    }
                                    npc.rotation += MathHelper.Clamp(npc.velocity.X / 10f * (float)npc.direction, -0.314159274f, 0.314159274f);
                                    return;
                                }
                                if (npc.ai[0] == 5f)
                                {
                                    npc.rotation = 0f;
                                    npc.velocity.X = 0f;
                                    if (npc.type >= 496 && npc.type <= 497)
                                    {
                                        npc.ai[1] += 0.5f;
                                    }
                                    else
                                    {
                                        npc.ai[1] += 1f;
                                    }
                                    if (npc.ai[1] >= 30f)
                                    {
                                        npc.TargetClosest(true);
                                        npc.netUpdate = true;
                                        npc.ai[1] = 0f;
                                        npc.ai[0] = 0f;
                                    }
                                    if (npc.wet)
                                    {
                                        npc.ai[0] = 3f;
                                        npc.ai[1] = 0f;
                                        return;
                                    }
                                }
                            }
                        }
                    }
                    else if (npc.aiStyle == 40)
                    {
                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
                        {
                            npc.TargetClosest(true);
                        }
                        float num1015 = 2f;
                        float num1016 = 0.08f;
                        if (npc.type == 531)
                        {
                            num1015 = 4f;
                            num1016 = 0.16f;
                        }
                        Vector2 vector113 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                        float num1017 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
                        float num1018 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
                        num1017 = (float)((int)(num1017 / 8f) * 8);
                        num1018 = (float)((int)(num1018 / 8f) * 8);
                        vector113.X = (float)((int)(vector113.X / 8f) * 8);
                        vector113.Y = (float)((int)(vector113.Y / 8f) * 8);
                        num1017 -= vector113.X;
                        num1018 -= vector113.Y;
                        float num1019 = (float)Math.Sqrt((double)(num1017 * num1017 + num1018 * num1018));
                        if (num1019 == 0f)
                        {
                            num1017 = npc.velocity.X;
                            num1018 = npc.velocity.Y;
                        }
                        else
                        {
                            num1019 = num1015 / num1019;
                            num1017 *= num1019;
                            num1018 *= num1019;
                        }
                        if (Main.player[npc.target].dead)
                        {
                            num1017 = (float)npc.direction * num1015 / 2f;
                            num1018 = -num1015 / 2f;
                        }
                        npc.spriteDirection = -1;
                        if (!Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                        {
                            npc.ai[0] += 1f;
                            if (npc.ai[0] > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.023f;
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.023f;
                            }
                            if (npc.ai[0] < -100f || npc.ai[0] > 100f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.023f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X - 0.023f;
                            }
                            if (npc.ai[0] > 200f)
                            {
                                npc.ai[0] = -200f;
                            }
                            npc.velocity.X = npc.velocity.X + num1017 * 0.007f;
                            npc.velocity.Y = npc.velocity.Y + num1018 * 0.007f;
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                            if ((double)npc.velocity.X > 1.5)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if ((double)npc.velocity.X < -1.5)
                            {
                                npc.velocity.X = npc.velocity.X * 0.9f;
                            }
                            if ((double)npc.velocity.Y > 1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.9f;
                            }
                            if ((double)npc.velocity.Y < -1.5)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.9f;
                            }
                            if (npc.velocity.X > 3f)
                            {
                                npc.velocity.X = 3f;
                            }
                            if (npc.velocity.X < -3f)
                            {
                                npc.velocity.X = -3f;
                            }
                            if (npc.velocity.Y > 3f)
                            {
                                npc.velocity.Y = 3f;
                            }
                            if (npc.velocity.Y < -3f)
                            {
                                npc.velocity.Y = -3f;
                            }
                        }
                        else
                        {
                            if (npc.velocity.X < num1017)
                            {
                                npc.velocity.X = npc.velocity.X + num1016;
                                if (npc.velocity.X < 0f && num1017 > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num1016;
                                }
                            }
                            else if (npc.velocity.X > num1017)
                            {
                                npc.velocity.X = npc.velocity.X - num1016;
                                if (npc.velocity.X > 0f && num1017 < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num1016;
                                }
                            }
                            if (npc.velocity.Y < num1018)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1016;
                                if (npc.velocity.Y < 0f && num1018 > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1016;
                                }
                            }
                            else if (npc.velocity.Y > num1018)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1016;
                                if (npc.velocity.Y > 0f && num1018 < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1016;
                                }
                            }
                            npc.rotation = (float)Math.Atan2((double)num1018, (double)num1017);
                        }
                        if (npc.type == 531)
                        {
                            npc.rotation += 1.57079637f;
                        }
                        float num1020 = 0.5f;
                        if (npc.collideX)
                        {
                            npc.netUpdate = true;
                            npc.velocity.X = npc.oldVelocity.X * -num1020;
                            if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                            {
                                npc.velocity.X = 2f;
                            }
                            if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                            {
                                npc.velocity.X = -2f;
                            }
                        }
                        if (npc.collideY)
                        {
                            npc.netUpdate = true;
                            npc.velocity.Y = npc.oldVelocity.Y * -num1020;
                            if (npc.velocity.Y > 0f && (double)npc.velocity.Y < 1.5)
                            {
                                npc.velocity.Y = 2f;
                            }
                            if (npc.velocity.Y < 0f && (double)npc.velocity.Y > -1.5)
                            {
                                npc.velocity.Y = -2f;
                            }
                        }
                        if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
                        {
                            npc.netUpdate = true;
                        }
                        if (Main.netMode != 1)
                        {
                            if (Main.netMode != 1 && Main.expertMode && npc.target >= 0 && (npc.type == 163 || npc.type == 238) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                            {
                                npc.localAI[0] += 1f;
                                if (npc.justHit)
                                {
                                    npc.localAI[0] -= (float)Main.rand.Next(20, 60);
                                    if (npc.localAI[0] < 0f)
                                    {
                                        npc.localAI[0] = 0f;
                                    }
                                }
                                if (npc.localAI[0] > (float)Main.rand.Next(180, 900))
                                {
                                    npc.localAI[0] = 0f;
                                    Vector2 vector114 = Main.player[npc.target].Center - npc.Center;
                                    vector114.Normalize();
                                    vector114 *= 8f;
                                    Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector114.X, vector114.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
                                }
                            }
                            int num1021 = (int)npc.Center.X / 16;
                            int num1022 = (int)npc.Center.Y / 16;
                            bool flag101 = false;
                            for (int num1023 = num1021 - 1; num1023 <= num1021 + 1; num1023++)
                            {
                                for (int num1024 = num1022 - 1; num1024 <= num1022 + 1; num1024++)
                                {
                                    if (Main.tile[num1023, num1024] == null)
                                    {
                                        return;
                                    }
                                    if (Main.tile[num1023, num1024].wall > 0)
                                    {
                                        flag101 = true;
                                    }
                                }
                            }
                            if (!flag101)
                            {
                                if (npc.type == 237)
                                {
                                    npc.Transform(236);
                                    return;
                                }
                                if (npc.type == 238)
                                {
                                    npc.Transform(163);
                                    return;
                                }
                                if (npc.type == 240)
                                {
                                    npc.Transform(239);
                                    return;
                                }
                                if (npc.type == 531)
                                {
                                    npc.Transform(530);
                                    return;
                                }
                                npc.Transform(164);
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 41)
                    {
                        if (npc.ai[2] > 1f)
                        {
                            npc.ai[2] -= 1f;
                        }
                        if (npc.ai[2] == 0f)
                        {
                            npc.ai[0] = -100f;
                            npc.ai[2] = 1f;
                            npc.TargetClosest(true);
                            npc.spriteDirection = npc.direction;
                        }
                        if (npc.type == 378)
                        {
                            Vector2 value14 = new Vector2(-6f, -10f);
                            value14.X *= (float)npc.spriteDirection;
                            if (npc.ai[1] == 5f)
                            {
                                npc.velocity = Vector2.Zero;
                                npc.position.X = npc.position.X + (float)(npc.width / 2);
                                npc.position.Y = npc.position.Y + (float)(npc.height / 2);
                                npc.width = 160;
                                npc.height = 160;
                                npc.position.X = npc.position.X - (float)(npc.width / 2);
                                npc.position.Y = npc.position.Y - (float)(npc.height / 2);
                                npc.dontTakeDamage = true;

                                if (npc.ai[2] == 1f)
                                {
                                    npc.life = -1;
                                    npc.HitEffect(0, 10.0);
                                    npc.active = false;
                                }
                                return;
                            }
                        }
                        if (npc.type == 378 && npc.ai[1] != 5f)
                        {
                            if (npc.wet || Vector2.Distance(npc.Center, Main.player[npc.target].Center) < 64f)
                            {
                                npc.ai[1] = 5f;
                                npc.ai[2] = 3f;
                                npc.netUpdate = true;
                                return;
                            }
                        }
                        else if (npc.wet && npc.type != 177)
                        {
                            if (npc.collideX)
                            {
                                npc.direction *= -npc.direction;
                                npc.spriteDirection = npc.direction;
                            }
                            if (npc.collideY)
                            {
                                npc.TargetClosest(true);
                                if (npc.oldVelocity.Y < 0f)
                                {
                                    npc.velocity.Y = 5f;
                                }
                                else
                                {
                                    npc.velocity.Y = npc.velocity.Y - 2f;
                                }
                                npc.spriteDirection = npc.direction;
                            }
                            if (npc.velocity.Y > 4f)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.95f;
                            }
                            npc.velocity.Y = npc.velocity.Y - 0.3f;
                            if (npc.velocity.Y < -4f)
                            {
                                npc.velocity.Y = -4f;
                            }
                        }
                        if (npc.velocity.Y == 0f)
                        {
                            if (npc.ai[3] == npc.position.X)
                            {
                                npc.direction *= -1;
                                npc.ai[2] = 300f;
                            }
                            npc.ai[3] = 0f;
                            npc.velocity.X = npc.velocity.X * 0.8f;
                            if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                            {
                                npc.velocity.X = 0f;
                            }
                            if (npc.type == 177)
                            {
                                npc.ai[0] += 2f;
                            }
                            else
                            {
                                npc.ai[0] += 5f;
                            }
                            Vector2 vector115 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num1031 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector115.X;
                            float num1032 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector115.Y;
                            float num1033 = (float)Math.Sqrt((double)(num1031 * num1031 + num1032 * num1032));
                            float num1034 = 400f / num1033;
                            if (npc.type == 177)
                            {
                                num1034 *= 5f;
                            }
                            else
                            {
                                num1034 *= 10f;
                            }
                            if (num1034 > 30f)
                            {
                                num1034 = 30f;
                            }
                            npc.ai[0] += (float)((int)num1034);
                            if (npc.ai[0] >= 0f)
                            {
                                npc.netUpdate = true;
                                if (npc.ai[2] == 1f)
                                {
                                    npc.TargetClosest(true);
                                }
                                if (npc.type == 177)
                                {
                                    if (npc.ai[1] == 2f)
                                    {
                                        npc.velocity.Y = -11.5f;
                                        npc.velocity.X = npc.velocity.X + 2f * (float)npc.direction;
                                        if (num1033 < 350f && num1033 > 200f)
                                        {
                                            npc.velocity.X = npc.velocity.X + (float)npc.direction;
                                        }
                                        npc.ai[0] = -200f;
                                        npc.ai[1] = 0f;
                                        npc.ai[3] = npc.position.X;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = -7.5f;
                                        npc.velocity.X = npc.velocity.X + (float)(4 * npc.direction);
                                        if (num1033 < 350f && num1033 > 200f)
                                        {
                                            npc.velocity.X = npc.velocity.X + (float)npc.direction;
                                        }
                                        npc.ai[0] = -120f;
                                        npc.ai[1] += 1f;
                                    }
                                }
                                else if (npc.ai[1] == 3f)
                                {
                                    npc.velocity.Y = -9f;
                                    npc.velocity.X = npc.velocity.X + (float)(3 * npc.direction);
                                    if (num1033 < 350f && num1033 > 200f)
                                    {
                                        npc.velocity.X = npc.velocity.X + (float)npc.direction;
                                    }
                                    npc.ai[0] = -200f;
                                    npc.ai[1] = 0f;
                                    npc.ai[3] = npc.position.X;
                                }
                                else
                                {
                                    npc.velocity.Y = -5f;
                                    npc.velocity.X = npc.velocity.X + (float)(5 * npc.direction);
                                    if (num1033 < 350f && num1033 > 200f)
                                    {
                                        npc.velocity.X = npc.velocity.X + (float)npc.direction;
                                    }
                                    npc.ai[0] = -120f;
                                    npc.ai[1] += 1f;
                                }
                            }
                            else if (npc.ai[0] >= -30f)
                            {
                                npc.aiAction = 1;
                            }
                            npc.spriteDirection = npc.direction;
                            return;
                        }
                        if (npc.target < 255)
                        {
                            if (npc.type == 177)
                            {
                                bool flag102 = false;
                                if (npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y && npc.position.X + (float)npc.width > Main.player[npc.target].position.X && npc.position.X < Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                                {
                                    flag102 = true;
                                    npc.velocity.X = npc.velocity.X * 0.92f;
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                                    }
                                }
                                if (!flag102 && ((npc.direction == 1 && npc.velocity.X < 4f) || (npc.direction == -1 && npc.velocity.X > -4f)))
                                {
                                    if ((npc.direction == -1 && (double)npc.velocity.X < 0.1) || (npc.direction == 1 && (double)npc.velocity.X > -0.1))
                                    {
                                        npc.velocity.X = npc.velocity.X + 0.2f * (float)npc.direction;
                                        return;
                                    }
                                    npc.velocity.X = npc.velocity.X * 0.93f;
                                    return;
                                }
                            }
                            else if ((npc.direction == 1 && npc.velocity.X < 3f) || (npc.direction == -1 && npc.velocity.X > -3f))
                            {
                                if ((npc.direction == -1 && (double)npc.velocity.X < 0.1) || (npc.direction == 1 && (double)npc.velocity.X > -0.1))
                                {
                                    npc.velocity.X = npc.velocity.X + 0.2f * (float)npc.direction;
                                    return;
                                }
                                npc.velocity.X = npc.velocity.X * 0.93f;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 42)
                    {
                        npc.TargetClosest(true);
                        if (npc.ai[0] == 0f)
                        {
                            if (npc.target >= 0)
                            {
                                Vector2 vector116 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                float num1035 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector116.X;
                                float num1036 = Main.player[npc.target].position.Y - vector116.Y;
                                float num1037 = (float)Math.Sqrt((double)(num1035 * num1035 + num1036 * num1036));
                                if (num1037 < 200f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                {
                                    npc.ai[0] = 1f;
                                }
                            }
                            if (npc.velocity.X != 0f || npc.velocity.Y < 0f || npc.velocity.Y > 2f || npc.life != npc.lifeMax)
                            {
                                npc.ai[0] = 1f;
                                return;
                            }
                        }
                        else
                        {
                            npc.ai[0] += 1f;
                            if (npc.ai[0] >= 21f)
                            {
                                npc.ai[0] = 21f;
                                npc.Transform(196);
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 43)
                    {
                        int num1038 = 0;
                        for (int num1039 = 0; num1039 < 255; num1039++)
                        {
                            if (Main.player[num1039].active && !Main.player[num1039].dead && (npc.Center - Main.player[num1039].Center).Length() < 1000f)
                            {
                                num1038++;
                            }
                        }
                        if (Main.expertMode)
                        {
                            int num1040 = (int)(20f * (1f - (float)npc.life / (float)npc.lifeMax));
                            npc.defense = npc.defDefense + num1040;
                        }
                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                        {
                            npc.TargetClosest(true);
                        }
                        bool dead4 = Main.player[npc.target].dead;
                        if (dead4 && Main.expertMode)
                        {
                            if ((double)npc.position.Y < Main.worldSurface * 16.0 + 2000.0)
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.04f;
                            }
                            if (npc.position.X < (float)(Main.maxTilesX * 8))
                            {
                                npc.velocity.X = npc.velocity.X - 0.04f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X + 0.04f;
                            }
                            if (npc.timeLeft > 10)
                            {
                                npc.timeLeft = 10;
                                return;
                            }
                        }
                        else if (npc.ai[0] == -1f)
                        {
                            if (Main.netMode != 1)
                            {
                                float num1041 = npc.ai[1];
                                int num1042;
                                do
                                {
                                    num1042 = Main.rand.Next(3);
                                    if (num1042 == 1)
                                    {
                                        num1042 = 2;
                                    }
                                    else if (num1042 == 2)
                                    {
                                        num1042 = 3;
                                    }
                                }
                                while ((float)num1042 == num1041);
                                npc.ai[0] = (float)num1042;
                                npc.ai[1] = 0f;
                                npc.ai[2] = 0f;
                                return;
                            }
                        }
                        else if (npc.ai[0] == 0f)
                        {
                            int num1043 = 2;
                            if (Main.expertMode)
                            {
                                if (npc.life < npc.lifeMax / 2)
                                {
                                    num1043++;
                                }
                                if (npc.life < npc.lifeMax / 3)
                                {
                                    num1043++;
                                }
                                if (npc.life < npc.lifeMax / 5)
                                {
                                    num1043++;
                                }
                            }
                            if (npc.ai[1] > (float)(2 * num1043) && npc.ai[1] % 2f == 0f)
                            {
                                npc.ai[0] = -1f;
                                npc.ai[1] = 0f;
                                npc.ai[2] = 0f;
                                npc.netUpdate = true;
                                return;
                            }
                            if (npc.ai[1] % 2f == 0f)
                            {
                                npc.TargetClosest(true);
                                if (Math.Abs(npc.position.Y + (float)(npc.height / 2) - (Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2))) < 20f)
                                {
                                    npc.localAI[0] = 1f;
                                    npc.ai[1] += 1f;
                                    npc.ai[2] = 0f;
                                    float num1044 = 12f;
                                    if (Main.expertMode)
                                    {
                                        num1044 = 16f;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            num1044 += 2f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            num1044 += 2f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            num1044 += 2f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                        {
                                            num1044 += 2f;
                                        }
                                    }
                                    Vector2 vector117 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    float num1045 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector117.X;
                                    float num1046 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector117.Y;
                                    float num1047 = (float)Math.Sqrt((double)(num1045 * num1045 + num1046 * num1046));
                                    num1047 = num1044 / num1047;
                                    npc.velocity.X = num1045 * num1047;
                                    npc.velocity.Y = num1046 * num1047;
                                    npc.spriteDirection = npc.direction;
                                    return;
                                }
                                npc.localAI[0] = 0f;
                                float num1048 = 12f;
                                float num1049 = 0.15f;
                                if (Main.expertMode)
                                {
                                    if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                    {
                                        num1048 += 1f;
                                        num1049 += 0.05f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        num1048 += 1f;
                                        num1049 += 0.05f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                    {
                                        num1048 += 2f;
                                        num1049 += 0.05f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                    {
                                        num1048 += 2f;
                                        num1049 += 0.1f;
                                    }
                                }
                                if (npc.position.Y + (float)(npc.height / 2) < Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2))
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1049;
                                }
                                else
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1049;
                                }
                                if (npc.velocity.Y < -12f)
                                {
                                    npc.velocity.Y = -num1048;
                                }
                                if (npc.velocity.Y > 12f)
                                {
                                    npc.velocity.Y = num1048;
                                }
                                if (Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) > 600f)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.15f * (float)npc.direction;
                                }
                                else if (Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) < 300f)
                                {
                                    npc.velocity.X = npc.velocity.X - 0.15f * (float)npc.direction;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X * 0.8f;
                                }
                                if (npc.velocity.X < -16f)
                                {
                                    npc.velocity.X = -16f;
                                }
                                if (npc.velocity.X > 16f)
                                {
                                    npc.velocity.X = 16f;
                                }
                                npc.spriteDirection = npc.direction;
                                return;
                            }
                            else
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.direction = -1;
                                }
                                else
                                {
                                    npc.direction = 1;
                                }
                                npc.spriteDirection = npc.direction;
                                int num1050 = 600;
                                if (Main.expertMode)
                                {
                                    if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                    {
                                        num1050 = 300;
                                    }
                                    else if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                    {
                                        num1050 = 450;
                                    }
                                    else if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        num1050 = 500;
                                    }
                                    else if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                    {
                                        num1050 = 550;
                                    }
                                }
                                int num1051 = 1;
                                if (npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))
                                {
                                    num1051 = -1;
                                }
                                if (npc.direction == num1051 && Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) > (float)num1050)
                                {
                                    npc.ai[2] = 1f;
                                }
                                if (npc.ai[2] != 1f)
                                {
                                    npc.localAI[0] = 1f;
                                    return;
                                }
                                npc.TargetClosest(true);
                                npc.spriteDirection = npc.direction;
                                npc.localAI[0] = 0f;
                                npc.velocity *= 0.9f;
                                float num1052 = 0.1f;
                                if (Main.expertMode)
                                {
                                    if (npc.life < npc.lifeMax / 2)
                                    {
                                        npc.velocity *= 0.9f;
                                        num1052 += 0.05f;
                                    }
                                    if (npc.life < npc.lifeMax / 3)
                                    {
                                        npc.velocity *= 0.9f;
                                        num1052 += 0.05f;
                                    }
                                    if (npc.life < npc.lifeMax / 5)
                                    {
                                        npc.velocity *= 0.9f;
                                        num1052 += 0.05f;
                                    }
                                }
                                if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < num1052)
                                {
                                    npc.ai[2] = 0f;
                                    npc.ai[1] += 1f;
                                    return;
                                }
                            }
                        }
                        else if (npc.ai[0] == 2f)
                        {
                            npc.TargetClosest(true);
                            npc.spriteDirection = npc.direction;
                            float num1053 = 12f;
                            float num1054 = 0.07f;
                            if (Main.expertMode)
                            {
                                num1054 = 0.1f;
                            }
                            Vector2 vector118 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num1055 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector118.X;
                            float num1056 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 200f - vector118.Y;
                            float num1057 = (float)Math.Sqrt((double)(num1055 * num1055 + num1056 * num1056));
                            if (num1057 < 200f)
                            {
                                npc.ai[0] = 1f;
                                npc.ai[1] = 0f;
                                npc.netUpdate = true;
                                return;
                            }
                            num1057 = num1053 / num1057;
                            if (npc.velocity.X < num1055)
                            {
                                npc.velocity.X = npc.velocity.X + num1054;
                                if (npc.velocity.X < 0f && num1055 > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num1054;
                                }
                            }
                            else if (npc.velocity.X > num1055)
                            {
                                npc.velocity.X = npc.velocity.X - num1054;
                                if (npc.velocity.X > 0f && num1055 < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num1054;
                                }
                            }
                            if (npc.velocity.Y < num1056)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1054;
                                if (npc.velocity.Y < 0f && num1056 > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1054;
                                    return;
                                }
                            }
                            else if (npc.velocity.Y > num1056)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1054;
                                if (npc.velocity.Y > 0f && num1056 < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1054;
                                    return;
                                }
                            }
                        }
                        else if (npc.ai[0] == 1f)
                        {
                            npc.localAI[0] = 0f;
                            npc.TargetClosest(true);
                            Vector2 vector119 = new Vector2(npc.position.X + (float)(npc.width / 2) + (float)(Main.rand.Next(20) * npc.direction), npc.position.Y + (float)npc.height * 0.8f);
                            Vector2 vector120 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num1058 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector120.X;
                            float num1059 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector120.Y;
                            float num1060 = (float)Math.Sqrt((double)(num1058 * num1058 + num1059 * num1059));
                            npc.ai[1] += 1f;
                            if (Main.expertMode)
                            {
                                npc.ai[1] += (float)(num1038 / 2);
                                if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                {
                                    npc.ai[1] += 0.25f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                {
                                    npc.ai[1] += 0.25f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                {
                                    npc.ai[1] += 0.25f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                {
                                    npc.ai[1] += 0.25f;
                                }
                            }
                            bool flag103 = false;
                            if (npc.ai[1] > 40f)
                            {
                                npc.ai[1] = 0f;
                                npc.ai[2] += 1f;
                                flag103 = true;
                            }
                            if (Collision.CanHit(vector119, 1, 1, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && flag103)
                            {
                                if (Main.netMode != 1)
                                {
                                    int num1061 = Main.rand.Next(210, 212);
                                    int num1062 = NPC.NewNPC((int)vector119.X, (int)vector119.Y, num1061, 0, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num1062].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
                                    Main.npc[num1062].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
                                    Main.npc[num1062].localAI[0] = 60f;
                                    Main.npc[num1062].netUpdate = true;
                                }
                            }
                            if (num1060 > 400f || !Collision.CanHit(new Vector2(vector119.X, vector119.Y - 30f), 1, 1, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                float num1063 = 14f;
                                float num1064 = 0.1f;
                                vector120 = vector119;
                                num1058 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector120.X;
                                num1059 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector120.Y;
                                num1060 = (float)Math.Sqrt((double)(num1058 * num1058 + num1059 * num1059));
                                num1060 = num1063 / num1060;
                                if (npc.velocity.X < num1058)
                                {
                                    npc.velocity.X = npc.velocity.X + num1064;
                                    if (npc.velocity.X < 0f && num1058 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num1064;
                                    }
                                }
                                else if (npc.velocity.X > num1058)
                                {
                                    npc.velocity.X = npc.velocity.X - num1064;
                                    if (npc.velocity.X > 0f && num1058 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num1064;
                                    }
                                }
                                if (npc.velocity.Y < num1059)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1064;
                                    if (npc.velocity.Y < 0f && num1059 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num1064;
                                    }
                                }
                                else if (npc.velocity.Y > num1059)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1064;
                                    if (npc.velocity.Y > 0f && num1059 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num1064;
                                    }
                                }
                            }
                            else
                            {
                                npc.velocity *= 0.9f;
                            }
                            npc.spriteDirection = npc.direction;
                            if (npc.ai[2] > 5f)
                            {
                                npc.ai[0] = -1f;
                                npc.ai[1] = 1f;
                                npc.netUpdate = true;
                                return;
                            }
                        }
                        else if (npc.ai[0] == 3f)
                        {
                            float num1065 = 4f;
                            float num1066 = 0.05f;
                            if (Main.expertMode)
                            {
                                num1066 = 0.075f;
                                num1065 = 6f;
                            }
                            Vector2 vector121 = new Vector2(npc.position.X + (float)(npc.width / 2) + (float)(Main.rand.Next(20) * npc.direction), npc.position.Y + (float)npc.height * 0.8f);
                            Vector2 vector122 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num1067 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector122.X;
                            float num1068 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 300f - vector122.Y;
                            float num1069 = (float)Math.Sqrt((double)(num1067 * num1067 + num1068 * num1068));
                            npc.ai[1] += 1f;
                            bool flag104 = false;
                            if (Main.expertMode)
                            {
                                if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                {
                                    if (npc.ai[1] % 15f == 14f)
                                    {
                                        flag104 = true;
                                    }
                                }
                                else if (npc.life < npc.lifeMax / 3)
                                {
                                    if (npc.ai[1] % 25f == 24f)
                                    {
                                        flag104 = true;
                                    }
                                }
                                else if (npc.life < npc.lifeMax / 2)
                                {
                                    if (npc.ai[1] % 30f == 29f)
                                    {
                                        flag104 = true;
                                    }
                                }
                                else if (npc.ai[1] % 35f == 34f)
                                {
                                    flag104 = true;
                                }
                            }
                            else if (npc.ai[1] % 40f == 39f)
                            {
                                flag104 = true;
                            }
                            if (flag104 && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y && Collision.CanHit(vector121, 1, 1, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                if (Main.netMode != 1)
                                {
                                    float num1070 = 8f;
                                    if (Main.expertMode)
                                    {
                                        num1070 += 2f;
                                    }
                                    if (Main.expertMode && (double)npc.life < (double)npc.lifeMax * 0.1)
                                    {
                                        num1070 += 3f;
                                    }
                                    float num1071 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector121.X + (float)Main.rand.Next(-80, 81);
                                    float num1072 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector121.Y + (float)Main.rand.Next(-40, 41);
                                    float num1073 = (float)Math.Sqrt((double)(num1071 * num1071 + num1072 * num1072));
                                    num1073 = num1070 / num1073;
                                    num1071 *= num1073;
                                    num1072 *= num1073;
                                    int num1074 = 11;
                                    int num1075 = 55;
                                    int num1076 = Projectile.NewProjectile(vector121.X, vector121.Y, num1071, num1072, num1075, num1074, 0f, Main.myPlayer, 0f, 0f);
                                    Main.projectile[num1076].timeLeft = 300;
                                }
                            }
                            if (!Collision.CanHit(new Vector2(vector121.X, vector121.Y - 30f), 1, 1, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                            {
                                num1065 = 14f;
                                num1066 = 0.1f;
                                vector122 = vector121;
                                num1067 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector122.X;
                                num1068 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector122.Y;
                                num1069 = (float)Math.Sqrt((double)(num1067 * num1067 + num1068 * num1068));
                                num1069 = num1065 / num1069;
                                if (npc.velocity.X < num1067)
                                {
                                    npc.velocity.X = npc.velocity.X + num1066;
                                    if (npc.velocity.X < 0f && num1067 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num1066;
                                    }
                                }
                                else if (npc.velocity.X > num1067)
                                {
                                    npc.velocity.X = npc.velocity.X - num1066;
                                    if (npc.velocity.X > 0f && num1067 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num1066;
                                    }
                                }
                                if (npc.velocity.Y < num1068)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1066;
                                    if (npc.velocity.Y < 0f && num1068 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num1066;
                                    }
                                }
                                else if (npc.velocity.Y > num1068)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1066;
                                    if (npc.velocity.Y > 0f && num1068 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num1066;
                                    }
                                }
                            }
                            else if (num1069 > 100f)
                            {
                                npc.TargetClosest(true);
                                npc.spriteDirection = npc.direction;
                                num1069 = num1065 / num1069;
                                if (npc.velocity.X < num1067)
                                {
                                    npc.velocity.X = npc.velocity.X + num1066;
                                    if (npc.velocity.X < 0f && num1067 > 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X + num1066 * 2f;
                                    }
                                }
                                else if (npc.velocity.X > num1067)
                                {
                                    npc.velocity.X = npc.velocity.X - num1066;
                                    if (npc.velocity.X > 0f && num1067 < 0f)
                                    {
                                        npc.velocity.X = npc.velocity.X - num1066 * 2f;
                                    }
                                }
                                if (npc.velocity.Y < num1068)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1066;
                                    if (npc.velocity.Y < 0f && num1068 > 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + num1066 * 2f;
                                    }
                                }
                                else if (npc.velocity.Y > num1068)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1066;
                                    if (npc.velocity.Y > 0f && num1068 < 0f)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - num1066 * 2f;
                                    }
                                }
                            }
                            if (npc.ai[1] > 800f)
                            {
                                npc.ai[0] = -1f;
                                npc.ai[1] = 3f;
                                npc.netUpdate = true;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 44)
                    {
                        npc.noGravity = true;
                        if (npc.collideX)
                        {
                            if (npc.oldVelocity.X > 0f)
                            {
                                npc.direction = -1;
                            }
                            else
                            {
                                npc.direction = 1;
                            }
                            npc.velocity.X = (float)npc.direction;
                        }
                        if (npc.collideY)
                        {
                            if (npc.oldVelocity.Y > 0f)
                            {
                                npc.directionY = -1;
                            }
                            else
                            {
                                npc.directionY = 1;
                            }
                            npc.velocity.Y = (float)npc.directionY;
                        }
                        int num1077 = npc.target;
                        int direction5 = npc.direction;
                        if (npc.target == 255 || Main.player[npc.target].dead || Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.ai[0] = 90f;
                            npc.TargetClosest(true);
                        }
                        else if (npc.ai[0] > 0f)
                        {
                            npc.ai[0] -= 1f;
                            npc.TargetClosest(true);
                        }
                        if (npc.netUpdate && num1077 == npc.target && direction5 == npc.direction)
                        {
                            npc.netUpdate = false;
                        }
                        float num1078 = 0.05f;
                        float num1079 = 0.01f;
                        float num1080 = 3f;
                        float num1081 = 1f;
                        float num1082 = 30f;
                        float num1083 = 100f;
                        float num1084 = Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2)));
                        float num1085 = Main.player[npc.target].position.Y - (float)(npc.height / 2);
                        if (npc.type == 509)
                        {
                            num1078 = 0.09f;
                            num1079 = 0.03f;
                            num1080 = 5f;
                            num1081 = 2f;
                            num1082 = 40f;
                            num1083 = 150f;
                            num1085 = Main.player[npc.target].Center.Y - (float)(npc.height / 2);
                            npc.rotation = npc.velocity.X * 0.1f;
                            for (int num1086 = 0; num1086 < 200; num1086++)
                            {
                                if (num1086 != npc.whoAmI && Main.npc[num1086].active && Main.npc[num1086].type == npc.type && Math.Abs(npc.position.X - Main.npc[num1086].position.X) + Math.Abs(npc.position.Y - Main.npc[num1086].position.Y) < (float)npc.width)
                                {
                                    if (npc.position.X < Main.npc[num1086].position.X)
                                    {
                                        npc.velocity.X = npc.velocity.X - 0.05f;
                                    }
                                    else
                                    {
                                        npc.velocity.X = npc.velocity.X + 0.05f;
                                    }
                                    if (npc.position.Y < Main.npc[num1086].position.Y)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - 0.05f;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.05f;
                                    }
                                }
                            }
                        }
                        if (npc.ai[0] <= 0f)
                        {
                            num1080 *= 0.8f;
                            num1078 *= 0.7f;
                            num1085 = npc.Center.Y + (float)(npc.directionY * 1000);
                            if (npc.velocity.X < 0f)
                            {
                                npc.direction = -1;
                            }
                            else if (npc.velocity.X > 0f || npc.direction == 0)
                            {
                                npc.direction = 1;
                            }
                        }
                        if (num1084 > num1082)
                        {
                            if (npc.direction == -1 && npc.velocity.X > -num1080)
                            {
                                npc.velocity.X = npc.velocity.X - num1078;
                                if (npc.velocity.X > num1080)
                                {
                                    npc.velocity.X = npc.velocity.X - num1078;
                                }
                                else if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num1078 / 2f;
                                }
                                if (npc.velocity.X < -num1080)
                                {
                                    npc.velocity.X = -num1080;
                                }
                            }
                            else if (npc.direction == 1 && npc.velocity.X < num1080)
                            {
                                npc.velocity.X = npc.velocity.X + num1078;
                                if (npc.velocity.X < -num1080)
                                {
                                    npc.velocity.X = npc.velocity.X + num1078;
                                }
                                else if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num1078 / 2f;
                                }
                                if (npc.velocity.X > num1080)
                                {
                                    npc.velocity.X = num1080;
                                }
                            }
                        }
                        if (num1084 > num1083)
                        {
                            num1085 -= num1083 / 2f;
                        }
                        if (npc.position.Y < num1085)
                        {
                            npc.velocity.Y = npc.velocity.Y + num1079;
                            if (npc.velocity.Y < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1079;
                            }
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y - num1079;
                            if (npc.velocity.Y > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1079;
                            }
                        }
                        if (npc.velocity.Y < -num1081)
                        {
                            npc.velocity.Y = -num1081;
                        }
                        if (npc.velocity.Y > num1081)
                        {
                            npc.velocity.Y = num1081;
                            return;
                        }
                    }
                    else if (npc.aiStyle == 45)
                    {
                        NPC.golemBoss = npc.whoAmI;
                        if (npc.localAI[0] == 0f && Main.netMode != 1)
                        {
                            npc.localAI[0] = 1f;
                            NPC.NewNPC((int)npc.Center.X - 84, (int)npc.Center.Y - 9, 247, 0, 0f, 0f, 0f, 0f, 255);
                            NPC.NewNPC((int)npc.Center.X + 78, (int)npc.Center.Y - 9, 248, 0, 0f, 0f, 0f, 0f, 255);
                            NPC.NewNPC((int)npc.Center.X - 3, (int)npc.Center.Y - 57, 246, 0, 0f, 0f, 0f, 0f, 255);
                        }
                        if (npc.target >= 0 && Main.player[npc.target].dead)
                        {
                            npc.TargetClosest(true);
                            if (Main.player[npc.target].dead)
                            {
                                npc.noTileCollide = true;
                            }
                        }
                        if (npc.alpha > 0)
                        {
                            npc.alpha -= 10;
                            if (npc.alpha < 0)
                            {
                                npc.alpha = 0;
                            }
                            npc.ai[1] = 0f;
                        }
                        bool flag105 = false;
                        bool flag106 = false;
                        bool flag107 = false;
                        npc.dontTakeDamage = false;
                        for (int num1087 = 0; num1087 < 200; num1087++)
                        {
                            if (Main.npc[num1087].active && Main.npc[num1087].type == 246)
                            {
                                flag105 = true;
                            }
                            if (Main.npc[num1087].active && Main.npc[num1087].type == 247)
                            {
                                flag106 = true;
                            }
                            if (Main.npc[num1087].active && Main.npc[num1087].type == 248)
                            {
                                flag107 = true;
                            }
                        }
                        npc.dontTakeDamage = flag105;
                        if (npc.ai[0] == 0f)
                        {
                            npc.noTileCollide = false;
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.8f;
                                npc.ai[1] += 1f;
                                if (npc.ai[1] > 0f)
                                {
                                    if (!flag106)
                                    {
                                        npc.ai[1] += 2f;
                                    }
                                    if (!flag107)
                                    {
                                        npc.ai[1] += 2f;
                                    }
                                    if (!flag105)
                                    {
                                        npc.ai[1] += 2f;
                                    }
                                    if (npc.life < npc.lifeMax)
                                    {
                                        npc.ai[1] += 1f;
                                    }
                                    if (npc.life < npc.lifeMax / 2)
                                    {
                                        npc.ai[1] += 4f;
                                    }
                                    if (npc.life < npc.lifeMax / 3)
                                    {
                                        npc.ai[1] += 8f;
                                    }
                                }
                                if (npc.ai[1] >= 300f)
                                {
                                    npc.ai[1] = -20f;
                                    npc.frameCounter = 0.0;
                                }
                                else if (npc.ai[1] == -1f)
                                {
                                    npc.TargetClosest(true);
                                    npc.velocity.X = (float)(4 * npc.direction);
                                    npc.velocity.Y = -12.1f;
                                    npc.ai[0] = 1f;
                                    npc.ai[1] = 0f;
                                }
                            }
                        }
                        else if (npc.ai[0] == 1f)
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                npc.ai[0] = 0f;
                            }
                            else
                            {
                                npc.TargetClosest(true);
                                if (npc.position.X < Main.player[npc.target].position.X && npc.position.X + (float)npc.width > Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                    npc.velocity.Y = npc.velocity.Y + 0.2f;
                                }
                                else
                                {
                                    if (npc.direction < 0)
                                    {
                                        npc.velocity.X = npc.velocity.X - 0.2f;
                                    }
                                    else if (npc.direction > 0)
                                    {
                                        npc.velocity.X = npc.velocity.X + 0.2f;
                                    }
                                    float num1094 = 3f;
                                    if (npc.life < npc.lifeMax)
                                    {
                                        num1094 += 1f;
                                    }
                                    if (npc.life < npc.lifeMax / 2)
                                    {
                                        num1094 += 1f;
                                    }
                                    if (npc.life < npc.lifeMax / 4)
                                    {
                                        num1094 += 1f;
                                    }
                                    if (npc.velocity.X < -num1094)
                                    {
                                        npc.velocity.X = -num1094;
                                    }
                                    if (npc.velocity.X > num1094)
                                    {
                                        npc.velocity.X = num1094;
                                    }
                                }
                            }
                        }
                        if (npc.target <= 0 || npc.target == 255 || Main.player[npc.target].dead)
                        {
                            npc.TargetClosest(true);
                        }
                        int num1095 = 3000;
                        if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) + Math.Abs(npc.Center.Y - Main.player[npc.target].Center.Y) > (float)num1095)
                        {
                            npc.TargetClosest(true);
                            if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) + Math.Abs(npc.Center.Y - Main.player[npc.target].Center.Y) > (float)num1095)
                            {
                                npc.active = false;
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 46)
                    {
                        npc.noTileCollide = true;
                        if (NPC.golemBoss < 0)
                        {
                            npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                            return;
                        }
                        float num1096 = 12f;
                        Vector2 vector123 = new Vector2(npc.Center.X, npc.Center.Y);
                        float num1097 = Main.npc[NPC.golemBoss].Center.X - vector123.X;
                        float num1098 = Main.npc[NPC.golemBoss].Center.Y - vector123.Y;
                        num1098 -= 57f;
                        num1097 -= 3f;
                        float num1099 = (float)Math.Sqrt((double)(num1097 * num1097 + num1098 * num1098));
                        if (num1099 < 20f)
                        {
                            npc.rotation = 0f;
                            npc.velocity.X = num1097;
                            npc.velocity.Y = num1098;
                        }
                        else
                        {
                            num1099 = num1096 / num1099;
                            npc.velocity.X = num1097 * num1099;
                            npc.velocity.Y = num1098 * num1099;
                            npc.rotation = npc.velocity.X * 0.1f;
                        }
                        if (npc.alpha > 0)
                        {
                            npc.alpha -= 10;
                            if (npc.alpha < 0)
                            {
                                npc.alpha = 0;
                            }
                            npc.ai[1] = 30f;
                        }
                        if (npc.ai[0] == 0f)
                        {
                            npc.ai[1] += 1f;
                            int num1100 = 300;
                            if (npc.ai[1] < 20f || npc.ai[1] > (float)(num1100 - 20))
                            {
                                npc.localAI[0] = 1f;
                            }
                            else
                            {
                                npc.localAI[0] = 0f;
                            }
                            if (npc.ai[1] >= (float)num1100)
                            {
                                npc.TargetClosest(true);
                                npc.ai[1] = 0f;
                                Vector2 vector124 = new Vector2(npc.Center.X, npc.Center.Y + 10f);
                                float num1101 = 8f;
                                float num1102 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector124.X;
                                float num1103 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector124.Y;
                                float num1104 = (float)Math.Sqrt((double)(num1102 * num1102 + num1103 * num1103));
                                num1104 = num1101 / num1104;
                                num1102 *= num1104;
                                num1103 *= num1104;
                                int num1105 = 18;
                                int num1106 = 258;
                                if (Main.netMode != 1)
                                {
                                    Projectile.NewProjectile(vector124.X, vector124.Y, num1102, num1103, num1106, num1105, 0f, Main.myPlayer, 0f, 0f);
                                }
                            }
                        }
                        else if (npc.ai[0] == 1f)
                        {
                            npc.TargetClosest(true);
                            Vector2 vector125 = new Vector2(npc.Center.X, npc.Center.Y + 10f);
                            if (Main.player[npc.target].Center.X < npc.Center.X - (float)npc.width)
                            {
                                npc.localAI[1] = -1f;
                                vector125.X -= 40f;
                            }
                            else if (Main.player[npc.target].Center.X > npc.Center.X + (float)npc.width)
                            {
                                npc.localAI[1] = 1f;
                                vector125.X += 40f;
                            }
                            else
                            {
                                npc.localAI[1] = 0f;
                            }
                            npc.ai[1] += 1f;
                            if ((double)npc.life < (double)npc.lifeMax * 0.4)
                            {
                                npc.ai[1] += 1f;
                            }
                            if ((double)npc.life < (double)npc.lifeMax * 0.2)
                            {
                                npc.ai[1] += 1f;
                            }
                            int num1107 = 300;
                            if (npc.ai[1] < 20f || npc.ai[1] > (float)(num1107 - 20))
                            {
                                npc.localAI[0] = 1f;
                            }
                            else
                            {
                                npc.localAI[0] = 0f;
                            }
                            if (npc.ai[1] >= (float)num1107)
                            {
                                npc.TargetClosest(true);
                                npc.ai[1] = 0f;
                                float num1108 = 8f;
                                float num1109 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector125.X;
                                float num1110 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector125.Y;
                                float num1111 = (float)Math.Sqrt((double)(num1109 * num1109 + num1110 * num1110));
                                num1111 = num1108 / num1111;
                                num1109 *= num1111;
                                num1110 *= num1111;
                                int num1112 = 24;
                                int num1113 = 258;
                                if (Main.netMode != 1)
                                {
                                    Projectile.NewProjectile(vector125.X, vector125.Y, num1109, num1110, num1113, num1112, 0f, Main.myPlayer, 0f, 0f);
                                }
                            }
                            npc.ai[2] += 1f;
                            if (npc.life < npc.lifeMax / 3)
                            {
                                npc.ai[2] += 1f;
                            }
                            if (npc.life < npc.lifeMax / 4)
                            {
                                npc.ai[2] += 1f;
                            }
                            if (npc.life < npc.lifeMax / 5)
                            {
                                npc.ai[2] += 1f;
                            }
                            if (!Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                            {
                                npc.ai[2] += 4f;
                            }
                            if (npc.ai[2] > (float)(60 + Main.rand.Next(600)))
                            {
                                npc.ai[2] = 0f;
                                int num1114 = 28;
                                int num1115 = 259;
                                if (npc.localAI[1] == 0f)
                                {
                                    for (int num1116 = 0; num1116 < 2; num1116++)
                                    {
                                        vector125 = new Vector2(npc.Center.X, npc.Center.Y - 22f);
                                        if (num1116 == 0)
                                        {
                                            vector125.X -= 18f;
                                        }
                                        else
                                        {
                                            vector125.X += 18f;
                                        }
                                        float num1117 = 11f;
                                        float num1118 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector125.X;
                                        float num1119 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector125.Y;
                                        float num1120 = (float)Math.Sqrt((double)(num1118 * num1118 + num1119 * num1119));
                                        num1120 = num1117 / num1120;
                                        num1118 *= num1120;
                                        num1119 *= num1120;
                                        vector125.X += num1118 * 3f;
                                        vector125.Y += num1119 * 3f;
                                        if (Main.netMode != 1)
                                        {
                                            int num1121 = Projectile.NewProjectile(vector125.X, vector125.Y, num1118, num1119, num1115, num1114, 0f, Main.myPlayer, 0f, 0f);
                                            Main.projectile[num1121].timeLeft = 300;
                                        }
                                    }
                                }
                                else if (npc.localAI[1] != 0f)
                                {
                                    vector125 = new Vector2(npc.Center.X, npc.Center.Y - 22f);
                                    if (npc.localAI[1] == -1f)
                                    {
                                        vector125.X -= 30f;
                                    }
                                    else if (npc.localAI[1] == 1f)
                                    {
                                        vector125.X += 30f;
                                    }
                                    float num1122 = 12f;
                                    float num1123 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector125.X;
                                    float num1124 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector125.Y;
                                    float num1125 = (float)Math.Sqrt((double)(num1123 * num1123 + num1124 * num1124));
                                    num1125 = num1122 / num1125;
                                    num1123 *= num1125;
                                    num1124 *= num1125;
                                    vector125.X += num1123 * 3f;
                                    vector125.Y += num1124 * 3f;
                                    if (Main.netMode != 1)
                                    {
                                        int num1126 = Projectile.NewProjectile(vector125.X, vector125.Y, num1123, num1124, num1115, num1114, 0f, Main.myPlayer, 0f, 0f);
                                        Main.projectile[num1126].timeLeft = 300;
                                    }
                                }
                            }
                        }
                        if (npc.life < npc.lifeMax / 2)
                        {
                            npc.ai[0] = 1f;
                            return;
                        }
                        npc.ai[0] = 0f;
                        return;
                    }
                    else if (npc.aiStyle == 47)
                    {
                        if (NPC.golemBoss < 0)
                        {
                            npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                            return;
                        }
                        if (npc.alpha > 0)
                        {
                            npc.alpha -= 10;
                            if (npc.alpha < 0)
                            {
                                npc.alpha = 0;
                            }
                            npc.ai[1] = 0f;
                        }
                        if (npc.ai[0] == 0f)
                        {
                            npc.noTileCollide = true;
                            float num1127 = 14f;
                            if (npc.life < npc.lifeMax / 2)
                            {
                                num1127 += 3f;
                            }
                            if (npc.life < npc.lifeMax / 4)
                            {
                                num1127 += 3f;
                            }
                            if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                            {
                                num1127 += 8f;
                            }
                            Vector2 vector126 = new Vector2(npc.Center.X, npc.Center.Y);
                            float num1128 = Main.npc[NPC.golemBoss].Center.X - vector126.X;
                            float num1129 = Main.npc[NPC.golemBoss].Center.Y - vector126.Y;
                            num1129 -= 9f;
                            if (npc.type == 247)
                            {
                                num1128 -= 84f;
                            }
                            else
                            {
                                num1128 += 78f;
                            }
                            float num1130 = (float)Math.Sqrt((double)(num1128 * num1128 + num1129 * num1129));
                            if (num1130 < 12f + num1127)
                            {
                                npc.rotation = 0f;
                                npc.velocity.X = num1128;
                                npc.velocity.Y = num1129;
                                npc.ai[1] += 1f;
                                if (npc.life < npc.lifeMax / 2)
                                {
                                    npc.ai[1] += 1f;
                                }
                                if (npc.life < npc.lifeMax / 4)
                                {
                                    npc.ai[1] += 1f;
                                }
                                if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                                {
                                    npc.ai[1] += 10f;
                                }
                                if (npc.ai[1] >= 60f)
                                {
                                    npc.TargetClosest(true);
                                    if ((npc.type == 247 && npc.Center.X + 100f > Main.player[npc.target].Center.X) || (npc.type == 248 && npc.Center.X - 100f < Main.player[npc.target].Center.X))
                                    {
                                        npc.ai[1] = 0f;
                                        npc.ai[0] = 1f;
                                        return;
                                    }
                                    npc.ai[1] = 0f;
                                    return;
                                }
                            }
                            else
                            {
                                num1130 = num1127 / num1130;
                                npc.velocity.X = num1128 * num1130;
                                npc.velocity.Y = num1129 * num1130;
                                npc.rotation = (float)Math.Atan2((double)(-(double)npc.velocity.Y), (double)(-(double)npc.velocity.X));
                                if (npc.type == 247)
                                {
                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                                    return;
                                }
                            }
                        }
                        else if (npc.ai[0] == 1f)
                        {
                            npc.noTileCollide = true;
                            npc.collideX = false;
                            npc.collideY = false;
                            float num1131 = 12f;
                            if (npc.life < npc.lifeMax / 2)
                            {
                                num1131 += 4f;
                            }
                            if (npc.life < npc.lifeMax / 4)
                            {
                                num1131 += 4f;
                            }
                            if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                            {
                                num1131 += 10f;
                            }
                            Vector2 vector127 = new Vector2(npc.Center.X, npc.Center.Y);
                            float num1132 = Main.player[npc.target].Center.X - vector127.X;
                            float num1133 = Main.player[npc.target].Center.Y - vector127.Y;
                            float num1134 = (float)Math.Sqrt((double)(num1132 * num1132 + num1133 * num1133));
                            num1134 = num1131 / num1134;
                            npc.velocity.X = num1132 * num1134;
                            npc.velocity.Y = num1133 * num1134;
                            npc.ai[0] = 2f;
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                            if (npc.type == 247)
                            {
                                npc.rotation = (float)Math.Atan2((double)(-(double)npc.velocity.Y), (double)(-(double)npc.velocity.X));
                                return;
                            }
                        }
                        else if (npc.ai[0] == 2f)
                        {
                            if (Math.Abs(npc.velocity.X) > Math.Abs(npc.velocity.Y))
                            {
                                if (npc.velocity.X > 0f && npc.Center.X > Main.player[npc.target].Center.X)
                                {
                                    npc.noTileCollide = false;
                                }
                                if (npc.velocity.X < 0f && npc.Center.X < Main.player[npc.target].Center.X)
                                {
                                    npc.noTileCollide = false;
                                }
                            }
                            else
                            {
                                if (npc.velocity.Y > 0f && npc.Center.Y > Main.player[npc.target].Center.Y)
                                {
                                    npc.noTileCollide = false;
                                }
                                if (npc.velocity.Y < 0f && npc.Center.Y < Main.player[npc.target].Center.Y)
                                {
                                    npc.noTileCollide = false;
                                }
                            }
                            Vector2 vector128 = new Vector2(npc.Center.X, npc.Center.Y);
                            float num1135 = Main.npc[NPC.golemBoss].Center.X - vector128.X;
                            float num1136 = Main.npc[NPC.golemBoss].Center.Y - vector128.Y;
                            num1135 += Main.npc[NPC.golemBoss].velocity.X;
                            num1136 += Main.npc[NPC.golemBoss].velocity.Y;
                            num1136 -= 9f;
                            if (npc.type == 247)
                            {
                                num1135 -= 84f;
                            }
                            else
                            {
                                num1135 += 78f;
                            }
                            float num1137 = (float)Math.Sqrt((double)(num1135 * num1135 + num1136 * num1136));
                            if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                            {
                                npc.knockBackResist = 0f;
                                if (num1137 > 700f || npc.collideX || npc.collideY)
                                {
                                    npc.noTileCollide = true;
                                    npc.ai[0] = 0f;
                                    return;
                                }
                            }
                            else
                            {
                                bool flag108 = npc.justHit;
                                if (flag108)
                                {
                                    int num1138 = 0;
                                    while (num1138 < 200)
                                    {
                                        if (Main.npc[num1138].active && Main.npc[num1138].type == 246)
                                        {
                                            if (Main.npc[num1138].life < Main.npc[num1138].lifeMax / 2)
                                            {
                                                if (npc.knockBackResist == 0f)
                                                {
                                                    flag108 = false;
                                                }
                                                npc.knockBackResist = 0f;
                                                break;
                                            }
                                            break;
                                        }
                                        else
                                        {
                                            num1138++;
                                        }
                                    }
                                }
                                if (num1137 > 600f || npc.collideX || npc.collideY || flag108)
                                {
                                    npc.noTileCollide = true;
                                    npc.ai[0] = 0f;
                                    return;
                                }
                            }
                        }
                        else if (npc.ai[0] == 3f)
                        {
                            npc.noTileCollide = true;
                            float num1139 = 12f;
                            float num1140 = 0.4f;
                            Vector2 vector129 = new Vector2(npc.Center.X, npc.Center.Y);
                            float num1141 = Main.player[npc.target].Center.X - vector129.X;
                            float num1142 = Main.player[npc.target].Center.Y - vector129.Y;
                            float num1143 = (float)Math.Sqrt((double)(num1141 * num1141 + num1142 * num1142));
                            num1143 = num1139 / num1143;
                            num1141 *= num1143;
                            num1142 *= num1143;
                            if (npc.velocity.X < num1141)
                            {
                                npc.velocity.X = npc.velocity.X + num1140;
                                if (npc.velocity.X < 0f && num1141 > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num1140 * 2f;
                                }
                            }
                            else if (npc.velocity.X > num1141)
                            {
                                npc.velocity.X = npc.velocity.X - num1140;
                                if (npc.velocity.X > 0f && num1141 < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num1140 * 2f;
                                }
                            }
                            if (npc.velocity.Y < num1142)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1140;
                                if (npc.velocity.Y < 0f && num1142 > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1140 * 2f;
                                }
                            }
                            else if (npc.velocity.Y > num1142)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1140;
                                if (npc.velocity.Y > 0f && num1142 < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1140 * 2f;
                                }
                            }
                            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                            if (npc.type == 247)
                            {
                                npc.rotation = (float)Math.Atan2((double)(-(double)npc.velocity.Y), (double)(-(double)npc.velocity.X));
                                return;
                            }
                        }
                    }
                    else if (npc.aiStyle == 48)
                    {
                        bool flag109 = false;
                        if (!Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.noTileCollide = true;
                            flag109 = true;
                        }
                        else
                        {
                            npc.noTileCollide = false;
                        }
                        if (NPC.golemBoss < 0)
                        {
                            npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                            return;
                        }
                        npc.TargetClosest(true);
                        float num1144 = 7f;
                        float num1145 = 0.05f;
                        Vector2 vector130 = new Vector2(npc.Center.X, npc.Center.Y);
                        float num1146 = Main.player[npc.target].Center.X - vector130.X;
                        float num1147 = Main.player[npc.target].Center.Y - vector130.Y - 300f;
                        float num1148 = (float)Math.Sqrt((double)(num1146 * num1146 + num1147 * num1147));
                        num1148 = num1144 / num1148;
                        num1146 *= num1148;
                        num1147 *= num1148;
                        if (npc.velocity.X < num1146)
                        {
                            npc.velocity.X = npc.velocity.X + num1145;
                            if (npc.velocity.X < 0f && num1146 > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + num1145;
                            }
                        }
                        else if (npc.velocity.X > num1146)
                        {
                            npc.velocity.X = npc.velocity.X - num1145;
                            if (npc.velocity.X > 0f && num1146 < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - num1145;
                            }
                        }
                        if (npc.velocity.Y < num1147)
                        {
                            npc.velocity.Y = npc.velocity.Y + num1145;
                            if (npc.velocity.Y < 0f && num1147 > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1145;
                            }
                        }
                        else if (npc.velocity.Y > num1147)
                        {
                            npc.velocity.Y = npc.velocity.Y - num1145;
                            if (npc.velocity.Y > 0f && num1147 < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1145;
                            }
                        }
                        npc.ai[1] += 1f;
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
                        {
                            npc.ai[1] += 1f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
                        {
                            npc.ai[1] += 1f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
                        {
                            npc.ai[1] += 1f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
                        {
                            npc.ai[1] += 1f;
                        }
                        int num1149 = 360;
                        if (npc.ai[1] < 20f || npc.ai[1] > (float)(num1149 - 20))
                        {
                            npc.localAI[0] = 1f;
                        }
                        else
                        {
                            npc.localAI[0] = 0f;
                        }
                        if (flag109)
                        {
                            npc.ai[1] = 20f;
                        }
                        if (npc.ai[1] >= (float)num1149)
                        {
                            npc.TargetClosest(true);
                            npc.ai[1] = 0f;
                            Vector2 vector131 = new Vector2(npc.Center.X, npc.Center.Y - 10f);
                            float num1150 = 8f;
                            int num1151 = 20;
                            int num1152 = 258;
                            float num1153 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector131.X;
                            float num1154 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector131.Y;
                            float num1155 = (float)Math.Sqrt((double)(num1153 * num1153 + num1154 * num1154));
                            num1155 = num1150 / num1155;
                            num1153 *= num1155;
                            num1154 *= num1155;
                            if (Main.netMode != 1)
                            {
                                Projectile.NewProjectile(vector131.X, vector131.Y, num1153, num1154, num1152, num1151, 0f, Main.myPlayer, 0f, 0f);
                            }
                        }
                        npc.ai[2] += 1f;
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.25)
                        {
                            npc.ai[2] += 1f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.5)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 6)
                        {
                            npc.ai[2] += 1f;
                        }
                        if (!Collision.CanHit(Main.npc[NPC.golemBoss].Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.ai[2] += 4f;
                        }
                        if (npc.ai[2] > (float)(100 + Main.rand.Next(4800)))
                        {
                            npc.ai[2] = 0f;
                            for (int num1156 = 0; num1156 < 2; num1156++)
                            {
                                Vector2 vector132 = new Vector2(npc.Center.X, npc.Center.Y - 50f);
                                if (num1156 == 0)
                                {
                                    vector132.X -= 14f;
                                }
                                else if (num1156 == 1)
                                {
                                    vector132.X += 14f;
                                }
                                float num1157 = 11f;
                                int num1158 = 24;
                                int num1159 = 259;
                                if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.5)
                                {
                                    num1158++;
                                    num1157 += 0.25f;
                                }
                                if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
                                {
                                    num1158++;
                                    num1157 += 0.25f;
                                }
                                if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.3)
                                {
                                    num1158++;
                                    num1157 += 0.25f;
                                }
                                if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
                                {
                                    num1158++;
                                    num1157 += 0.25f;
                                }
                                if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
                                {
                                    num1158++;
                                    num1157 += 0.25f;
                                }
                                float num1160 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector132.X;
                                float num1161 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector132.Y;
                                float num1162 = (float)Math.Sqrt((double)(num1160 * num1160 + num1161 * num1161));
                                num1162 = num1157 / num1162;
                                num1160 *= num1162;
                                num1161 *= num1162;
                                vector132.X += num1160 * 3f;
                                vector132.Y += num1161 * 3f;
                                if (Main.netMode != 1)
                                {
                                    int num1163 = Projectile.NewProjectile(vector132.X, vector132.Y, num1160, num1161, num1159, num1158, 0f, Main.myPlayer, 0f, 0f);
                                    Main.projectile[num1163].timeLeft = 300;
                                }
                            }
                            return;
                        }
                    }
                    else if (npc.aiStyle == 49)
                    {
                        npc.noGravity = true;
                        npc.TargetClosest(true);
                        float num1164 = 4f;
                        float num1165 = 0.25f;
                        Vector2 vector133 = new Vector2(npc.Center.X, npc.Center.Y);
                        float num1166 = Main.player[npc.target].Center.X - vector133.X;
                        float num1167 = Main.player[npc.target].Center.Y - vector133.Y - 200f;
                        float num1168 = (float)Math.Sqrt((double)(num1166 * num1166 + num1167 * num1167));
                        if (num1168 < 20f)
                        {
                            num1166 = npc.velocity.X;
                            num1167 = npc.velocity.Y;
                        }
                        else
                        {
                            num1168 = num1164 / num1168;
                            num1166 *= num1168;
                            num1167 *= num1168;
                        }
                        if (npc.velocity.X < num1166)
                        {
                            npc.velocity.X = npc.velocity.X + num1165;
                            if (npc.velocity.X < 0f && num1166 > 0f)
                            {
                                npc.velocity.X = npc.velocity.X + num1165 * 2f;
                            }
                        }
                        else if (npc.velocity.X > num1166)
                        {
                            npc.velocity.X = npc.velocity.X - num1165;
                            if (npc.velocity.X > 0f && num1166 < 0f)
                            {
                                npc.velocity.X = npc.velocity.X - num1165 * 2f;
                            }
                        }
                        if (npc.velocity.Y < num1167)
                        {
                            npc.velocity.Y = npc.velocity.Y + num1165;
                            if (npc.velocity.Y < 0f && num1167 > 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1165 * 2f;
                            }
                        }
                        else if (npc.velocity.Y > num1167)
                        {
                            npc.velocity.Y = npc.velocity.Y - num1165;
                            if (npc.velocity.Y > 0f && num1167 < 0f)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1165 * 2f;
                            }
                        }
                        if (npc.position.X + (float)npc.width > Main.player[npc.target].position.X && npc.position.X < Main.player[npc.target].position.X + (float)Main.player[npc.target].width && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && Main.netMode != 1)
                        {
                            npc.ai[0] += 1f;
                            if (npc.ai[0] > 8f)
                            {
                                npc.ai[0] = 0f;
                                int num1169 = (int)(npc.position.X + 10f + (float)Main.rand.Next(npc.width - 20));
                                int num1170 = (int)(npc.position.Y + (float)npc.height + 4f);
                                Projectile.NewProjectile((float)num1169, (float)num1170, 0f, 5f, 264, 20, 0f, Main.myPlayer, 0f, 0f);
                                return;
                            }
                        }
                    }
                    else
                    {
                        if (npc.aiStyle == 50)
                        {
                            if (npc.timeLeft > 5)
                            {
                                npc.timeLeft = 5;
                            }
                            npc.noTileCollide = true;
                            npc.velocity.Y = npc.velocity.Y + 0.02f;
                            if (npc.velocity.Y < 0f && !Main.expertMode)
                            {
                                npc.velocity.Y = npc.velocity.Y * 0.99f;
                            }
                            if (npc.velocity.Y > 1f)
                            {
                                npc.velocity.Y = 1f;
                            }
                            npc.TargetClosest(true);
                            if (npc.position.X + (float)npc.width < Main.player[npc.target].position.X)
                            {
                                if (npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                }
                                if (Main.expertMode && npc.velocity.X < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                }
                                npc.velocity.X = npc.velocity.X + 0.1f;
                                if (Main.expertMode)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                }
                            }
                            else if (npc.position.X > Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                }
                                if (Main.expertMode && npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                }
                                npc.velocity.X = npc.velocity.X - 0.1f;
                                if (Main.expertMode)
                                {
                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                }
                            }
                            if (npc.velocity.X > 5f || npc.velocity.X < -5f)
                            {
                                npc.velocity.X = npc.velocity.X * 0.97f;
                            }
                            npc.rotation = npc.velocity.X * 0.2f;
                            return;
                        }
                        if (npc.aiStyle == 51)
                        {
                            bool flag110 = false;
                            bool flag111 = false;
                            npc.TargetClosest(true);
                            if (Main.player[npc.target].dead)
                            {
                                flag111 = true;
                                flag110 = true;
                            }
                            if (Main.netMode != 1)
                            {
                                int num1171 = 6000;
                                if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) + Math.Abs(npc.Center.Y - Main.player[npc.target].Center.Y) > (float)num1171)
                                {
                                    npc.active = false;
                                    npc.life = 0;
                                    if (Main.netMode == 2)
                                    {
                                        NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                    }
                                }
                            }
                            NPC.plantBoss = npc.whoAmI;
                            if (npc.localAI[0] == 0f && Main.netMode != 1)
                            {
                                npc.localAI[0] = 1f;
                                NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 263, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 263, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 263, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                            }
                            int[] array3 = new int[3];
                            float num1172 = 0f;
                            float num1173 = 0f;
                            int num1174 = 0;
                            for (int num1175 = 0; num1175 < 200; num1175++)
                            {
                                if (Main.npc[num1175].active && Main.npc[num1175].aiStyle == 52)
                                {
                                    num1172 += Main.npc[num1175].Center.X;
                                    num1173 += Main.npc[num1175].Center.Y;
                                    array3[num1174] = num1175;
                                    num1174++;
                                    if (num1174 > 2)
                                    {
                                        break;
                                    }
                                }
                            }
                            num1172 /= (float)num1174;
                            num1173 /= (float)num1174;
                            float num1176 = 2.5f;
                            float num1177 = 0.025f;
                            if (npc.life < npc.lifeMax / 2)
                            {
                                num1176 = 5f;
                                num1177 = 0.05f;
                            }
                            if (npc.life < npc.lifeMax / 4)
                            {
                                num1176 = 7f;
                            }
                            if (!Main.player[npc.target].ZoneJungle || (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0 || Main.player[npc.target].position.Y > (float)((Main.maxTilesY - 200) * 16))
                            {
                                flag110 = true;
                                num1176 += 8f;
                                num1177 = 0.15f;
                            }
                            if (Main.expertMode)
                            {
                                num1176 += 1f;
                                num1176 *= 1.1f;
                                num1177 += 0.01f;
                                num1177 *= 1.1f;
                            }
                            Vector2 vector134 = new Vector2(num1172, num1173);
                            float num1178 = Main.player[npc.target].Center.X - vector134.X;
                            float num1179 = Main.player[npc.target].Center.Y - vector134.Y;
                            if (flag111)
                            {
                                num1179 *= -1f;
                                num1178 *= -1f;
                                num1176 += 8f;
                            }
                            float num1180 = (float)Math.Sqrt((double)(num1178 * num1178 + num1179 * num1179));
                            int num1181 = 500;
                            if (flag110)
                            {
                                num1181 += 350;
                            }
                            if (Main.expertMode)
                            {
                                num1181 += 150;
                            }
                            if (num1180 >= (float)num1181)
                            {
                                num1180 = (float)num1181 / num1180;
                                num1178 *= num1180;
                                num1179 *= num1180;
                            }
                            num1172 += num1178;
                            num1173 += num1179;
                            vector134 = new Vector2(npc.Center.X, npc.Center.Y);
                            num1178 = num1172 - vector134.X;
                            num1179 = num1173 - vector134.Y;
                            num1180 = (float)Math.Sqrt((double)(num1178 * num1178 + num1179 * num1179));
                            if (num1180 < num1176)
                            {
                                num1178 = npc.velocity.X;
                                num1179 = npc.velocity.Y;
                            }
                            else
                            {
                                num1180 = num1176 / num1180;
                                num1178 *= num1180;
                                num1179 *= num1180;
                            }
                            if (npc.velocity.X < num1178)
                            {
                                npc.velocity.X = npc.velocity.X + num1177;
                                if (npc.velocity.X < 0f && num1178 > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num1177 * 2f;
                                }
                            }
                            else if (npc.velocity.X > num1178)
                            {
                                npc.velocity.X = npc.velocity.X - num1177;
                                if (npc.velocity.X > 0f && num1178 < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - num1177 * 2f;
                                }
                            }
                            if (npc.velocity.Y < num1179)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1177;
                                if (npc.velocity.Y < 0f && num1179 > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num1177 * 2f;
                                }
                            }
                            else if (npc.velocity.Y > num1179)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1177;
                                if (npc.velocity.Y > 0f && num1179 < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y - num1177 * 2f;
                                }
                            }
                            Vector2 vector135 = new Vector2(npc.Center.X, npc.Center.Y);
                            float num1182 = Main.player[npc.target].Center.X - vector135.X;
                            float num1183 = Main.player[npc.target].Center.Y - vector135.Y;
                            npc.rotation = (float)Math.Atan2((double)num1183, (double)num1182) + 1.57f;
                            if (npc.life > npc.lifeMax / 2)
                            {
                                npc.defense = 36;
                                npc.damage = (int)(50f * Main.damageMultiplier);
                                if (flag110)
                                {
                                    npc.defense *= 2;
                                    npc.damage *= 2;
                                }
                                if (Main.netMode != 1)
                                {
                                    npc.localAI[1] += 1f;
                                    if ((double)npc.life < (double)npc.lifeMax * 0.9)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.8)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.7)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.6)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if (flag110)
                                    {
                                        npc.localAI[1] += 3f;
                                    }
                                    if (Main.expertMode)
                                    {
                                        npc.localAI[1] += 1f;
                                    }
                                    if (Main.expertMode && npc.justHit && Main.rand.Next(2) == 0)
                                    {
                                        npc.localAI[3] = 1f;
                                    }
                                    if (npc.localAI[1] > 80f)
                                    {
                                        npc.localAI[1] = 0f;
                                        bool flag112 = Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                                        if (npc.localAI[3] > 0f)
                                        {
                                            flag112 = true;
                                            npc.localAI[3] = 0f;
                                        }
                                        if (flag112)
                                        {
                                            Vector2 vector136 = new Vector2(npc.Center.X, npc.Center.Y);
                                            float num1184 = 15f;
                                            if (Main.expertMode)
                                            {
                                                num1184 = 17f;
                                            }
                                            float num1185 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector136.X;
                                            float num1186 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector136.Y;
                                            float num1187 = (float)Math.Sqrt((double)(num1185 * num1185 + num1186 * num1186));
                                            num1187 = num1184 / num1187;
                                            num1185 *= num1187;
                                            num1186 *= num1187;
                                            int num1188 = 22;
                                            int num1189 = 275;
                                            int maxValue8 = 4;
                                            int maxValue9 = 8;
                                            if (Main.expertMode)
                                            {
                                                maxValue8 = 2;
                                                maxValue9 = 6;
                                            }
                                            if ((double)npc.life < (double)npc.lifeMax * 0.8 && Main.rand.Next(maxValue8) == 0)
                                            {
                                                num1188 = 27;
                                                npc.localAI[1] = -30f;
                                                num1189 = 276;
                                            }
                                            else if ((double)npc.life < (double)npc.lifeMax * 0.8 && Main.rand.Next(maxValue9) == 0)
                                            {
                                                num1188 = 31;
                                                npc.localAI[1] = -120f;
                                                num1189 = 277;
                                            }
                                            if (flag110)
                                            {
                                                num1188 *= 2;
                                            }
                                            if (Main.expertMode)
                                            {
                                                num1188 = (int)((double)num1188 * 0.9);
                                            }
                                            vector136.X += num1185 * 3f;
                                            vector136.Y += num1186 * 3f;
                                            int num1190 = Projectile.NewProjectile(vector136.X, vector136.Y, num1185, num1186, num1189, num1188, 0f, Main.myPlayer, 0f, 0f);
                                            if (num1189 != 277)
                                            {
                                                Main.projectile[num1190].timeLeft = 300;
                                                return;
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                npc.defense = 10;
                                npc.damage = (int)(70f * Main.damageMultiplier);
                                if (flag110)
                                {
                                    npc.defense *= 4;
                                    npc.damage *= 2;
                                }
                                if (Main.netMode != 1)
                                {
                                    if (npc.localAI[0] == 1f)
                                    {
                                        npc.localAI[0] = 2f;
                                        for (int num1191 = 0; num1191 < 8; num1191++)
                                        {
                                            NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 264, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                        }
                                        if (Main.expertMode)
                                        {
                                            for (int num1192 = 0; num1192 < 200; num1192++)
                                            {
                                                if (Main.npc[num1192].active && Main.npc[num1192].aiStyle == 52)
                                                {
                                                    for (int num1193 = 0; num1193 < 3; num1193++)
                                                    {
                                                        int num1194 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 264, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                        Main.npc[num1194].ai[3] = (float)(num1192 + 1);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else if (Main.expertMode && Main.rand.Next(60) == 0)
                                    {
                                        int num1195 = 0;
                                        for (int num1196 = 0; num1196 < 200; num1196++)
                                        {
                                            if (Main.npc[num1196].active && Main.npc[num1196].type == 264 && Main.npc[num1196].ai[3] == 0f)
                                            {
                                                num1195++;
                                            }
                                        }
                                        if (num1195 < 8 && Main.rand.Next((num1195 + 1) * 10) <= 1)
                                        {
                                            NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 264, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                        }
                                    }
                                }
                                if (npc.localAI[2] == 0f)
                                {
                                    npc.localAI[2] = 1f;
                                }
                                npc.localAI[1] += 1f;
                                if ((double)npc.life < (double)npc.lifeMax * 0.4)
                                {
                                    npc.localAI[1] += 1f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.3)
                                {
                                    npc.localAI[1] += 1f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.2)
                                {
                                    npc.localAI[1] += 1f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                {
                                    npc.localAI[1] += 1f;
                                }
                                if (npc.localAI[1] >= 350f)
                                {
                                    float num1197 = 8f;
                                    Vector2 vector137 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                    float num1198 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector137.X + (float)Main.rand.Next(-10, 11);
                                    float num1199 = Math.Abs(num1198 * 0.2f);
                                    float num1200 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector137.Y + (float)Main.rand.Next(-10, 11);
                                    if (num1200 > 0f)
                                    {
                                        num1199 = 0f;
                                    }
                                    num1200 -= num1199;
                                    float num1201 = (float)Math.Sqrt((double)(num1198 * num1198 + num1200 * num1200));
                                    num1201 = num1197 / num1201;
                                    num1198 *= num1201;
                                    num1200 *= num1201;
                                    int num1202 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 265, 0, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num1202].velocity.X = num1198;
                                    Main.npc[num1202].velocity.Y = num1200;
                                    Main.npc[num1202].netUpdate = true;
                                    npc.localAI[1] = 0f;
                                    return;
                                }
                            }
                        }
                        else if (npc.aiStyle == 52)
                        {
                            bool flag113 = false;
                            bool flag114 = false;
                            if (NPC.plantBoss < 0)
                            {
                                npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                                npc.netUpdate = true;
                                return;
                            }
                            if (Main.player[Main.npc[NPC.plantBoss].target].dead)
                            {
                                flag114 = true;
                            }
                            if ((NPC.plantBoss != -1 && !Main.player[Main.npc[NPC.plantBoss].target].ZoneJungle) || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16.0 || Main.player[Main.npc[NPC.plantBoss].target].position.Y > (float)((Main.maxTilesY - 200) * 16) || flag114)
                            {
                                npc.localAI[0] -= 4f;
                                flag113 = true;
                            }
                            if (Main.netMode == 1)
                            {
                                if (npc.ai[0] == 0f)
                                {
                                    npc.ai[0] = (float)((int)(npc.Center.X / 16f));
                                }
                                if (npc.ai[1] == 0f)
                                {
                                    npc.ai[1] = (float)((int)(npc.Center.X / 16f));
                                }
                            }
                            if (Main.netMode != 1)
                            {
                                if (npc.ai[0] == 0f || npc.ai[1] == 0f)
                                {
                                    npc.localAI[0] = 0f;
                                }
                                npc.localAI[0] -= 1f;
                                if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                                {
                                    npc.localAI[0] -= 2f;
                                }
                                if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
                                {
                                    npc.localAI[0] -= 2f;
                                }
                                if (flag113)
                                {
                                    npc.localAI[0] -= 6f;
                                }
                                if (!flag114 && npc.localAI[0] <= 0f && npc.ai[0] != 0f)
                                {
                                    for (int num1203 = 0; num1203 < 200; num1203++)
                                    {
                                        if (num1203 != npc.whoAmI && Main.npc[num1203].active && Main.npc[num1203].type == npc.type && (Main.npc[num1203].velocity.X != 0f || Main.npc[num1203].velocity.Y != 0f))
                                        {
                                            npc.localAI[0] = (float)Main.rand.Next(60, 300);
                                        }
                                    }
                                }
                                if (npc.localAI[0] <= 0f)
                                {
                                    npc.localAI[0] = (float)Main.rand.Next(300, 600);
                                    bool flag115 = false;
                                    int num1204 = 0;
                                    while (!flag115 && num1204 <= 1000)
                                    {
                                        num1204++;
                                        int num1205 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.X / 16f);
                                        int num1206 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.Y / 16f);
                                        if (npc.ai[0] == 0f)
                                        {
                                            num1205 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.X + Main.npc[NPC.plantBoss].Center.X) / 32f);
                                            num1206 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.Y + Main.npc[NPC.plantBoss].Center.Y) / 32f);
                                        }
                                        if (flag114)
                                        {
                                            num1205 = (int)Main.npc[NPC.plantBoss].position.X / 16;
                                            num1206 = (int)(Main.npc[NPC.plantBoss].position.Y + 400f) / 16;
                                        }
                                        int num1207 = 20;
                                        num1207 += (int)(100f * ((float)num1204 / 1000f));
                                        int num1208 = num1205 + Main.rand.Next(-num1207, num1207 + 1);
                                        int num1209 = num1206 + Main.rand.Next(-num1207, num1207 + 1);
                                        if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2 && Main.rand.Next(6) == 0)
                                        {
                                            npc.TargetClosest(true);
                                            int num1210 = (int)(Main.player[npc.target].Center.X / 16f);
                                            int num1211 = (int)(Main.player[npc.target].Center.Y / 16f);
                                            if (Main.tile[num1210, num1211].wall > 0)
                                            {
                                                num1208 = num1210;
                                                num1209 = num1211;
                                            }
                                        }
                                        try
                                        {
                                            if (WorldGen.SolidTile(num1208, num1209) || (Main.tile[num1208, num1209].wall > 0 && (num1204 > 500 || Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)))
                                            {
                                                flag115 = true;
                                                npc.ai[0] = (float)num1208;
                                                npc.ai[1] = (float)num1209;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        catch
                                        {
                                        }
                                    }
                                }
                            }
                            if (npc.ai[0] > 0f && npc.ai[1] > 0f)
                            {
                                float num1212 = 6f;
                                if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                                {
                                    num1212 = 8f;
                                }
                                if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
                                {
                                    num1212 = 10f;
                                }
                                if (Main.expertMode)
                                {
                                    num1212 += 1f;
                                }
                                if (Main.expertMode && Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                                {
                                    num1212 += 1f;
                                }
                                if (flag113)
                                {
                                    num1212 *= 2f;
                                }
                                if (flag114)
                                {
                                    num1212 *= 2f;
                                }
                                Vector2 vector138 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1213 = npc.ai[0] * 16f - 8f - vector138.X;
                                float num1214 = npc.ai[1] * 16f - 8f - vector138.Y;
                                float num1215 = (float)Math.Sqrt((double)(num1213 * num1213 + num1214 * num1214));
                                if (num1215 < 12f + num1212)
                                {
                                    npc.velocity.X = num1213;
                                    npc.velocity.Y = num1214;
                                }
                                else
                                {
                                    num1215 = num1212 / num1215;
                                    npc.velocity.X = num1213 * num1215;
                                    npc.velocity.Y = num1214 * num1215;
                                }
                                Vector2 vector139 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1216 = Main.npc[NPC.plantBoss].Center.X - vector139.X;
                                float num1217 = Main.npc[NPC.plantBoss].Center.Y - vector139.Y;
                                npc.rotation = (float)Math.Atan2((double)num1217, (double)num1216) - 1.57f;
                                return;
                            }
                        }
                        else if (npc.aiStyle == 53)
                        {
                            if (NPC.plantBoss < 0)
                            {
                                npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                                npc.netUpdate = true;
                                return;
                            }
                            int num1218 = NPC.plantBoss;
                            if (npc.ai[3] > 0f)
                            {
                                num1218 = (int)npc.ai[3] - 1;
                            }
                            if (Main.netMode != 1)
                            {
                                npc.localAI[0] -= 1f;
                                if (npc.localAI[0] <= 0f)
                                {
                                    npc.localAI[0] = (float)Main.rand.Next(120, 480);
                                    npc.ai[0] = (float)Main.rand.Next(-100, 101);
                                    npc.ai[1] = (float)Main.rand.Next(-100, 101);
                                    npc.netUpdate = true;
                                }
                            }
                            npc.TargetClosest(true);
                            float num1219 = 0.2f;
                            float num1220 = 200f;
                            if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.25)
                            {
                                num1220 += 100f;
                            }
                            if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.1)
                            {
                                num1220 += 100f;
                            }
                            if (Main.expertMode)
                            {
                                float num1221 = 1f - (float)npc.life / (float)npc.lifeMax;
                                num1220 += num1221 * 300f;
                                num1219 += 0.3f;
                            }
                            if (!Main.npc[num1218].active || NPC.plantBoss < 0)
                            {
                                npc.active = false;
                                return;
                            }
                            float num1222 = Main.npc[num1218].position.X + (float)(Main.npc[num1218].width / 2);
                            float num1223 = Main.npc[num1218].position.Y + (float)(Main.npc[num1218].height / 2);
                            Vector2 vector140 = new Vector2(num1222, num1223);
                            float num1224 = num1222 + npc.ai[0];
                            float num1225 = num1223 + npc.ai[1];
                            float num1226 = num1224 - vector140.X;
                            float num1227 = num1225 - vector140.Y;
                            float num1228 = (float)Math.Sqrt((double)(num1226 * num1226 + num1227 * num1227));
                            num1228 = num1220 / num1228;
                            num1226 *= num1228;
                            num1227 *= num1228;
                            if (npc.position.X < num1222 + num1226)
                            {
                                npc.velocity.X = npc.velocity.X + num1219;
                                if (npc.velocity.X < 0f && num1226 > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                            }
                            else if (npc.position.X > num1222 + num1226)
                            {
                                npc.velocity.X = npc.velocity.X - num1219;
                                if (npc.velocity.X > 0f && num1226 < 0f)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                }
                            }
                            if (npc.position.Y < num1223 + num1227)
                            {
                                npc.velocity.Y = npc.velocity.Y + num1219;
                                if (npc.velocity.Y < 0f && num1227 > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                            }
                            else if (npc.position.Y > num1223 + num1227)
                            {
                                npc.velocity.Y = npc.velocity.Y - num1219;
                                if (npc.velocity.Y > 0f && num1227 < 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                }
                            }
                            if (npc.velocity.X > 8f)
                            {
                                npc.velocity.X = 8f;
                            }
                            if (npc.velocity.X < -8f)
                            {
                                npc.velocity.X = -8f;
                            }
                            if (npc.velocity.Y > 8f)
                            {
                                npc.velocity.Y = 8f;
                            }
                            if (npc.velocity.Y < -8f)
                            {
                                npc.velocity.Y = -8f;
                            }
                            if (num1226 > 0f)
                            {
                                npc.spriteDirection = 1;
                                npc.rotation = (float)Math.Atan2((double)num1227, (double)num1226);
                            }
                            if (num1226 < 0f)
                            {
                                npc.spriteDirection = -1;
                                npc.rotation = (float)Math.Atan2((double)num1227, (double)num1226) + 3.14f;
                                return;
                            }
                        }
                        else if (npc.aiStyle == 54)
                        {
                            NPC.crimsonBoss = npc.whoAmI;
                            if (Main.netMode != 1 && npc.localAI[0] == 0f)
                            {
                                npc.localAI[0] = 1f;
                                for (int num1229 = 0; num1229 < 20; num1229++)
                                {
                                    float num1230 = npc.Center.X;
                                    float num1231 = npc.Center.Y;
                                    num1230 += (float)Main.rand.Next(-npc.width, npc.width);
                                    num1231 += (float)Main.rand.Next(-npc.height, npc.height);
                                    int num1232 = NPC.NewNPC((int)num1230, (int)num1231, 267, 0, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num1232].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
                                    Main.npc[num1232].netUpdate = true;
                                }
                            }
                            if (Main.netMode != 1)
                            {
                                npc.TargetClosest(true);
                                int num1233 = 6000;
                                if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) + Math.Abs(npc.Center.Y - Main.player[npc.target].Center.Y) > (float)num1233)
                                {
                                    npc.active = false;
                                    npc.life = 0;
                                    if (Main.netMode == 2)
                                    {
                                        NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                    }
                                }
                            }
                            if (npc.ai[0] < 0f)
                            {
                                if (npc.localAI[2] == 0f)
                                {
                                    npc.localAI[2] = 1f;
                                }
                                npc.dontTakeDamage = false;
                                npc.knockBackResist = 0.5f;
                                if (Main.expertMode)
                                {
                                    npc.knockBackResist *= Main.expertKnockBack;
                                }
                                npc.TargetClosest(true);
                                Vector2 vector141 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1235 = Main.player[npc.target].Center.X - vector141.X;
                                float num1236 = Main.player[npc.target].Center.Y - vector141.Y;
                                float num1237 = (float)Math.Sqrt((double)(num1235 * num1235 + num1236 * num1236));
                                float num1238 = 8f;
                                num1237 = num1238 / num1237;
                                num1235 *= num1237;
                                num1236 *= num1237;
                                npc.velocity.X = (npc.velocity.X * 50f + num1235) / 51f;
                                npc.velocity.Y = (npc.velocity.Y * 50f + num1236) / 51f;
                                if (npc.ai[0] == -1f)
                                {
                                    if (Main.netMode != 1)
                                    {
                                        npc.localAI[1] += 1f;
                                        if (npc.justHit)
                                        {
                                            npc.localAI[1] -= (float)Main.rand.Next(5);
                                        }
                                        int num1239 = 60 + Main.rand.Next(120);
                                        if (Main.netMode != 0)
                                        {
                                            num1239 += Main.rand.Next(30, 90);
                                        }
                                        if (npc.localAI[1] >= (float)num1239)
                                        {
                                            npc.localAI[1] = 0f;
                                            npc.TargetClosest(true);
                                            int num1240 = 0;
                                            int num1241;
                                            int num1242;
                                            while (true)
                                            {
                                                num1240++;
                                                num1241 = (int)Main.player[npc.target].Center.X / 16;
                                                num1242 = (int)Main.player[npc.target].Center.Y / 16;
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    num1241 += Main.rand.Next(7, 13);
                                                }
                                                else
                                                {
                                                    num1241 -= Main.rand.Next(7, 13);
                                                }
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    num1242 += Main.rand.Next(7, 13);
                                                }
                                                else
                                                {
                                                    num1242 -= Main.rand.Next(7, 13);
                                                }
                                                if (!WorldGen.SolidTile(num1241, num1242))
                                                {
                                                    break;
                                                }
                                                if (num1240 > 100)
                                                {
                                                    return;
                                                }
                                            }
                                            npc.ai[3] = 0f;
                                            npc.ai[0] = -2f;
                                            npc.ai[1] = (float)num1241;
                                            npc.ai[2] = (float)num1242;
                                            npc.netUpdate = true;
                                            npc.netSpam = 0;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    if (npc.ai[0] == -2f)
                                    {
                                        npc.velocity *= 0.9f;
                                        if (Main.netMode != 0)
                                        {
                                            npc.ai[3] += 15f;
                                        }
                                        else
                                        {
                                            npc.ai[3] += 25f;
                                        }
                                        if (npc.ai[3] >= 255f)
                                        {
                                            npc.ai[3] = 255f;
                                            npc.position.X = npc.ai[1] * 16f - (float)(npc.width / 2);
                                            npc.position.Y = npc.ai[2] * 16f - (float)(npc.height / 2);
                                            npc.ai[0] = -3f;
                                            npc.netUpdate = true;
                                            npc.netSpam = 0;
                                        }
                                        npc.alpha = (int)npc.ai[3];
                                        return;
                                    }
                                    if (npc.ai[0] == -3f)
                                    {
                                        if (Main.netMode != 0)
                                        {
                                            npc.ai[3] -= 15f;
                                        }
                                        else
                                        {
                                            npc.ai[3] -= 25f;
                                        }
                                        if (npc.ai[3] <= 0f)
                                        {
                                            npc.ai[3] = 0f;
                                            npc.ai[0] = -1f;
                                            npc.netUpdate = true;
                                            npc.netSpam = 0;
                                        }
                                        npc.alpha = (int)npc.ai[3];
                                        return;
                                    }
                                }
                            }
                            else
                            {
                                npc.TargetClosest(true);
                                Vector2 vector142 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1243 = Main.player[npc.target].Center.X - vector142.X;
                                float num1244 = Main.player[npc.target].Center.Y - vector142.Y;
                                float num1245 = (float)Math.Sqrt((double)(num1243 * num1243 + num1244 * num1244));
                                float num1246 = 1f;
                                if (num1245 < num1246)
                                {
                                    npc.velocity.X = num1243;
                                    npc.velocity.Y = num1244;
                                }
                                else
                                {
                                    num1245 = num1246 / num1245;
                                    npc.velocity.X = num1243 * num1245;
                                    npc.velocity.Y = num1244 * num1245;
                                }
                                if (npc.ai[0] == 0f)
                                {
                                    if (Main.netMode != 1)
                                    {
                                        int num1247 = 0;
                                        for (int num1248 = 0; num1248 < 200; num1248++)
                                        {
                                            if (Main.npc[num1248].active && Main.npc[num1248].type == 267)
                                            {
                                                num1247++;
                                            }
                                        }
                                        if (num1247 == 0)
                                        {
                                            npc.ai[0] = -1f;
                                            npc.localAI[1] = 0f;
                                            npc.alpha = 0;
                                            npc.netUpdate = true;
                                        }
                                        npc.localAI[1] += 1f;
                                        if (npc.localAI[1] >= (float)(120 + Main.rand.Next(300)))
                                        {
                                            npc.localAI[1] = 0f;
                                            npc.TargetClosest(true);
                                            int num1249 = 0;
                                            int num1250;
                                            int num1251;
                                            while (true)
                                            {
                                                num1249++;
                                                num1250 = (int)Main.player[npc.target].Center.X / 16;
                                                num1251 = (int)Main.player[npc.target].Center.Y / 16;
                                                num1250 += Main.rand.Next(-50, 51);
                                                num1251 += Main.rand.Next(-50, 51);
                                                if (!WorldGen.SolidTile(num1250, num1251) && Collision.CanHit(new Vector2((float)(num1250 * 16), (float)(num1251 * 16)), 1, 1, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                                {
                                                    break;
                                                }
                                                if (num1249 > 100)
                                                {
                                                    return;
                                                }
                                            }
                                            npc.ai[0] = 1f;
                                            npc.ai[1] = (float)num1250;
                                            npc.ai[2] = (float)num1251;
                                            npc.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                else if (npc.ai[0] == 1f)
                                {
                                    npc.alpha += 5;
                                    if (npc.alpha >= 255)
                                    {
                                        npc.alpha = 255;
                                        npc.position.X = npc.ai[1] * 16f - (float)(npc.width / 2);
                                        npc.position.Y = npc.ai[2] * 16f - (float)(npc.height / 2);
                                        npc.ai[0] = 2f;
                                        return;
                                    }
                                }
                                else if (npc.ai[0] == 2f)
                                {
                                    npc.alpha -= 5;
                                    if (npc.alpha <= 0)
                                    {
                                        npc.alpha = 0;
                                        npc.ai[0] = 0f;
                                        return;
                                    }
                                }
                            }
                        }
                        else if (npc.aiStyle == 55)
                        {
                            if (NPC.crimsonBoss < 0)
                            {
                                npc.active = false;
                                npc.netUpdate = true;
                                return;
                            }
                            if (npc.ai[0] == 0f)
                            {
                                Vector2 vector143 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1252 = Main.npc[NPC.crimsonBoss].Center.X - vector143.X;
                                float num1253 = Main.npc[NPC.crimsonBoss].Center.Y - vector143.Y;
                                float num1254 = (float)Math.Sqrt((double)(num1252 * num1252 + num1253 * num1253));
                                if (num1254 > 90f)
                                {
                                    num1254 = 8f / num1254;
                                    num1252 *= num1254;
                                    num1253 *= num1254;
                                    npc.velocity.X = (npc.velocity.X * 15f + num1252) / 16f;
                                    npc.velocity.Y = (npc.velocity.Y * 15f + num1253) / 16f;
                                    return;
                                }
                                if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < 8f)
                                {
                                    npc.velocity.Y = npc.velocity.Y * 1.05f;
                                    npc.velocity.X = npc.velocity.X * 1.05f;
                                }
                                if (Main.netMode != 1 && ((Main.expertMode && Main.rand.Next(100) == 0) || Main.rand.Next(200) == 0))
                                {
                                    npc.TargetClosest(true);
                                    vector143 = new Vector2(npc.Center.X, npc.Center.Y);
                                    num1252 = Main.player[npc.target].Center.X - vector143.X;
                                    num1253 = Main.player[npc.target].Center.Y - vector143.Y;
                                    num1254 = (float)Math.Sqrt((double)(num1252 * num1252 + num1253 * num1253));
                                    num1254 = 8f / num1254;
                                    npc.velocity.X = num1252 * num1254;
                                    npc.velocity.Y = num1253 * num1254;
                                    npc.ai[0] = 1f;
                                    npc.netUpdate = true;
                                    return;
                                }
                            }
                            else
                            {
                                if (Main.expertMode)
                                {
                                    Vector2 value15 = Main.player[npc.target].Center - npc.Center;
                                    value15.Normalize();
                                    value15 *= 9f;
                                    npc.velocity = (npc.velocity * 99f + value15) / 100f;
                                }
                                Vector2 vector144 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1255 = Main.npc[NPC.crimsonBoss].Center.X - vector144.X;
                                float num1256 = Main.npc[NPC.crimsonBoss].Center.Y - vector144.Y;
                                float num1257 = (float)Math.Sqrt((double)(num1255 * num1255 + num1256 * num1256));
                                if (num1257 > 700f || npc.justHit)
                                {
                                    npc.ai[0] = 0f;
                                    return;
                                }
                            }
                        }
                        else
                        {
                            if (npc.aiStyle == 56)
                            {
                                npc.TargetClosest(true);
                                Vector2 vector145 = new Vector2(npc.Center.X, npc.Center.Y);
                                float num1258 = Main.player[npc.target].Center.X - vector145.X;
                                float num1259 = Main.player[npc.target].Center.Y - vector145.Y;
                                float num1260 = (float)Math.Sqrt((double)(num1258 * num1258 + num1259 * num1259));
                                float num1261 = 12f;
                                num1260 = num1261 / num1260;
                                num1258 *= num1260;
                                num1259 *= num1260;
                                npc.velocity.X = (npc.velocity.X * 100f + num1258) / 101f;
                                npc.velocity.Y = (npc.velocity.Y * 100f + num1259) / 101f;
                                npc.rotation = (float)Math.Atan2((double)num1259, (double)num1258) - 1.57f;
                                return;
                            }
                            if (npc.aiStyle == 57)
                            {
                                float num1263 = 2f;
                                npc.noGravity = true;
                                npc.noTileCollide = true;
                                if (!Main.dayTime)
                                {
                                    npc.TargetClosest(true);
                                }
                                bool flag116 = false;
                                if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                {
                                    num1263 = 3f;
                                }
                                if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                {
                                    num1263 = 4f;
                                }
                                if (Main.dayTime)
                                {
                                    if (npc.timeLeft > 10)
                                    {
                                        npc.timeLeft = 10;
                                    }
                                    num1263 = 8f;
                                }
                                else if (npc.ai[0] == 0f)
                                {
                                    npc.ai[1] += 1f;
                                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        npc.ai[1] += 1f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                    {
                                        npc.ai[1] += 1f;
                                    }
                                    if (npc.ai[1] >= 300f && Main.netMode != 1)
                                    {
                                        npc.ai[1] = 0f;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25 && npc.type != 344)
                                        {
                                            npc.ai[0] = (float)Main.rand.Next(3, 5);
                                        }
                                        else
                                        {
                                            npc.ai[0] = (float)Main.rand.Next(1, 3);
                                        }
                                        npc.netUpdate = true;
                                    }
                                }
                                else if (npc.ai[0] == 1f)
                                {
                                    if (npc.type == 344)
                                    {
                                        flag116 = true;
                                        npc.ai[1] += 1f;
                                        if (npc.ai[1] % 5f == 0f)
                                        {
                                            Vector2 vector146 = new Vector2(npc.position.X + 20f + (float)Main.rand.Next(npc.width - 40), npc.position.Y + 20f + (float)Main.rand.Next(npc.height - 40));
                                            float num1264 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector146.X;
                                            float num1265 = Main.player[npc.target].position.Y - vector146.Y;
                                            num1264 += (float)Main.rand.Next(-50, 51);
                                            num1265 += (float)Main.rand.Next(-50, 51);
                                            num1265 -= Math.Abs(num1264) * ((float)Main.rand.Next(0, 21) * 0.01f);
                                            float num1266 = (float)Math.Sqrt((double)(num1264 * num1264 + num1265 * num1265));
                                            float num1267 = 12.5f;
                                            num1266 = num1267 / num1266;
                                            num1264 *= num1266;
                                            num1265 *= num1266;
                                            num1264 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
                                            num1265 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
                                            Projectile.NewProjectile(vector146.X, vector146.Y, num1264, num1265, 345, 43, 0f, Main.myPlayer, (float)Main.rand.Next(0, 31), 0f);
                                        }
                                        if (npc.ai[1] >= 180f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 0f;
                                        }
                                    }
                                    else
                                    {
                                        flag116 = true;
                                        npc.ai[1] += 1f;
                                        if (npc.ai[1] % 15f == 0f)
                                        {
                                            Vector2 vector147 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f + 30f);
                                            float num1268 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector147.X;
                                            float num1269 = Main.player[npc.target].position.Y - vector147.Y;
                                            float num1270 = (float)Math.Sqrt((double)(num1268 * num1268 + num1269 * num1269));
                                            float num1271 = 10f;
                                            num1270 = num1271 / num1270;
                                            num1268 *= num1270;
                                            num1269 *= num1270;
                                            num1268 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
                                            num1269 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
                                            Projectile.NewProjectile(vector147.X, vector147.Y, num1268, num1269, 325, 50, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                        if (npc.ai[1] >= 120f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 0f;
                                        }
                                    }
                                }
                                else if (npc.ai[0] == 2f)
                                {
                                    if (npc.type == 344)
                                    {
                                        flag116 = true;
                                        npc.ai[1] += 1f;
                                        if (npc.ai[1] > 60f && npc.ai[1] < 240f && npc.ai[1] % 15f == 0f)
                                        {
                                            float num1272 = 4.5f;
                                            Vector2 vector148 = new Vector2(npc.position.X + 20f + (float)Main.rand.Next(npc.width - 40), npc.position.Y + 60f + (float)Main.rand.Next(npc.height - 80));
                                            float num1273 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector148.X;
                                            float num1274 = Main.player[npc.target].position.Y - vector148.Y;
                                            num1274 -= Math.Abs(num1273) * 0.3f;
                                            num1272 += Math.Abs(num1273) * 0.004f;
                                            num1273 += (float)Main.rand.Next(-50, 51);
                                            num1274 -= (float)Main.rand.Next(50, 201);
                                            float num1275 = (float)Math.Sqrt((double)(num1273 * num1273 + num1274 * num1274));
                                            num1275 = num1272 / num1275;
                                            num1273 *= num1275;
                                            num1274 *= num1275;
                                            num1273 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
                                            num1274 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
                                            Projectile.NewProjectile(vector148.X, vector148.Y, num1273, num1274, 346, 57, 0f, Main.myPlayer, 0f, (float)Main.rand.Next(2));
                                        }
                                        if (npc.ai[1] >= 300f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 0f;
                                        }
                                    }
                                    else
                                    {
                                        flag116 = true;
                                        npc.ai[1] += 1f;
                                        if (npc.ai[1] > 60f && npc.ai[1] < 240f && npc.ai[1] % 8f == 0f)
                                        {
                                            float num1276 = 10f;
                                            Vector2 vector149 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f + 30f);
                                            float num1277 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector149.X;
                                            float num1278 = Main.player[npc.target].position.Y - vector149.Y;
                                            num1278 -= Math.Abs(num1277) * 0.3f;
                                            num1276 += Math.Abs(num1277) * 0.004f;
                                            if (num1276 > 14f)
                                            {
                                                num1276 = 14f;
                                            }
                                            num1277 += (float)Main.rand.Next(-50, 51);
                                            num1278 -= (float)Main.rand.Next(50, 201);
                                            float num1279 = (float)Math.Sqrt((double)(num1277 * num1277 + num1278 * num1278));
                                            num1279 = num1276 / num1279;
                                            num1277 *= num1279;
                                            num1278 *= num1279;
                                            num1277 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
                                            num1278 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
                                            Projectile.NewProjectile(vector149.X, vector149.Y, num1277, num1278, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                        if (npc.ai[1] >= 300f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 0f;
                                        }
                                    }
                                }
                                else if (npc.ai[0] == 3f)
                                {
                                    num1263 = 4f;
                                    npc.ai[1] += 1f;
                                    if (npc.ai[1] % 30f == 0f)
                                    {
                                        Vector2 vector150 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f + 30f);
                                        float num1280 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector150.X;
                                        float num1281 = Main.player[npc.target].position.Y - vector150.Y;
                                        float num1282 = (float)Math.Sqrt((double)(num1280 * num1280 + num1281 * num1281));
                                        float num1283 = 16f;
                                        num1282 = num1283 / num1282;
                                        num1280 *= num1282;
                                        num1281 *= num1282;
                                        num1280 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
                                        num1281 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
                                        Projectile.NewProjectile(vector150.X, vector150.Y, num1280, num1281, 325, 75, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                    if (npc.ai[1] >= 120f)
                                    {
                                        npc.ai[1] = 0f;
                                        npc.ai[0] = 0f;
                                    }
                                }
                                else if (npc.ai[0] == 4f)
                                {
                                    num1263 = 4f;
                                    npc.ai[1] += 1f;
                                    if (npc.ai[1] % 10f == 0f)
                                    {
                                        float num1284 = 12f;
                                        Vector2 vector151 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f + 30f);
                                        float num1285 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector151.X;
                                        float num1286 = Main.player[npc.target].position.Y - vector151.Y;
                                        num1286 -= Math.Abs(num1285) * 0.2f;
                                        num1284 += Math.Abs(num1285) * 0.002f;
                                        if (num1284 > 16f)
                                        {
                                            num1284 = 16f;
                                        }
                                        num1285 += (float)Main.rand.Next(-50, 51);
                                        num1286 -= (float)Main.rand.Next(50, 201);
                                        float num1287 = (float)Math.Sqrt((double)(num1285 * num1285 + num1286 * num1286));
                                        num1287 = num1284 / num1287;
                                        num1285 *= num1287;
                                        num1286 *= num1287;
                                        num1285 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
                                        num1286 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
                                        Projectile.NewProjectile(vector151.X, vector151.Y, num1285, num1286, Main.rand.Next(326, 329), 50, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                    if (npc.ai[1] >= 240f)
                                    {
                                        npc.ai[1] = 0f;
                                        npc.ai[0] = 0f;
                                    }
                                }
                                if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) < 50f)
                                {
                                    flag116 = true;
                                }
                                if (flag116)
                                {
                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                    {
                                        npc.velocity.X = 0f;
                                    }
                                }
                                else
                                {
                                    if (npc.direction > 0)
                                    {
                                        npc.velocity.X = (npc.velocity.X * 20f + num1263) / 21f;
                                    }
                                    if (npc.direction < 0)
                                    {
                                        npc.velocity.X = (npc.velocity.X * 20f - num1263) / 21f;
                                    }
                                }
                                int num1288 = 80;
                                int num1289 = 20;
                                Vector2 position7 = new Vector2(npc.Center.X - (float)(num1288 / 2), npc.position.Y + (float)npc.height - (float)num1289);
                                bool flag117 = false;
                                if (npc.position.X < Main.player[npc.target].position.X && npc.position.X + (float)npc.width > Main.player[npc.target].position.X + (float)Main.player[npc.target].width && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y + (float)Main.player[npc.target].height - 16f)
                                {
                                    flag117 = true;
                                }
                                if (flag117)
                                {
                                    npc.velocity.Y = npc.velocity.Y + 0.5f;
                                }
                                else if (Collision.SolidCollision(position7, num1288, num1289))
                                {
                                    if (npc.velocity.Y > 0f)
                                    {
                                        npc.velocity.Y = 0f;
                                    }
                                    if ((double)npc.velocity.Y > -0.2)
                                    {
                                        npc.velocity.Y = npc.velocity.Y - 0.025f;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y - 0.2f;
                                    }
                                    if (npc.velocity.Y < -4f)
                                    {
                                        npc.velocity.Y = -4f;
                                    }
                                }
                                else
                                {
                                    if (npc.velocity.Y < 0f)
                                    {
                                        npc.velocity.Y = 0f;
                                    }
                                    if ((double)npc.velocity.Y < 0.1)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.025f;
                                    }
                                    else
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.5f;
                                    }
                                }
                                if (npc.velocity.Y > 10f)
                                {
                                    npc.velocity.Y = 10f;
                                    return;
                                }
                            }
                            else
                            {
                                if (npc.aiStyle == 58)
                                {
                                    npc.localAI[0] += 1f;
                                    if (npc.localAI[0] > 6f)
                                    {
                                        npc.localAI[0] = 0f;
                                        npc.localAI[1] += 1f;
                                        if (npc.localAI[1] > 4f)
                                        {
                                            npc.localAI[1] = 0f;
                                        }
                                    }
                                    if (Main.netMode != 1)
                                    {
                                        npc.localAI[2] += 1f;
                                        if (npc.localAI[2] > 300f)
                                        {
                                            npc.ai[3] = (float)Main.rand.Next(3);
                                            npc.localAI[2] = 0f;
                                        }
                                        else if (npc.ai[3] == 0f && npc.localAI[2] % 30f == 0f && npc.localAI[2] > 30f)
                                        {
                                            float num1290 = 5f;
                                            Vector2 vector152 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f + 30f);
                                            if (!WorldGen.SolidTile((int)vector152.X / 16, (int)vector152.Y / 16))
                                            {
                                                float num1291 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector152.X;
                                                float num1292 = Main.player[npc.target].position.Y - vector152.Y;
                                                num1291 += (float)Main.rand.Next(-50, 51);
                                                num1292 += (float)Main.rand.Next(50, 201);
                                                num1292 *= 0.2f;
                                                float num1293 = (float)Math.Sqrt((double)(num1291 * num1291 + num1292 * num1292));
                                                num1293 = num1290 / num1293;
                                                num1291 *= num1293;
                                                num1292 *= num1293;
                                                num1291 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
                                                num1292 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
                                                Projectile.NewProjectile(vector152.X, vector152.Y, num1291, num1292, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                        }
                                    }
                                    if (npc.ai[0] == 0f && Main.netMode != 1)
                                    {
                                        npc.TargetClosest(true);
                                        npc.ai[0] = 1f;
                                        int num1294 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 328, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                        Main.npc[num1294].ai[0] = -1f;
                                        Main.npc[num1294].ai[1] = (float)npc.whoAmI;
                                        Main.npc[num1294].target = npc.target;
                                        Main.npc[num1294].netUpdate = true;
                                        num1294 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)npc.position.Y + npc.height / 2, 328, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                        Main.npc[num1294].ai[0] = 1f;
                                        Main.npc[num1294].ai[1] = (float)npc.whoAmI;
                                        Main.npc[num1294].ai[3] = 150f;
                                        Main.npc[num1294].target = npc.target;
                                        Main.npc[num1294].netUpdate = true;
                                    }
                                    if (Main.player[npc.target].dead || Math.Abs(npc.position.X - Main.player[npc.target].position.X) > 2000f || Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                                    {
                                        npc.TargetClosest(true);
                                        if (Main.player[npc.target].dead || Math.Abs(npc.position.X - Main.player[npc.target].position.X) > 2000f || Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                                        {
                                            npc.ai[1] = 2f;
                                        }
                                    }
                                    if (Main.dayTime)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.3f;
                                        npc.velocity.X = npc.velocity.X * 0.9f;
                                    }
                                    else if (npc.ai[1] == 0f)
                                    {
                                        npc.ai[2] += 1f;
                                        if (npc.ai[2] >= 300f)
                                        {
                                            if (npc.ai[3] != 1f)
                                            {
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                            }
                                            else
                                            {
                                                npc.ai[2] = 0f;
                                                npc.ai[1] = 1f;
                                                npc.TargetClosest(true);
                                                npc.netUpdate = true;
                                            }
                                        }
                                        Vector2 vector153 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num1295 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector153.X;
                                        float num1296 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - 200f - vector153.Y;
                                        float num1297 = (float)Math.Sqrt((double)(num1295 * num1295 + num1296 * num1296));
                                        float num1298 = 6f;
                                        if (npc.ai[3] == 1f)
                                        {
                                            if (num1297 > 900f)
                                            {
                                                num1298 = 12f;
                                            }
                                            else if (num1297 > 600f)
                                            {
                                                num1298 = 10f;
                                            }
                                            else if (num1297 > 300f)
                                            {
                                                num1298 = 8f;
                                            }
                                        }
                                        if (num1297 > 50f)
                                        {
                                            num1297 = num1298 / num1297;
                                            npc.velocity.X = (npc.velocity.X * 14f + num1295 * num1297) / 15f;
                                            npc.velocity.Y = (npc.velocity.Y * 14f + num1296 * num1297) / 15f;
                                        }
                                    }
                                    else if (npc.ai[1] == 1f)
                                    {
                                        npc.ai[2] += 1f;
                                        if (npc.ai[2] >= 600f || npc.ai[3] != 1f)
                                        {
                                            npc.ai[2] = 0f;
                                            npc.ai[1] = 0f;
                                        }
                                        Vector2 vector154 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num1299 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector154.X;
                                        float num1300 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector154.Y;
                                        float num1301 = (float)Math.Sqrt((double)(num1299 * num1299 + num1300 * num1300));
                                        num1301 = 16f / num1301;
                                        npc.velocity.X = (npc.velocity.X * 49f + num1299 * num1301) / 50f;
                                        npc.velocity.Y = (npc.velocity.Y * 49f + num1300 * num1301) / 50f;
                                    }
                                    else if (npc.ai[1] == 2f)
                                    {
                                        npc.ai[1] = 3f;
                                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                                        if (npc.velocity.Y < 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y * 0.95f;
                                        }
                                        npc.velocity.X = npc.velocity.X * 0.95f;
                                        if (npc.timeLeft > 500)
                                        {
                                            npc.timeLeft = 500;
                                        }
                                    }
                                    npc.rotation = npc.velocity.X * -0.02f;
                                    return;
                                }
                                if (npc.aiStyle == 59)
                                {
                                    npc.spriteDirection = -(int)npc.ai[0];
                                    if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != 58)
                                    {
                                        npc.ai[2] += 10f;
                                        if (npc.ai[2] > 50f || Main.netMode != 2)
                                        {
                                            npc.life = -1;
                                            npc.HitEffect(0, 10.0);
                                            npc.active = false;
                                        }
                                    }
                                    if (Main.netMode != 1 && Main.npc[(int)npc.ai[1]].ai[3] == 2f)
                                    {
                                        npc.localAI[1] += 1f;
                                        if (npc.localAI[1] > 90f)
                                        {
                                            npc.localAI[1] = 0f;
                                            float num1302 = 0.01f;
                                            Vector2 vector155 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f + 30f);
                                            float num1303 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector155.X;
                                            float num1304 = Main.player[npc.target].position.Y - vector155.Y;
                                            float num1305 = (float)Math.Sqrt((double)(num1303 * num1303 + num1304 * num1304));
                                            num1305 = num1302 / num1305;
                                            num1303 *= num1305;
                                            num1304 *= num1305;
                                            Projectile.NewProjectile(npc.Center.X, npc.Center.Y, num1303, num1304, 329, 60, 0f, Main.myPlayer, npc.rotation, (float)npc.spriteDirection);
                                        }
                                    }
                                    if (Main.dayTime)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.3f;
                                        npc.velocity.X = npc.velocity.X * 0.9f;
                                        return;
                                    }
                                    if (npc.ai[2] == 0f || npc.ai[2] == 3f)
                                    {
                                        if (Main.npc[(int)npc.ai[1]].ai[1] == 3f && npc.timeLeft > 10)
                                        {
                                            npc.timeLeft = 10;
                                        }
                                        npc.ai[3] += 1f;
                                        if (npc.ai[3] >= 180f)
                                        {
                                            npc.ai[2] += 1f;
                                            npc.ai[3] = 0f;
                                            npc.netUpdate = true;
                                        }
                                        Vector2 vector156 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num1306 = (Main.player[npc.target].Center.X + Main.npc[(int)npc.ai[1]].Center.X) / 2f;
                                        float num1307 = (Main.player[npc.target].Center.Y + Main.npc[(int)npc.ai[1]].Center.Y) / 2f;
                                        num1306 += -170f * npc.ai[0] - vector156.X;
                                        num1307 += 90f - vector156.Y;
                                        float num1308 = Math.Abs(Main.player[npc.target].Center.X - Main.npc[(int)npc.ai[1]].Center.X) + Math.Abs(Main.player[npc.target].Center.Y - Main.npc[(int)npc.ai[1]].Center.Y);
                                        if (num1308 > 700f)
                                        {
                                            num1306 = Main.npc[(int)npc.ai[1]].Center.X - 170f * npc.ai[0] - vector156.X;
                                            num1307 = Main.npc[(int)npc.ai[1]].Center.Y + 90f - vector156.Y;
                                        }
                                        float num1309 = (float)Math.Sqrt((double)(num1306 * num1306 + num1307 * num1307));
                                        float num1310 = 6f;
                                        if (num1309 > 1000f)
                                        {
                                            num1310 = 21f;
                                        }
                                        else if (num1309 > 800f)
                                        {
                                            num1310 = 18f;
                                        }
                                        else if (num1309 > 600f)
                                        {
                                            num1310 = 15f;
                                        }
                                        else if (num1309 > 400f)
                                        {
                                            num1310 = 12f;
                                        }
                                        else if (num1309 > 200f)
                                        {
                                            num1310 = 9f;
                                        }
                                        if (npc.ai[0] < 0f && npc.Center.X > Main.npc[(int)npc.ai[1]].Center.X)
                                        {
                                            num1306 -= 4f;
                                        }
                                        if (npc.ai[0] > 0f && npc.Center.X < Main.npc[(int)npc.ai[1]].Center.X)
                                        {
                                            num1306 += 4f;
                                        }
                                        num1309 = num1310 / num1309;
                                        npc.velocity.X = (npc.velocity.X * 14f + num1306 * num1309) / 15f;
                                        npc.velocity.Y = (npc.velocity.Y * 14f + num1307 * num1309) / 15f;
                                        num1309 = (float)Math.Sqrt((double)(num1306 * num1306 + num1307 * num1307));
                                        if (num1309 > 20f)
                                        {
                                            npc.rotation = (float)Math.Atan2((double)num1307, (double)num1306) + 1.57f;
                                            return;
                                        }
                                    }
                                    else if (npc.ai[2] == 1f)
                                    {
                                        Vector2 vector157 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num1311 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector157.X;
                                        float num1312 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector157.Y;
                                        float num1313 = (float)Math.Sqrt((double)(num1311 * num1311 + num1312 * num1312));
                                        npc.rotation = (float)Math.Atan2((double)num1312, (double)num1311) + 1.57f;
                                        npc.velocity.X = npc.velocity.X * 0.95f;
                                        npc.velocity.Y = npc.velocity.Y - 0.3f;
                                        if (npc.velocity.Y < -14f)
                                        {
                                            npc.velocity.Y = -14f;
                                        }
                                        if (npc.position.Y < Main.npc[(int)npc.ai[1]].position.Y - 200f)
                                        {
                                            npc.TargetClosest(true);
                                            npc.ai[2] = 2f;
                                            vector157 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                            num1311 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector157.X;
                                            num1312 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector157.Y;
                                            num1313 = (float)Math.Sqrt((double)(num1311 * num1311 + num1312 * num1312));
                                            num1313 = 18f / num1313;
                                            npc.velocity.X = num1311 * num1313;
                                            npc.velocity.Y = num1312 * num1313;
                                            npc.netUpdate = true;
                                            return;
                                        }
                                    }
                                    else if (npc.ai[2] == 2f)
                                    {
                                        float num1314 = Math.Abs(npc.Center.X - Main.npc[(int)npc.ai[1]].Center.X) + Math.Abs(npc.Center.Y - Main.npc[(int)npc.ai[1]].Center.Y);
                                        if (npc.position.Y > Main.player[npc.target].position.Y || npc.velocity.Y < 0f || num1314 > 800f)
                                        {
                                            npc.ai[2] = 3f;
                                            return;
                                        }
                                    }
                                    else if (npc.ai[2] == 4f)
                                    {
                                        Vector2 vector158 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                        float num1315 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 200f * npc.ai[0] - vector158.X;
                                        float num1316 = Main.npc[(int)npc.ai[1]].position.Y + 230f - vector158.Y;
                                        float num1317 = (float)Math.Sqrt((double)(num1315 * num1315 + num1316 * num1316));
                                        npc.rotation = (float)Math.Atan2((double)num1316, (double)num1315) + 1.57f;
                                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                                        npc.velocity.X = npc.velocity.X + 0.3f * -npc.ai[0];
                                        if (npc.velocity.X < -14f)
                                        {
                                            npc.velocity.X = -14f;
                                        }
                                        if (npc.velocity.X > 14f)
                                        {
                                            npc.velocity.X = 14f;
                                        }
                                        if (npc.position.X + (float)(npc.width / 2) < Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - 500f || npc.position.X + (float)(npc.width / 2) > Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) + 500f)
                                        {
                                            npc.TargetClosest(true);
                                            npc.ai[2] = 5f;
                                            vector158 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                                            num1315 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) - vector158.X;
                                            num1316 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2) - vector158.Y;
                                            num1317 = (float)Math.Sqrt((double)(num1315 * num1315 + num1316 * num1316));
                                            num1317 = 17f / num1317;
                                            npc.velocity.X = num1315 * num1317;
                                            npc.velocity.Y = num1316 * num1317;
                                            npc.netUpdate = true;
                                            return;
                                        }
                                    }
                                    else if (npc.ai[2] == 5f)
                                    {
                                        float num1318 = Math.Abs(npc.Center.X - Main.npc[(int)npc.ai[1]].Center.X) + Math.Abs(npc.Center.Y - Main.npc[(int)npc.ai[1]].Center.Y);
                                        if ((npc.velocity.X > 0f && npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2)) || (npc.velocity.X < 0f && npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2)) || num1318 > 800f)
                                        {
                                            npc.ai[2] = 0f;
                                            return;
                                        }
                                    }
                                }
                                else if (npc.aiStyle == 60)
                                {
                                    if (Main.dayTime)
                                    {
                                        if (npc.velocity.X > 0f)
                                        {
                                            npc.velocity.X = npc.velocity.X + 0.25f;
                                        }
                                        else
                                        {
                                            npc.velocity.X = npc.velocity.X - 0.25f;
                                        }
                                        npc.velocity.Y = npc.velocity.Y - 0.1f;
                                        npc.rotation = npc.velocity.X * 0.05f;
                                    }
                                    else if (npc.ai[0] == 0f)
                                    {
                                        if (npc.ai[2] == 0f)
                                        {
                                            npc.TargetClosest(true);
                                            if (npc.Center.X < Main.player[npc.target].Center.X)
                                            {
                                                npc.ai[2] = 1f;
                                            }
                                            else
                                            {
                                                npc.ai[2] = -1f;
                                            }
                                        }
                                        npc.TargetClosest(true);
                                        int num1319 = 800;
                                        float num1320 = Math.Abs(npc.Center.X - Main.player[npc.target].Center.X);
                                        if (npc.Center.X < Main.player[npc.target].Center.X && npc.ai[2] < 0f && num1320 > (float)num1319)
                                        {
                                            npc.ai[2] = 0f;
                                        }
                                        if (npc.Center.X > Main.player[npc.target].Center.X && npc.ai[2] > 0f && num1320 > (float)num1319)
                                        {
                                            npc.ai[2] = 0f;
                                        }
                                        float num1321 = 0.45f;
                                        float num1322 = 7f;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            num1321 = 0.55f;
                                            num1322 = 8f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            num1321 = 0.7f;
                                            num1322 = 10f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            num1321 = 0.8f;
                                            num1322 = 11f;
                                        }
                                        npc.velocity.X = npc.velocity.X + npc.ai[2] * num1321;
                                        if (npc.velocity.X > num1322)
                                        {
                                            npc.velocity.X = num1322;
                                        }
                                        if (npc.velocity.X < -num1322)
                                        {
                                            npc.velocity.X = -num1322;
                                        }
                                        float num1323 = Main.player[npc.target].position.Y - (npc.position.Y + (float)npc.height);
                                        if (num1323 < 150f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.2f;
                                        }
                                        if (num1323 > 200f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y + 0.2f;
                                        }
                                        if (npc.velocity.Y > 8f)
                                        {
                                            npc.velocity.Y = 8f;
                                        }
                                        if (npc.velocity.Y < -8f)
                                        {
                                            npc.velocity.Y = -8f;
                                        }
                                        npc.rotation = npc.velocity.X * 0.05f;
                                        if ((num1320 < 500f || npc.ai[3] < 0f) && npc.position.Y < Main.player[npc.target].position.Y)
                                        {
                                            npc.ai[3] += 1f;
                                            int num1324 = 13;
                                            if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                            {
                                                num1324 = 12;
                                            }
                                            if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                            {
                                                num1324 = 11;
                                            }
                                            if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                            {
                                                num1324 = 10;
                                            }
                                            num1324++;
                                            if (npc.ai[3] > (float)num1324)
                                            {
                                                npc.ai[3] = (float)(-(float)num1324);
                                            }
                                            if (npc.ai[3] == 0f && Main.netMode != 1)
                                            {
                                                Vector2 vector159 = new Vector2(npc.Center.X, npc.Center.Y);
                                                vector159.X += npc.velocity.X * 7f;
                                                float num1325 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector159.X;
                                                float num1326 = Main.player[npc.target].Center.Y - vector159.Y;
                                                float num1327 = (float)Math.Sqrt((double)(num1325 * num1325 + num1326 * num1326));
                                                float num1328 = 6f;
                                                if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                                {
                                                    num1328 = 7f;
                                                }
                                                if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                                {
                                                    num1328 = 8f;
                                                }
                                                if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                                {
                                                    num1328 = 9f;
                                                }
                                                num1327 = num1328 / num1327;
                                                num1325 *= num1327;
                                                num1326 *= num1327;
                                                Projectile.NewProjectile(vector159.X, vector159.Y, num1325, num1326, 348, 42, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                        }
                                        else if (npc.ai[3] < 0f)
                                        {
                                            npc.ai[3] += 1f;
                                        }
                                        if (Main.netMode != 1)
                                        {
                                            npc.ai[1] += (float)Main.rand.Next(1, 4);
                                            if (npc.ai[1] > 800f && num1320 < 600f)
                                            {
                                                npc.ai[0] = -1f;
                                            }
                                        }
                                    }
                                    else if (npc.ai[0] == 1f)
                                    {
                                        npc.TargetClosest(true);
                                        float num1329 = 0.15f;
                                        float num1330 = 7f;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            num1329 = 0.17f;
                                            num1330 = 8f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            num1329 = 0.2f;
                                            num1330 = 9f;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            num1329 = 0.25f;
                                            num1330 = 10f;
                                        }
                                        num1329 -= 0.05f;
                                        num1330 -= 1f;
                                        if (npc.Center.X < Main.player[npc.target].Center.X)
                                        {
                                            npc.velocity.X = npc.velocity.X + num1329;
                                            if (npc.velocity.X < 0f)
                                            {
                                                npc.velocity.X = npc.velocity.X * 0.98f;
                                            }
                                        }
                                        if (npc.Center.X > Main.player[npc.target].Center.X)
                                        {
                                            npc.velocity.X = npc.velocity.X - num1329;
                                            if (npc.velocity.X > 0f)
                                            {
                                                npc.velocity.X = npc.velocity.X * 0.98f;
                                            }
                                        }
                                        if (npc.velocity.X > num1330 || npc.velocity.X < -num1330)
                                        {
                                            npc.velocity.X = npc.velocity.X * 0.95f;
                                        }
                                        float num1331 = Main.player[npc.target].position.Y - (npc.position.Y + (float)npc.height);
                                        if (num1331 < 180f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.1f;
                                        }
                                        if (num1331 > 200f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y + 0.1f;
                                        }
                                        if (npc.velocity.Y > 6f)
                                        {
                                            npc.velocity.Y = 6f;
                                        }
                                        if (npc.velocity.Y < -6f)
                                        {
                                            npc.velocity.Y = -6f;
                                        }
                                        npc.rotation = npc.velocity.X * 0.01f;
                                        if (Main.netMode != 1)
                                        {
                                            npc.ai[3] += 1f;
                                            int num1332 = 15;
                                            if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                            {
                                                num1332 = 14;
                                            }
                                            if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                            {
                                                num1332 = 12;
                                            }
                                            if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                            {
                                                num1332 = 10;
                                            }
                                            if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                            {
                                                num1332 = 8;
                                            }
                                            num1332 += 3;
                                            if (npc.ai[3] >= (float)num1332)
                                            {
                                                npc.ai[3] = 0f;
                                                Vector2 vector160 = new Vector2(npc.Center.X, npc.position.Y + (float)npc.height - 14f);
                                                int i2 = (int)(vector160.X / 16f);
                                                int j2 = (int)(vector160.Y / 16f);
                                                if (!WorldGen.SolidTile(i2, j2))
                                                {
                                                    float num1333 = npc.velocity.Y;
                                                    if (num1333 < 0f)
                                                    {
                                                        num1333 = 0f;
                                                    }
                                                    num1333 += 3f;
                                                    float speedX2 = npc.velocity.X * 0.25f;
                                                    Projectile.NewProjectile(vector160.X, vector160.Y, speedX2, num1333, 349, 37, 0f, Main.myPlayer, (float)Main.rand.Next(5), 0f);
                                                }
                                            }
                                        }
                                        if (Main.netMode != 1)
                                        {
                                            npc.ai[1] += (float)Main.rand.Next(1, 4);
                                            if (npc.ai[1] > 600f)
                                            {
                                                npc.ai[0] = -1f;
                                            }
                                        }
                                    }
                                    else if (npc.ai[0] == 2f)
                                    {
                                        npc.TargetClosest(true);
                                        Vector2 vector161 = new Vector2(npc.Center.X, npc.Center.Y - 20f);
                                        float num1334 = (float)Main.rand.Next(-1000, 1001);
                                        float num1335 = (float)Main.rand.Next(-1000, 1001);
                                        float num1336 = (float)Math.Sqrt((double)(num1334 * num1334 + num1335 * num1335));
                                        float num1337 = 15f;
                                        npc.velocity *= 0.95f;
                                        num1336 = num1337 / num1336;
                                        num1334 *= num1336;
                                        num1335 *= num1336;
                                        npc.rotation += 0.2f;
                                        vector161.X += num1334 * 4f;
                                        vector161.Y += num1335 * 4f;
                                        npc.ai[3] += 1f;
                                        int num1338 = 7;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            num1338--;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            num1338 -= 2;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            num1338 -= 3;
                                        }
                                        if ((double)npc.life < (double)npc.lifeMax * 0.1)
                                        {
                                            num1338 -= 4;
                                        }
                                        if (npc.ai[3] > (float)num1338)
                                        {
                                            npc.ai[3] = 0f;
                                            Projectile.NewProjectile(vector161.X, vector161.Y, num1334, num1335, 349, 35, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                        if (Main.netMode != 1)
                                        {
                                            npc.ai[1] += (float)Main.rand.Next(1, 4);
                                            if (npc.ai[1] > 500f)
                                            {
                                                npc.ai[0] = -1f;
                                            }
                                        }
                                    }
                                    if (npc.ai[0] == -1f)
                                    {
                                        int num1339 = Main.rand.Next(3);
                                        npc.TargetClosest(true);
                                        if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) > 1000f)
                                        {
                                            num1339 = 0;
                                        }
                                        npc.ai[0] = (float)num1339;
                                        npc.ai[1] = 0f;
                                        npc.ai[2] = 0f;
                                        npc.ai[3] = 0f;
                                        return;
                                    }
                                }
                                else if (npc.aiStyle == 61)
                                {
                                    float num1340 = 2f;
                                    npc.noGravity = true;
                                    npc.noTileCollide = true;
                                    if (!Main.dayTime)
                                    {
                                        npc.TargetClosest(true);
                                    }
                                    bool flag118 = false;
                                    if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                    {
                                        num1340 = 3f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                    {
                                        num1340 = 4f;
                                    }
                                    if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                    {
                                        num1340 = 5f;
                                    }
                                    if (Main.dayTime)
                                    {
                                        if (npc.timeLeft > 10)
                                        {
                                            npc.timeLeft = 10;
                                        }
                                        num1340 = 8f;
                                        if (npc.velocity.X == 0f)
                                        {
                                            npc.velocity.X = 0.1f;
                                        }
                                    }
                                    else if (npc.ai[0] == 0f)
                                    {
                                        npc.ai[1] += 1f;
                                        if (npc.ai[1] >= 300f && Main.netMode != 1)
                                        {
                                            npc.TargetClosest(true);
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 1f;
                                            npc.netUpdate = true;
                                        }
                                    }
                                    else if (npc.ai[0] == 1f)
                                    {
                                        npc.ai[1] += 1f;
                                        flag118 = true;
                                        int num1341 = 16;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            num1341 = 8;
                                        }
                                        else if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            num1341 = 11;
                                        }
                                        else if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            num1341 = 14;
                                        }
                                        if (npc.ai[1] % (float)num1341 == 0f)
                                        {
                                            Vector2 vector162 = new Vector2(npc.Center.X + (float)(npc.direction * 50), npc.Center.Y + (float)Main.rand.Next(15, 36));
                                            float num1342 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector162.X;
                                            float num1343 = Main.player[npc.target].Center.Y - vector162.Y;
                                            num1342 += (float)Main.rand.Next(-40, 41);
                                            num1343 += (float)Main.rand.Next(-40, 41);
                                            float num1344 = (float)Math.Sqrt((double)(num1342 * num1342 + num1343 * num1343));
                                            float num1345 = 15f;
                                            num1344 = num1345 / num1344;
                                            num1342 *= num1344;
                                            num1343 *= num1344;
                                            num1342 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
                                            num1343 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
                                            Projectile.NewProjectile(vector162.X, vector162.Y, num1342, num1343, 180, 36, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                        if (npc.ai[1] > 240f)
                                        {
                                            npc.ai[0] = 0f;
                                            npc.ai[1] = 0f;
                                        }
                                    }
                                    if (Main.netMode != 1)
                                    {
                                        int num1346 = 600;
                                        int num1347 = 1200;
                                        int num1348 = 2700;
                                        if ((double)npc.life < (double)npc.lifeMax * 0.25)
                                        {
                                            num1346 = (int)((double)num1346 * 0.5);
                                            num1347 = (int)((double)num1347 * 0.5);
                                            num1348 = (int)((double)num1348 * 0.5);
                                        }
                                        else if ((double)npc.life < (double)npc.lifeMax * 0.5)
                                        {
                                            num1346 = (int)((double)num1346 * 0.75);
                                            num1347 = (int)((double)num1347 * 0.75);
                                            num1348 = (int)((double)num1348 * 0.75);
                                        }
                                        else if ((double)npc.life < (double)npc.lifeMax * 0.75)
                                        {
                                            num1346 = (int)((double)num1346 * 0.9);
                                            num1347 = (int)((double)num1347 * 0.9);
                                            num1348 = (int)((double)num1348 * 0.9);
                                        }
                                        if (Main.rand.Next(num1346) == 0)
                                        {
                                            Vector2 vector163 = new Vector2(npc.Center.X - (float)(npc.direction * 24), npc.Center.Y - 64f);
                                            float num1349 = (float)(Main.rand.Next(1, 100) * npc.direction);
                                            float num1350 = 1f;
                                            float num1351 = (float)Math.Sqrt((double)(num1349 * num1349 + num1350 * num1350));
                                            float num1352 = 1f;
                                            num1351 = num1352 / num1351;
                                            num1349 *= num1351;
                                            num1350 *= num1351;
                                            Projectile.NewProjectile(vector163.X, vector163.Y, num1349, num1350, 352, 80, 0f, Main.myPlayer, 0f, 0f);
                                        }
                                        if (Main.rand.Next(num1347) == 0)
                                        {
                                            npc.localAI[1] = 1f;
                                        }
                                        if (npc.localAI[1] >= 1f)
                                        {
                                            npc.localAI[1] += 1f;
                                            int num1353 = 12;
                                            if (npc.localAI[1] % (float)num1353 == 0f)
                                            {
                                                Vector2 vector164 = new Vector2(npc.Center.X - (float)(npc.direction * 24), npc.Center.Y - 64f);
                                                float num1354 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector164.X;
                                                float num1355 = Main.player[npc.target].Center.Y - vector164.Y;
                                                num1354 += (float)Main.rand.Next(-50, 51);
                                                num1355 += (float)Main.rand.Next(-50, 51);
                                                float num1356 = (float)Math.Sqrt((double)(num1354 * num1354 + num1355 * num1355));
                                                float num1357 = 12.5f;
                                                num1356 = num1357 / num1356;
                                                num1354 *= num1356;
                                                num1355 *= num1356;
                                                num1354 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
                                                num1355 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
                                                Projectile.NewProjectile(vector164.X, vector164.Y, num1354, num1355, 350, 42, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                            if (npc.localAI[1] >= 100f)
                                            {
                                                npc.localAI[1] = 0f;
                                            }
                                        }
                                        if (Main.rand.Next(num1348) == 0)
                                        {
                                            npc.localAI[2] = 2f;
                                        }
                                        if (npc.localAI[2] > 0f)
                                        {
                                            npc.localAI[2] += 1f;
                                            int num1358 = 9;
                                            if (npc.localAI[2] % (float)num1358 == 0f)
                                            {
                                                Vector2 vector165 = new Vector2(npc.Center.X - (float)(npc.direction * 24), npc.Center.Y - 64f);
                                                float num1359 = (float)Main.rand.Next(-100, 101);
                                                float num1360 = -300f;
                                                float num1361 = (float)Math.Sqrt((double)(num1359 * num1359 + num1360 * num1360));
                                                float num1362 = 11f;
                                                num1361 = num1362 / num1361;
                                                num1359 *= num1361;
                                                num1360 *= num1361;
                                                num1359 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
                                                num1360 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
                                                Projectile.NewProjectile(vector165.X, vector165.Y, num1359, num1360, 351, 50, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                            if (npc.localAI[2] >= 100f)
                                            {
                                                npc.localAI[2] = 0f;
                                            }
                                        }
                                    }
                                    if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) < 50f)
                                    {
                                        flag118 = true;
                                    }
                                    if (flag118)
                                    {
                                        npc.velocity.X = npc.velocity.X * 0.9f;
                                        if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                        {
                                            npc.velocity.X = 0f;
                                        }
                                    }
                                    else
                                    {
                                        if (npc.direction > 0)
                                        {
                                            npc.velocity.X = (npc.velocity.X * 20f + num1340) / 21f;
                                        }
                                        if (npc.direction < 0)
                                        {
                                            npc.velocity.X = (npc.velocity.X * 20f - num1340) / 21f;
                                        }
                                    }
                                    int num1363 = 80;
                                    int num1364 = 20;
                                    Vector2 position8 = new Vector2(npc.Center.X - (float)(num1363 / 2), npc.position.Y + (float)npc.height - (float)num1364);
                                    bool flag119 = false;
                                    if (npc.position.X < Main.player[npc.target].position.X && npc.position.X + (float)npc.width > Main.player[npc.target].position.X + (float)Main.player[npc.target].width && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y + (float)Main.player[npc.target].height - 16f)
                                    {
                                        flag119 = true;
                                    }
                                    if (flag119)
                                    {
                                        npc.velocity.Y = npc.velocity.Y + 0.5f;
                                    }
                                    else if (Collision.SolidCollision(position8, num1363, num1364))
                                    {
                                        if (npc.velocity.Y > 0f)
                                        {
                                            npc.velocity.Y = 0f;
                                        }
                                        if ((double)npc.velocity.Y > -0.2)
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.025f;
                                        }
                                        else
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.2f;
                                        }
                                        if (npc.velocity.Y < -4f)
                                        {
                                            npc.velocity.Y = -4f;
                                        }
                                    }
                                    else
                                    {
                                        if (npc.velocity.Y < 0f)
                                        {
                                            npc.velocity.Y = 0f;
                                        }
                                        if ((double)npc.velocity.Y < 0.1)
                                        {
                                            npc.velocity.Y = npc.velocity.Y + 0.025f;
                                        }
                                        else
                                        {
                                            npc.velocity.Y = npc.velocity.Y + 0.5f;
                                        }
                                    }
                                    if (npc.velocity.Y > 10f)
                                    {
                                        npc.velocity.Y = 10f;
                                        return;
                                    }
                                }
                                else if (npc.aiStyle == 62)
                                {
                                    npc.TargetClosest(true);
                                    npc.rotation = Math.Abs(npc.velocity.X) * (float)npc.direction * 0.1f;
                                    npc.spriteDirection = npc.direction;
                                    float num1365 = 7f;
                                    Vector2 vector166 = new Vector2(npc.Center.X + (float)(npc.direction * 20), npc.Center.Y + 6f);
                                    float num1366 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector166.X;
                                    float num1367 = Main.player[npc.target].position.Y - vector166.Y;
                                    float num1368 = (float)Math.Sqrt((double)(num1366 * num1366 + num1367 * num1367));
                                    float num1369 = num1365 / num1368;
                                    num1366 *= num1369;
                                    num1367 *= num1369;
                                    bool flag120 = Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1);
                                    if (Main.dayTime)
                                    {
                                        int num1370 = 60;
                                        npc.velocity.X = (npc.velocity.X * (float)(num1370 - 1) - num1366) / (float)num1370;
                                        npc.velocity.Y = (npc.velocity.Y * (float)(num1370 - 1) - num1367) / (float)num1370;
                                        if (npc.timeLeft > 10)
                                        {
                                            npc.timeLeft = 10;
                                            return;
                                        }
                                    }
                                    else
                                    {
                                        if (num1368 > 600f || !flag120)
                                        {
                                            int num1371 = 60;
                                            npc.velocity.X = (npc.velocity.X * (float)(num1371 - 1) + num1366) / (float)num1371;
                                            npc.velocity.Y = (npc.velocity.Y * (float)(num1371 - 1) + num1367) / (float)num1371;
                                            return;
                                        }
                                        npc.velocity *= 0.98f;
                                        if (Math.Abs(npc.velocity.X) < 1f && Math.Abs(npc.velocity.Y) < 1f && Main.netMode != 1)
                                        {
                                            npc.localAI[0] += 1f;
                                            if (npc.localAI[0] >= 15f)
                                            {
                                                npc.localAI[0] = 0f;
                                                num1366 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector166.X;
                                                num1367 = Main.player[npc.target].Center.Y - vector166.Y;
                                                num1366 += (float)Main.rand.Next(-35, 36);
                                                num1367 += (float)Main.rand.Next(-35, 36);
                                                num1366 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
                                                num1367 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
                                                num1368 = (float)Math.Sqrt((double)(num1366 * num1366 + num1367 * num1367));
                                                num1365 = 10f;
                                                num1369 = num1365 / num1368;
                                                num1366 *= num1369;
                                                num1367 *= num1369;
                                                num1366 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
                                                num1367 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
                                                Projectile.NewProjectile(vector166.X, vector166.Y, num1366, num1367, 180, 32, 0f, Main.myPlayer, 0f, 0f);
                                                return;
                                            }
                                        }
                                    }
                                }
                                else if (npc.aiStyle == 63)
                                {
                                    npc.TargetClosest(true);
                                    float num1372 = 11f;
                                    Vector2 vector167 = new Vector2(npc.Center.X + (float)(npc.direction * 20), npc.Center.Y + 6f);
                                    float num1373 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector167.X;
                                    float num1374 = Main.player[npc.target].Center.Y - vector167.Y;
                                    float num1375 = (float)Math.Sqrt((double)(num1373 * num1373 + num1374 * num1374));
                                    float num1376 = num1372 / num1375;
                                    num1373 *= num1376;
                                    num1374 *= num1376;
                                    if (Main.dayTime)
                                    {
                                        num1373 = -num1373;
                                        num1374 = -num1374;
                                    }
                                    npc.ai[0] -= 1f;
                                    if (num1375 < 200f || npc.ai[0] > 0f)
                                    {
                                        if (num1375 < 200f)
                                        {
                                            npc.ai[0] = 20f;
                                        }
                                        if (npc.velocity.X < 0f)
                                        {
                                            npc.direction = -1;
                                        }
                                        else
                                        {
                                            npc.direction = 1;
                                        }
                                        npc.rotation += (float)npc.direction * 0.3f;
                                        return;
                                    }
                                    npc.velocity.X = (npc.velocity.X * 50f + num1373) / 51f;
                                    npc.velocity.Y = (npc.velocity.Y * 50f + num1374) / 51f;
                                    if (num1375 < 350f)
                                    {
                                        npc.velocity.X = (npc.velocity.X * 10f + num1373) / 11f;
                                        npc.velocity.Y = (npc.velocity.Y * 10f + num1374) / 11f;
                                    }
                                    if (num1375 < 300f)
                                    {
                                        npc.velocity.X = (npc.velocity.X * 7f + num1373) / 8f;
                                        npc.velocity.Y = (npc.velocity.Y * 7f + num1374) / 8f;
                                    }
                                    npc.rotation = npc.velocity.X * 0.15f;
                                    return;
                                }
                                else
                                {
                                    if (npc.aiStyle == 64)
                                    {
                                        float num1377 = npc.ai[0];
                                        float num1378 = npc.ai[1];
                                        if (Main.netMode != 1)
                                        {
                                            npc.localAI[0] -= 1f;
                                            if (npc.ai[3] == 0f)
                                            {
                                                npc.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
                                            }
                                            if (npc.localAI[0] <= 0f)
                                            {
                                                npc.TargetClosest(true);
                                                npc.localAI[0] = (float)Main.rand.Next(60, 180);
                                                float num1379 = Math.Abs(npc.Center.X - Main.player[npc.target].Center.X);
                                                if (num1379 > 700f && npc.localAI[3] == 0f)
                                                {
                                                    float num1380 = (float)Main.rand.Next(50, 151) * 0.01f;
                                                    if (num1379 > 1000f)
                                                    {
                                                        num1380 = (float)Main.rand.Next(150, 201) * 0.01f;
                                                    }
                                                    else if (num1379 > 850f)
                                                    {
                                                        num1380 = (float)Main.rand.Next(100, 151) * 0.01f;
                                                    }
                                                    int num1381 = npc.direction * Main.rand.Next(100, 251);
                                                    int num1382 = Main.rand.Next(-50, 51);
                                                    if (npc.position.Y > Main.player[npc.target].position.Y - 100f)
                                                    {
                                                        num1382 -= Main.rand.Next(100, 251);
                                                    }
                                                    float num1383 = num1380 / (float)Math.Sqrt((double)(num1381 * num1381 + num1382 * num1382));
                                                    num1377 = (float)num1381 * num1383;
                                                    num1378 = (float)num1382 * num1383;
                                                }
                                                else
                                                {
                                                    npc.localAI[3] = 1f;
                                                    float num1384 = (float)Main.rand.Next(5, 151) * 0.01f;
                                                    int num1385 = Main.rand.Next(-100, 101);
                                                    int num1386 = Main.rand.Next(-100, 101);
                                                    float num1387 = num1384 / (float)Math.Sqrt((double)(num1385 * num1385 + num1386 * num1386));
                                                    num1377 = (float)num1385 * num1387;
                                                    num1378 = (float)num1386 * num1387;
                                                }
                                                npc.netUpdate = true;
                                            }
                                        }
                                        npc.scale = npc.ai[3];
                                        if (npc.localAI[2] > 0f)
                                        {
                                            int i3 = (int)npc.Center.X / 16;
                                            int j3 = (int)npc.Center.Y / 16;
                                            npc.localAI[2] -= 1f;
                                        }
                                        else if (npc.localAI[1] > 0f)
                                        {
                                            npc.localAI[1] -= 1f;
                                        }
                                        else
                                        {
                                            npc.localAI[1] = (float)Main.rand.Next(30, 180);
                                            if (!Main.dayTime || (double)(npc.position.Y / 16f) > Main.worldSurface + 10.0)
                                            {
                                                npc.localAI[2] = (float)Main.rand.Next(10, 30);
                                            }
                                        }
                                        int num1388 = 80;
                                        npc.velocity.X = (npc.velocity.X * (float)(num1388 - 1) + num1377) / (float)num1388;
                                        npc.velocity.Y = (npc.velocity.Y * (float)(num1388 - 1) + num1378) / (float)num1388;
                                        if (npc.velocity.Y > 0f)
                                        {
                                            int num1389 = 4;
                                            int num1390 = (int)npc.Center.X / 16;
                                            int num1391 = (int)npc.Center.Y / 16;
                                            for (int num1392 = num1391; num1392 < num1391 + num1389; num1392++)
                                            {
                                                if (Main.tile[num1390, num1392] != null && ((Main.tile[num1390, num1392].nactive() && Main.tileSolid[(int)Main.tile[num1390, num1392].type]) || Main.tile[num1390, num1392].liquid > 0))
                                                {
                                                    num1378 *= -1f;
                                                    if (npc.velocity.Y > 0f)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                                                    }
                                                }
                                            }
                                        }
                                        if (npc.velocity.Y < 0f)
                                        {
                                            int num1393 = 30;
                                            bool flag121 = false;
                                            int num1394 = (int)npc.Center.X / 16;
                                            int num1395 = (int)npc.Center.Y / 16;
                                            for (int num1396 = num1395; num1396 < num1395 + num1393; num1396++)
                                            {
                                                if (Main.tile[num1394, num1396] != null && Main.tile[num1394, num1396].nactive() && Main.tileSolid[(int)Main.tile[num1394, num1396].type])
                                                {
                                                    flag121 = true;
                                                }
                                            }
                                            if (!flag121)
                                            {
                                                num1378 *= -1f;
                                                if (npc.velocity.Y < 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                                }
                                            }
                                        }
                                        if (npc.collideX)
                                        {
                                            if (npc.velocity.X < 0f)
                                            {
                                                num1377 = Math.Abs(num1377);
                                            }
                                            else
                                            {
                                                num1377 = -Math.Abs(num1377);
                                            }
                                            npc.velocity.X = npc.velocity.X * -0.2f;
                                        }
                                        if (npc.velocity.X < 0f)
                                        {
                                            npc.direction = -1;
                                        }
                                        if (npc.velocity.X > 0f)
                                        {
                                            npc.direction = 1;
                                        }
                                        npc.ai[0] = num1377;
                                        npc.ai[1] = num1378;
                                        return;
                                    }
                                    if (npc.aiStyle == 65)
                                    {
                                        float num1397 = npc.ai[0];
                                        float num1398 = npc.ai[1];
                                        if (Main.netMode != 1)
                                        {
                                            if (npc.ai[2] == 0f)
                                            {
                                                int num1399 = 0;
                                                int num1400 = 4;
                                                int num1401 = 6;
                                                int num1402 = 3;
                                                int num1403 = 7;
                                                int num1404 = 2;
                                                int num1405 = 1;
                                                int num1406 = 5;
                                                int num1407 = Main.rand.Next(100);
                                                if (num1407 == 0)
                                                {
                                                    num1407 = num1406;
                                                }
                                                else if (num1407 < 3)
                                                {
                                                    num1407 = num1405;
                                                }
                                                else if (num1407 < 9)
                                                {
                                                    num1407 = num1404;
                                                }
                                                else if (num1407 < 19)
                                                {
                                                    num1407 = num1403;
                                                }
                                                else if (num1407 < 34)
                                                {
                                                    num1407 = num1402;
                                                }
                                                else if (num1407 < 53)
                                                {
                                                    num1407 = num1401;
                                                }
                                                else if (num1407 < 75)
                                                {
                                                    num1407 = num1400;
                                                }
                                                else
                                                {
                                                    num1407 = num1399;
                                                }
                                                npc.ai[2] = (float)(1 + num1407);
                                            }
                                            if (npc.ai[3] == 0f)
                                            {
                                                npc.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
                                            }
                                            npc.localAI[0] -= 1f;
                                            if (npc.localAI[0] <= 0f)
                                            {
                                                npc.TargetClosest(true);
                                                npc.localAI[0] = (float)Main.rand.Next(90, 240);
                                                float num1408 = Math.Abs(npc.Center.X - Main.player[npc.target].Center.X);
                                                if (num1408 > 700f && npc.localAI[3] == 0f)
                                                {
                                                    float num1409 = (float)Main.rand.Next(50, 151) * 0.01f;
                                                    if (num1408 > 1000f)
                                                    {
                                                        num1409 = (float)Main.rand.Next(150, 201) * 0.01f;
                                                    }
                                                    else if (num1408 > 850f)
                                                    {
                                                        num1409 = (float)Main.rand.Next(100, 151) * 0.01f;
                                                    }
                                                    int num1410 = npc.direction * Main.rand.Next(100, 251);
                                                    int num1411 = Main.rand.Next(-50, 51);
                                                    if (npc.position.Y > Main.player[npc.target].position.Y - 100f)
                                                    {
                                                        num1411 -= Main.rand.Next(100, 251);
                                                    }
                                                    float num1412 = num1409 / (float)Math.Sqrt((double)(num1410 * num1410 + num1411 * num1411));
                                                    num1397 = (float)num1410 * num1412;
                                                    num1398 = (float)num1411 * num1412;
                                                }
                                                else
                                                {
                                                    npc.localAI[3] = 1f;
                                                    float num1413 = (float)Main.rand.Next(26, 301) * 0.01f;
                                                    int num1414 = Main.rand.Next(-100, 101);
                                                    int num1415 = Main.rand.Next(-100, 101);
                                                    float num1416 = num1413 / (float)Math.Sqrt((double)(num1414 * num1414 + num1415 * num1415));
                                                    num1397 = (float)num1414 * num1416;
                                                    num1398 = (float)num1415 * num1416;
                                                }
                                                npc.netUpdate = true;
                                            }
                                        }
                                        npc.scale = npc.ai[3];
                                        int num1417 = 60;
                                        npc.velocity.X = (npc.velocity.X * (float)(num1417 - 1) + num1397) / (float)num1417;
                                        npc.velocity.Y = (npc.velocity.Y * (float)(num1417 - 1) + num1398) / (float)num1417;
                                        if (npc.velocity.Y > 0f)
                                        {
                                            int num1418 = 3;
                                            int num1419 = (int)npc.Center.X / 16;
                                            int num1420 = (int)npc.Center.Y / 16;
                                            for (int num1421 = num1420; num1421 < num1420 + num1418; num1421++)
                                            {
                                                if (Main.tile[num1419, num1421] != null && ((Main.tile[num1419, num1421].nactive() && Main.tileSolid[(int)Main.tile[num1419, num1421].type]) || Main.tile[num1419, num1421].liquid > 0))
                                                {
                                                    num1398 *= -1f;
                                                    if (npc.velocity.Y > 0f)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                                                    }
                                                }
                                            }
                                        }
                                        if (npc.velocity.Y < 0f)
                                        {
                                            int num1422 = 30;
                                            bool flag122 = false;
                                            int num1423 = (int)npc.Center.X / 16;
                                            int num1424 = (int)npc.Center.Y / 16;
                                            for (int num1425 = num1424; num1425 < num1424 + num1422; num1425++)
                                            {
                                                if (Main.tile[num1423, num1425] != null && Main.tile[num1423, num1425].nactive() && Main.tileSolid[(int)Main.tile[num1423, num1425].type])
                                                {
                                                    flag122 = true;
                                                }
                                            }
                                            if (!flag122)
                                            {
                                                num1398 *= -1f;
                                                if (npc.velocity.Y < 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                                                }
                                            }
                                        }
                                        if (npc.collideX)
                                        {
                                            if (npc.velocity.X < 0f)
                                            {
                                                num1397 = Math.Abs(num1397);
                                            }
                                            else
                                            {
                                                num1397 = -Math.Abs(num1397);
                                            }
                                            npc.velocity.X = npc.velocity.X * -0.2f;
                                        }
                                        if (npc.velocity.X < 0f)
                                        {
                                            npc.direction = -1;
                                        }
                                        if (npc.velocity.X > 0f)
                                        {
                                            npc.direction = 1;
                                        }
                                        npc.ai[0] = num1397;
                                        npc.ai[1] = num1398;
                                        if (npc.type == 356)
                                        {
                                            npc.catchItem = (short)(1994f + npc.ai[2] - 1f);
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 66)
                                    {
                                        if (npc.type == 484)
                                        {
                                            float num1426 = (float)Main.rand.Next(90, 111) * 0.01f;
                                            num1426 *= (Main.essScale + 0.5f) / 2f;
                                        }
                                        if (npc.type == 357 || npc.type == 448 || (npc.type >= 484 && npc.type <= 487))
                                        {
                                            if (npc.localAI[2] < 90f)
                                            {
                                                npc.localAI[2] += 1f;
                                            }
                                            else
                                            {
                                                npc.friendly = false;
                                            }
                                        }
                                        if (npc.velocity.Y == 0f)
                                        {
                                            if (npc.ai[0] == 1f)
                                            {
                                                if (npc.direction == 0)
                                                {
                                                    npc.TargetClosest(true);
                                                }
                                                if (npc.collideX)
                                                {
                                                    npc.direction *= -1;
                                                }
                                                float num1427 = 0.2f;
                                                if (npc.type == 485)
                                                {
                                                    num1427 = 0.25f;
                                                }
                                                if (npc.type == 486)
                                                {
                                                    num1427 = 0.325f;
                                                }
                                                if (npc.type == 487)
                                                {
                                                    num1427 = 0.4f;
                                                }
                                                npc.velocity.X = num1427 * (float)npc.direction;
                                                if (npc.type == 374)
                                                {
                                                    npc.velocity.X = npc.velocity.X * 3f;
                                                }
                                            }
                                            else
                                            {
                                                npc.velocity.X = 0f;
                                            }
                                            if (Main.netMode != 1)
                                            {
                                                npc.localAI[1] -= 1f;
                                                if (npc.localAI[1] <= 0f)
                                                {
                                                    if (npc.ai[0] == 1f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.localAI[1] = (float)Main.rand.Next(300, 900);
                                                    }
                                                    else
                                                    {
                                                        npc.ai[0] = 1f;
                                                        npc.localAI[1] = (float)Main.rand.Next(600, 1800);
                                                    }
                                                    npc.netUpdate = true;
                                                }
                                            }
                                        }
                                        if (npc.type == 374)
                                        {
                                            npc.spriteDirection = npc.direction;
                                            bool flag123 = false;
                                            for (int num1428 = 0; num1428 < 255; num1428++)
                                            {
                                                Player player4 = Main.player[num1428];
                                                if (player4.active && !player4.dead && Vector2.Distance(player4.Center, npc.Center) <= 160f)
                                                {
                                                    flag123 = true;
                                                    break;
                                                }
                                            }
                                            int num1429 = 90;
                                            if (flag123 && npc.ai[1] < (float)num1429)
                                            {
                                                npc.ai[1] += 1f;
                                            }
                                            if (npc.ai[1] == (float)num1429 && Main.netMode != 1)
                                            {
                                                npc.position.Y = npc.position.Y + 16f;
                                                npc.Transform(375);
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 67)
                                    {
                                        if (npc.type == 359)
                                        {
                                            if (npc.ai[3] != 0f)
                                            {
                                                npc.scale = npc.ai[3];
                                                int num1430 = (int)(12f * npc.scale);
                                                int num1431 = (int)(12f * npc.scale);
                                                if (num1430 != npc.width)
                                                {
                                                    npc.position.X = npc.position.X + (float)(npc.width / 2) - (float)num1430 - 2f;
                                                    npc.width = num1430;
                                                }
                                                if (num1431 != npc.height)
                                                {
                                                    npc.position.Y = npc.position.Y + (float)npc.height - (float)num1431;
                                                    npc.height = num1431;
                                                }
                                            }
                                            if (npc.ai[3] == 0f && Main.netMode != 1)
                                            {
                                                npc.ai[3] = (float)Main.rand.Next(80, 111) * 0.01f;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        float num1432 = 0.3f;
                                        if (npc.type == 360)
                                        {
                                            num1432 = 0.6f;
                                        }
                                        if (npc.ai[0] == 0f)
                                        {
                                            npc.TargetClosest(true);
                                            npc.directionY = 1;
                                            npc.ai[0] = 1f;
                                            if (npc.direction > 0)
                                            {
                                                npc.spriteDirection = 1;
                                            }
                                        }
                                        bool flag124 = false;
                                        if (Main.netMode != 1)
                                        {
                                            if (npc.ai[2] == 0f && Main.rand.Next(7200) == 0)
                                            {
                                                npc.ai[2] = 2f;
                                                npc.netUpdate = true;
                                            }
                                            if (!npc.collideX && !npc.collideY)
                                            {
                                                npc.localAI[3] += 1f;
                                                if (npc.localAI[3] > 5f)
                                                {
                                                    npc.ai[2] = 2f;
                                                    npc.netUpdate = true;
                                                }
                                            }
                                            else
                                            {
                                                npc.localAI[3] = 0f;
                                            }
                                        }
                                        if (npc.ai[2] > 0f)
                                        {
                                            npc.ai[1] = 0f;
                                            npc.ai[0] = 1f;
                                            npc.directionY = 1;
                                            if (npc.velocity.Y > num1432)
                                            {
                                                npc.rotation += (float)npc.direction * 0.1f;
                                            }
                                            else
                                            {
                                                npc.rotation = 0f;
                                            }
                                            npc.spriteDirection = npc.direction;
                                            npc.velocity.X = num1432 * (float)npc.direction;
                                            npc.noGravity = false;
                                            int num1433 = (int)(npc.Center.X + (float)(npc.width / 2 * -(float)npc.direction)) / 16;
                                            int num1434 = (int)(npc.position.Y + (float)npc.height + 8f) / 16;
                                            if (Main.tile[num1433, num1434] != null && !Main.tile[num1433, num1434].topSlope() && npc.collideY)
                                            {
                                                npc.ai[2] -= 1f;
                                            }
                                            num1434 = (int)(npc.position.Y + (float)npc.height - 4f) / 16;
                                            num1433 = (int)(npc.Center.X + (float)(npc.width / 2 * npc.direction)) / 16;
                                            if (Main.tile[num1433, num1434] != null && Main.tile[num1433, num1434].bottomSlope())
                                            {
                                                npc.direction *= -1;
                                            }
                                            if (npc.collideX && npc.velocity.Y == 0f)
                                            {
                                                flag124 = true;
                                                npc.ai[2] = 0f;
                                                npc.directionY = -1;
                                                npc.ai[1] = 1f;
                                            }
                                            if (npc.velocity.Y == 0f)
                                            {
                                                if (npc.localAI[1] == npc.position.X)
                                                {
                                                    npc.localAI[2] += 1f;
                                                    if (npc.localAI[2] > 10f)
                                                    {
                                                        npc.direction = 1;
                                                        npc.velocity.X = (float)npc.direction * num1432;
                                                        npc.localAI[2] = 0f;
                                                    }
                                                }
                                                else
                                                {
                                                    npc.localAI[2] = 0f;
                                                    npc.localAI[1] = npc.position.X;
                                                }
                                            }
                                        }
                                        if (npc.ai[2] == 0f)
                                        {
                                            npc.noGravity = true;
                                            if (npc.ai[1] == 0f)
                                            {
                                                if (npc.collideY)
                                                {
                                                    npc.ai[0] = 2f;
                                                }
                                                if (!npc.collideY && npc.ai[0] == 2f)
                                                {
                                                    npc.direction = -npc.direction;
                                                    npc.ai[1] = 1f;
                                                    npc.ai[0] = 1f;
                                                }
                                                if (npc.collideX)
                                                {
                                                    npc.directionY = -npc.directionY;
                                                    npc.ai[1] = 1f;
                                                }
                                            }
                                            else
                                            {
                                                if (npc.collideX)
                                                {
                                                    npc.ai[0] = 2f;
                                                }
                                                if (!npc.collideX && npc.ai[0] == 2f)
                                                {
                                                    npc.directionY = -npc.directionY;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[0] = 1f;
                                                }
                                                if (npc.collideY)
                                                {
                                                    npc.direction = -npc.direction;
                                                    npc.ai[1] = 0f;
                                                }
                                            }
                                            if (!flag124)
                                            {
                                                float num1435 = npc.rotation;
                                                if (npc.directionY < 0)
                                                {
                                                    if (npc.direction < 0)
                                                    {
                                                        if (npc.collideX)
                                                        {
                                                            npc.rotation = 1.57f;
                                                            npc.spriteDirection = -1;
                                                        }
                                                        else if (npc.collideY)
                                                        {
                                                            npc.rotation = 3.14f;
                                                            npc.spriteDirection = 1;
                                                        }
                                                    }
                                                    else if (npc.collideY)
                                                    {
                                                        npc.rotation = 3.14f;
                                                        npc.spriteDirection = -1;
                                                    }
                                                    else if (npc.collideX)
                                                    {
                                                        npc.rotation = 4.71f;
                                                        npc.spriteDirection = 1;
                                                    }
                                                }
                                                else if (npc.direction < 0)
                                                {
                                                    if (npc.collideY)
                                                    {
                                                        npc.rotation = 0f;
                                                        npc.spriteDirection = -1;
                                                    }
                                                    else if (npc.collideX)
                                                    {
                                                        npc.rotation = 1.57f;
                                                        npc.spriteDirection = 1;
                                                    }
                                                }
                                                else if (npc.collideX)
                                                {
                                                    npc.rotation = 4.71f;
                                                    npc.spriteDirection = -1;
                                                }
                                                else if (npc.collideY)
                                                {
                                                    npc.rotation = 0f;
                                                    npc.spriteDirection = 1;
                                                }
                                                float num1436 = npc.rotation;
                                                npc.rotation = num1435;
                                                if ((double)npc.rotation > 6.28)
                                                {
                                                    npc.rotation -= 6.28f;
                                                }
                                                if (npc.rotation < 0f)
                                                {
                                                    npc.rotation += 6.28f;
                                                }
                                                float num1437 = Math.Abs(npc.rotation - num1436);
                                                float num1438 = 0.1f;
                                                if (npc.rotation > num1436)
                                                {
                                                    if ((double)num1437 > 3.14)
                                                    {
                                                        npc.rotation += num1438;
                                                    }
                                                    else
                                                    {
                                                        npc.rotation -= num1438;
                                                        if (npc.rotation < num1436)
                                                        {
                                                            npc.rotation = num1436;
                                                        }
                                                    }
                                                }
                                                if (npc.rotation < num1436)
                                                {
                                                    if ((double)num1437 > 3.14)
                                                    {
                                                        npc.rotation -= num1438;
                                                    }
                                                    else
                                                    {
                                                        npc.rotation += num1438;
                                                        if (npc.rotation > num1436)
                                                        {
                                                            npc.rotation = num1436;
                                                        }
                                                    }
                                                }
                                            }
                                            npc.velocity.X = num1432 * (float)npc.direction;
                                            npc.velocity.Y = num1432 * (float)npc.directionY;
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 68)
                                    {
                                        npc.noGravity = true;
                                        if (npc.ai[0] == 0f)
                                        {
                                            npc.noGravity = false;
                                            int direction6 = npc.direction;
                                            int num1439 = npc.target;
                                            npc.TargetClosest(true);
                                            if (num1439 >= 0 && direction6 != 0)
                                            {
                                                npc.direction = direction6;
                                            }
                                            if (npc.wet)
                                            {
                                                float num1440 = 2f;
                                                npc.velocity.X = (npc.velocity.X * 19f + num1440 * (float)npc.direction) / 20f;
                                                int num1441 = (int)(npc.Center.X + (float)((npc.width / 2 + 8) * npc.direction)) / 16;
                                                int num1442 = (int)(npc.Center.Y / 16f);
                                                int j4 = (int)(npc.position.Y / 16f);
                                                int num1443 = (int)((npc.position.Y + (float)npc.height) / 16f);
                                                if (Main.tile[num1441, num1442] == null)
                                                {
                                                    Main.tile[num1441, num1442] = new Tile();
                                                }
                                                if (Main.tile[num1441, num1443] == null)
                                                {
                                                    Main.tile[num1441, num1443] = new Tile();
                                                }
                                                if (WorldGen.SolidTile(num1441, num1442) || WorldGen.SolidTile(num1441, j4) || WorldGen.SolidTile(num1441, num1443) || Main.tile[num1441, num1443].liquid == 0)
                                                {
                                                    npc.direction *= -1;
                                                }
                                                npc.spriteDirection = npc.direction;
                                                if (npc.velocity.Y > 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.5f;
                                                }
                                                npc.noGravity = true;
                                                num1441 = (int)(npc.Center.X / 16f);
                                                num1442 = (int)(npc.Center.Y / 16f);
                                                float num1444 = npc.position.Y + (float)npc.height;
                                                if (Main.tile[num1441, num1442 - 1] == null)
                                                {
                                                    Main.tile[num1441, num1442 - 1] = new Tile();
                                                }
                                                if (Main.tile[num1441, num1442] == null)
                                                {
                                                    Main.tile[num1441, num1442] = new Tile();
                                                }
                                                if (Main.tile[num1441, num1442 + 1] == null)
                                                {
                                                    Main.tile[num1441, num1442 + 1] = new Tile();
                                                }
                                                if (Main.tile[num1441, num1442 - 1].liquid > 0)
                                                {
                                                    num1444 = (float)(num1442 * 16);
                                                    num1444 -= (float)(Main.tile[num1441, num1442 - 1].liquid / 16);
                                                }
                                                else if (Main.tile[num1441, num1442].liquid > 0)
                                                {
                                                    num1444 = (float)((num1442 + 1) * 16);
                                                    num1444 -= (float)(Main.tile[num1441, num1442].liquid / 16);
                                                }
                                                else if (Main.tile[num1441, num1442 + 1].liquid > 0)
                                                {
                                                    num1444 = (float)((num1442 + 2) * 16);
                                                    num1444 -= (float)(Main.tile[num1441, num1442 + 1].liquid / 16);
                                                }
                                                num1444 -= 6f;
                                                if (npc.Center.Y > num1444)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y - 0.1f;
                                                    if (npc.velocity.Y < -8f)
                                                    {
                                                        npc.velocity.Y = -8f;
                                                    }
                                                    if (npc.Center.Y + npc.velocity.Y < num1444)
                                                    {
                                                        npc.velocity.Y = num1444 - npc.Center.Y;
                                                    }
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = num1444 - npc.Center.Y;
                                                }
                                            }
                                            if (Main.netMode != 1)
                                            {
                                                if (!npc.wet)
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.netUpdate = true;
                                                    npc.direction = -npc.direction;
                                                    return;
                                                }
                                                Rectangle rectangle14 = new Rectangle((int)Main.player[npc.target].position.X, (int)Main.player[npc.target].position.Y, Main.player[npc.target].width, Main.player[npc.target].height);
                                                Rectangle rectangle15 = new Rectangle((int)npc.position.X - 100, (int)npc.position.Y - 100, npc.width + 200, npc.height + 200);
                                                if (rectangle15.Intersects(rectangle14) || npc.life < npc.lifeMax)
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.velocity.Y = npc.velocity.Y - 6f;
                                                    npc.netUpdate = true;
                                                    npc.direction = -npc.direction;
                                                    return;
                                                }
                                            }
                                        }
                                        else if (!Main.player[npc.target].dead)
                                        {
                                            bool flag125 = false;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 300f)
                                            {
                                                flag125 = true;
                                            }
                                            if (flag125)
                                            {
                                                if (npc.velocity.Y == 0f || npc.collideY || npc.wet)
                                                {
                                                    npc.velocity.X = 0f;
                                                    npc.velocity.Y = 0f;
                                                    npc.ai[0] = 0f;
                                                    npc.ai[1] = 0f;
                                                    if (Main.netMode != 1)
                                                    {
                                                        if ((npc.type == 363 || npc.type == 365) && !npc.wet)
                                                        {
                                                            int direction7 = npc.direction;
                                                            npc.Transform(npc.type - 1);
                                                            npc.TargetClosest(true);
                                                            npc.direction = direction7;
                                                            npc.ai[0] = 0f;
                                                            npc.ai[1] = (float)(200 + Main.rand.Next(200));
                                                        }
                                                        npc.netUpdate = true;
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                                    npc.velocity.Y = npc.velocity.Y + 0.1f;
                                                    if (npc.velocity.Y > 2f)
                                                    {
                                                        npc.velocity.Y = 2f;
                                                        return;
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                if (npc.collideX)
                                                {
                                                    npc.direction *= -1;
                                                    npc.velocity.X = npc.oldVelocity.X * -0.5f;
                                                    if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                                                    {
                                                        npc.velocity.X = 2f;
                                                    }
                                                    if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                                                    {
                                                        npc.velocity.X = -2f;
                                                    }
                                                }
                                                if (npc.collideY)
                                                {
                                                    npc.velocity.Y = npc.oldVelocity.Y * -0.5f;
                                                    if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                                                    {
                                                        npc.velocity.Y = 1f;
                                                    }
                                                    if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                                                    {
                                                        npc.velocity.Y = -1f;
                                                    }
                                                }
                                                if (npc.direction == -1 && npc.velocity.X > -3f)
                                                {
                                                    npc.velocity.X = npc.velocity.X - 0.1f;
                                                    if (npc.velocity.X > 3f)
                                                    {
                                                        npc.velocity.X = npc.velocity.X - 0.1f;
                                                    }
                                                    else if (npc.velocity.X > 0f)
                                                    {
                                                        npc.velocity.X = npc.velocity.X - 0.05f;
                                                    }
                                                    if (npc.velocity.X < -3f)
                                                    {
                                                        npc.velocity.X = -3f;
                                                    }
                                                }
                                                else if (npc.direction == 1 && npc.velocity.X < 3f)
                                                {
                                                    npc.velocity.X = npc.velocity.X + 0.1f;
                                                    if (npc.velocity.X < -3f)
                                                    {
                                                        npc.velocity.X = npc.velocity.X + 0.1f;
                                                    }
                                                    else if (npc.velocity.X < 0f)
                                                    {
                                                        npc.velocity.X = npc.velocity.X + 0.05f;
                                                    }
                                                    if (npc.velocity.X > 3f)
                                                    {
                                                        npc.velocity.X = 3f;
                                                    }
                                                }
                                                int num1445 = (int)((npc.position.X + (float)(npc.width / 2)) / 16f) + npc.direction;
                                                int num1446 = (int)((npc.position.Y + (float)npc.height) / 16f);
                                                bool flag126 = true;
                                                int num1447 = 15;
                                                bool flag127 = false;
                                                for (int num1448 = num1446; num1448 < num1446 + num1447; num1448++)
                                                {
                                                    if (Main.tile[num1445, num1448] == null)
                                                    {
                                                        Main.tile[num1445, num1448] = new Tile();
                                                    }
                                                    if ((Main.tile[num1445, num1448].nactive() && Main.tileSolid[(int)Main.tile[num1445, num1448].type]) || Main.tile[num1445, num1448].liquid > 0)
                                                    {
                                                        if (num1448 < num1446 + 5)
                                                        {
                                                            flag127 = true;
                                                        }
                                                        flag126 = false;
                                                        break;
                                                    }
                                                }
                                                if (flag126)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y + 0.1f;
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = npc.velocity.Y - 0.1f;
                                                }
                                                if (flag127)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y - 0.2f;
                                                }
                                                if (npc.velocity.Y > 3f)
                                                {
                                                    npc.velocity.Y = 3f;
                                                }
                                                if (npc.velocity.Y < -4f)
                                                {
                                                    npc.velocity.Y = -4f;
                                                    return;
                                                }
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 69)
                                    {
                                        bool expertMode = Main.expertMode;
                                        float num1449 = expertMode ? (0.6f * Main.damageMultiplier) : 1f;
                                        bool flag128 = (double)npc.life <= (double)npc.lifeMax * 0.5;
                                        bool flag129 = expertMode && (double)npc.life <= (double)npc.lifeMax * 0.15;
                                        bool flag130 = npc.ai[0] > 4f;
                                        bool flag131 = npc.ai[0] > 9f;
                                        bool flag132 = npc.ai[3] < 10f;
                                        if (flag131)
                                        {
                                            npc.damage = (int)((float)npc.defDamage * 1.1f * num1449);
                                            npc.defense = 0;
                                        }
                                        else if (flag130)
                                        {
                                            npc.damage = (int)((float)npc.defDamage * 1.2f * num1449);
                                            npc.defense = (int)((float)npc.defDefense * 0.8f);
                                        }
                                        else
                                        {
                                            npc.damage = npc.defDamage;
                                            npc.defense = npc.defDefense;
                                        }
                                        int num1450 = expertMode ? 40 : 60;
                                        float num1451 = expertMode ? 0.55f : 0.45f;
                                        float scaleFactor10 = expertMode ? 8.5f : 7.5f;
                                        if (flag131)
                                        {
                                            num1451 = 0.7f;
                                            scaleFactor10 = 12f;
                                            num1450 = 30;
                                        }
                                        else if (flag130 && flag132)
                                        {
                                            num1451 = (expertMode ? 0.6f : 0.5f);
                                            scaleFactor10 = (expertMode ? 10f : 8f);
                                            num1450 = (expertMode ? 40 : 20);
                                        }
                                        else if (flag132 && !flag130 && !flag131)
                                        {
                                            num1450 = 30;
                                        }
                                        int num1452 = expertMode ? 28 : 30;
                                        float num1453 = expertMode ? 17f : 16f;
                                        if (flag131)
                                        {
                                            num1452 = 25;
                                            num1453 = 27f;
                                        }
                                        else if (flag132 && flag130)
                                        {
                                            num1452 = (expertMode ? 27 : 30);
                                            if (expertMode)
                                            {
                                                num1453 = 21f;
                                            }
                                        }
                                        int num1454 = 80;
                                        int num1455 = 4;
                                        float num1456 = 0.3f;
                                        float scaleFactor11 = 5f;
                                        int num1457 = 90;
                                        int num1458 = 180;
                                        int num1459 = 180;
                                        int num1460 = 30;
                                        int num1461 = 120;
                                        int num1462 = 4;
                                        float scaleFactor12 = 6f;
                                        float scaleFactor13 = 20f;
                                        float num1463 = 6.28318548f / (float)(num1461 / 2);
                                        int num1464 = 75;
                                        Vector2 vector168 = npc.Center;
                                        Player player5 = Main.player[npc.target];
                                        if (npc.target < 0 || npc.target == 255 || player5.dead || !player5.active)
                                        {
                                            npc.TargetClosest(true);
                                            player5 = Main.player[npc.target];
                                            npc.netUpdate = true;
                                        }
                                        if (player5.dead || Vector2.Distance(player5.Center, vector168) > 2400f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.4f;
                                            if (npc.timeLeft > 10)
                                            {
                                                npc.timeLeft = 10;
                                            }
                                            if (npc.ai[0] > 4f)
                                            {
                                                npc.ai[0] = 5f;
                                            }
                                            else
                                            {
                                                npc.ai[0] = 0f;
                                            }
                                            npc.ai[2] = 0f;
                                        }
                                        bool flag133 = player5.position.Y < 800f || (double)player5.position.Y > Main.worldSurface * 16.0 || (player5.position.X > 6400f && player5.position.X < (float)(Main.maxTilesX * 16 - 6400));
                                        if (flag133)
                                        {
                                            num1450 = 20;
                                            npc.damage = npc.defDamage * 2;
                                            npc.defense = npc.defDefense * 2;
                                            npc.ai[3] = 0f;
                                            num1453 += 6f;
                                        }
                                        if (npc.localAI[0] == 0f)
                                        {
                                            npc.localAI[0] = 1f;
                                            npc.alpha = 255;
                                            npc.rotation = 0f;
                                            if (Main.netMode != 1)
                                            {
                                                npc.ai[0] = -1f;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        float num1465 = (float)Math.Atan2((double)(player5.Center.Y - vector168.Y), (double)(player5.Center.X - vector168.X));
                                        if (npc.spriteDirection == 1)
                                        {
                                            num1465 += 3.14159274f;
                                        }
                                        if (num1465 < 0f)
                                        {
                                            num1465 += 6.28318548f;
                                        }
                                        if (num1465 > 6.28318548f)
                                        {
                                            num1465 -= 6.28318548f;
                                        }
                                        if (npc.ai[0] == -1f)
                                        {
                                            num1465 = 0f;
                                        }
                                        if (npc.ai[0] == 3f)
                                        {
                                            num1465 = 0f;
                                        }
                                        if (npc.ai[0] == 4f)
                                        {
                                            num1465 = 0f;
                                        }
                                        if (npc.ai[0] == 8f)
                                        {
                                            num1465 = 0f;
                                        }
                                        float num1466 = 0.04f;
                                        if (npc.ai[0] == 1f || npc.ai[0] == 6f)
                                        {
                                            num1466 = 0f;
                                        }
                                        if (npc.ai[0] == 7f)
                                        {
                                            num1466 = 0f;
                                        }
                                        if (npc.ai[0] == 3f)
                                        {
                                            num1466 = 0.01f;
                                        }
                                        if (npc.ai[0] == 4f)
                                        {
                                            num1466 = 0.01f;
                                        }
                                        if (npc.ai[0] == 8f)
                                        {
                                            num1466 = 0.01f;
                                        }
                                        if (npc.rotation < num1465)
                                        {
                                            if ((double)(num1465 - npc.rotation) > 3.1415926535897931)
                                            {
                                                npc.rotation -= num1466;
                                            }
                                            else
                                            {
                                                npc.rotation += num1466;
                                            }
                                        }
                                        if (npc.rotation > num1465)
                                        {
                                            if ((double)(npc.rotation - num1465) > 3.1415926535897931)
                                            {
                                                npc.rotation += num1466;
                                            }
                                            else
                                            {
                                                npc.rotation -= num1466;
                                            }
                                        }
                                        if (npc.rotation > num1465 - num1466 && npc.rotation < num1465 + num1466)
                                        {
                                            npc.rotation = num1465;
                                        }
                                        if (npc.rotation < 0f)
                                        {
                                            npc.rotation += 6.28318548f;
                                        }
                                        if (npc.rotation > 6.28318548f)
                                        {
                                            npc.rotation -= 6.28318548f;
                                        }
                                        if (npc.rotation > num1465 - num1466 && npc.rotation < num1465 + num1466)
                                        {
                                            npc.rotation = num1465;
                                        }
                                        if (npc.ai[0] != -1f && npc.ai[0] < 9f)
                                        {
                                            bool flag134 = Collision.SolidCollision(npc.position, npc.width, npc.height);
                                            if (flag134)
                                            {
                                                npc.alpha += 15;
                                            }
                                            else
                                            {
                                                npc.alpha -= 15;
                                            }
                                            if (npc.alpha < 0)
                                            {
                                                npc.alpha = 0;
                                            }
                                            if (npc.alpha > 150)
                                            {
                                                npc.alpha = 150;
                                            }
                                        }
                                        if (npc.ai[0] == -1f)
                                        {
                                            npc.velocity *= 0.98f;
                                            int num1467 = Math.Sign(player5.Center.X - vector168.X);
                                            if (num1467 != 0)
                                            {
                                                npc.direction = num1467;
                                                npc.spriteDirection = -npc.direction;
                                            }
                                            if (npc.ai[2] > 20f)
                                            {
                                                npc.velocity.Y = -2f;
                                                npc.alpha -= 5;
                                                bool flag135 = Collision.SolidCollision(npc.position, npc.width, npc.height);
                                                if (flag135)
                                                {
                                                    npc.alpha += 15;
                                                }
                                                if (npc.alpha < 0)
                                                {
                                                    npc.alpha = 0;
                                                }
                                                if (npc.alpha > 150)
                                                {
                                                    npc.alpha = 150;
                                                }
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1464)
                                            {
                                                npc.ai[0] = 0f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 0f && !player5.dead)
                                        {
                                            if (npc.ai[1] == 0f)
                                            {
                                                npc.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
                                            }
                                            Vector2 value17 = player5.Center + new Vector2(npc.ai[1], -200f) - vector168;
                                            Vector2 vector170 = Vector2.Normalize(value17 - npc.velocity) * scaleFactor10;
                                            if (npc.velocity.X < vector170.X)
                                            {
                                                npc.velocity.X = npc.velocity.X + num1451;
                                                if (npc.velocity.X < 0f && vector170.X > 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X + num1451;
                                                }
                                            }
                                            else if (npc.velocity.X > vector170.X)
                                            {
                                                npc.velocity.X = npc.velocity.X - num1451;
                                                if (npc.velocity.X > 0f && vector170.X < 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X - num1451;
                                                }
                                            }
                                            if (npc.velocity.Y < vector170.Y)
                                            {
                                                npc.velocity.Y = npc.velocity.Y + num1451;
                                                if (npc.velocity.Y < 0f && vector170.Y > 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y + num1451;
                                                }
                                            }
                                            else if (npc.velocity.Y > vector170.Y)
                                            {
                                                npc.velocity.Y = npc.velocity.Y - num1451;
                                                if (npc.velocity.Y > 0f && vector170.Y < 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y - num1451;
                                                }
                                            }
                                            int num1471 = Math.Sign(player5.Center.X - vector168.X);
                                            if (num1471 != 0)
                                            {
                                                if (npc.ai[2] == 0f && num1471 != npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.direction = num1471;
                                                if (npc.spriteDirection != -npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.spriteDirection = -npc.direction;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1450)
                                            {
                                                int num1472 = 0;
                                                switch ((int)npc.ai[3])
                                                {
                                                    case 0:
                                                    case 1:
                                                    case 2:
                                                    case 3:
                                                    case 4:
                                                    case 5:
                                                    case 6:
                                                    case 7:
                                                    case 8:
                                                    case 9:
                                                        num1472 = 1;
                                                        break;
                                                    case 10:
                                                        npc.ai[3] = 1f;
                                                        num1472 = 2;
                                                        break;
                                                    case 11:
                                                        npc.ai[3] = 0f;
                                                        num1472 = 3;
                                                        break;
                                                }
                                                if (flag128)
                                                {
                                                    num1472 = 4;
                                                }
                                                if (num1472 == 1)
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                    npc.velocity = Vector2.Normalize(player5.Center - vector168) * num1453;
                                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                                                    if (num1471 != 0)
                                                    {
                                                        npc.direction = num1471;
                                                        if (npc.spriteDirection == 1)
                                                        {
                                                            npc.rotation += 3.14159274f;
                                                        }
                                                        npc.spriteDirection = -npc.direction;
                                                    }
                                                }
                                                else if (num1472 == 2)
                                                {
                                                    npc.ai[0] = 2f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                else if (num1472 == 3)
                                                {
                                                    npc.ai[0] = 3f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                else if (num1472 == 4)
                                                {
                                                    npc.ai[0] = 4f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 1f)
                                        {
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1452)
                                            {
                                                npc.ai[0] = 0f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] += 2f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 2f)
                                        {
                                            if (npc.ai[1] == 0f)
                                            {
                                                npc.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
                                            }
                                            Vector2 value19 = player5.Center + new Vector2(npc.ai[1], -200f) - vector168;
                                            Vector2 vector172 = Vector2.Normalize(value19 - npc.velocity) * scaleFactor11;
                                            if (npc.velocity.X < vector172.X)
                                            {
                                                npc.velocity.X = npc.velocity.X + num1456;
                                                if (npc.velocity.X < 0f && vector172.X > 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X + num1456;
                                                }
                                            }
                                            else if (npc.velocity.X > vector172.X)
                                            {
                                                npc.velocity.X = npc.velocity.X - num1456;
                                                if (npc.velocity.X > 0f && vector172.X < 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X - num1456;
                                                }
                                            }
                                            if (npc.velocity.Y < vector172.Y)
                                            {
                                                npc.velocity.Y = npc.velocity.Y + num1456;
                                                if (npc.velocity.Y < 0f && vector172.Y > 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y + num1456;
                                                }
                                            }
                                            else if (npc.velocity.Y > vector172.Y)
                                            {
                                                npc.velocity.Y = npc.velocity.Y - num1456;
                                                if (npc.velocity.Y > 0f && vector172.Y < 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y - num1456;
                                                }
                                            }
                                            if (npc.ai[2] % (float)num1455 == 0f)
                                            {
                                                if (Main.netMode != 1)
                                                {
                                                    Vector2 vector173 = Vector2.Normalize(player5.Center - vector168) * (float)(npc.width + 20) / 2f + vector168;
                                                    NPC.NewNPC((int)vector173.X, (int)vector173.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
                                                }
                                            }
                                            int num1476 = Math.Sign(player5.Center.X - vector168.X);
                                            if (num1476 != 0)
                                            {
                                                npc.direction = num1476;
                                                if (npc.spriteDirection != -npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.spriteDirection = -npc.direction;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1454)
                                            {
                                                npc.ai[0] = 0f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 3f)
                                        {
                                            npc.velocity *= 0.98f;
                                            npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                                            if (Main.netMode != 1 && npc.ai[2] == (float)(num1457 - 30))
                                            {
                                                Vector2 vector174 = npc.rotation.ToRotationVector2() * (Vector2.UnitX * (float)npc.direction) * (float)(npc.width + 20) / 2f + vector168;
                                                Projectile.NewProjectile(vector174.X, vector174.Y, (float)(npc.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
                                                Projectile.NewProjectile(vector174.X, vector174.Y, (float)(-(float)npc.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1457)
                                            {
                                                npc.ai[0] = 0f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 4f)
                                        {
                                            npc.velocity *= 0.98f;
                                            npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1458)
                                            {
                                                npc.ai[0] = 5f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 5f && !player5.dead)
                                        {
                                            if (npc.ai[1] == 0f)
                                            {
                                                npc.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
                                            }
                                            Vector2 value20 = player5.Center + new Vector2(npc.ai[1], -200f) - vector168;
                                            Vector2 vector175 = Vector2.Normalize(value20 - npc.velocity) * scaleFactor10;
                                            if (npc.velocity.X < vector175.X)
                                            {
                                                npc.velocity.X = npc.velocity.X + num1451;
                                                if (npc.velocity.X < 0f && vector175.X > 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X + num1451;
                                                }
                                            }
                                            else if (npc.velocity.X > vector175.X)
                                            {
                                                npc.velocity.X = npc.velocity.X - num1451;
                                                if (npc.velocity.X > 0f && vector175.X < 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X - num1451;
                                                }
                                            }
                                            if (npc.velocity.Y < vector175.Y)
                                            {
                                                npc.velocity.Y = npc.velocity.Y + num1451;
                                                if (npc.velocity.Y < 0f && vector175.Y > 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y + num1451;
                                                }
                                            }
                                            else if (npc.velocity.Y > vector175.Y)
                                            {
                                                npc.velocity.Y = npc.velocity.Y - num1451;
                                                if (npc.velocity.Y > 0f && vector175.Y < 0f)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y - num1451;
                                                }
                                            }
                                            int num1477 = Math.Sign(player5.Center.X - vector168.X);
                                            if (num1477 != 0)
                                            {
                                                if (npc.ai[2] == 0f && num1477 != npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.direction = num1477;
                                                if (npc.spriteDirection != -npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.spriteDirection = -npc.direction;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1450)
                                            {
                                                int num1478 = 0;
                                                switch ((int)npc.ai[3])
                                                {
                                                    case 0:
                                                    case 1:
                                                    case 2:
                                                    case 3:
                                                    case 4:
                                                    case 5:
                                                        num1478 = 1;
                                                        break;
                                                    case 6:
                                                        npc.ai[3] = 1f;
                                                        num1478 = 2;
                                                        break;
                                                    case 7:
                                                        npc.ai[3] = 0f;
                                                        num1478 = 3;
                                                        break;
                                                }
                                                if (flag129)
                                                {
                                                    num1478 = 4;
                                                }
                                                if (num1478 == 1)
                                                {
                                                    npc.ai[0] = 6f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                    npc.velocity = Vector2.Normalize(player5.Center - vector168) * num1453;
                                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                                                    if (num1477 != 0)
                                                    {
                                                        npc.direction = num1477;
                                                        if (npc.spriteDirection == 1)
                                                        {
                                                            npc.rotation += 3.14159274f;
                                                        }
                                                        npc.spriteDirection = -npc.direction;
                                                    }
                                                }
                                                else if (num1478 == 2)
                                                {
                                                    npc.velocity = Vector2.Normalize(player5.Center - vector168) * scaleFactor13;
                                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                                                    if (num1477 != 0)
                                                    {
                                                        npc.direction = num1477;
                                                        if (npc.spriteDirection == 1)
                                                        {
                                                            npc.rotation += 3.14159274f;
                                                        }
                                                        npc.spriteDirection = -npc.direction;
                                                    }
                                                    npc.ai[0] = 7f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                else if (num1478 == 3)
                                                {
                                                    npc.ai[0] = 8f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                else if (num1478 == 4)
                                                {
                                                    npc.ai[0] = 9f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 6f)
                                        {
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1452)
                                            {
                                                npc.ai[0] = 5f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] += 2f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 7f)
                                        {
                                            if (npc.ai[2] % (float)num1462 == 0f)
                                            {
                                                if (Main.netMode != 1)
                                                {
                                                    Vector2 vector177 = Vector2.Normalize(npc.velocity) * (float)(npc.width + 20) / 2f + vector168;
                                                    int num1482 = NPC.NewNPC((int)vector177.X, (int)vector177.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
                                                    Main.npc[num1482].target = npc.target;
                                                    Main.npc[num1482].velocity = Vector2.Normalize(npc.velocity).RotatedBy((double)(1.57079637f * (float)npc.direction), default(Vector2)) * scaleFactor12;
                                                    Main.npc[num1482].netUpdate = true;
                                                    Main.npc[num1482].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
                                                }
                                            }
                                            npc.velocity = npc.velocity.RotatedBy((double)(-(double)num1463 * (float)npc.direction), default(Vector2));
                                            npc.rotation -= num1463 * (float)npc.direction;
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1461)
                                            {
                                                npc.ai[0] = 5f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 8f)
                                        {
                                            npc.velocity *= 0.98f;
                                            npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                                            if (Main.netMode != 1 && npc.ai[2] == (float)(num1457 - 30))
                                            {
                                                Projectile.NewProjectile(vector168.X, vector168.Y, 0f, 0f, 385, 0, 0f, Main.myPlayer, 1f, (float)(npc.target + 1));
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1457)
                                            {
                                                npc.ai[0] = 5f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 9f)
                                        {
                                            if (npc.ai[2] < (float)(num1459 - 90))
                                            {
                                                bool flag136 = Collision.SolidCollision(npc.position, npc.width, npc.height);
                                                if (flag136)
                                                {
                                                    npc.alpha += 15;
                                                }
                                                else
                                                {
                                                    npc.alpha -= 15;
                                                }
                                                if (npc.alpha < 0)
                                                {
                                                    npc.alpha = 0;
                                                }
                                                if (npc.alpha > 150)
                                                {
                                                    npc.alpha = 150;
                                                }
                                            }
                                            else if (npc.alpha < 255)
                                            {
                                                npc.alpha += 4;
                                                if (npc.alpha > 255)
                                                {
                                                    npc.alpha = 255;
                                                }
                                            }
                                            npc.velocity *= 0.98f;
                                            npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1459)
                                            {
                                                npc.ai[0] = 10f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 10f && !player5.dead)
                                        {
                                            npc.dontTakeDamage = false;
                                            npc.chaseable = false;
                                            if (npc.alpha < 255)
                                            {
                                                npc.alpha += 25;
                                                if (npc.alpha > 255)
                                                {
                                                    npc.alpha = 255;
                                                }
                                            }
                                            if (npc.ai[1] == 0f)
                                            {
                                                npc.ai[1] = (float)(360 * Math.Sign((vector168 - player5.Center).X));
                                            }
                                            Vector2 value22 = player5.Center + new Vector2(npc.ai[1], -200f) - vector168;
                                            Vector2 desiredVelocity = Vector2.Normalize(value22 - npc.velocity) * scaleFactor10;
                                            npc.SimpleFlyMovement(desiredVelocity, num1451);
                                            int num1483 = Math.Sign(player5.Center.X - vector168.X);
                                            if (num1483 != 0)
                                            {
                                                if (npc.ai[2] == 0f && num1483 != npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                    for (int num1484 = 0; num1484 < npc.oldPos.Length; num1484++)
                                                    {
                                                        npc.oldPos[num1484] = Vector2.Zero;
                                                    }
                                                }
                                                npc.direction = num1483;
                                                if (npc.spriteDirection != -npc.direction)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.spriteDirection = -npc.direction;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1450)
                                            {
                                                int num1485 = 0;
                                                switch ((int)npc.ai[3])
                                                {
                                                    case 0:
                                                    case 2:
                                                    case 3:
                                                    case 5:
                                                    case 6:
                                                    case 7:
                                                        num1485 = 1;
                                                        break;
                                                    case 1:
                                                    case 4:
                                                    case 8:
                                                        num1485 = 2;
                                                        break;
                                                }
                                                if (num1485 == 1)
                                                {
                                                    npc.ai[0] = 11f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                    npc.velocity = Vector2.Normalize(player5.Center - vector168) * num1453;
                                                    npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                                                    if (num1483 != 0)
                                                    {
                                                        npc.direction = num1483;
                                                        if (npc.spriteDirection == 1)
                                                        {
                                                            npc.rotation += 3.14159274f;
                                                        }
                                                        npc.spriteDirection = -npc.direction;
                                                    }
                                                }
                                                else if (num1485 == 2)
                                                {
                                                    npc.ai[0] = 12f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                else if (num1485 == 3)
                                                {
                                                    npc.ai[0] = 13f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                }
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 11f)
                                        {
                                            npc.dontTakeDamage = false;
                                            npc.chaseable = true;
                                            npc.alpha -= 25;
                                            if (npc.alpha < 0)
                                            {
                                                npc.alpha = 0;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1452)
                                            {
                                                npc.ai[0] = 10f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] += 1f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 12f)
                                        {
                                            npc.dontTakeDamage = true;
                                            npc.chaseable = false;
                                            if (npc.alpha < 255)
                                            {
                                                npc.alpha += 17;
                                                if (npc.alpha > 255)
                                                {
                                                    npc.alpha = 255;
                                                }
                                            }
                                            npc.velocity *= 0.98f;
                                            npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                                            if (Main.netMode != 1 && npc.ai[2] == (float)(num1460 / 2))
                                            {
                                                if (npc.ai[1] == 0f)
                                                {
                                                    npc.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
                                                }
                                                Vector2 center6 = player5.Center + new Vector2(-npc.ai[1], -200f);
                                                vector168 = (npc.Center = center6);
                                                int num1489 = Math.Sign(player5.Center.X - vector168.X);
                                                if (num1489 != 0)
                                                {
                                                    if (npc.ai[2] == 0f && num1489 != npc.direction)
                                                    {
                                                        npc.rotation += 3.14159274f;
                                                        for (int num1490 = 0; num1490 < npc.oldPos.Length; num1490++)
                                                        {
                                                            npc.oldPos[num1490] = Vector2.Zero;
                                                        }
                                                    }
                                                    npc.direction = num1489;
                                                    if (npc.spriteDirection != -npc.direction)
                                                    {
                                                        npc.rotation += 3.14159274f;
                                                    }
                                                    npc.spriteDirection = -npc.direction;
                                                }
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1460)
                                            {
                                                npc.ai[0] = 10f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] += 1f;
                                                if (npc.ai[3] >= 9f)
                                                {
                                                    npc.ai[3] = 0f;
                                                }
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 13f)
                                        {
                                            npc.velocity = npc.velocity.RotatedBy((double)(-(double)num1463 * (float)npc.direction), default(Vector2));
                                            npc.rotation -= num1463 * (float)npc.direction;
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= (float)num1461)
                                            {
                                                npc.ai[0] = 10f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] += 1f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 70)
                                    {
                                        if (npc.target == 255)
                                        {
                                            npc.TargetClosest(true);
                                            npc.ai[3] = (float)Main.rand.Next(80, 121) / 100f;
                                            float scaleFactor14 = (float)Main.rand.Next(165, 265) / 15f;
                                            npc.velocity = Vector2.Normalize(Main.player[npc.target].Center - npc.Center + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * scaleFactor14;
                                            npc.netUpdate = true;
                                        }
                                        Vector2 vector179 = Vector2.Normalize(Main.player[npc.target].Center - npc.Center);
                                        npc.velocity = (npc.velocity * 40f + vector179 * 20f) / 41f;
                                        npc.scale = npc.ai[3];
                                        npc.alpha -= 30;
                                        if (npc.alpha < 50)
                                        {
                                            npc.alpha = 50;
                                        }
                                        npc.alpha = 50;
                                        npc.velocity.X = (npc.velocity.X * 50f + Main.windSpeed * 2f + (float)Main.rand.Next(-10, 11) * 0.1f) / 51f;
                                        npc.velocity.Y = (npc.velocity.Y * 50f + -0.25f + (float)Main.rand.Next(-10, 11) * 0.2f) / 51f;
                                        if (npc.velocity.Y > 0f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.04f;
                                        }
                                        if (npc.ai[0] == 0f)
                                        {
                                            int num1491 = 40;
                                            Rectangle rect = npc.getRect();
                                            rect.X -= num1491 + npc.width / 2;
                                            rect.Y -= num1491 + npc.height / 2;
                                            rect.Width += num1491 * 2;
                                            rect.Height += num1491 * 2;
                                            for (int num1492 = 0; num1492 < 255; num1492++)
                                            {
                                                Player player6 = Main.player[num1492];
                                                if (player6.active && !player6.dead && rect.Intersects(player6.getRect()))
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.ai[1] = 4f;
                                                    npc.netUpdate = true;
                                                    break;
                                                }
                                            }
                                        }
                                        if (npc.ai[0] == 0f)
                                        {
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 150f)
                                            {
                                                npc.ai[0] = 1f;
                                                npc.ai[1] = 4f;
                                            }
                                        }
                                        if (npc.ai[0] == 1f)
                                        {
                                            npc.ai[1] -= 1f;
                                            if (npc.ai[1] <= 0f)
                                            {
                                                npc.life = 0;
                                                npc.HitEffect(0, 10.0);
                                                npc.active = false;
                                                return;
                                            }
                                        }
                                        if (npc.justHit || npc.ai[0] == 1f)
                                        {
                                            npc.dontTakeDamage = true;
                                            npc.position = npc.Center;
                                            npc.width = (npc.height = 100);
                                            npc.position = new Vector2(npc.position.X - (float)(npc.width / 2), npc.position.Y - (float)(npc.height / 2));
                                            if (npc.timeLeft > 3)
                                            {
                                                npc.timeLeft = 3;
                                                return;
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 71)
                                    {
                                        npc.noTileCollide = true;
                                        int num1493 = 90;
                                        if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
                                        {
                                            npc.TargetClosest(false);
                                            npc.direction = 1;
                                            npc.netUpdate = true;
                                        }
                                        if (npc.ai[0] == 0f)
                                        {
                                            npc.ai[1] += 1f;
                                            int arg_5028C_0 = npc.type;
                                            npc.noGravity = true;
                                            npc.dontTakeDamage = true;
                                            npc.velocity.Y = npc.ai[3];
                                            if (npc.type == 373)
                                            {
                                                float num1494 = 0.104719758f;
                                                float num1495 = npc.ai[2];
                                                float num1496 = (float)(Math.Cos((double)(num1494 * npc.localAI[1])) - 0.5) * num1495;
                                                npc.position.X = npc.position.X - num1496 * (float)(-(float)npc.direction);
                                                npc.localAI[1] += 1f;
                                                num1496 = (float)(Math.Cos((double)(num1494 * npc.localAI[1])) - 0.5) * num1495;
                                                npc.position.X = npc.position.X + num1496 * (float)(-(float)npc.direction);
                                                if (Math.Abs(Math.Cos((double)(num1494 * npc.localAI[1])) - 0.5) > 0.25)
                                                {
                                                    npc.spriteDirection = ((Math.Cos((double)(num1494 * npc.localAI[1])) - 0.5 >= 0.0) ? -1 : 1);
                                                }
                                                npc.rotation = npc.velocity.Y * (float)npc.spriteDirection * 0.1f;
                                                if ((double)npc.rotation < -0.2)
                                                {
                                                    npc.rotation = -0.2f;
                                                }
                                                if ((double)npc.rotation > 0.2)
                                                {
                                                    npc.rotation = 0.2f;
                                                }
                                                npc.alpha -= 6;
                                                if (npc.alpha < 0)
                                                {
                                                    npc.alpha = 0;
                                                }
                                            }
                                            if (npc.ai[1] >= (float)num1493)
                                            {
                                                npc.ai[0] = 1f;
                                                npc.ai[1] = 0f;
                                                if (!Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                {
                                                    npc.ai[1] = 1f;
                                                }
                                                npc.TargetClosest(true);
                                                npc.spriteDirection = npc.direction;
                                                Vector2 vector180 = Main.player[npc.target].Center - npc.Center;
                                                vector180.Normalize();
                                                npc.velocity = vector180 * 16f;
                                                npc.rotation = npc.velocity.ToRotation();
                                                if (npc.direction == -1)
                                                {
                                                    npc.rotation += 3.14159274f;
                                                }
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 1f)
                                        {
                                            npc.noGravity = true;
                                            if (!Collision.SolidCollision(npc.position, npc.width, npc.height))
                                            {
                                                if (npc.ai[1] < 1f)
                                                {
                                                    npc.ai[1] = 1f;
                                                }
                                            }
                                            else
                                            {
                                                npc.alpha -= 15;
                                                if (npc.alpha < 150)
                                                {
                                                    npc.alpha = 150;
                                                }
                                            }
                                            if (npc.ai[1] >= 1f)
                                            {
                                                npc.alpha -= 60;
                                                if (npc.alpha < 0)
                                                {
                                                    npc.alpha = 0;
                                                }
                                                npc.dontTakeDamage = false;
                                                npc.ai[1] += 1f;
                                                if (Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                {
                                                    npc.life = 0;
                                                    npc.HitEffect(0, 10.0);
                                                    npc.active = false;
                                                    return;
                                                }
                                            }
                                            if (npc.ai[1] >= 60f)
                                            {
                                                npc.noGravity = false;
                                            }
                                            npc.rotation = npc.velocity.ToRotation();
                                            if (npc.direction == -1)
                                            {
                                                npc.rotation += 3.14159274f;
                                                return;
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 72)
                                    {
                                        if (npc.type == 384)
                                        {
                                            int num1497 = (int)npc.ai[0];
                                            if (Main.npc[num1497].active && Main.npc[num1497].type == 383)
                                            {
                                                npc.velocity = Vector2.Zero;
                                                npc.position = Main.npc[num1497].Center;
                                                npc.position.X = npc.position.X - (float)(npc.width / 2);
                                                npc.position.Y = npc.position.Y - (float)(npc.height / 2);
                                                npc.gfxOffY = Main.npc[num1497].gfxOffY;
                                                return;
                                            }
                                            npc.life = 0;
                                            npc.HitEffect(0, 10.0);
                                            npc.active = false;
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 73)
                                    {
                                        npc.TargetClosest(false);
                                        npc.spriteDirection = npc.direction;
                                        npc.velocity.X = npc.velocity.X * 0.93f;
                                        if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                        {
                                            npc.velocity.X = 0f;
                                        }
                                        if (npc.type == 387)
                                        {
                                            float num1498 = 120f;
                                            float num1499 = 60f;
                                            if (npc.ai[1] < num1498)
                                            {
                                                npc.ai[1] += 1f;
                                                if (npc.ai[1] > 60f)
                                                {
                                                    float num1500 = (npc.ai[1] - num1499) / (num1498 - num1499);
                                                    npc.alpha = (int)((1f - num1500) * 255f);
                                                }
                                                else
                                                {
                                                    npc.alpha = 255;
                                                }
                                                npc.dontTakeDamage = true;
                                                npc.frameCounter = 0.0;
                                                npc.frame.Y = 0;
                                                float num1501 = npc.ai[1] / num1499;
                                                return;
                                            }
                                            npc.dontTakeDamage = false;
                                        }
                                        if (npc.ai[0] < 60f)
                                        {
                                            npc.ai[0] += 1f;
                                        }
                                        if (npc.justHit)
                                        {
                                            npc.ai[0] = -30f;
                                        }
                                        if (npc.ai[0] == 60f)
                                        {
                                            npc.ai[0] = -120f;
                                            Vector2 center7 = Main.player[npc.target].Center;
                                            Vector2 value25 = npc.Center - Vector2.UnitY * 10f;
                                            Vector2 vector181 = center7 - value25;
                                            vector181.X += (float)Main.rand.Next(-100, 101);
                                            vector181.Y += (float)Main.rand.Next(-100, 101);
                                            vector181.X *= (float)Main.rand.Next(70, 131) * 0.01f;
                                            vector181.Y *= (float)Main.rand.Next(70, 131) * 0.01f;
                                            vector181.Normalize();
                                            if (float.IsNaN(vector181.X) || float.IsNaN(vector181.Y))
                                            {
                                                vector181 = -Vector2.UnitY;
                                            }
                                            vector181 *= 14f;
                                            int num1504 = 35;
                                            if (Main.expertMode && npc.type >= 381 && npc.type <= 392)
                                            {
                                                num1504 = (int)((double)num1504 * 0.8);
                                            }
                                            Projectile.NewProjectile(value25.X, value25.Y, vector181.X, vector181.Y, 435, num1504, 0f, Main.myPlayer, 0f, 0f);
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 74)
                                    {
                                        npc.TargetClosest(false);
                                        npc.rotation = npc.velocity.ToRotation();
                                        if (Math.Sign(npc.velocity.X) != 0)
                                        {
                                            npc.spriteDirection = -Math.Sign(npc.velocity.X);
                                        }
                                        if (npc.rotation < -1.57079637f)
                                        {
                                            npc.rotation += 3.14159274f;
                                        }
                                        if (npc.rotation > 1.57079637f)
                                        {
                                            npc.rotation -= 3.14159274f;
                                        }
                                        if (npc.type == 418)
                                        {
                                            npc.spriteDirection = Math.Sign(npc.velocity.X);
                                        }
                                        float num1505 = 0.4f;
                                        float num1506 = 10f;
                                        float scaleFactor16 = 200f;
                                        float num1507 = 750f;
                                        float num1508 = 30f;
                                        float num1509 = 30f;
                                        float scaleFactor17 = 0.95f;
                                        int num1510 = 50;
                                        float scaleFactor18 = 14f;
                                        float num1511 = 30f;
                                        float num1512 = 100f;
                                        float num1513 = 20f;
                                        float num1514 = 0f;
                                        float num1515 = 7f;
                                        bool flag137 = true;
                                        if (npc.type == 418)
                                        {
                                            num1505 = 0.3f;
                                            num1506 = 8f;
                                            scaleFactor16 = 300f;
                                            num1507 = 800f;
                                            num1508 = 60f;
                                            num1509 = 5f;
                                            scaleFactor17 = 0.8f;
                                            num1510 = 0;
                                            scaleFactor18 = 10f;
                                            num1511 = 30f;
                                            num1512 = 150f;
                                            num1513 = 60f;
                                            num1514 = 0.333333343f;
                                            num1515 = 8f;
                                            flag137 = false;
                                        }
                                        num1514 *= num1513;
                                        if (Main.expertMode)
                                        {
                                            num1505 *= Main.expertKnockBack;
                                        }
                                        if (npc.ai[0] == 0f)
                                        {
                                            npc.knockBackResist = num1505;
                                            float scaleFactor19 = num1506;
                                            Vector2 center8 = npc.Center;
                                            Vector2 center9 = Main.player[npc.target].Center;
                                            Vector2 vector183 = center9 - center8;
                                            Vector2 vector184 = vector183 - Vector2.UnitY * scaleFactor16;
                                            float num1521 = vector183.Length();
                                            vector183 = Vector2.Normalize(vector183) * scaleFactor19;
                                            vector184 = Vector2.Normalize(vector184) * scaleFactor19;
                                            bool flag138 = Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1);
                                            if (npc.ai[3] >= 120f)
                                            {
                                                flag138 = true;
                                            }
                                            float num1522 = 8f;
                                            flag138 = (flag138 && vector183.ToRotation() > 3.14159274f / num1522 && vector183.ToRotation() < 3.14159274f - 3.14159274f / num1522);
                                            if (num1521 > num1507 || !flag138)
                                            {
                                                npc.velocity.X = (npc.velocity.X * (num1508 - 1f) + vector184.X) / num1508;
                                                npc.velocity.Y = (npc.velocity.Y * (num1508 - 1f) + vector184.Y) / num1508;
                                                if (!flag138)
                                                {
                                                    npc.ai[3] += 1f;
                                                    if (npc.ai[3] == 120f)
                                                    {
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else
                                                {
                                                    npc.ai[3] = 0f;
                                                }
                                            }
                                            else
                                            {
                                                npc.ai[0] = 1f;
                                                npc.ai[2] = vector183.X;
                                                npc.ai[3] = vector183.Y;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        else if (npc.ai[0] == 1f)
                                        {
                                            npc.knockBackResist = 0f;
                                            npc.velocity *= scaleFactor17;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= num1509)
                                            {
                                                npc.ai[0] = 2f;
                                                npc.ai[1] = 0f;
                                                npc.netUpdate = true;
                                                Vector2 velocity2 = new Vector2(npc.ai[2], npc.ai[3]) + new Vector2((float)Main.rand.Next(-num1510, num1510 + 1), (float)Main.rand.Next(-num1510, num1510 + 1)) * 0.04f;
                                                velocity2.Normalize();
                                                velocity2 *= scaleFactor18;
                                                npc.velocity = velocity2;
                                            }
                                        }
                                        else if (npc.ai[0] == 2f)
                                        {
                                            npc.knockBackResist = 0f;
                                            float num1524 = num1511;
                                            npc.ai[1] += 1f;
                                            bool flag139 = Vector2.Distance(npc.Center, Main.player[npc.target].Center) > num1512 && npc.Center.Y > Main.player[npc.target].Center.Y;
                                            if ((npc.ai[1] >= num1524 && flag139) || npc.velocity.Length() < num1515)
                                            {
                                                npc.ai[0] = 0f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] = 0f;
                                                npc.velocity /= 2f;
                                                npc.netUpdate = true;
                                                if (npc.type == 418)
                                                {
                                                    npc.ai[1] = 45f;
                                                    npc.ai[0] = 4f;
                                                }
                                            }
                                            else
                                            {
                                                Vector2 center10 = npc.Center;
                                                Vector2 center11 = Main.player[npc.target].Center;
                                                Vector2 vec4 = center11 - center10;
                                                vec4.Normalize();
                                                if (vec4.HasNaNs())
                                                {
                                                    vec4 = new Vector2((float)npc.direction, 0f);
                                                }
                                                npc.velocity = (npc.velocity * (num1513 - 1f) + vec4 * (npc.velocity.Length() + num1514)) / num1513;
                                            }
                                            if (flag137 && Collision.SolidCollision(npc.position, npc.width, npc.height))
                                            {
                                                npc.ai[0] = 3f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] = 0f;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        else if (npc.ai[0] == 4f)
                                        {
                                            npc.ai[1] -= 3f;
                                            if (npc.ai[1] <= 0f)
                                            {
                                                npc.ai[0] = 0f;
                                                npc.ai[1] = 0f;
                                                npc.netUpdate = true;
                                            }
                                            npc.velocity *= 0.95f;
                                        }
                                        if (flag137 && npc.ai[0] != 3f && Vector2.Distance(npc.Center, Main.player[npc.target].Center) < 64f)
                                        {
                                            npc.ai[0] = 3f;
                                            npc.ai[1] = 0f;
                                            npc.ai[2] = 0f;
                                            npc.ai[3] = 0f;
                                            npc.netUpdate = true;
                                        }
                                        if (npc.ai[0] == 3f)
                                        {
                                            npc.position = npc.Center;
                                            npc.width = (npc.height = 192);
                                            npc.position.X = npc.position.X - (float)(npc.width / 2);
                                            npc.position.Y = npc.position.Y - (float)(npc.height / 2);
                                            npc.velocity = Vector2.Zero;
                                            npc.damage = (int)(80f * Main.damageMultiplier);
                                            npc.alpha = 255;

                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 3f)
                                            {
                                                npc.life = 0;
                                                npc.HitEffect(0, 10.0);
                                                npc.active = false;
                                                return;
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 75)
                                    {
                                        int num1529 = -1;
                                        Vector2 vector185 = Vector2.Zero;
                                        int num1530 = 0;
                                        if (npc.type == 390)
                                        {
                                            if (npc.localAI[0] == 0f && Main.netMode != 1)
                                            {
                                                npc.localAI[0] = 1f;
                                                int num1531 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 391, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                npc.ai[0] = (float)num1531;
                                                npc.netUpdate = true;
                                            }
                                            int num1532 = (int)npc.ai[0];
                                            if (Main.npc[num1532].active && Main.npc[num1532].type == 391)
                                            {
                                                if (npc.timeLeft < 60)
                                                {
                                                    npc.timeLeft = 60;
                                                }
                                                num1529 = num1532;
                                                vector185 = Vector2.UnitY * -14f;
                                            }
                                        }
                                        if (npc.type == 416)
                                        {
                                            if (npc.localAI[0] == 0f && Main.netMode != 1)
                                            {
                                                npc.localAI[0] = 1f;
                                                int num1533 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 415, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                npc.ai[0] = (float)num1533;
                                                npc.netUpdate = true;
                                            }
                                            int num1534 = (int)npc.ai[0];
                                            if (Main.npc[num1534].active && Main.npc[num1534].type == 415)
                                            {
                                                if (npc.timeLeft < 60)
                                                {
                                                    npc.timeLeft = 60;
                                                }
                                                num1529 = num1534;
                                                vector185 = new Vector2((float)(-(float)Main.npc[num1534].spriteDirection * 10), -30f);
                                            }
                                        }
                                        else if (npc.type == 392)
                                        {
                                            int num1535 = (int)npc.ai[0];
                                            if (Main.npc[num1535].active && Main.npc[num1535].type == 395)
                                            {
                                                if (npc.timeLeft < 60)
                                                {
                                                    npc.timeLeft = 60;
                                                }
                                                num1529 = num1535;
                                                vector185 = Vector2.UnitY * 2f;
                                                vector185 *= Main.npc[num1535].scale;
                                                float num1536 = Main.npc[num1535].rotation;
                                                vector185 = vector185.RotatedBy((double)num1536, default(Vector2));
                                                npc.rotation = num1536;
                                                if (Main.netMode != 1)
                                                {
                                                    bool flag140 = true;
                                                    if (Main.npc[num1535].ai[0] >= 1f || Main.npc[num1535].ai[0] < 0f)
                                                    {
                                                        flag140 = false;
                                                    }
                                                    if (flag140)
                                                    {
                                                        for (int num1537 = 0; num1537 < 2; num1537++)
                                                        {
                                                            if (Main.npc[(int)npc.localAI[num1537]].active && Main.npc[(int)npc.localAI[num1537]].type == 393)
                                                            {
                                                                flag140 = false;
                                                            }
                                                        }
                                                        for (int num1538 = 2; num1538 < 4; num1538++)
                                                        {
                                                            if (Main.npc[(int)npc.localAI[num1538]].active && Main.npc[(int)npc.localAI[num1538]].type == 394)
                                                            {
                                                                flag140 = false;
                                                            }
                                                        }
                                                    }
                                                    if (flag140)
                                                    {
                                                        Main.npc[num1535].ai[0] = 1f;
                                                        Main.npc[num1535].ai[1] = 0f;
                                                        Main.npc[num1535].ai[2] = 0f;
                                                        Main.npc[num1535].ai[3] = 0f;
                                                        Main.npc[num1535].netUpdate = true;
                                                    }
                                                }
                                            }
                                        }
                                        else if (npc.type == 393)
                                        {
                                            int num1539 = (int)npc.ai[0];
                                            if (Main.npc[num1539].active && Main.npc[num1539].type == 395)
                                            {
                                                if (npc.timeLeft < 60)
                                                {
                                                    npc.timeLeft = 60;
                                                }
                                                num1529 = num1539;
                                                vector185 = Vector2.UnitY * 29f + ((npc.ai[1] == 1f) ? Vector2.UnitX : (-Vector2.UnitX)) * 60f;
                                                vector185 *= Main.npc[num1539].scale;
                                                float num1540 = Main.npc[num1539].rotation;
                                                vector185 = vector185.RotatedBy((double)num1540, default(Vector2));
                                                npc.rotation = num1540;
                                            }
                                        }
                                        else if (npc.type == 394)
                                        {
                                            int num1541 = (int)npc.ai[0];
                                            if (Main.npc[num1541].active && Main.npc[num1541].type == 395)
                                            {
                                                if (npc.timeLeft < 60)
                                                {
                                                    npc.timeLeft = 60;
                                                }
                                                num1529 = num1541;
                                                vector185 = Vector2.UnitY * -13f + ((npc.ai[1] == 1f) ? Vector2.UnitX : (-Vector2.UnitX)) * 49f;
                                                vector185 *= Main.npc[num1541].scale;
                                                float num1542 = Main.npc[num1541].rotation;
                                                vector185 = vector185.RotatedBy((double)num1542, default(Vector2));
                                                npc.rotation = num1542;
                                                num1530 = ((npc.ai[1] == 1f) ? 1 : -1);
                                            }
                                        }
                                        else if (npc.type == 492)
                                        {
                                            int num1543 = (int)npc.ai[0];
                                            if (Main.npc[num1543].active && Main.npc[num1543].type == 491)
                                            {
                                                if (npc.timeLeft < 60)
                                                {
                                                    npc.timeLeft = 60;
                                                }
                                                num1529 = num1543;
                                                vector185 = new Vector2((-122f + 68f * npc.ai[1]) * (float)((Main.npc[num1543].spriteDirection == 1) ? -1 : 1), -6f);
                                                vector185 *= Main.npc[num1543].scale;
                                                float num1544 = Main.npc[num1543].rotation;
                                                vector185 = vector185.RotatedBy((double)num1544, default(Vector2));
                                                npc.rotation = num1544;
                                            }
                                        }
                                        if (num1529 != -1)
                                        {
                                            NPC nPC7 = Main.npc[num1529];
                                            npc.velocity = Vector2.Zero;
                                            npc.position = nPC7.Center;
                                            npc.position.X = npc.position.X - (float)(npc.width / 2);
                                            npc.position.Y = npc.position.Y - (float)(npc.height / 2);
                                            npc.position += vector185;
                                            npc.gfxOffY = nPC7.gfxOffY;
                                            npc.direction = nPC7.direction;
                                            if (num1530 == 0)
                                            {
                                                npc.spriteDirection = nPC7.spriteDirection;
                                            }
                                            else
                                            {
                                                npc.spriteDirection = num1530;
                                            }
                                            if (npc.type == 390)
                                            {
                                                npc.timeLeft = nPC7.timeLeft;
                                                npc.velocity = nPC7.velocity;
                                                npc.target = nPC7.target;
                                                if (npc.ai[1] < 60f)
                                                {
                                                    npc.ai[1] += 1f;
                                                }
                                                if (npc.justHit)
                                                {
                                                    npc.ai[1] = -30f;
                                                }
                                                int num1545 = 438;
                                                int num1546 = 30;
                                                float scaleFactor20 = 7f;
                                                if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                                {
                                                    Vector2 vector186 = Main.player[npc.target].Center - npc.Center;
                                                    Vector2 vector187 = Vector2.Normalize(vector186);
                                                    float num1547 = vector186.Length();
                                                    float num1548 = 700f;
                                                    if (npc.type == 214)
                                                    {
                                                        num1548 = 550f;
                                                    }
                                                    if (npc.type == 215)
                                                    {
                                                        num1548 = 800f;
                                                    }
                                                    if (num1547 < num1548)
                                                    {
                                                        if (npc.ai[1] == 60f && Math.Sign(vector186.X) == npc.direction)
                                                        {
                                                            npc.ai[1] = -60f;
                                                            Vector2 center12 = Main.player[npc.target].Center;
                                                            Vector2 value26 = npc.Center - Vector2.UnitY * 4f;
                                                            Vector2 vector188 = center12 - value26;
                                                            vector188.X += (float)Main.rand.Next(-50, 51);
                                                            vector188.Y += (float)Main.rand.Next(-50, 51);
                                                            vector188.X *= (float)Main.rand.Next(80, 121) * 0.01f;
                                                            vector188.Y *= (float)Main.rand.Next(80, 121) * 0.01f;
                                                            vector188.Normalize();
                                                            if (float.IsNaN(vector188.X) || float.IsNaN(vector188.Y))
                                                            {
                                                                vector188 = -Vector2.UnitY;
                                                            }
                                                            vector188 *= scaleFactor20;
                                                            Projectile.NewProjectile(value26.X, value26.Y, vector188.X, vector188.Y, num1545, num1546, 0f, Main.myPlayer, 0f, 0f);
                                                            npc.netUpdate = true;
                                                        }
                                                        else
                                                        {
                                                            float num1549 = npc.ai[2];
                                                            npc.velocity.X = npc.velocity.X * 0.5f;
                                                            npc.ai[2] = 3f;
                                                            if (Math.Abs(vector187.Y) > Math.Abs(vector187.X) * 2f)
                                                            {
                                                                if (vector187.Y > 0f)
                                                                {
                                                                    npc.ai[2] = 1f;
                                                                }
                                                                else
                                                                {
                                                                    npc.ai[2] = 5f;
                                                                }
                                                            }
                                                            else if (Math.Abs(vector187.X) > Math.Abs(vector187.Y) * 2f)
                                                            {
                                                                npc.ai[2] = 3f;
                                                            }
                                                            else if (vector187.Y > 0f)
                                                            {
                                                                npc.ai[2] = 2f;
                                                            }
                                                            else
                                                            {
                                                                npc.ai[2] = 4f;
                                                            }
                                                            if (npc.ai[2] != num1549)
                                                            {
                                                                npc.netUpdate = true;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            if (npc.type == 492)
                                            {
                                                npc.timeLeft = nPC7.timeLeft;
                                                npc.velocity = nPC7.velocity;
                                                if (npc.ai[3] < 240f)
                                                {
                                                    npc.ai[3] += 1f;
                                                }
                                                if (npc.ai[3] == 2f)
                                                {
                                                    npc.TargetClosest(false);
                                                }
                                                if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                                                {
                                                    Vector2 vector189 = Main.player[npc.target].Center - npc.Center;
                                                    Vector2.Normalize(vector189);
                                                    if (npc.ai[3] >= 240f)
                                                    {
                                                        npc.ai[3] = 0f;
                                                        Vector2 center13 = Main.player[npc.target].Center;
                                                        Vector2 center14 = npc.Center;
                                                        Vector2 value27 = Vector2.Normalize(center13 - center14);
                                                        if (float.IsNaN(value27.X) || float.IsNaN(value27.Y))
                                                        {
                                                            value27 = Vector2.UnitY;
                                                        }
                                                        value27 *= 14f;
                                                        value27 += Vector2.UnitY * -5f;
                                                        if (Main.netMode != 1)
                                                        {
                                                            Projectile.NewProjectile(center14.X, center14.Y, value27.X, value27.Y, 240, 30, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                        npc.netUpdate = true;
                                                    }
                                                    else
                                                    {
                                                        float num1550 = npc.ai[2];
                                                        float[] array4 = new float[8];
                                                        for (int num1551 = 0; num1551 < array4.Length; num1551++)
                                                        {
                                                            array4[num1551] = Vector2.Distance(npc.Center + Vector2.UnitY.RotatedBy((double)((float)num1551 * -0.7853982f), default(Vector2)) * 50f, Main.player[npc.target].Center);
                                                        }
                                                        int num1552 = 0;
                                                        for (int num1553 = 1; num1553 < array4.Length; num1553++)
                                                        {
                                                            if (array4[num1552] > array4[num1553])
                                                            {
                                                                num1552 = num1553;
                                                            }
                                                        }
                                                        npc.ai[2] = (float)(num1552 + 1);
                                                        if (npc.spriteDirection == 1)
                                                        {
                                                            npc.ai[2] = 9f - npc.ai[2];
                                                        }
                                                        if (npc.ai[2] != num1550)
                                                        {
                                                            npc.netUpdate = true;
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    if (npc.ai[2] != 0f)
                                                    {
                                                        npc.netUpdate = true;
                                                    }
                                                    npc.ai[2] = 0f;
                                                }
                                            }
                                            if (npc.type == 394)
                                            {
                                                npc.timeLeft = nPC7.timeLeft;
                                                int num1554 = 50;
                                                if (Main.expertMode)
                                                {
                                                    num1554 = 37;
                                                }
                                                npc.ai[3] = nPC7.ai[3];
                                                float num1555 = 440f;
                                                float num1556 = 140f;
                                                if (npc.ai[3] >= num1555 && npc.ai[3] < num1555 + num1556)
                                                {
                                                    float num1557 = npc.ai[3] - num1555;
                                                    if (num1557 % 20f == 0f)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 spinningpoint2 = (float)num1530 * Vector2.UnitX;
                                                            spinningpoint2 = spinningpoint2.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
                                                            spinningpoint2 *= 8f;
                                                            Vector2 vector190 = (float)num1530 * Vector2.UnitX * 36f + npc.Center + Vector2.UnitY * 8f;
                                                            Projectile.NewProjectile(vector190.X, vector190.Y, spinningpoint2.X, spinningpoint2.Y, 448, num1554, 0f, Main.myPlayer, 0f, 20f);
                                                        }
                                                    }
                                                }
                                            }
                                            if (npc.type == 393)
                                            {
                                                npc.timeLeft = nPC7.timeLeft;
                                                int num1558 = 35;
                                                if (Main.expertMode)
                                                {
                                                    num1558 = 30;
                                                }
                                                npc.ai[3] = nPC7.ai[3];
                                                float num1559 = 280f;
                                                float num1560 = 140f;
                                                bool flag141 = npc.ai[3] >= num1559 && npc.ai[3] < num1559 + num1560;
                                                if (!flag141)
                                                {
                                                    npc.TargetClosest(false);
                                                    Player player7 = Main.player[npc.target];
                                                    Vector2 v = player7.Center - npc.Center;
                                                    if (v.Y < 0f)
                                                    {
                                                        v.Y = 0f;
                                                    }
                                                    v.Normalize();
                                                    if (float.IsNaN(v.X) || float.IsNaN(v.Y))
                                                    {
                                                        v = Vector2.UnitY;
                                                    }
                                                    npc.ai[2] = v.ToRotation();
                                                }
                                                if (flag141)
                                                {
                                                    float num1561 = npc.ai[3] - num1559;
                                                    if (num1561 % 6f == 0f)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 spinningpoint3 = npc.ai[2].ToRotationVector2();
                                                            spinningpoint3 = spinningpoint3.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331 / 3.0, default(Vector2));
                                                            spinningpoint3 *= 16f;
                                                            Vector2 vector191 = npc.Center + spinningpoint3 * 1f;
                                                            Projectile.NewProjectile(vector191.X, vector191.Y, spinningpoint3.X, spinningpoint3.Y, 449, num1558, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                }
                                            }
                                            if (npc.type == 392)
                                            {
                                                npc.timeLeft = nPC7.timeLeft;
                                                int num1562 = 70;
                                                if (Main.expertMode)
                                                {
                                                    num1562 = 50;
                                                }
                                                npc.ai[3] = nPC7.ai[3];
                                                float num1563 = 20f;
                                                float num1564 = 240f;
                                                bool flag142 = npc.ai[3] >= num1563 && npc.ai[3] < num1563 + num1564 && nPC7.ai[0] == 0f;
                                                if (flag142)
                                                {
                                                    float num1565 = npc.ai[3] - num1563;
                                                    if (num1565 == 0f)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 center15 = npc.Center;
                                                            Projectile.NewProjectile(center15.X, center15.Y, 0f, 0f, 447, num1562, 0f, Main.myPlayer, (float)(npc.whoAmI + 1), 0f);
                                                        }
                                                    }
                                                }
                                                flag142 = false;
                                                int maxValue10 = 1000;
                                                int maxValue11 = 1000;
                                                int num1566 = 450;
                                                int num1567 = 30;
                                                if (Main.expertMode)
                                                {
                                                    num1567 = 25;
                                                }
                                                if (nPC7.ai[0] == 2f)
                                                {
                                                    flag142 = true;
                                                    maxValue11 = 120;
                                                    maxValue10 = 120;
                                                }
                                                if (!flag142)
                                                {
                                                    num1563 = 280f;
                                                    num1564 = 120f;
                                                    flag142 = (flag142 || (npc.ai[3] >= num1563 && npc.ai[3] < num1563 + num1564));
                                                    if (flag142)
                                                    {
                                                        maxValue11 = 90;
                                                        maxValue10 = 60;
                                                    }
                                                }
                                                if (!flag142)
                                                {
                                                    num1563 = 440f;
                                                    num1564 = 140f;
                                                    flag142 = (flag142 || (npc.ai[3] >= num1563 && npc.ai[3] < num1563 + num1564));
                                                    if (flag142)
                                                    {
                                                        maxValue11 = 60;
                                                        maxValue10 = 90;
                                                    }
                                                }
                                                bool flag143 = true;
                                                bool flag144 = true;
                                                bool flag145 = true;
                                                bool flag146 = true;
                                                if (Main.npc[(int)npc.localAI[0]].active && Main.npc[(int)npc.localAI[0]].type == 393)
                                                {
                                                    flag143 = false;
                                                }
                                                if (Main.npc[(int)npc.localAI[1]].active && Main.npc[(int)npc.localAI[1]].type == 393)
                                                {
                                                    flag144 = false;
                                                }
                                                if (Main.npc[(int)npc.localAI[2]].active && Main.npc[(int)npc.localAI[2]].type == 394)
                                                {
                                                    flag145 = false;
                                                }
                                                if (Main.npc[(int)npc.localAI[3]].active && Main.npc[(int)npc.localAI[3]].type == 394)
                                                {
                                                    flag146 = false;
                                                }
                                                if (flag142)
                                                {
                                                    bool flag147 = flag143;
                                                    if (flag147 && Main.rand.Next(maxValue10) == 0)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 spinningpoint4 = new Vector2(-1f * (float)Main.rand.NextDouble() * 3f, 1f);
                                                            spinningpoint4 = spinningpoint4.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
                                                            spinningpoint4 *= 3f;
                                                            Vector2 vector192 = -1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + npc.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
                                                            Projectile.NewProjectile(vector192.X, vector192.Y, spinningpoint4.X, spinningpoint4.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                    flag147 = flag144;
                                                    if (flag147 && Main.rand.Next(maxValue10) == 0)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 spinningpoint5 = new Vector2(1f * (float)Main.rand.NextDouble() * 3f, 1f);
                                                            spinningpoint5 = spinningpoint5.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
                                                            spinningpoint5 *= 3f;
                                                            Vector2 vector193 = 1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + npc.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
                                                            Projectile.NewProjectile(vector193.X, vector193.Y, spinningpoint5.X, spinningpoint5.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                }
                                                if (flag142)
                                                {
                                                    bool flag148 = flag145;
                                                    if (flag148 && Main.rand.Next(maxValue11) == 0)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 spinningpoint6 = new Vector2(-1f * (float)Main.rand.NextDouble() * 2f, -1f);
                                                            spinningpoint6 = spinningpoint6.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
                                                            spinningpoint6 *= 3f;
                                                            Vector2 vector194 = -1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + npc.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
                                                            Projectile.NewProjectile(vector194.X, vector194.Y, spinningpoint6.X, spinningpoint6.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                    flag148 = flag146;
                                                    if (flag148 && Main.rand.Next(maxValue11) == 0)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            Vector2 spinningpoint7 = new Vector2(1f * (float)Main.rand.NextDouble() * 2f, -1f);
                                                            spinningpoint7 = spinningpoint7.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
                                                            spinningpoint7 *= 3f;
                                                            Vector2 vector195 = 1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + npc.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
                                                            Projectile.NewProjectile(vector195.X, vector195.Y, spinningpoint7.X, spinningpoint7.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                }
                                                if (flag146 && Main.rand.Next(8) == 0)
                                                {
                                                    return;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (npc.type == 390)
                                            {
                                                npc.Transform(382);
                                                return;
                                            }
                                            if (npc.type == 416)
                                            {
                                                npc.Transform(518);
                                                return;
                                            }
                                            npc.life = 0;
                                            npc.HitEffect(0, 10.0);
                                            npc.active = false;
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 76)
                                    {
                                        if (npc.localAI[3] == 0f && Main.netMode != 1 && npc.type == 395)
                                        {
                                            npc.localAI[3] = 1f;
                                            int[] array5 = new int[4];
                                            int num1572 = 0;
                                            for (int num1573 = 0; num1573 < 2; num1573++)
                                            {
                                                int num1574 = NPC.NewNPC((int)npc.Center.X + num1573 * 300 - 150, (int)npc.Center.Y, 393, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                Main.npc[num1574].ai[1] = (float)num1573;
                                                Main.npc[num1574].netUpdate = true;
                                                array5[num1572++] = num1574;
                                            }
                                            for (int num1575 = 0; num1575 < 2; num1575++)
                                            {
                                                int num1576 = NPC.NewNPC((int)npc.Center.X + num1575 * 300 - 150, (int)npc.Center.Y, 394, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                Main.npc[num1576].ai[1] = (float)num1575;
                                                Main.npc[num1576].netUpdate = true;
                                                array5[num1572++] = num1576;
                                            }
                                            int num1577 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 392, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                            Main.npc[num1577].ai[0] = (float)npc.whoAmI;
                                            Main.npc[num1577].netUpdate = true;
                                            for (int num1578 = 0; num1578 < 4; num1578++)
                                            {
                                                Main.npc[array5[num1578]].ai[0] = (float)npc.whoAmI;
                                            }
                                            for (int num1579 = 0; num1579 < 4; num1579++)
                                            {
                                                Main.npc[num1577].localAI[num1579] = (float)array5[num1579];
                                            }
                                        }
                                        Vector2 center16 = npc.Center;
                                        Player player8 = Main.player[npc.target];
                                        if (npc.target < 0 || npc.target == 255 || player8.dead || !player8.active)
                                        {
                                            npc.TargetClosest(true);
                                            player8 = Main.player[npc.target];
                                            npc.netUpdate = true;
                                        }
                                        if ((player8.dead || Vector2.Distance(player8.Center, center16) > 3200f) && npc.ai[0] != 1f)
                                        {
                                            if (npc.ai[0] == 0f)
                                            {
                                                npc.ai[0] = -1f;
                                            }
                                            if (npc.ai[0] == 2f)
                                            {
                                                npc.ai[0] = -2f;
                                            }
                                            npc.netUpdate = true;
                                        }
                                        if (npc.ai[0] == -1f || npc.ai[0] == -2f)
                                        {
                                            npc.velocity.Y = npc.velocity.Y - 0.4f;
                                            if (npc.timeLeft > 10)
                                            {
                                                npc.timeLeft = 10;
                                            }
                                            if (!player8.dead)
                                            {
                                                npc.timeLeft = 300;
                                                if (npc.ai[0] == -2f)
                                                {
                                                    npc.ai[0] = 2f;
                                                }
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.ai[0] = 0f;
                                                }
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 0f)
                                        {
                                            int num1580 = 0;
                                            if (npc.ai[3] >= 580f)
                                            {
                                                num1580 = 0;
                                            }
                                            else if (npc.ai[3] >= 440f)
                                            {
                                                num1580 = 5;
                                            }
                                            else if (npc.ai[3] >= 420f)
                                            {
                                                num1580 = 4;
                                            }
                                            else if (npc.ai[3] >= 280f)
                                            {
                                                num1580 = 3;
                                            }
                                            else if (npc.ai[3] >= 260f)
                                            {
                                                num1580 = 2;
                                            }
                                            else if (npc.ai[3] >= 20f)
                                            {
                                                num1580 = 1;
                                            }
                                            npc.ai[3] += 1f;
                                            if (npc.ai[3] >= 600f)
                                            {
                                                npc.ai[3] = 0f;
                                            }
                                            int num1581 = num1580;
                                            if (npc.ai[3] >= 580f)
                                            {
                                                num1580 = 0;
                                            }
                                            else if (npc.ai[3] >= 440f)
                                            {
                                                num1580 = 5;
                                            }
                                            else if (npc.ai[3] >= 420f)
                                            {
                                                num1580 = 4;
                                            }
                                            else if (npc.ai[3] >= 280f)
                                            {
                                                num1580 = 3;
                                            }
                                            else if (npc.ai[3] >= 260f)
                                            {
                                                num1580 = 2;
                                            }
                                            else if (npc.ai[3] >= 20f)
                                            {
                                                num1580 = 1;
                                            }
                                            if (num1580 != num1581)
                                            {
                                                if (num1580 == 0)
                                                {
                                                    npc.ai[2] = 0f;
                                                }
                                                if (num1580 == 1)
                                                {
                                                    npc.ai[2] = (float)((Math.Sign((player8.Center - center16).X) == 1) ? 1 : -1);
                                                }
                                                if (num1580 == 2)
                                                {
                                                    npc.ai[2] = 0f;
                                                }
                                                npc.netUpdate = true;
                                            }
                                            if (num1580 == 0)
                                            {
                                                if (npc.ai[2] == 0f)
                                                {
                                                    npc.ai[2] = (float)(-600 * Math.Sign((center16 - player8.Center).X));
                                                }
                                                Vector2 vector196 = player8.Center + new Vector2(npc.ai[2], -250f) - center16;
                                                if (vector196.Length() < 50f)
                                                {
                                                    npc.ai[3] = 19f;
                                                }
                                                else
                                                {
                                                    vector196.Normalize();
                                                    npc.velocity = Vector2.Lerp(npc.velocity, vector196 * 16f, 0.1f);
                                                }
                                            }
                                            if (num1580 == 1)
                                            {
                                                int num1582 = (int)npc.Center.X / 16;
                                                int num1583 = (int)(npc.position.Y + (float)npc.height) / 16;
                                                int num1584 = 0;
                                                bool flag149 = Main.tile[num1582, num1583].nactive() && Main.tileSolid[(int)Main.tile[num1582, num1583].type] && !Main.tileSolidTop[(int)Main.tile[num1582, num1583].type];
                                                if (flag149)
                                                {
                                                    num1584 = 1;
                                                }
                                                else
                                                {
                                                    while (num1584 < 150 && num1583 + num1584 < Main.maxTilesY)
                                                    {
                                                        int num1585 = num1583 + num1584;
                                                        bool flag150 = Main.tile[num1582, num1585].nactive() && Main.tileSolid[(int)Main.tile[num1582, num1585].type] && !Main.tileSolidTop[(int)Main.tile[num1582, num1585].type];
                                                        if (flag150)
                                                        {
                                                            num1584--;
                                                            break;
                                                        }
                                                        num1584++;
                                                    }
                                                }
                                                float num1586 = (float)(num1584 * 16);
                                                float num1587 = 250f;
                                                if (num1586 < num1587)
                                                {
                                                    float num1588 = -4f;
                                                    if (-num1588 > num1586)
                                                    {
                                                        num1588 = -num1586;
                                                    }
                                                    npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, num1588, 0.05f);
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                                                }
                                                npc.velocity.X = 3.5f * npc.ai[2];
                                            }
                                            if (num1580 == 2)
                                            {
                                                if (npc.ai[2] == 0f)
                                                {
                                                    npc.ai[2] = (float)(300 * Math.Sign((center16 - player8.Center).X));
                                                }
                                                Vector2 vector197 = player8.Center + new Vector2(npc.ai[2], -170f) - center16;
                                                int num1589 = (int)npc.Center.X / 16;
                                                int num1590 = (int)(npc.position.Y + (float)npc.height) / 16;
                                                int num1591 = 0;
                                                bool flag151 = Main.tile[num1589, num1590].nactive() && Main.tileSolid[(int)Main.tile[num1589, num1590].type] && !Main.tileSolidTop[(int)Main.tile[num1589, num1590].type];
                                                if (flag151)
                                                {
                                                    num1591 = 1;
                                                }
                                                else
                                                {
                                                    while (num1591 < 150 && num1590 + num1591 < Main.maxTilesY)
                                                    {
                                                        int num1592 = num1590 + num1591;
                                                        bool flag152 = Main.tile[num1589, num1592].nactive() && Main.tileSolid[(int)Main.tile[num1589, num1592].type] && !Main.tileSolidTop[(int)Main.tile[num1589, num1592].type];
                                                        if (flag152)
                                                        {
                                                            num1591--;
                                                            break;
                                                        }
                                                        num1591++;
                                                    }
                                                }
                                                float num1593 = (float)(num1591 * 16);
                                                float num1594 = 170f;
                                                if (num1593 < num1594)
                                                {
                                                    vector197.Y -= num1594 - num1593;
                                                }
                                                if (vector197.Length() < 70f)
                                                {
                                                    npc.ai[3] = 279f;
                                                }
                                                else
                                                {
                                                    vector197.Normalize();
                                                    npc.velocity = Vector2.Lerp(npc.velocity, vector197 * 20f, 0.1f);
                                                }
                                            }
                                            else if (num1580 == 3)
                                            {
                                                float num1595 = 0.85f;
                                                int num1596 = (int)npc.Center.X / 16;
                                                int num1597 = (int)(npc.position.Y + (float)npc.height) / 16;
                                                int num1598 = 0;
                                                bool flag153 = Main.tile[num1596, num1597].nactive() && Main.tileSolid[(int)Main.tile[num1596, num1597].type] && !Main.tileSolidTop[(int)Main.tile[num1596, num1597].type];
                                                if (flag153)
                                                {
                                                    num1598 = 1;
                                                }
                                                else
                                                {
                                                    while (num1598 < 150 && num1597 + num1598 < Main.maxTilesY)
                                                    {
                                                        int num1599 = num1597 + num1598;
                                                        bool flag154 = Main.tile[num1596, num1599].nactive() && Main.tileSolid[(int)Main.tile[num1596, num1599].type] && !Main.tileSolidTop[(int)Main.tile[num1596, num1599].type];
                                                        if (flag154)
                                                        {
                                                            num1598--;
                                                            break;
                                                        }
                                                        num1598++;
                                                    }
                                                }
                                                float num1600 = (float)(num1598 * 16);
                                                float num1601 = 170f;
                                                if (num1600 < num1601)
                                                {
                                                    float num1602 = -4f;
                                                    if (-num1602 > num1600)
                                                    {
                                                        num1602 = -num1600;
                                                    }
                                                    npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, num1602, 0.05f);
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * num1595;
                                                }
                                                npc.velocity.X = npc.velocity.X * num1595;
                                            }
                                            if (num1580 == 4)
                                            {
                                                Vector2 vector198 = player8.Center + new Vector2(0f, -250f) - center16;
                                                if (vector198.Length() < 50f)
                                                {
                                                    npc.ai[3] = 439f;
                                                    return;
                                                }
                                                vector198.Normalize();
                                                npc.velocity = Vector2.Lerp(npc.velocity, vector198 * 16f, 0.1f);
                                                return;
                                            }
                                            else if (num1580 == 5)
                                            {
                                                npc.velocity *= 0.85f;
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 1f)
                                        {
                                            npc.dontTakeDamage = false;
                                            npc.velocity *= 0.96f;
                                            float num1603 = 150f;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= num1603)
                                            {
                                                npc.ai[0] = 2f;
                                                npc.ai[1] = 0f;
                                                npc.rotation = 0f;
                                                npc.netUpdate = true;
                                                return;
                                            }
                                            if (npc.ai[1] < 40f)
                                            {
                                                npc.rotation = Vector2.UnitY.RotatedBy((double)(npc.ai[1] / 40f * 6.28318548f), default(Vector2)).Y * 0.2f;
                                                return;
                                            }
                                            if (npc.ai[1] < 80f)
                                            {
                                                npc.rotation = Vector2.UnitY.RotatedBy((double)(npc.ai[1] / 20f * 6.28318548f), default(Vector2)).Y * 0.3f;
                                                return;
                                            }
                                            if (npc.ai[1] < 120f)
                                            {
                                                npc.rotation = Vector2.UnitY.RotatedBy((double)(npc.ai[1] / 10f * 6.28318548f), default(Vector2)).Y * 0.4f;
                                                return;
                                            }
                                            npc.rotation = (npc.ai[1] - 120f) / 30f * 6.28318548f;
                                            return;
                                        }
                                        else if (npc.ai[0] == 2f)
                                        {
                                            int num1604 = 100;
                                            float num1605 = 3600f;
                                            float num1606 = 120f;
                                            float num1607 = 60f;
                                            int num1608 = 0;
                                            if (npc.ai[3] % num1606 >= num1607)
                                            {
                                                num1608 = 1;
                                            }
                                            int num1609 = num1608;
                                            num1608 = 0;
                                            npc.ai[3] += 1f;
                                            if (npc.ai[3] % num1606 >= num1607)
                                            {
                                                num1608 = 1;
                                            }
                                            if (num1608 != num1609)
                                            {
                                                if (num1608 == 1)
                                                {
                                                    npc.ai[2] = (float)((Math.Sign((player8.Center - center16).X) == 1) ? 1 : -1);
                                                    if (Main.netMode != 1)
                                                    {
                                                        Vector2 center17 = npc.Center;
                                                        Projectile.NewProjectile(center17.X, center17.Y, 0f, 0f, 447, num1604, 0f, Main.myPlayer, (float)(npc.whoAmI + 1), 0f);
                                                    }
                                                }
                                                npc.netUpdate = true;
                                            }
                                            if (npc.ai[3] >= num1605)
                                            {
                                                npc.ai[0] = 2f;
                                                npc.ai[1] = 0f;
                                                npc.ai[2] = 0f;
                                                npc.ai[3] = 0f;
                                                npc.netUpdate = true;
                                            }
                                            else if (num1608 == 0)
                                            {
                                                Vector2 vector199 = player8.Center + new Vector2(npc.ai[2] * 350f, -250f) - center16;
                                                vector199.Normalize();
                                                npc.velocity = Vector2.Lerp(npc.velocity, vector199 * 16f, 0.1f);
                                            }
                                            else
                                            {
                                                int num1610 = (int)npc.Center.X / 16;
                                                int num1611 = (int)(npc.position.Y + (float)npc.height) / 16;
                                                int num1612 = 0;
                                                bool flag155 = Main.tile[num1610, num1611].nactive() && Main.tileSolid[(int)Main.tile[num1610, num1611].type] && !Main.tileSolidTop[(int)Main.tile[num1610, num1611].type];
                                                if (flag155)
                                                {
                                                    num1612 = 1;
                                                }
                                                else
                                                {
                                                    while (num1612 < 150 && num1611 + num1612 < Main.maxTilesY)
                                                    {
                                                        int num1613 = num1611 + num1612;
                                                        bool flag156 = Main.tile[num1610, num1613].nactive() && Main.tileSolid[(int)Main.tile[num1610, num1613].type] && !Main.tileSolidTop[(int)Main.tile[num1610, num1613].type];
                                                        if (flag156)
                                                        {
                                                            num1612--;
                                                            break;
                                                        }
                                                        num1612++;
                                                    }
                                                }
                                                float num1614 = (float)(num1612 * 16);
                                                float num1615 = 250f;
                                                if (num1614 < num1615)
                                                {
                                                    float num1616 = -4f;
                                                    if (-num1616 > num1614)
                                                    {
                                                        num1616 = -num1614;
                                                    }
                                                    npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, num1616, 0.05f);
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                                                }
                                                npc.velocity.X = 8f * npc.ai[2];
                                            }
                                            npc.rotation = 0f;
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 77)
                                    {
                                        if (npc.localAI[3] == 0f)
                                        {
                                            npc.netUpdate = true;
                                            npc.localAI[3] = 1f;
                                            npc.ai[0] = -1f;
                                        }
                                        if (npc.ai[0] == -2f)
                                        {
                                            npc.dontTakeDamage = true;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] < 60f)
                                            {
                                                MoonlordDeathDrama.RequestLight(npc.ai[1] / 30f, npc.Center);
                                            }
                                            if (npc.ai[1] == 60f)
                                            {
                                                npc.ai[1] = 0f;
                                                npc.ai[0] = 0f;
                                                if (Main.netMode != 1 && npc.type == 398)
                                                {
                                                    npc.ai[2] = (float)Main.rand.Next(3);
                                                    npc.ai[2] = 0f;
                                                    npc.netUpdate = true;
                                                }
                                            }
                                        }
                                        if (npc.ai[0] == -1f)
                                        {
                                            npc.dontTakeDamage = true;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] < 60f)
                                            {
                                                MoonlordDeathDrama.RequestLight(npc.ai[1] / 30f, npc.Center);
                                            }
                                            if (npc.ai[1] == 60f)
                                            {
                                                npc.ai[1] = 0f;
                                                npc.ai[0] = 0f;
                                                if (Main.netMode != 1 && npc.type == 398)
                                                {
                                                    npc.ai[2] = (float)Main.rand.Next(3);
                                                    npc.ai[2] = 0f;
                                                    npc.netUpdate = true;
                                                    int[] array6 = new int[3];
                                                    int num1617 = 0;
                                                    for (int num1618 = 0; num1618 < 2; num1618++)
                                                    {
                                                        int num1619 = NPC.NewNPC((int)npc.Center.X + num1618 * 800 - 400, (int)npc.Center.Y - 100, 397, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                        Main.npc[num1619].ai[2] = (float)num1618;
                                                        Main.npc[num1619].netUpdate = true;
                                                        array6[num1617++] = num1619;
                                                    }
                                                    int num1620 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y - 400, 396, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                    Main.npc[num1620].netUpdate = true;
                                                    array6[num1617++] = num1620;
                                                    for (int num1621 = 0; num1621 < 3; num1621++)
                                                    {
                                                        Main.npc[array6[num1621]].ai[3] = (float)npc.whoAmI;
                                                    }
                                                    for (int num1622 = 0; num1622 < 3; num1622++)
                                                    {
                                                        npc.localAI[num1622] = (float)array6[num1622];
                                                    }
                                                }
                                            }
                                        }
                                        if (npc.ai[0] == 0f)
                                        {
                                            npc.dontTakeDamage = true;
                                            npc.TargetClosest(false);
                                            Vector2 value28 = Main.player[npc.target].Center - npc.Center + new Vector2(0f, 130f);
                                            if (value28.Length() > 20f)
                                            {
                                                Vector2 desiredVelocity2 = Vector2.Normalize(value28 - npc.velocity) * 8f;
                                                Vector2 velocity3 = npc.velocity;
                                                npc.SimpleFlyMovement(desiredVelocity2, 0.5f);
                                                npc.velocity = Vector2.Lerp(npc.velocity, velocity3, 0.5f);
                                            }
                                            if (Main.netMode != 1)
                                            {
                                                bool flag157 = false;
                                                if (npc.localAI[0] < 0f || npc.localAI[1] < 0f || npc.localAI[2] < 0f)
                                                {
                                                    flag157 = true;
                                                }
                                                else if (!Main.npc[(int)npc.localAI[0]].active || Main.npc[(int)npc.localAI[0]].type != 397)
                                                {
                                                    flag157 = true;
                                                }
                                                else if (!Main.npc[(int)npc.localAI[1]].active || Main.npc[(int)npc.localAI[1]].type != 397)
                                                {
                                                    flag157 = true;
                                                }
                                                else if (!Main.npc[(int)npc.localAI[2]].active || Main.npc[(int)npc.localAI[2]].type != 396)
                                                {
                                                    flag157 = true;
                                                }
                                                if (flag157)
                                                {
                                                    npc.life = 0;
                                                    npc.HitEffect(0, 10.0);
                                                    npc.active = false;
                                                }
                                                bool flag158 = true;
                                                if (Main.npc[(int)npc.localAI[0]].ai[0] != -2f)
                                                {
                                                    flag158 = false;
                                                }
                                                if (Main.npc[(int)npc.localAI[1]].ai[0] != -2f)
                                                {
                                                    flag158 = false;
                                                }
                                                if (Main.npc[(int)npc.localAI[2]].ai[0] != -2f)
                                                {
                                                    flag158 = false;
                                                }
                                                if (flag158)
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.dontTakeDamage = false;
                                                    npc.netUpdate = true;
                                                }
                                            }
                                        }
                                        else if (npc.ai[0] == 1f)
                                        {
                                            npc.dontTakeDamage = false;
                                            npc.TargetClosest(false);
                                            Vector2 value29 = Main.player[npc.target].Center - npc.Center + new Vector2(0f, 130f);
                                            if (value29.Length() > 20f)
                                            {
                                                Vector2 desiredVelocity3 = Vector2.Normalize(value29 - npc.velocity) * 8f;
                                                Vector2 velocity4 = npc.velocity;
                                                npc.SimpleFlyMovement(desiredVelocity3, 0.5f);
                                                npc.velocity = Vector2.Lerp(npc.velocity, velocity4, 0.5f);
                                            }
                                        }
                                        else if (npc.ai[0] == 2f)
                                        {
                                            npc.dontTakeDamage = true;
                                            Vector2 value30 = new Vector2((float)npc.direction, -0.5f);
                                            npc.velocity = Vector2.Lerp(npc.velocity, value30, 0.98f);
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] < 60f)
                                            {
                                                MoonlordDeathDrama.RequestLight(npc.ai[1] / 60f, npc.Center);
                                            }
                                            if (npc.ai[1] == 60f)
                                            {
                                                for (int num1623 = 0; num1623 < 1000; num1623++)
                                                {
                                                    Projectile projectile = Main.projectile[num1623];
                                                    if (projectile.active && (projectile.type == 456 || projectile.type == 462 || projectile.type == 455 || projectile.type == 452 || projectile.type == 454))
                                                    {
                                                        projectile.Kill();
                                                    }
                                                }
                                                for (int num1624 = 0; num1624 < 200; num1624++)
                                                {
                                                    NPC nPC8 = Main.npc[num1624];
                                                    if (nPC8.active && nPC8.type == 400)
                                                    {
                                                        nPC8.HitEffect(0, 9999.0);
                                                        nPC8.active = false;
                                                    }
                                                }
                                            }
                                            if (npc.ai[1] % 3f == 0f && npc.ai[1] < 580f && npc.ai[1] > 60f)
                                            {
                                                Vector2 vector200 = Utils.RandomVector2(Main.rand, -1f, 1f);
                                                if (vector200 != Vector2.Zero)
                                                {
                                                    vector200.Normalize();
                                                }
                                                vector200 *= 20f + Main.rand.NextFloat() * 400f;
                                                bool flag159 = true;
                                                Vector2 vec5 = npc.Center + vector200;
                                                Point point7 = vec5.ToTileCoordinates();
                                                if (!WorldGen.InWorld(point7.X, point7.Y, 0))
                                                {
                                                    flag159 = false;
                                                }
                                                if (!flag159 || WorldGen.SolidTile(point7.X, point7.Y))
                                                {
                                                }
                                                float num1625 = (float)Main.rand.Next(6, 19);
                                                float num1626 = 6.28318548f / num1625;
                                                float num1627 = 6.28318548f * Main.rand.NextFloat();
                                                float scaleFactor21 = 1f + Main.rand.NextFloat() * 2f;
                                                float num1628 = 1f + Main.rand.NextFloat();
                                                float fadeIn = 0.4f + Main.rand.NextFloat();
                                                int num1629 = Utils.SelectRandom<int>(Main.rand, new int[]
											{
												31,
												229
											});
                                                for (float num1630 = 0f; num1630 < npc.ai[1] / 60f; num1630 += 1f)
                                                {
                                                    Vector2 vector201 = Utils.RandomVector2(Main.rand, -1f, 1f);
                                                    if (vector201 != Vector2.Zero)
                                                    {
                                                        vector201.Normalize();
                                                    }
                                                    vector201 *= 20f + Main.rand.NextFloat() * 800f;
                                                    Vector2 vector202 = npc.Center + vector201;
                                                    Point point8 = vector202.ToTileCoordinates();
                                                    bool flag160 = true;
                                                    if (!WorldGen.InWorld(point8.X, point8.Y, 0))
                                                    {
                                                        flag160 = false;
                                                    }
                                                    if (flag160 && WorldGen.SolidTile(point8.X, point8.Y))
                                                    {
                                                        flag160 = false;
                                                    }
                                                }
                                            }
                                            if (npc.ai[1] % 15f == 0f && npc.ai[1] < 480f && npc.ai[1] >= 90f && Main.netMode != 1)
                                            {
                                                Vector2 vector203 = Utils.RandomVector2(Main.rand, -1f, 1f);
                                                if (vector203 != Vector2.Zero)
                                                {
                                                    vector203.Normalize();
                                                }
                                                vector203 *= 20f + Main.rand.NextFloat() * 400f;
                                                bool flag161 = true;
                                                Vector2 vec6 = npc.Center + vector203;
                                                Point point9 = vec6.ToTileCoordinates();
                                                if (!WorldGen.InWorld(point9.X, point9.Y, 0))
                                                {
                                                    flag161 = false;
                                                }
                                                if (flag161 && WorldGen.SolidTile(point9.X, point9.Y))
                                                {
                                                    flag161 = false;
                                                }
                                                if (flag161)
                                                {
                                                    float num1631 = (float)(Main.rand.Next(4) < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
                                                    Vector2 vector204 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f).RotatedBy((double)num1631, default(Vector2)) * 6f;
                                                    Projectile.NewProjectile(vec6.X, vec6.Y, vector204.X, vector204.Y, 622, 0, 0f, Main.myPlayer, 0f, 0f);
                                                }
                                            }
                                            if (npc.ai[1] >= 480f)
                                            {
                                                MoonlordDeathDrama.RequestLight((npc.ai[1] - 480f) / 120f, npc.Center);
                                            }
                                            if (npc.ai[1] >= 600f)
                                            {
                                                npc.life = 0;
                                                npc.HitEffect(0, 1337.0);
                                                npc.checkDead();
                                                return;
                                            }
                                        }
                                        else if (npc.ai[0] == 3f)
                                        {
                                            npc.dontTakeDamage = true;
                                            Vector2 value31 = new Vector2((float)npc.direction, -0.5f);
                                            npc.velocity = Vector2.Lerp(npc.velocity, value31, 0.98f);
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] < 60f)
                                            {
                                                MoonlordDeathDrama.RequestLight(npc.ai[1] / 40f, npc.Center);
                                            }
                                            if (npc.ai[1] == 40f)
                                            {
                                                for (int num1632 = 0; num1632 < 1000; num1632++)
                                                {
                                                    Projectile projectile2 = Main.projectile[num1632];
                                                    if (projectile2.active && (projectile2.type == 456 || projectile2.type == 462 || projectile2.type == 455 || projectile2.type == 452 || projectile2.type == 454))
                                                    {
                                                        projectile2.active = false;
                                                        if (Main.netMode != 1)
                                                        {
                                                            NetMessage.SendData(27, -1, -1, null, num1632, 0f, 0f, 0f, 0, 0, 0);
                                                        }
                                                    }
                                                }
                                                for (int num1633 = 0; num1633 < 200; num1633++)
                                                {
                                                    NPC nPC9 = Main.npc[num1633];
                                                    if (nPC9.active && nPC9.type == 400)
                                                    {
                                                        nPC9.active = false;
                                                        if (Main.netMode != 1)
                                                        {
                                                            NetMessage.SendData(23, -1, -1, null, nPC9.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                                        }
                                                    }
                                                }
                                            }
                                            if (npc.ai[1] >= 60f)
                                            {
                                                for (int num1635 = 0; num1635 < 200; num1635++)
                                                {
                                                    NPC nPC10 = Main.npc[num1635];
                                                    if (nPC10.active && (nPC10.type == 400 || nPC10.type == 397 || nPC10.type == 396))
                                                    {
                                                        nPC10.active = false;
                                                        if (Main.netMode != 1)
                                                        {
                                                            NetMessage.SendData(23, -1, -1, null, nPC10.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                                        }
                                                    }
                                                }
                                                npc.active = false;
                                                if (Main.netMode != 1)
                                                {
                                                    NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                                }
                                                NPC.LunarApocalypseIsUp = false;
                                                if (Main.netMode == 2)
                                                {
                                                    NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
                                                }
                                                return;
                                            }
                                        }
                                        bool flag162 = false;
                                        if (npc.ai[0] == -2f || npc.ai[0] == -1f || npc.ai[0] == -2f || npc.ai[0] == 3f)
                                        {
                                            flag162 = true;
                                        }
                                        if (Main.player[npc.target].active && !Main.player[npc.target].dead)
                                        {
                                            flag162 = true;
                                        }
                                        if (!flag162)
                                        {
                                            for (int num1636 = 0; num1636 < 255; num1636++)
                                            {
                                                if (Main.player[num1636].active && !Main.player[num1636].dead)
                                                {
                                                    flag162 = true;
                                                    break;
                                                }
                                            }
                                        }
                                        if (!flag162)
                                        {
                                            npc.ai[0] = 3f;
                                            npc.ai[1] = 0f;
                                            npc.netUpdate = true;
                                        }
                                        if (npc.ai[0] >= 0f && npc.ai[0] < 2f && Main.netMode != 1 && npc.Distance(Main.player[npc.target].Center) > 2400f)
                                        {
                                            npc.ai[0] = -2f;
                                            npc.netUpdate = true;
                                            Vector2 value32 = Main.player[npc.target].Center - Vector2.UnitY * 150f - npc.Center;
                                            npc.position += value32;
                                            if (Main.npc[(int)npc.localAI[0]].active)
                                            {
                                                Main.npc[(int)npc.localAI[0]].position += value32;
                                                Main.npc[(int)npc.localAI[0]].netUpdate = true;
                                            }
                                            if (Main.npc[(int)npc.localAI[1]].active)
                                            {
                                                Main.npc[(int)npc.localAI[1]].position += value32;
                                                Main.npc[(int)npc.localAI[1]].netUpdate = true;
                                            }
                                            if (Main.npc[(int)npc.localAI[2]].active)
                                            {
                                                Main.npc[(int)npc.localAI[2]].position += value32;
                                                Main.npc[(int)npc.localAI[2]].netUpdate = true;
                                            }
                                            for (int num1637 = 0; num1637 < 200; num1637++)
                                            {
                                                NPC nPC11 = Main.npc[num1637];
                                                if (nPC11.active && nPC11.type == 400)
                                                {
                                                    nPC11.position += value32;
                                                    nPC11.netUpdate = true;
                                                }
                                            }
                                            return;
                                        }
                                    }
                                    else if (npc.aiStyle == 78)
                                    {
                                        NpcMgr.InitializeMoonLordAttacks();
                                        if (!Main.npc[(int)npc.ai[3]].active || Main.npc[(int)npc.ai[3]].type != 398)
                                        {
                                            npc.life = 0;
                                            npc.HitEffect(0, 10.0);
                                            npc.active = false;
                                        }
                                        bool flag163 = npc.ai[2] == 0f;
                                        float num1638 = (float)(-(float)flag163.ToDirectionInt());
                                        npc.spriteDirection = (int)num1638;
                                        npc.dontTakeDamage = (npc.frameCounter >= 21.0);
                                        Vector2 vector205 = new Vector2(30f, 66f);
                                        float num1639 = 0f;
                                        float num1640 = 0f;
                                        bool flag164 = true;
                                        int num1641 = 0;
                                        if (npc.ai[0] != -2f)
                                        {
                                            float num1642 = npc.ai[0];
                                            npc.ai[1] += 1f;
                                            int num1643 = (int)Main.npc[(int)npc.ai[3]].ai[2];
                                            int num1644 = flag163 ? 0 : 1;
                                            int num1645 = 0;
                                            int num1646 = 0;
                                            while (num1645 < 5)
                                            {
                                                num1640 = (float)NpcMgr.MoonLordAttacksArray[num1643, num1644, 1, num1645];
                                                if (num1640 + (float)num1646 > npc.ai[1])
                                                {
                                                    break;
                                                }
                                                num1646 += (int)num1640;
                                                num1645++;
                                            }
                                            if (num1645 == 5)
                                            {
                                                num1645 = 0;
                                                npc.ai[1] = 0f;
                                                num1640 = (float)NpcMgr.MoonLordAttacksArray[num1643, num1644, 1, num1645];
                                                num1646 = 0;
                                            }
                                            npc.ai[0] = (float)NpcMgr.MoonLordAttacksArray[num1643, num1644, 0, num1645];
                                            num1639 = (float)((int)npc.ai[1] - num1646);
                                            if (npc.ai[0] != num1642)
                                            {
                                                npc.netUpdate = true;
                                            }
                                        }
                                        if (npc.ai[0] == -2f)
                                        {
                                            npc.damage = 80;
                                            num1641 = 0;
                                            npc.dontTakeDamage = true;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 32f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                            if (npc.ai[1] < 0f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                            Vector2 center18 = Main.npc[(int)npc.ai[3]].Center;
                                            Vector2 value33 = center18 + new Vector2(350f * num1638, -100f);
                                            Vector2 vector206 = value33 - npc.Center;
                                            if (vector206.Length() > 20f)
                                            {
                                                vector206.Normalize();
                                                vector206 *= 6f;
                                                Vector2 velocity5 = npc.velocity;
                                                if (vector206 != Vector2.Zero)
                                                {
                                                    npc.SimpleFlyMovement(vector206, 0.3f);
                                                }
                                                npc.velocity = Vector2.Lerp(velocity5, npc.velocity, 0.5f);
                                            }
                                        }
                                        else if (npc.ai[0] == 0f)
                                        {
                                            num1641 = 3;
                                            npc.localAI[1] -= 0.05f;
                                            if (npc.localAI[1] < 0f)
                                            {
                                                npc.localAI[1] = 0f;
                                            }
                                            Vector2 center19 = Main.npc[(int)npc.ai[3]].Center;
                                            Vector2 value34 = center19 + new Vector2(350f * num1638, -100f);
                                            Vector2 vector207 = value34 - npc.Center;
                                            if (vector207.Length() > 20f)
                                            {
                                                vector207.Normalize();
                                                vector207 *= 6f;
                                                Vector2 velocity6 = npc.velocity;
                                                if (vector207 != Vector2.Zero)
                                                {
                                                    npc.SimpleFlyMovement(vector207, 0.3f);
                                                }
                                                npc.velocity = Vector2.Lerp(velocity6, npc.velocity, 0.5f);
                                            }
                                        }
                                        else if (npc.ai[0] == 1f)
                                        {
                                            num1641 = 0;
                                            int num1647 = 7;
                                            int num1648 = 4;
                                            if (num1639 >= (float)(num1647 * num1648 * 2))
                                            {
                                                npc.localAI[1] -= 0.07f;
                                                if (npc.localAI[1] < 0f)
                                                {
                                                    npc.localAI[1] = 0f;
                                                }
                                            }
                                            else if (num1639 >= (float)(num1647 * num1648))
                                            {
                                                npc.localAI[1] += 0.05f;
                                                if (npc.localAI[1] > 0.75f)
                                                {
                                                    npc.localAI[1] = 0.75f;
                                                }
                                                float num1649 = 6.28318548f * (num1639 % (float)(num1647 * num1648)) / (float)(num1647 * num1648) - 1.57079637f;
                                                npc.localAI[0] = new Vector2((float)Math.Cos((double)num1649) * vector205.X, (float)Math.Sin((double)num1649) * vector205.Y).ToRotation();
                                                if (num1639 % (float)num1648 == 0f)
                                                {
                                                    Vector2 value35 = new Vector2(1f * -num1638, 3f);
                                                    Vector2 vector208 = Utils.Vector2FromElipse(npc.localAI[0].ToRotationVector2(), vector205 * npc.localAI[1]);
                                                    Vector2 vector209 = npc.Center + Vector2.Normalize(vector208) * vector205.Length() * 0.4f + value35;
                                                    Vector2 vector210 = Vector2.Normalize(vector208) * 8f;
                                                    float ai = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * num1638;
                                                    Projectile.NewProjectile(vector209.X, vector209.Y, vector210.X, vector210.Y, 452, 30, 0f, Main.myPlayer, 0f, ai);
                                                }
                                            }
                                            else
                                            {
                                                npc.localAI[1] += 0.02f;
                                                if (npc.localAI[1] > 0.75f)
                                                {
                                                    npc.localAI[1] = 0.75f;
                                                }
                                                float num1650 = 6.28318548f * (num1639 % (float)(num1647 * num1648)) / (float)(num1647 * num1648) - 1.57079637f;
                                                npc.localAI[0] = new Vector2((float)Math.Cos((double)num1650) * vector205.X, (float)Math.Sin((double)num1650) * vector205.Y).ToRotation();
                                            }
                                        }
                                        else if (npc.ai[0] == 2f)
                                        {
                                            npc.localAI[1] -= 0.05f;
                                            if (npc.localAI[1] < 0f)
                                            {
                                                npc.localAI[1] = 0f;
                                            }
                                            Vector2 center20 = Main.npc[(int)npc.ai[3]].Center;
                                            Vector2 value36 = new Vector2(220f * num1638, -60f) + center20;
                                            value36 += new Vector2(num1638 * 100f, -50f);
                                            Vector2 value37 = new Vector2(400f * num1638, -60f);
                                            if (num1639 < 30f)
                                            {
                                                Vector2 vector211 = value36 - npc.Center;
                                                if (vector211 != Vector2.Zero)
                                                {
                                                    Vector2 vector212 = vector211;
                                                    vector212.Normalize();
                                                    npc.velocity = Vector2.SmoothStep(npc.velocity, vector212 * Math.Min(8f, vector211.Length()), 0.2f);
                                                }
                                            }
                                            else if (num1639 < 210f)
                                            {
                                                num1641 = 1;
                                                int num1651 = (int)num1639 - 30;
                                                if (num1651 % 30 == 0 && Main.netMode != 1)
                                                {
                                                    Vector2 vector213 = new Vector2(5f * num1638, -8f);
                                                    int num1652 = num1651 / 30;
                                                    vector213.X += ((float)num1652 - 3.5f) * num1638 * 3f;
                                                    vector213.Y += ((float)num1652 - 4.5f) * 1f;
                                                    vector213 *= 1.2f;
                                                    Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector213.X, vector213.Y, 454, 50, 1f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                                }
                                                Vector2 vector214 = Vector2.SmoothStep(value36, value36 + value37, (num1639 - 30f) / 180f) - npc.Center;
                                                if (vector214 != Vector2.Zero)
                                                {
                                                    Vector2 vector215 = vector214;
                                                    vector215.Normalize();
                                                    npc.velocity = Vector2.Lerp(npc.velocity, vector215 * Math.Min(20f, vector214.Length()), 0.5f);
                                                }
                                            }
                                            else if (num1639 < 282f)
                                            {
                                                num1641 = 0;
                                                npc.velocity *= 0.9f;
                                            }
                                            else if (num1639 < 287f)
                                            {
                                                num1641 = 1;
                                                npc.velocity *= 0.9f;
                                            }
                                            else if (num1639 < 292f)
                                            {
                                                num1641 = 2;
                                                npc.velocity *= 0.9f;
                                            }
                                            else if (num1639 < 300f)
                                            {
                                                num1641 = 3;
                                                if (num1639 == 292f && Main.netMode != 1)
                                                {
                                                    int num1653 = (int)Player.FindClosest(npc.position, npc.width, npc.height);
                                                    Vector2 velocity7 = Vector2.Normalize(Main.player[num1653].Center - (npc.Center + Vector2.UnitY * -350f));
                                                    if (float.IsNaN(velocity7.X) || float.IsNaN(velocity7.Y))
                                                    {
                                                        velocity7 = Vector2.UnitY;
                                                    }
                                                    velocity7 *= 12f;
                                                    for (int num1654 = 0; num1654 < 1000; num1654++)
                                                    {
                                                        Projectile projectile3 = Main.projectile[num1654];
                                                        if (projectile3.active && projectile3.type == 454 && projectile3.ai[1] == (float)npc.whoAmI && projectile3.ai[0] != -1f)
                                                        {
                                                            projectile3.ai[0] = -1f;
                                                            projectile3.velocity = velocity7;
                                                            projectile3.netUpdate = true;
                                                        }
                                                    }
                                                }
                                                Vector2 vector216 = Vector2.SmoothStep(value36, value36 + value37, 1f - (num1639 - 270f) / 30f) - npc.Center;
                                                if (vector216 != Vector2.Zero)
                                                {
                                                    Vector2 vector217 = vector216;
                                                    vector217.Normalize();
                                                    npc.velocity = Vector2.Lerp(npc.velocity, vector217 * Math.Min(14f, vector216.Length()), 0.1f);
                                                }
                                            }
                                            else
                                            {
                                                num1641 = 3;
                                                Vector2 vector218 = value36 - npc.Center;
                                                if (vector218 != Vector2.Zero)
                                                {
                                                    Vector2 vector219 = vector218;
                                                    vector219.Normalize();
                                                    npc.velocity = Vector2.SmoothStep(npc.velocity, vector219 * Math.Min(8f, vector218.Length()), 0.2f);
                                                }
                                            }
                                        }
                                        else if (npc.ai[0] == 3f)
                                        {
                                            if (num1639 == 0f)
                                            {
                                                npc.TargetClosest(false);
                                                npc.netUpdate = true;
                                            }
                                            Vector2 v2 = Main.player[npc.target].Center + Main.player[npc.target].velocity * 20f - npc.Center;
                                            npc.localAI[0] = npc.localAI[0].AngleLerp(v2.ToRotation(), 0.5f);
                                            npc.localAI[1] += 0.05f;
                                            if (npc.localAI[1] > 1f)
                                            {
                                                npc.localAI[1] = 1f;
                                            }
                                            if ((num1639 == num1640 - 14f || num1639 == num1640 - 7f || num1639 == num1640) && Main.netMode != 1)
                                            {
                                                Vector2 vector220 = Utils.Vector2FromElipse(npc.localAI[0].ToRotationVector2(), vector205 * npc.localAI[1]);
                                                Vector2 vector221 = Vector2.Normalize(v2) * 8f;
                                                Projectile.NewProjectile(npc.Center.X + vector220.X, npc.Center.Y + vector220.Y, vector221.X, vector221.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                        }
                                        if (flag164)
                                        {
                                            Vector2 center21 = Main.npc[(int)npc.ai[3]].Center;
                                            Vector2 value38 = new Vector2(220f * num1638, -60f) + center21;
                                            Vector2 vector222 = value38 + new Vector2(num1638 * 110f, -150f);
                                            Vector2 max = vector222 + new Vector2(num1638 * 370f, 150f);
                                            if (vector222.X > max.X)
                                            {
                                                Utils.Swap<float>(ref vector222.X, ref max.X);
                                            }
                                            if (vector222.Y > max.Y)
                                            {
                                                Utils.Swap<float>(ref vector222.Y, ref max.Y);
                                            }
                                            Vector2 value39 = Vector2.Clamp(npc.Center + npc.velocity, vector222, max);
                                            if (value39 != npc.Center + npc.velocity)
                                            {
                                                npc.Center = value39 - npc.velocity;
                                            }
                                        }
                                        int num1655 = num1641 * 7;
                                        if ((double)num1655 > npc.frameCounter)
                                        {
                                            npc.frameCounter += 1.0;
                                        }
                                        if ((double)num1655 < npc.frameCounter)
                                        {
                                            npc.frameCounter -= 1.0;
                                        }
                                        if (npc.frameCounter < 0.0)
                                        {
                                            npc.frameCounter = 0.0;
                                        }
                                        if (npc.frameCounter > 21.0)
                                        {
                                            npc.frameCounter = 21.0;
                                        }
                                        int num1656 = 0;
                                        if (flag163)
                                        {
                                            num1656 = 0;
                                        }
                                        if (num1656 == 0)
                                        {
                                            return;
                                        }
                                        if (num1656 == 1)
                                        {
                                            if (npc.ai[0] == 0f)
                                            {
                                                if ((npc.ai[1] += 1f) >= 20f)
                                                {
                                                    npc.ai[1] = 0f;
                                                    npc.ai[0] = 1f;
                                                    npc.netUpdate = true;
                                                }
                                                npc.velocity = Vector2.UnitX * 4f;
                                                return;
                                            }
                                            if (npc.ai[0] == 1f)
                                            {
                                                if ((npc.ai[1] += 1f) >= 20f)
                                                {
                                                    npc.ai[1] = 0f;
                                                    npc.ai[0] = 2f;
                                                    npc.netUpdate = true;
                                                }
                                                npc.velocity = Vector2.UnitX * -4f;
                                                return;
                                            }
                                            if (npc.ai[0] == 2f || npc.ai[0] == 4f)
                                            {
                                                if ((npc.ai[1] += 1f) >= 20f)
                                                {
                                                    npc.ai[1] = 0f;
                                                    npc.ai[0] += 1f;
                                                    npc.netUpdate = true;
                                                }
                                                npc.velocity = Vector2.UnitY * -4f * (float)(flag163 ? 1 : -1);
                                                return;
                                            }
                                            if (npc.ai[0] == 3f || npc.ai[0] == 5f)
                                            {
                                                if ((npc.ai[1] += 1f) >= 20f)
                                                {
                                                    npc.ai[1] = 0f;
                                                    npc.ai[0] += 1f;
                                                    if (npc.ai[0] == 6f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                    npc.netUpdate = true;
                                                }
                                                npc.velocity = Vector2.UnitY * 4f * (float)(flag163 ? 1 : -1);
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            if (num1656 == 2)
                                            {
                                                new Vector2(30f, 66f);
                                                npc.TargetClosest(false);
                                                Vector2 v3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - npc.Center;
                                                float num1657 = v3.Length() / 200f;
                                                if (num1657 > 1f)
                                                {
                                                    num1657 = 1f;
                                                }
                                                num1657 = 1f - num1657;
                                                num1657 *= 2f;
                                                if (num1657 > 1f)
                                                {
                                                    num1657 = 1f;
                                                }
                                                npc.localAI[0] = v3.ToRotation();
                                                npc.localAI[1] = num1657;
                                                npc.localAI[1] = 1f;
                                                return;
                                            }
                                            if (num1656 == 3)
                                            {
                                                int num1658 = 7;
                                                int num1659 = 4;
                                                npc.ai[1] += 1f;
                                                if (npc.ai[1] >= (float)(num1658 * num1659 * 10))
                                                {
                                                    npc.ai[1] = 0f;
                                                    return;
                                                }
                                                if (npc.ai[1] >= (float)(num1658 * num1659))
                                                {
                                                    npc.localAI[1] -= 0.07f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[1] = 0f;
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    npc.localAI[1] += 0.05f;
                                                    if (npc.localAI[1] > 0.75f)
                                                    {
                                                        npc.localAI[1] = 0.75f;
                                                    }
                                                    float num1660 = 6.28318548f * (npc.ai[1] % (float)(num1658 * num1659)) / (float)(num1658 * num1659) - 1.57079637f;
                                                    npc.localAI[0] = new Vector2((float)Math.Cos((double)num1660) * vector205.X, (float)Math.Sin((double)num1660) * vector205.Y).ToRotation();
                                                    if (npc.ai[1] % (float)num1659 == 0f)
                                                    {
                                                        Vector2 value40 = new Vector2(1f * -num1638, 3f);
                                                        Vector2 vector223 = Utils.Vector2FromElipse(npc.localAI[0].ToRotationVector2(), vector205 * npc.localAI[1]);
                                                        Vector2 vector224 = npc.Center + Vector2.Normalize(vector223) * vector205.Length() * 0.4f + value40;
                                                        Vector2 vector225 = Vector2.Normalize(vector223) * 8f;
                                                        float ai2 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * num1638;
                                                        Projectile.NewProjectile(vector224.X, vector224.Y, vector225.X, vector225.Y, 452, 5, 0f, Main.myPlayer, 0f, ai2);
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (num1656 == 4)
                                            {
                                                Vector2 center22 = Main.npc[(int)npc.ai[3]].Center;
                                                Vector2 value41 = new Vector2(220f * num1638, -60f) + center22;
                                                value41 += new Vector2(num1638 * 100f, -50f);
                                                Vector2 value42 = new Vector2(400f * num1638, -60f);
                                                npc.ai[1] += 1f;
                                                if (npc.ai[1] < 30f)
                                                {
                                                    Vector2 vector226 = value41 - npc.Center;
                                                    if (vector226 != Vector2.Zero)
                                                    {
                                                        Vector2 vector227 = vector226;
                                                        vector227.Normalize();
                                                        npc.velocity = Vector2.SmoothStep(npc.velocity, vector227 * Math.Min(8f, vector226.Length()), 0.2f);
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[1] < 210f)
                                                {
                                                    int num1661 = (int)npc.ai[1] - 30;
                                                    if (num1661 % 30 == 0 && Main.netMode != 1)
                                                    {
                                                        Vector2 vector228 = new Vector2(5f * num1638, -8f);
                                                        int num1662 = num1661 / 30;
                                                        vector228.X += ((float)num1662 - 3.5f) * num1638 * 3f;
                                                        vector228.Y += ((float)num1662 - 4.5f) * 1f;
                                                        vector228 *= 1.2f;
                                                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector228.X, vector228.Y, 454, 1, 1f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                                    }
                                                    Vector2 vector229 = Vector2.SmoothStep(value41, value41 + value42, (npc.ai[1] - 30f) / 180f) - npc.Center;
                                                    if (vector229 != Vector2.Zero)
                                                    {
                                                        Vector2 vector230 = vector229;
                                                        vector230.Normalize();
                                                        npc.velocity = Vector2.Lerp(npc.velocity, vector230 * Math.Min(4f, vector229.Length()), 0.1f);
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (npc.ai[1] < 270f)
                                                    {
                                                        npc.velocity *= 0.9f;
                                                        return;
                                                    }
                                                    if (npc.ai[1] >= 300f)
                                                    {
                                                        npc.ai[1] = 0f;
                                                        return;
                                                    }
                                                    if (npc.ai[1] == 270f && Main.netMode != 1)
                                                    {
                                                        int num1663 = (int)Player.FindClosest(npc.position, npc.width, npc.height);
                                                        Vector2 velocity8 = Vector2.Normalize(Main.player[num1663].Center - (npc.Center + Vector2.UnitY * -350f));
                                                        if (float.IsNaN(velocity8.X) || float.IsNaN(velocity8.Y))
                                                        {
                                                            velocity8 = Vector2.UnitY;
                                                        }
                                                        velocity8 *= 12f;
                                                        for (int num1664 = 0; num1664 < 1000; num1664++)
                                                        {
                                                            Projectile projectile4 = Main.projectile[num1664];
                                                            if (projectile4.active && projectile4.type == 454 && projectile4.ai[1] == (float)npc.whoAmI && projectile4.ai[0] != -1f)
                                                            {
                                                                projectile4.ai[0] = -1f;
                                                                projectile4.velocity = velocity8;
                                                                projectile4.netUpdate = true;
                                                            }
                                                        }
                                                    }
                                                    Vector2 vector231 = Vector2.SmoothStep(value41, value41 + value42, 1f - (npc.ai[1] - 270f) / 30f) - npc.Center;
                                                    if (vector231 != Vector2.Zero)
                                                    {
                                                        Vector2 vector232 = vector231;
                                                        vector232.Normalize();
                                                        npc.velocity = Vector2.Lerp(npc.velocity, vector232 * Math.Min(14f, vector231.Length()), 0.1f);
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (num1656 == 5)
                                            {
                                                npc.dontTakeDamage = true;
                                                npc.ai[1] += 1f;
                                                if (npc.ai[1] >= 40f)
                                                {
                                                    npc.ai[1] = 0f;
                                                    return;
                                                }
                                            }
                                        }
                                    }
                                    else if (npc.aiStyle == 79)
                                    {
                                        if (!Main.npc[(int)npc.ai[3]].active || Main.npc[(int)npc.ai[3]].type != 398)
                                        {
                                            npc.life = 0;
                                            npc.HitEffect(0, 10.0);
                                            npc.active = false;
                                        }
                                        npc.dontTakeDamage = (npc.localAI[3] >= 15f);
                                        npc.velocity = Vector2.Zero;
                                        npc.Center = Main.npc[(int)npc.ai[3]].Center + new Vector2(0f, -400f);
                                        Vector2 value43 = new Vector2(27f, 59f);
                                        float num1665 = 0f;
                                        float num1666 = 0f;
                                        int num1667 = 0;
                                        int num1668 = 0;
                                        if (npc.ai[0] >= 0f)
                                        {
                                            float num1669 = npc.ai[0];
                                            npc.ai[1] += 1f;
                                            int num1670 = (int)Main.npc[(int)npc.ai[3]].ai[2];
                                            int num1671 = 2;
                                            int num1672 = 0;
                                            int num1673 = 0;
                                            while (num1672 < 5)
                                            {
                                                num1666 = (float)NpcMgr.MoonLordAttacksArray[num1670, num1671, 1, num1672];
                                                if (num1666 + (float)num1673 > npc.ai[1])
                                                {
                                                    break;
                                                }
                                                num1673 += (int)num1666;
                                                num1672++;
                                            }
                                            if (num1672 == 5)
                                            {
                                                num1672 = 0;
                                                npc.ai[1] = 0f;
                                                num1666 = (float)NpcMgr.MoonLordAttacksArray[num1670, num1671, 1, num1672];
                                                num1673 = 0;
                                            }
                                            npc.ai[0] = (float)NpcMgr.MoonLordAttacksArray[num1670, num1671, 0, num1672];
                                            num1665 = (float)((int)npc.ai[1] - num1673);
                                            if (npc.ai[0] != num1669)
                                            {
                                                npc.netUpdate = true;
                                            }
                                        }
                                        if (npc.ai[0] == -3f)
                                        {
                                            npc.damage = 0;
                                            npc.dontTakeDamage = true;
                                            npc.rotation = MathHelper.Lerp(npc.rotation, 0.2617994f, 0.07f);
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 32f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                            if (npc.ai[1] < 0f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                            if (npc.localAI[2] < 14f)
                                            {
                                                npc.localAI[2] += 1f;
                                            }
                                        }
                                        else if (npc.ai[0] == -2f)
                                        {
                                            if (Main.npc[(int)npc.ai[3]].ai[0] == 2f)
                                            {
                                                npc.ai[0] = -3f;
                                                return;
                                            }
                                            npc.damage = 80;
                                            npc.dontTakeDamage = true;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 32f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                            if (npc.ai[1] < 0f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= 555f)
                                            {
                                                npc.ai[2] = 0f;
                                            }
                                            if (npc.ai[2] >= 120f)
                                            {
                                                num1665 = npc.ai[2] - 120f;
                                                num1666 = 555f;
                                                num1667 = 2;
                                                Vector2 value44 = new Vector2(0f, 216f);
                                                if (num1665 == 0f && Main.netMode != 1)
                                                {
                                                    Vector2 value45 = npc.Center + value44;
                                                    for (int num1674 = 0; num1674 < 255; num1674++)
                                                    {
                                                        Player player9 = Main.player[num1674];
                                                        if (player9.active && !player9.dead && Vector2.Distance(player9.Center, value45) <= 3000f)
                                                        {
                                                            Vector2 value46 = Main.player[npc.target].Center - value45;
                                                            if (value46 != Vector2.Zero)
                                                            {
                                                                value46.Normalize();
                                                            }
                                                            Projectile.NewProjectile(value45.X, value45.Y, value46.X, value46.Y, 456, 0, 0f, Main.myPlayer, (float)(npc.whoAmI + 1), (float)num1674);
                                                        }
                                                    }
                                                }
                                                if ((num1665 == 120f || num1665 == 180f || num1665 == 240f) && Main.netMode != 1)
                                                {
                                                    for (int num1675 = 0; num1675 < 1000; num1675++)
                                                    {
                                                        Projectile projectile5 = Main.projectile[num1675];
                                                        if (projectile5.active && projectile5.type == 456 && Main.player[(int)projectile5.ai[1]].FindBuffIndex(145) != -1)
                                                        {
                                                            Vector2 center23 = Main.player[npc.target].Center;
                                                            int num1676 = NPC.NewNPC((int)center23.X, (int)center23.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
                                                            Main.npc[num1676].netUpdate = true;
                                                            Main.npc[num1676].ai[0] = (float)(npc.whoAmI + 1);
                                                            Main.npc[num1676].ai[1] = (float)num1675;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else if (npc.ai[0] == 0f)
                                        {
                                            num1668 = 3;
                                            npc.TargetClosest(false);
                                            Vector2 v4 = Main.player[npc.target].Center - npc.Center - new Vector2(0f, -22f);
                                            float num1677 = v4.Length() / 500f;
                                            if (num1677 > 1f)
                                            {
                                                num1677 = 1f;
                                            }
                                            num1677 = 1f - num1677;
                                            num1677 *= 2f;
                                            if (num1677 > 1f)
                                            {
                                                num1677 = 1f;
                                            }
                                            npc.localAI[0] = v4.ToRotation();
                                            npc.localAI[1] = num1677;
                                            npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 1f, 0.2f);
                                        }
                                        if (npc.ai[0] == 1f)
                                        {
                                            if (num1665 < 180f)
                                            {
                                                npc.localAI[1] -= 0.05f;
                                                if (npc.localAI[1] < 0f)
                                                {
                                                    npc.localAI[1] = 0f;
                                                }
                                            }
                                            else if (num1665 < num1666 - 15f)
                                            {
                                                if (num1665 == 180f && Main.netMode != 1)
                                                {
                                                    npc.TargetClosest(false);
                                                    Vector2 vector234 = Main.player[npc.target].Center - npc.Center;
                                                    vector234.Normalize();
                                                    float num1683 = -1f;
                                                    if (vector234.X < 0f)
                                                    {
                                                        num1683 = 1f;
                                                    }
                                                    vector234 = vector234.RotatedBy((double)(-(double)num1683 * 6.28318548f / 6f), default(Vector2));
                                                    Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector234.X, vector234.Y, 455, 75, 0f, Main.myPlayer, num1683 * 6.28318548f / 540f, (float)npc.whoAmI);
                                                    npc.ai[2] = (vector234.ToRotation() + 9.424778f) * num1683;
                                                    npc.netUpdate = true;
                                                }
                                                npc.localAI[1] += 0.05f;
                                                if (npc.localAI[1] > 1f)
                                                {
                                                    npc.localAI[1] = 1f;
                                                }
                                                float num1684 = (float)(npc.ai[2] >= 0f).ToDirectionInt();
                                                float num1685 = npc.ai[2];
                                                if (num1685 < 0f)
                                                {
                                                    num1685 *= -1f;
                                                }
                                                num1685 += -9.424778f;
                                                num1685 += num1684 * 6.28318548f / 540f;
                                                npc.localAI[0] = num1685;
                                                npc.ai[2] = (num1685 + 9.424778f) * num1684;
                                            }
                                            else
                                            {
                                                npc.localAI[1] -= 0.07f;
                                                if (npc.localAI[1] < 0f)
                                                {
                                                    npc.localAI[1] = 0f;
                                                }
                                                num1668 = 3;
                                            }
                                        }
                                        else if (npc.ai[0] == 2f)
                                        {
                                            num1667 = 2;
                                            num1668 = 3;
                                            Vector2 value47 = new Vector2(0f, 216f);
                                            if (num1665 == 0f && Main.netMode != 1)
                                            {
                                                Vector2 value48 = npc.Center + value47;
                                                for (int num1686 = 0; num1686 < 255; num1686++)
                                                {
                                                    Player player10 = Main.player[num1686];
                                                    if (player10.active && !player10.dead && Vector2.Distance(player10.Center, value48) <= 3000f)
                                                    {
                                                        Vector2 value49 = Main.player[npc.target].Center - value48;
                                                        if (value49 != Vector2.Zero)
                                                        {
                                                            value49.Normalize();
                                                        }
                                                        Projectile.NewProjectile(value48.X, value48.Y, value49.X, value49.Y, 456, 0, 0f, Main.myPlayer, (float)(npc.whoAmI + 1), (float)num1686);
                                                    }
                                                }
                                            }
                                            if ((num1665 == 120f || num1665 == 180f || num1665 == 240f) && Main.netMode != 1)
                                            {
                                                for (int num1687 = 0; num1687 < 1000; num1687++)
                                                {
                                                    Projectile projectile6 = Main.projectile[num1687];
                                                    if (projectile6.active && projectile6.type == 456 && Main.player[(int)projectile6.ai[1]].FindBuffIndex(145) != -1)
                                                    {
                                                        Vector2 center25 = Main.player[npc.target].Center;
                                                        int num1688 = NPC.NewNPC((int)center25.X, (int)center25.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
                                                        Main.npc[num1688].netUpdate = true;
                                                        Main.npc[num1688].ai[0] = (float)(npc.whoAmI + 1);
                                                        Main.npc[num1688].ai[1] = (float)num1687;
                                                    }
                                                }
                                            }
                                        }
                                        else if (npc.ai[0] == 3f)
                                        {
                                            if (num1665 == 0f)
                                            {
                                                npc.TargetClosest(false);
                                                npc.netUpdate = true;
                                            }
                                            Vector2 v5 = Main.player[npc.target].Center + Main.player[npc.target].velocity * 20f - npc.Center;
                                            npc.localAI[0] = npc.localAI[0].AngleLerp(v5.ToRotation(), 0.5f);
                                            npc.localAI[1] += 0.05f;
                                            if (npc.localAI[1] > 1f)
                                            {
                                                npc.localAI[1] = 1f;
                                            }
                                            if ((num1665 == num1666 - 14f || num1665 == num1666 - 7f || num1665 == num1666) && Main.netMode != 1)
                                            {
                                                Vector2 vector235 = Utils.Vector2FromElipse(npc.localAI[0].ToRotationVector2(), value43 * npc.localAI[1]);
                                                Vector2 vector236 = Vector2.Normalize(v5) * 8f;
                                                Projectile.NewProjectile(npc.Center.X + vector235.X, npc.Center.Y + vector235.Y, vector236.X, vector236.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                        }
                                        int num1689 = num1667 * 7;
                                        if ((float)num1689 > npc.localAI[2])
                                        {
                                            npc.localAI[2] += 1f;
                                        }
                                        if ((float)num1689 < npc.localAI[2])
                                        {
                                            npc.localAI[2] -= 1f;
                                        }
                                        if (npc.localAI[2] < 0f)
                                        {
                                            npc.localAI[2] = 0f;
                                        }
                                        if (npc.localAI[2] > 14f)
                                        {
                                            npc.localAI[2] = 14f;
                                        }
                                        int num1690 = num1668 * 5;
                                        if ((float)num1690 > npc.localAI[3])
                                        {
                                            npc.localAI[3] += 1f;
                                        }
                                        if ((float)num1690 < npc.localAI[3])
                                        {
                                            npc.localAI[3] -= 1f;
                                        }
                                        if (npc.localAI[3] < 0f)
                                        {
                                            npc.localAI[2] = 0f;
                                        }
                                        if (npc.localAI[3] > 15f)
                                        {
                                            npc.localAI[2] = 15f;
                                        }
                                        int num1691 = 0;
                                        if (num1691 == 1)
                                        {
                                            new Vector2(27f, 59f);
                                            npc.TargetClosest(false);
                                            Vector2 v6 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - npc.Center;
                                            float num1692 = v6.Length() / 200f;
                                            if (num1692 > 1f)
                                            {
                                                num1692 = 1f;
                                            }
                                            num1692 = 1f - num1692;
                                            num1692 *= 2f;
                                            if (num1692 > 1f)
                                            {
                                                num1692 = 1f;
                                            }
                                            npc.localAI[0] = v6.ToRotation();
                                            npc.localAI[1] = num1692;
                                            npc.localAI[1] = 1f;
                                        }
                                        if (num1691 == 2)
                                        {
                                            Vector2 vector237 = new Vector2(27f, 59f);
                                            float num1693 = 6.28318548f * ((float)Main.time % 600f) / 600f;
                                            npc.localAI[0] = new Vector2((float)Math.Cos((double)num1693) * vector237.X, (float)Math.Sin((double)num1693) * vector237.Y).ToRotation();
                                            npc.localAI[1] = 0.75f;
                                            if (npc.ai[1] == 0f)
                                            {
                                                Vector2 vector238 = num1693.ToRotationVector2();
                                                vector238 = Vector2.One;
                                                Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector238.X, vector238.Y, 455, 1, 0f, Main.myPlayer, 0.0104719754f, (float)npc.whoAmI);
                                            }
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 600f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                        }
                                        if (num1691 == 3)
                                        {
                                            Vector2 vector239 = new Vector2(0f, 216f);
                                            if (npc.ai[1] == 0f)
                                            {
                                                npc.TargetClosest(false);
                                                Vector2 vector240 = Main.player[npc.target].Center - npc.Center;
                                                vector240.Normalize();
                                                Projectile.NewProjectile(npc.Center.X + vector239.X, npc.Center.Y + vector239.Y, vector240.X, vector240.Y, 456, 0, 0f, Main.myPlayer, (float)(npc.whoAmI + 1), (float)npc.target);
                                            }
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] >= 600f)
                                            {
                                                npc.ai[1] = 0f;
                                            }
                                        }
                                        if (num1691 == 4)
                                        {
                                            new Vector2(27f, 59f);
                                            npc.TargetClosest(false);
                                            Vector2 v7 = Main.player[npc.target].Center + Main.player[npc.target].velocity * 20f - npc.Center;
                                            npc.localAI[0] = npc.localAI[0].AngleLerp(v7.ToRotation(), 0.5f);
                                            npc.localAI[1] = 1f;
                                            npc.ai[1] += 1f;
                                            if (npc.ai[1] == 76f || npc.ai[1] == 83f || npc.ai[1] == 90f)
                                            {
                                                value43 = new Vector2(27f, 59f);
                                                Vector2 vector241 = Utils.Vector2FromElipse(npc.localAI[0].ToRotationVector2(), value43 * npc.localAI[1]);
                                                Vector2 vector242 = Vector2.Normalize(v7) * 8f;
                                                Projectile.NewProjectile(npc.Center.X + vector241.X, npc.Center.Y + vector241.Y, vector242.X, vector242.Y, 462, 5, 0f, Main.myPlayer, 0f, 0f);
                                            }
                                            if (npc.ai[1] >= 90f)
                                            {
                                                npc.ai[1] = 0f;
                                                return;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (npc.aiStyle == 80)
                                        {
                                            if (npc.ai[0] == 0f)
                                            {
                                                if (npc.collideX)
                                                {
                                                    npc.direction = 1 - npc.direction;
                                                }
                                                npc.velocity.X = 3f * (float)((npc.direction == 0) ? -1 : 1);
                                                Vector2 center26 = npc.Center;
                                                Point point10 = center26.ToTileCoordinates();
                                                int num1694 = 30;
                                                if (WorldGen.InWorld(point10.X, point10.Y, 30))
                                                {
                                                    for (int num1695 = 0; num1695 < 30; num1695++)
                                                    {
                                                        if (WorldGen.SolidTile(point10.X, point10.Y + num1695))
                                                        {
                                                            num1694 = num1695;
                                                            break;
                                                        }
                                                    }
                                                }
                                                if (num1694 < 15)
                                                {
                                                    npc.velocity.Y = Math.Max(npc.velocity.Y - 0.05f, -3.5f);
                                                }
                                                else if (num1694 < 20)
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = Math.Min(npc.velocity.Y + 0.05f, 1.5f);
                                                }
                                                float num1697;
                                                int num1696 = npc.FindClosestPlayer(out num1697);
                                                if (num1696 == -1 || Main.player[num1696].dead)
                                                {
                                                    return;
                                                }
                                                if (num1697 < 352f && Main.player[num1696].Center.Y > npc.Center.Y)
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.ai[1] = 0f;
                                                    npc.netUpdate = true;
                                                }
                                            }
                                            else if (npc.ai[0] == 1f)
                                            {
                                                npc.ai[1] += 1f;
                                                npc.velocity *= 0.95f;
                                                if (npc.ai[1] >= 60f)
                                                {
                                                    npc.ai[1] = 0f;
                                                    npc.ai[0] = 2f;
                                                    int num1698 = npc.FindClosestPlayer();
                                                    if (num1698 != -1)
                                                    {
                                                        npc.ai[3] = ((Main.player[num1698].Center.X > npc.Center.X) ? -1f : 1f);
                                                    }
                                                    else
                                                    {
                                                        npc.ai[3] = 1f;
                                                    }
                                                    npc.netUpdate = true;
                                                }
                                            }
                                            else if (npc.ai[0] == 2f)
                                            {
                                                npc.noTileCollide = true;
                                                npc.ai[1] += 1f;
                                                npc.velocity.Y = Math.Max(npc.velocity.Y - 0.1f, -10f);
                                                npc.velocity.X = Math.Min(npc.velocity.X + npc.ai[3] * 0.05f, 4f);
                                                if (npc.position.Y < (float)(-(float)npc.height) || npc.ai[1] >= 180f)
                                                {
                                                    if (Main.netMode != 1)
                                                    {
                                                        Main.StartInvasion(4);
                                                    }
                                                    npc.active = false;
                                                    npc.ai[0] = 3f;
                                                    npc.netUpdate = true;
                                                }
                                            }
                                            return;
                                        }
                                        if (npc.aiStyle == 81)
                                        {
                                            Vector2 value50 = new Vector2(30f);
                                            if (!Main.npc[(int)npc.ai[3]].active || Main.npc[(int)npc.ai[3]].type != 398)
                                            {
                                                npc.life = 0;
                                                npc.HitEffect(0, 10.0);
                                                npc.active = false;
                                            }
                                            float num1699 = 0f;
                                            float num1700 = npc.ai[0];
                                            npc.ai[1] += 1f;
                                            int num1701 = 0;
                                            int num1702 = 0;
                                            while (num1701 < 10)
                                            {
                                                num1699 = (float)NpcMgr.MoonLordAttacksArray2[1, num1701];
                                                if (num1699 + (float)num1702 > npc.ai[1])
                                                {
                                                    break;
                                                }
                                                num1702 += (int)num1699;
                                                num1701++;
                                            }
                                            if (num1701 == 10)
                                            {
                                                num1701 = 0;
                                                npc.ai[1] = 0f;
                                                num1699 = (float)NpcMgr.MoonLordAttacksArray2[1, num1701];
                                                num1702 = 0;
                                            }
                                            npc.ai[0] = (float)NpcMgr.MoonLordAttacksArray2[0, num1701];
                                            float num1703 = (float)((int)npc.ai[1] - num1702);
                                            if (npc.ai[0] != num1700)
                                            {
                                                npc.netUpdate = true;
                                            }
                                            if (npc.ai[0] == -1f)
                                            {
                                                npc.ai[1] += 1f;
                                                if (npc.ai[1] > 180f)
                                                {
                                                    npc.ai[1] = 0f;
                                                }
                                                float value51;
                                                if (npc.ai[1] < 60f)
                                                {
                                                    value51 = 0.75f;
                                                    npc.localAI[0] = 0f;
                                                    npc.localAI[1] = (float)Math.Sin((double)(npc.ai[1] * 6.28318548f / 15f)) * 0.35f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[0] = 3.14159274f;
                                                    }
                                                }
                                                else if (npc.ai[1] < 120f)
                                                {
                                                    value51 = 1f;
                                                    if (npc.localAI[1] < 0.5f)
                                                    {
                                                        npc.localAI[1] += 0.025f;
                                                    }
                                                    npc.localAI[0] += 0.209439516f;
                                                }
                                                else
                                                {
                                                    value51 = 1.15f;
                                                    npc.localAI[1] -= 0.05f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[1] = 0f;
                                                    }
                                                }
                                                npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], value51, 0.3f);
                                            }
                                            if (npc.ai[0] == 0f)
                                            {
                                                npc.TargetClosest(false);
                                                Vector2 v8 = Main.player[npc.target].Center + Main.player[npc.target].velocity * 20f - npc.Center;
                                                npc.localAI[0] = npc.localAI[0].AngleLerp(v8.ToRotation(), 0.5f);
                                                npc.localAI[1] += 0.05f;
                                                if (npc.localAI[1] > 0.7f)
                                                {
                                                    npc.localAI[1] = 0.7f;
                                                }
                                                npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 1f, 0.2f);
                                                float scaleFactor22 = 24f;
                                                Vector2 center27 = npc.Center;
                                                Vector2 center28 = Main.player[npc.target].Center;
                                                Vector2 value52 = center28 - center27;
                                                Vector2 vector243 = value52 - Vector2.UnitY * 200f;
                                                vector243 = Vector2.Normalize(vector243) * scaleFactor22;
                                                int num1704 = 30;
                                                npc.velocity.X = (npc.velocity.X * (float)(num1704 - 1) + vector243.X) / (float)num1704;
                                                npc.velocity.Y = (npc.velocity.Y * (float)(num1704 - 1) + vector243.Y) / (float)num1704;
                                                float num1705 = 0.25f;
                                                for (int num1706 = 0; num1706 < 200; num1706++)
                                                {
                                                    if (num1706 != npc.whoAmI && Main.npc[num1706].active && Main.npc[num1706].type == 400 && Vector2.Distance(npc.Center, Main.npc[num1706].Center) < 150f)
                                                    {
                                                        if (npc.position.X < Main.npc[num1706].position.X)
                                                        {
                                                            npc.velocity.X = npc.velocity.X - num1705;
                                                        }
                                                        else
                                                        {
                                                            npc.velocity.X = npc.velocity.X + num1705;
                                                        }
                                                        if (npc.position.Y < Main.npc[num1706].position.Y)
                                                        {
                                                            npc.velocity.Y = npc.velocity.Y - num1705;
                                                        }
                                                        else
                                                        {
                                                            npc.velocity.Y = npc.velocity.Y + num1705;
                                                        }
                                                    }
                                                }
                                                return;
                                            }
                                            if (npc.ai[0] == 1f)
                                            {
                                                if (num1703 == 0f)
                                                {
                                                    npc.TargetClosest(false);
                                                    npc.netUpdate = true;
                                                }
                                                npc.velocity *= 0.95f;
                                                if (npc.velocity.Length() < 1f)
                                                {
                                                    npc.velocity = Vector2.Zero;
                                                }
                                                Vector2 v9 = Main.player[npc.target].Center + Main.player[npc.target].velocity * 20f - npc.Center;
                                                npc.localAI[0] = npc.localAI[0].AngleLerp(v9.ToRotation(), 0.5f);
                                                npc.localAI[1] += 0.05f;
                                                if (npc.localAI[1] > 1f)
                                                {
                                                    npc.localAI[1] = 1f;
                                                }
                                                if (num1703 < 20f)
                                                {
                                                    npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 1.1f, 0.2f);
                                                }
                                                else
                                                {
                                                    npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 0.4f, 0.2f);
                                                }
                                                if ((num1703 == num1699 - 14f || num1703 == num1699 - 7f || num1703 == num1699) && Main.netMode != 1)
                                                {
                                                    Vector2 vector244 = Utils.Vector2FromElipse(npc.localAI[0].ToRotationVector2(), value50 * npc.localAI[1]);
                                                    Vector2 vector245 = Vector2.Normalize(v9) * 8f;
                                                    Projectile.NewProjectile(npc.Center.X + vector244.X, npc.Center.Y + vector244.Y, vector245.X, vector245.Y, 462, 35, 0f, Main.myPlayer, 0f, 0f);
                                                    return;
                                                }
                                            }
                                            else if (npc.ai[0] == 2f)
                                            {
                                                if (num1703 < 15f)
                                                {
                                                    npc.localAI[1] -= 0.07f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[1] = 0f;
                                                    }
                                                    npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 0.4f, 0.2f);
                                                    npc.velocity *= 0.8f;
                                                    if (npc.velocity.Length() < 1f)
                                                    {
                                                        npc.velocity = Vector2.Zero;
                                                        return;
                                                    }
                                                }
                                                else if (num1703 < 75f)
                                                {
                                                    float num1707 = (num1703 - 15f) / 10f;
                                                    int num1708 = 0;
                                                    int num1709 = 0;
                                                    switch ((int)num1707)
                                                    {
                                                        case 0:
                                                            num1708 = 0;
                                                            num1709 = 2;
                                                            break;
                                                        case 1:
                                                            num1708 = 2;
                                                            num1709 = 5;
                                                            break;
                                                        case 2:
                                                            num1708 = 5;
                                                            num1709 = 3;
                                                            break;
                                                        case 3:
                                                            num1708 = 3;
                                                            num1709 = 1;
                                                            break;
                                                        case 4:
                                                            num1708 = 1;
                                                            num1709 = 4;
                                                            break;
                                                        case 5:
                                                            num1708 = 4;
                                                            num1709 = 0;
                                                            break;
                                                    }
                                                    Vector2 spinningpoint8 = Vector2.UnitY * -30f;
                                                    Vector2 value53 = spinningpoint8.RotatedBy((double)((float)num1708 * 6.28318548f / 6f), default(Vector2));
                                                    Vector2 value54 = spinningpoint8.RotatedBy((double)((float)num1709 * 6.28318548f / 6f), default(Vector2));
                                                    Vector2 vector246 = Vector2.Lerp(value53, value54, num1707 - (float)((int)num1707));
                                                    float value55 = vector246.Length() / 30f;
                                                    npc.localAI[0] = vector246.ToRotation();
                                                    npc.localAI[1] = MathHelper.Lerp(npc.localAI[1], value55, 0.5f);
                                                    if ((num1703 - 15f) % 10f == 0f && Main.netMode != 1)
                                                    {
                                                        Vector2 vec7 = Vector2.Normalize(vector246);
                                                        if (vec7.HasNaNs())
                                                        {
                                                            vec7 = Vector2.UnitY * -1f;
                                                        }
                                                        vec7 *= 4f;
                                                        Projectile.NewProjectile(npc.Center.X + vector246.X, npc.Center.Y + vector246.Y, vec7.X, vec7.Y, 454, 55, 0f, Main.myPlayer, 30f, (float)npc.whoAmI);
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num1703 < 105f)
                                                    {
                                                        npc.localAI[0] = npc.localAI[0].AngleLerp(npc.ai[2] - 1.57079637f, 0.2f);
                                                        npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 0.75f, 0.2f);
                                                        if (num1703 == 75f)
                                                        {
                                                            npc.TargetClosest(false);
                                                            npc.netUpdate = true;
                                                            npc.velocity = Vector2.UnitY * -7f;
                                                            for (int num1712 = 0; num1712 < 1000; num1712++)
                                                            {
                                                                Projectile projectile7 = Main.projectile[num1712];
                                                                if (projectile7.active && projectile7.type == 454 && projectile7.ai[1] == (float)npc.whoAmI && projectile7.ai[0] != -1f)
                                                                {
                                                                    projectile7.velocity += npc.velocity;
                                                                    projectile7.netUpdate = true;
                                                                }
                                                            }
                                                        }
                                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                                        npc.ai[2] = (Main.player[npc.target].Center - npc.Center).ToRotation() + 1.57079637f;
                                                        npc.rotation = npc.rotation.AngleTowards(npc.ai[2], 0.104719758f);
                                                        return;
                                                    }
                                                    if (num1703 < 120f)
                                                    {
                                                        if (num1703 == 105f)
                                                        {
                                                            npc.netUpdate = true;
                                                        }
                                                        Vector2 velocity9 = (npc.ai[2] - 1.57079637f).ToRotationVector2() * 12f;
                                                        npc.velocity = velocity9 * 2f;
                                                        for (int num1713 = 0; num1713 < 1000; num1713++)
                                                        {
                                                            Projectile projectile8 = Main.projectile[num1713];
                                                            if (projectile8.active && projectile8.type == 454 && projectile8.ai[1] == (float)npc.whoAmI && projectile8.ai[0] != -1f)
                                                            {
                                                                projectile8.ai[0] = -1f;
                                                                projectile8.velocity = velocity9;
                                                                projectile8.netUpdate = true;
                                                            }
                                                        }
                                                        return;
                                                    }
                                                    npc.velocity *= 0.92f;
                                                    npc.rotation = npc.rotation.AngleLerp(0f, 0.2f);
                                                    return;
                                                }
                                            }
                                            else if (npc.ai[0] == 3f)
                                            {
                                                if (num1703 < 15f)
                                                {
                                                    npc.localAI[1] -= 0.07f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[1] = 0f;
                                                    }
                                                    npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 0.4f, 0.2f);
                                                    npc.velocity *= 0.9f;
                                                    if (npc.velocity.Length() < 1f)
                                                    {
                                                        npc.velocity = Vector2.Zero;
                                                        return;
                                                    }
                                                }
                                                else if (num1703 < 45f)
                                                {
                                                    npc.localAI[0] = 0f;
                                                    npc.localAI[1] = (float)Math.Sin((double)((num1703 - 15f) * 6.28318548f / 15f)) * 0.5f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[0] = 3.14159274f;
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num1703 >= 185f)
                                                    {
                                                        npc.velocity *= 0.88f;
                                                        npc.rotation = npc.rotation.AngleLerp(0f, 0.2f);
                                                        npc.localAI[1] -= 0.07f;
                                                        if (npc.localAI[1] < 0f)
                                                        {
                                                            npc.localAI[1] = 0f;
                                                        }
                                                        npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 1f, 0.2f);
                                                        return;
                                                    }
                                                    if (num1703 == 45f)
                                                    {
                                                        npc.ai[2] = (float)(Main.rand.Next(2) == 0).ToDirectionInt() * 6.28318548f / 40f;
                                                        npc.netUpdate = true;
                                                    }
                                                    if ((num1703 - 15f - 30f) % 40f == 0f)
                                                    {
                                                        npc.ai[2] *= 0.95f;
                                                    }
                                                    npc.localAI[0] += npc.ai[2];
                                                    npc.localAI[1] += 0.05f;
                                                    if (npc.localAI[1] > 1f)
                                                    {
                                                        npc.localAI[1] = 1f;
                                                    }
                                                    Vector2 vector247 = npc.localAI[0].ToRotationVector2() * value50 * npc.localAI[1];
                                                    float scaleFactor23 = MathHelper.Lerp(8f, 20f, (num1703 - 15f - 30f) / 140f);
                                                    npc.velocity = Vector2.Normalize(vector247) * scaleFactor23;
                                                    npc.rotation = npc.rotation.AngleLerp(npc.velocity.ToRotation() + 1.57079637f, 0.2f);
                                                    if ((num1703 - 15f - 30f) % 10f == 0f && Main.netMode != 1)
                                                    {
                                                        Vector2 vector248 = npc.Center + Vector2.Normalize(vector247) * value50.Length() * 0.4f;
                                                        Vector2 vector249 = Vector2.Normalize(vector247) * 8f;
                                                        float ai3 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * npc.ai[2];
                                                        Projectile.NewProjectile(vector248.X, vector248.Y, vector249.X, vector249.Y, 452, 35, 0f, Main.myPlayer, 0f, ai3);
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.ai[0] == 4f)
                                            {
                                                if (num1703 == 0f)
                                                {
                                                    npc.TargetClosest(false);
                                                    npc.netUpdate = true;
                                                }
                                                if (num1703 < 180f)
                                                {
                                                    npc.localAI[2] = MathHelper.Lerp(npc.localAI[2], 1f, 0.2f);
                                                    npc.localAI[1] -= 0.05f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[1] = 0f;
                                                    }
                                                    npc.velocity *= 0.95f;
                                                    if (npc.velocity.Length() < 1f)
                                                    {
                                                        npc.velocity = Vector2.Zero;
                                                    }
                                                    if (num1703 >= 60f)
                                                    {
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (num1703 < num1699 - 15f)
                                                    {
                                                        if (num1703 == 180f && Main.netMode != 1)
                                                        {
                                                            npc.TargetClosest(false);
                                                            Vector2 vector251 = Main.player[npc.target].Center - npc.Center;
                                                            vector251.Normalize();
                                                            float num1719 = -1f;
                                                            if (vector251.X < 0f)
                                                            {
                                                                num1719 = 1f;
                                                            }
                                                            vector251 = vector251.RotatedBy((double)(-(double)num1719 * 6.28318548f / 6f), default(Vector2));
                                                            Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector251.X, vector251.Y, 455, 50, 0f, Main.myPlayer, num1719 * 6.28318548f / 540f, (float)npc.whoAmI);
                                                            npc.ai[2] = (vector251.ToRotation() + 9.424778f) * num1719;
                                                            npc.netUpdate = true;
                                                        }
                                                        npc.localAI[1] += 0.05f;
                                                        if (npc.localAI[1] > 1f)
                                                        {
                                                            npc.localAI[1] = 1f;
                                                        }
                                                        float num1720 = (float)(npc.ai[2] >= 0f).ToDirectionInt();
                                                        float num1721 = npc.ai[2];
                                                        if (num1721 < 0f)
                                                        {
                                                            num1721 *= -1f;
                                                        }
                                                        num1721 += -9.424778f;
                                                        num1721 += num1720 * 6.28318548f / 540f;
                                                        npc.localAI[0] = num1721;
                                                        npc.ai[2] = (num1721 + 9.424778f) * num1720;
                                                        return;
                                                    }
                                                    npc.localAI[1] -= 0.07f;
                                                    if (npc.localAI[1] < 0f)
                                                    {
                                                        npc.localAI[1] = 0f;
                                                        return;
                                                    }
                                                }
                                            }
                                        }
                                        else if (npc.aiStyle == 82)
                                        {
                                            float num1722 = 90f;
                                            Vector2 value56 = new Vector2(0f, 216f);
                                            int num1723 = (int)Math.Abs(npc.ai[0]) - 1;
                                            int num1724 = (int)npc.ai[1];
                                            if (!Main.npc[num1723].active || Main.npc[num1723].type != 396)
                                            {
                                                npc.life = 0;
                                                npc.HitEffect(0, 10.0);
                                                npc.active = false;
                                                return;
                                            }
                                            npc.ai[2] += 1f;
                                            if (npc.ai[2] >= num1722)
                                            {
                                                if (Main.netMode != 1)
                                                {
                                                    int num1725 = (int)Main.npc[num1723].ai[3];
                                                    int num1726 = -1;
                                                    int num1727 = -1;
                                                    int num1728 = num1723;
                                                    for (int num1729 = 0; num1729 < 200; num1729++)
                                                    {
                                                        if (Main.npc[num1729].active && Main.npc[num1729].ai[3] == (float)num1725)
                                                        {
                                                            if (num1726 == -1 && Main.npc[num1729].type == 397 && Main.npc[num1729].ai[2] == 0f)
                                                            {
                                                                num1726 = num1729;
                                                            }
                                                            if (num1727 == -1 && Main.npc[num1729].type == 397 && Main.npc[num1729].ai[2] == 1f)
                                                            {
                                                                num1727 = num1729;
                                                            }
                                                            if (num1726 != -1 && num1727 != -1 && num1728 != -1)
                                                            {
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    int num1730 = 1000;
                                                    int num1731 = Main.npc[num1725].lifeMax - Main.npc[num1725].life;
                                                    int num1732 = Main.npc[num1726].lifeMax - Main.npc[num1726].life;
                                                    int num1733 = Main.npc[num1727].lifeMax - Main.npc[num1727].life;
                                                    int num1734 = Main.npc[num1728].lifeMax - Main.npc[num1728].life;
                                                    if (num1734 > 0 && num1730 > 0)
                                                    {
                                                        int num1735 = num1734 - num1730;
                                                        if (num1735 > 0)
                                                        {
                                                            num1735 = 0;
                                                        }
                                                        int num1736 = num1730 + num1735;
                                                        num1730 -= num1736;
                                                        Main.npc[num1728].life += num1736;
                                                        NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1728].Center, new Vector2(50f)), num1736, true);
                                                    }
                                                    if (num1731 > 0 && num1730 > 0)
                                                    {
                                                        int num1737 = num1731 - num1730;
                                                        if (num1737 > 0)
                                                        {
                                                            num1737 = 0;
                                                        }
                                                        int num1738 = num1730 + num1737;
                                                        num1730 -= num1738;
                                                        Main.npc[num1725].life += num1738;
                                                        NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1725].Center, new Vector2(50f)), num1738, true);
                                                    }
                                                    if (num1732 > 0 && num1730 > 0)
                                                    {
                                                        int num1739 = num1732 - num1730;
                                                        if (num1739 > 0)
                                                        {
                                                            num1739 = 0;
                                                        }
                                                        int num1740 = num1730 + num1739;
                                                        num1730 -= num1740;
                                                        Main.npc[num1726].life += num1740;
                                                        NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1726].Center, new Vector2(50f)), num1740, true);
                                                    }
                                                    if (num1733 > 0 && num1730 > 0)
                                                    {
                                                        int num1741 = num1733 - num1730;
                                                        if (num1741 > 0)
                                                        {
                                                            num1741 = 0;
                                                        }
                                                        int num1742 = num1730 + num1741;
                                                        num1730 -= num1742;
                                                        Main.npc[num1727].life += num1742;
                                                        NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1727].Center, new Vector2(50f)), num1742, true);
                                                    }
                                                }
                                                npc.life = 0;
                                                npc.HitEffect(0, 10.0);
                                                npc.active = false;
                                                return;
                                            }
                                            npc.velocity = Vector2.Zero;
                                            npc.Center = Vector2.Lerp(Main.projectile[num1724].Center, Main.npc[(int)Math.Abs(npc.ai[0]) - 1].Center + value56, npc.ai[2] / num1722);
                                            return;
                                        }
                                        else if (npc.aiStyle == 83)
                                        {
                                            if (npc.type == 437)
                                            {
                                                if (npc.localAI[3] == 0f && Main.netMode != 1)
                                                {
                                                    npc.localAI[3] = 1f;
                                                    npc.netUpdate = true;
                                                    Point[] array7 = null;
                                                    if (!CultistRitual.CheckFloor(npc.Center, out array7))
                                                    {
                                                        npc.life = 0;
                                                        npc.HitEffect(0, 10.0);
                                                        npc.active = false;
                                                        return;
                                                    }
                                                    int num1747 = 0;
                                                    int num1748 = 1;
                                                    for (int num1749 = 0; num1749 < 4; num1749++)
                                                    {
                                                        bool flag165 = num1749 == 1 || num1749 == 2;
                                                        int num1750;
                                                        if (flag165)
                                                        {
                                                            num1750 = 438;
                                                        }
                                                        else
                                                        {
                                                            num1750 = 379;
                                                        }
                                                        int num1751 = NPC.NewNPC(array7[num1749].X * 16 + 8, array7[num1749].Y * 16 - 48, num1750, 0, 0f, 0f, 0f, 0f, 255);
                                                        if (flag165)
                                                        {
                                                            npc.localAI[num1748++] = (float)(num1751 + 1);
                                                            Main.npc[num1751].ai[3] = (float)(-(float)(npc.whoAmI + 1));
                                                        }
                                                        else
                                                        {
                                                            npc.ai[num1747++] = (float)(num1751 + 1);
                                                            Main.npc[num1751].ai[3] = (float)(-(float)(npc.whoAmI + 1));
                                                        }
                                                        Main.npc[num1751].netUpdate = true;
                                                    }
                                                }
                                                if (npc.localAI[0] == 1f && Main.netMode != 1)
                                                {
                                                    npc.localAI[0] = 2f;
                                                    for (int num1752 = 0; num1752 < 2; num1752++)
                                                    {
                                                        Main.npc[(int)npc.localAI[num1752 + 1] - 1].ai[1] = 1f;
                                                        Main.npc[(int)npc.localAI[num1752 + 1] - 1].netUpdate = true;
                                                        Main.npc[(int)npc.ai[num1752] - 1].ai[3] = 0f;
                                                        Main.npc[(int)npc.ai[num1752] - 1].TargetClosest(true);
                                                        Main.npc[(int)npc.ai[num1752] - 1].netUpdate = true;
                                                    }
                                                }
                                                if (npc.ai[0] != -1f && Main.netMode != 1)
                                                {
                                                    bool flag166 = true;
                                                    for (int num1753 = 0; num1753 < 2; num1753++)
                                                    {
                                                        if (Main.npc[(int)npc.localAI[num1753 + 1] - 1].active && Main.npc[(int)npc.localAI[num1753 + 1] - 1].type == 438)
                                                        {
                                                            flag166 = false;
                                                        }
                                                        if (Main.npc[(int)npc.ai[num1753] - 1].active && Main.npc[(int)npc.ai[num1753] - 1].type == 379)
                                                        {
                                                            flag166 = false;
                                                        }
                                                    }
                                                    if (flag166)
                                                    {
                                                        npc.ai[0] = -1f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] = 0f;
                                                        int num1754 = (int)npc.Center.X / 16 + 11 * (Main.rand.Next(2) == 0).ToDirectionInt();
                                                        int num1755 = 0;
                                                        for (int num1756 = -5; num1756 < 12; num1756++)
                                                        {
                                                            int num1757 = num1754;
                                                            int num1758 = (int)npc.Center.Y / 16 + num1756;
                                                            if (WorldGen.SolidTile(num1757, num1758) && !Collision.SolidTiles(num1757 - 1, num1757 + 1, num1758 - 3, num1758 - 1))
                                                            {
                                                                num1755 = num1758;
                                                                break;
                                                            }
                                                            if (num1756 == 11)
                                                            {
                                                                num1755 = num1758;
                                                            }
                                                        }
                                                        int num1759 = NPC.NewNPC(num1754 * 16 + 10, num1755 * 16 - 2, 439, 0, 0f, 0f, 0f, 0f, 255);
                                                        Main.npc[num1759].direction = (Main.npc[num1759].spriteDirection = Math.Sign(npc.Center.X - (float)(num1754 * 16) - 10f));
                                                        npc.ai[2] = (float)num1759;
                                                        npc.netUpdate = true;
                                                        CultistRitual.TabletDestroyed();
                                                    }
                                                }
                                                if (npc.ai[0] == -1f)
                                                {
                                                    npc.ai[3] += 1f;
                                                    if (npc.ai[3] > 300f)
                                                    {
                                                        npc.life = 0;
                                                        npc.HitEffect(0, 9999.0);
                                                        npc.active = false;
                                                        if (Main.netMode != 1)
                                                        {
                                                            for (int num1760 = 0; num1760 < 6; num1760++)
                                                            {
                                                                float num1761 = 3f + Main.rand.NextFloat() * 6f;
                                                                Vector2 vector252 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                Vector2 value57 = npc.Center;
                                                                value57 += vector252 * 30f;
                                                                Projectile.NewProjectile(value57.X, value57.Y, vector252.X * num1761, vector252.Y * num1761, 526, 0, 0f, Main.myPlayer, Main.npc[(int)npc.ai[2]].Center.X, Main.npc[(int)npc.ai[2]].Center.Y);
                                                            }
                                                            for (int num1762 = 0; num1762 < 20; num1762++)
                                                            {
                                                                if (Main.rand.Next(2) != 0)
                                                                {
                                                                    float num1763 = 3f + Main.rand.NextFloat() * 6f;
                                                                    Vector2 vector253 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                    Vector2 value58 = npc.Center;
                                                                    value58 += vector253 * 30f;
                                                                    Vector2 vector254 = npc.Center + vector253 * (Main.rand.NextFloat() * 45f + 45f) + Vector2.UnitY * 20f;
                                                                    Projectile.NewProjectile(value58.X, value58.Y, vector253.X * num1763, -20f, 526, 0, 0f, Main.myPlayer, vector254.X, vector254.Y);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    else if (npc.ai[3] % 10f == 1f && npc.ai[3] > 120f && Main.netMode != 1)
                                                    {
                                                        float num1764 = 3f + Main.rand.NextFloat() * 6f;
                                                        Vector2 vector255 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                        Vector2 value59 = npc.Center;
                                                        value59 += vector255 * 25f;
                                                        Projectile.NewProjectile(value59.X, value59.Y, vector255.X * num1764, vector255.Y * num1764, 526, 0, 0f, Main.myPlayer, Main.npc[(int)npc.ai[2]].Center.X, Main.npc[(int)npc.ai[2]].Center.Y);
                                                    }
                                                }
                                            }
                                            if (npc.type == 438)
                                            {
                                                npc.velocity.X = npc.velocity.X * 0.93f;
                                                if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                                                {
                                                    npc.velocity.X = 0f;
                                                }
                                                int num1765 = (int)(-npc.ai[3] - 1f);
                                                if (num1765 == -1)
                                                {
                                                    npc.life = 0;
                                                    npc.HitEffect(0, 10.0);
                                                    npc.active = false;
                                                    return;
                                                }
                                                int num1766 = Math.Sign(Main.npc[num1765].Center.X - npc.Center.X);
                                                if (num1766 != npc.direction)
                                                {
                                                    npc.velocity.X = 0f;
                                                    npc.direction = (npc.spriteDirection = num1766);
                                                    npc.netUpdate = true;
                                                }
                                                if (npc.justHit && Main.netMode != 1 && Main.npc[num1765].localAI[0] == 0f)
                                                {
                                                    Main.npc[num1765].localAI[0] = 1f;
                                                }
                                                if ((npc.ai[0] += 1f) >= 300f)
                                                {
                                                    npc.ai[0] = 0f;
                                                    npc.netUpdate = true;
                                                }
                                            }
                                            if (npc.type == 437)
                                            {
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            if (npc.aiStyle == 84)
                                            {
                                                bool expertMode2 = Main.expertMode;
                                                bool flag167 = npc.life <= npc.lifeMax / 2;
                                                int num1767 = 120;
                                                int num1768 = 35;
                                                if (expertMode2)
                                                {
                                                    num1767 = 90;
                                                    num1768 = 25;
                                                }
                                                int num1769 = 18;
                                                int num1770 = 3;
                                                int num1771 = 30;
                                                if (expertMode2)
                                                {
                                                    num1769 = 12;
                                                    num1770 = 4;
                                                    num1771 = 20;
                                                }
                                                int num1772 = 80;
                                                int num1773 = 45;
                                                if (expertMode2)
                                                {
                                                    num1772 = 40;
                                                    num1773 = 30;
                                                }
                                                int num1774 = 20;
                                                int num1775 = 2;
                                                if (expertMode2)
                                                {
                                                    num1774 = 30;
                                                    num1775 = 2;
                                                }
                                                int num1776 = 20;
                                                int num1777 = 3;
                                                bool flag168 = npc.type == 439;
                                                bool flag169 = false;
                                                bool flag170 = false;
                                                if (flag167)
                                                {
                                                    npc.defense = (int)((float)npc.defDefense * 0.65f);
                                                }
                                                if (!flag168)
                                                {
                                                    bool flag171 = npc.ai[3] < 0f || !Main.npc[(int)npc.ai[3]].active || Main.npc[(int)npc.ai[3]].type != 439;
                                                    if (flag171)
                                                    {
                                                        npc.life = 0;
                                                        npc.HitEffect(0, 10.0);
                                                        npc.active = false;
                                                        return;
                                                    }
                                                    npc.ai[0] = Main.npc[(int)npc.ai[3]].ai[0];
                                                    npc.ai[1] = Main.npc[(int)npc.ai[3]].ai[1];
                                                    if (npc.ai[0] == 5f)
                                                    {
                                                        if (npc.justHit)
                                                        {
                                                            npc.life = 0;
                                                            npc.HitEffect(0, 10.0);
                                                            npc.active = false;
                                                            NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                                            NPC nPC12 = Main.npc[(int)npc.ai[3]];
                                                            nPC12.ai[0] = 6f;
                                                            nPC12.ai[1] = 0f;
                                                            nPC12.netUpdate = true;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        flag169 = true;
                                                        flag170 = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 5f && npc.ai[1] >= 120f && npc.ai[1] < 420f && npc.justHit)
                                                {
                                                    npc.ai[0] = 0f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[3] += 1f;
                                                    npc.velocity = Vector2.Zero;
                                                    npc.netUpdate = true;
                                                    List<int> list = new List<int>();
                                                    for (int num1778 = 0; num1778 < 200; num1778++)
                                                    {
                                                        if (Main.npc[num1778].active && Main.npc[num1778].type == 440 && Main.npc[num1778].ai[3] == (float)npc.whoAmI)
                                                        {
                                                            list.Add(num1778);
                                                        }
                                                    }
                                                    int num1779 = 10;
                                                    if (Main.expertMode)
                                                    {
                                                        num1779 = 3;
                                                    }
                                                    foreach (int current in list)
                                                    {
                                                        NPC nPC13 = Main.npc[current];
                                                        if (nPC13.localAI[1] == npc.localAI[1] && num1779 > 0)
                                                        {
                                                            num1779--;
                                                            nPC13.life = 0;
                                                            nPC13.HitEffect(0, 10.0);
                                                            nPC13.active = false;
                                                            NetMessage.SendData(23, -1, -1, null, current, 0f, 0f, 0f, 0, 0, 0);
                                                        }
                                                        else if (num1779 > 0)
                                                        {
                                                            num1779--;
                                                            nPC13.life = 0;
                                                            nPC13.HitEffect(0, 10.0);
                                                            nPC13.active = false;
                                                        }
                                                    }
                                                    Main.projectile[(int)npc.ai[2]].ai[1] = -1f;
                                                    Main.projectile[(int)npc.ai[2]].netUpdate = true;
                                                }
                                                Vector2 center30 = npc.Center;
                                                Player player11 = Main.player[npc.target];
                                                if (npc.target < 0 || npc.target == 255 || player11.dead || !player11.active)
                                                {
                                                    npc.TargetClosest(false);
                                                    player11 = Main.player[npc.target];
                                                    npc.netUpdate = true;
                                                }
                                                if (player11.dead || Vector2.Distance(player11.Center, center30) > 5600f)
                                                {
                                                    npc.life = 0;
                                                    npc.HitEffect(0, 10.0);
                                                    npc.active = false;
                                                    NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                                                    List<int> list2 = new List<int>();
                                                    list2.Add(npc.whoAmI);
                                                    for (int num1780 = 0; num1780 < 200; num1780++)
                                                    {
                                                        if (Main.npc[num1780].active && Main.npc[num1780].type == 440 && Main.npc[num1780].ai[3] == (float)npc.whoAmI)
                                                        {
                                                            Main.npc[num1780].life = 0;
                                                            Main.npc[num1780].HitEffect(0, 10.0);
                                                            Main.npc[num1780].active = false;
                                                            NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                                                        }
                                                    }
                                                }
                                                float num1781 = npc.ai[3];
                                                if (npc.localAI[0] == 0f)
                                                {
                                                    npc.localAI[0] = 1f;
                                                    npc.alpha = 255;
                                                    npc.rotation = 0f;
                                                    if (Main.netMode != 1)
                                                    {
                                                        npc.ai[0] = -1f;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                if (npc.ai[0] == -1f)
                                                {
                                                    npc.alpha -= 5;
                                                    if (npc.alpha < 0)
                                                    {
                                                        npc.alpha = 0;
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 420f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.netUpdate = true;
                                                    }
                                                    else if (npc.ai[1] > 360f)
                                                    {
                                                        npc.velocity *= 0.95f;
                                                        npc.localAI[2] = 13f;
                                                    }
                                                    else if (npc.ai[1] > 300f)
                                                    {
                                                        npc.velocity = -Vector2.UnitY;
                                                        npc.localAI[2] = 10f;
                                                    }
                                                    else if (npc.ai[1] > 120f)
                                                    {
                                                        npc.localAI[2] = 1f;
                                                    }
                                                    else
                                                    {
                                                        npc.localAI[2] = 0f;
                                                    }
                                                    flag169 = true;
                                                    flag170 = true;
                                                }
                                                if (npc.ai[0] == 0f)
                                                {
                                                    if (npc.ai[1] == 0f)
                                                    {
                                                        npc.TargetClosest(false);
                                                    }
                                                    npc.localAI[2] = 10f;
                                                    int num1782 = Math.Sign(player11.Center.X - center30.X);
                                                    if (num1782 != 0)
                                                    {
                                                        npc.direction = (npc.spriteDirection = num1782);
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 40f && flag168)
                                                    {
                                                        int num1783 = 0;
                                                        if (flag167)
                                                        {
                                                            switch ((int)npc.ai[3])
                                                            {
                                                                case 0:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 1:
                                                                    num1783 = 1;
                                                                    break;
                                                                case 2:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 3:
                                                                    num1783 = 5;
                                                                    break;
                                                                case 4:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 5:
                                                                    num1783 = 3;
                                                                    break;
                                                                case 6:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 7:
                                                                    num1783 = 5;
                                                                    break;
                                                                case 8:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 9:
                                                                    num1783 = 2;
                                                                    break;
                                                                case 10:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 11:
                                                                    num1783 = 3;
                                                                    break;
                                                                case 12:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 13:
                                                                    num1783 = 4;
                                                                    npc.ai[3] = -1f;
                                                                    break;
                                                                default:
                                                                    npc.ai[3] = -1f;
                                                                    break;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            switch ((int)npc.ai[3])
                                                            {
                                                                case 0:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 1:
                                                                    num1783 = 1;
                                                                    break;
                                                                case 2:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 3:
                                                                    num1783 = 2;
                                                                    break;
                                                                case 4:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 5:
                                                                    num1783 = 3;
                                                                    break;
                                                                case 6:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 7:
                                                                    num1783 = 1;
                                                                    break;
                                                                case 8:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 9:
                                                                    num1783 = 2;
                                                                    break;
                                                                case 10:
                                                                    num1783 = 0;
                                                                    break;
                                                                case 11:
                                                                    num1783 = 4;
                                                                    npc.ai[3] = -1f;
                                                                    break;
                                                                default:
                                                                    npc.ai[3] = -1f;
                                                                    break;
                                                            }
                                                        }
                                                        int maxValue12 = 6;
                                                        if (npc.life < npc.lifeMax / 3)
                                                        {
                                                            maxValue12 = 4;
                                                        }
                                                        if (npc.life < npc.lifeMax / 4)
                                                        {
                                                            maxValue12 = 3;
                                                        }
                                                        if (expertMode2 && flag167 && Main.rand.Next(maxValue12) == 0 && num1783 != 0 && num1783 != 4 && num1783 != 5 && NPC.CountNPCS(523) < 10)
                                                        {
                                                            num1783 = 6;
                                                        }
                                                        if (num1783 == 0)
                                                        {
                                                            float num1784 = (float)Math.Ceiling((double)((player11.Center + new Vector2(0f, -100f) - center30).Length() / 50f));
                                                            if (num1784 == 0f)
                                                            {
                                                                num1784 = 1f;
                                                            }
                                                            List<int> list3 = new List<int>();
                                                            int num1785 = 0;
                                                            list3.Add(npc.whoAmI);
                                                            for (int num1786 = 0; num1786 < 200; num1786++)
                                                            {
                                                                if (Main.npc[num1786].active && Main.npc[num1786].type == 440 && Main.npc[num1786].ai[3] == (float)npc.whoAmI)
                                                                {
                                                                    list3.Add(num1786);
                                                                }
                                                            }
                                                            bool flag172 = list3.Count % 2 == 0;
                                                            foreach (int current2 in list3)
                                                            {
                                                                NPC nPC14 = Main.npc[current2];
                                                                Vector2 center31 = nPC14.Center;
                                                                float num1787 = (float)((num1785 + flag172.ToInt() + 1) / 2) * 6.28318548f * 0.4f / (float)list3.Count;
                                                                if (num1785 % 2 == 1)
                                                                {
                                                                    num1787 *= -1f;
                                                                }
                                                                if (list3.Count == 1)
                                                                {
                                                                    num1787 = 0f;
                                                                }
                                                                Vector2 value60 = new Vector2(0f, -1f).RotatedBy((double)num1787, default(Vector2)) * new Vector2(300f, 200f);
                                                                Vector2 value61 = player11.Center + value60 - center31;
                                                                nPC14.ai[0] = 1f;
                                                                nPC14.ai[1] = num1784 * 2f;
                                                                nPC14.velocity = value61 / num1784;
                                                                if (npc.whoAmI >= nPC14.whoAmI)
                                                                {
                                                                    nPC14.position -= nPC14.velocity;
                                                                }
                                                                nPC14.netUpdate = true;
                                                                num1785++;
                                                            }
                                                        }
                                                        if (num1783 == 1)
                                                        {
                                                            npc.ai[0] = 3f;
                                                            npc.ai[1] = 0f;
                                                        }
                                                        else if (num1783 == 2)
                                                        {
                                                            npc.ai[0] = 2f;
                                                            npc.ai[1] = 0f;
                                                        }
                                                        else if (num1783 == 3)
                                                        {
                                                            npc.ai[0] = 4f;
                                                            npc.ai[1] = 0f;
                                                        }
                                                        else if (num1783 == 4)
                                                        {
                                                            npc.ai[0] = 5f;
                                                            npc.ai[1] = 0f;
                                                        }
                                                        if (num1783 == 5)
                                                        {
                                                            npc.ai[0] = 7f;
                                                            npc.ai[1] = 0f;
                                                        }
                                                        if (num1783 == 6)
                                                        {
                                                            npc.ai[0] = 8f;
                                                            npc.ai[1] = 0f;
                                                        }
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 1f)
                                                {
                                                    flag169 = true;
                                                    npc.localAI[2] = 10f;
                                                    if ((float)((int)npc.ai[1]) % 2f != 0f && npc.ai[1] != 1f)
                                                    {
                                                        npc.position -= npc.velocity;
                                                    }
                                                    npc.ai[1] -= 1f;
                                                    if (npc.ai[1] <= 0f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 2f)
                                                {
                                                    npc.localAI[2] = 11f;
                                                    Vector2 vec8 = Vector2.Normalize(player11.Center - center30);
                                                    if (vec8.HasNaNs())
                                                    {
                                                        vec8 = new Vector2((float)npc.direction, 0f);
                                                    }
                                                    if (npc.ai[1] >= 4f && flag168 && (int)(npc.ai[1] - 4f) % num1767 == 0)
                                                    {
                                                        if (Main.netMode != 1)
                                                        {
                                                            List<int> list4 = new List<int>();
                                                            for (int num1788 = 0; num1788 < 200; num1788++)
                                                            {
                                                                if (Main.npc[num1788].active && Main.npc[num1788].type == 440 && Main.npc[num1788].ai[3] == (float)npc.whoAmI)
                                                                {
                                                                    list4.Add(num1788);
                                                                }
                                                            }
                                                            foreach (int current3 in list4)
                                                            {
                                                                NPC nPC15 = Main.npc[current3];
                                                                Vector2 center32 = nPC15.Center;
                                                                int num1789 = Math.Sign(player11.Center.X - center32.X);
                                                                if (num1789 != 0)
                                                                {
                                                                    nPC15.direction = (nPC15.spriteDirection = num1789);
                                                                }
                                                                vec8 = Vector2.Normalize(player11.Center - center32 + player11.velocity * 20f);
                                                                if (vec8.HasNaNs())
                                                                {
                                                                    vec8 = new Vector2((float)npc.direction, 0f);
                                                                }
                                                                Vector2 vector256 = center32 + new Vector2((float)(npc.direction * 30), 12f);
                                                                for (int num1790 = 0; num1790 < 1; num1790++)
                                                                {
                                                                    Vector2 spinninpoint = vec8 * (6f + (float)Main.rand.NextDouble() * 4f);
                                                                    spinninpoint = spinninpoint.RotatedByRandom(0.52359879016876221);
                                                                    Projectile.NewProjectile(vector256.X, vector256.Y, spinninpoint.X, spinninpoint.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                                                }
                                                            }
                                                        }
                                                        if (Main.netMode != 1)
                                                        {
                                                            vec8 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
                                                            if (vec8.HasNaNs())
                                                            {
                                                                vec8 = new Vector2((float)npc.direction, 0f);
                                                            }
                                                            Vector2 vector257 = npc.Center + new Vector2((float)(npc.direction * 30), 12f);
                                                            for (int num1791 = 0; num1791 < 1; num1791++)
                                                            {
                                                                Vector2 vector258 = vec8 * 4f;
                                                                Projectile.NewProjectile(vector257.X, vector257.Y, vector258.X, vector258.Y, 464, num1768, 0f, Main.myPlayer, 0f, 1f);
                                                            }
                                                        }
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= (float)(4 + num1767))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 3f)
                                                {
                                                    npc.localAI[2] = 11f;
                                                    Vector2 vec9 = Vector2.Normalize(player11.Center - center30);
                                                    if (vec9.HasNaNs())
                                                    {
                                                        vec9 = new Vector2((float)npc.direction, 0f);
                                                    }
                                                    if (npc.ai[1] >= 4f && flag168 && (int)(npc.ai[1] - 4f) % num1769 == 0)
                                                    {
                                                        int num1792 = (int)(npc.ai[1] - 4f) / num1769;
                                                        if (num1792 == 2)
                                                        {
                                                            List<int> list5 = new List<int>();
                                                            for (int num1793 = 0; num1793 < 200; num1793++)
                                                            {
                                                                if (Main.npc[num1793].active && Main.npc[num1793].type == 440 && Main.npc[num1793].ai[3] == (float)npc.whoAmI)
                                                                {
                                                                    list5.Add(num1793);
                                                                }
                                                            }
                                                            if (Main.netMode != 1)
                                                            {
                                                                foreach (int current4 in list5)
                                                                {
                                                                    NPC nPC16 = Main.npc[current4];
                                                                    Vector2 center33 = nPC16.Center;
                                                                    int num1794 = Math.Sign(player11.Center.X - center33.X);
                                                                    if (num1794 != 0)
                                                                    {
                                                                        nPC16.direction = (nPC16.spriteDirection = num1794);
                                                                    }
                                                                    vec9 = Vector2.Normalize(player11.Center - center33 + player11.velocity * 20f);
                                                                    if (vec9.HasNaNs())
                                                                    {
                                                                        vec9 = new Vector2((float)npc.direction, 0f);
                                                                    }
                                                                    Vector2 vector259 = center33 + new Vector2((float)(npc.direction * 30), 12f);
                                                                    for (int num1795 = 0; num1795 < 1; num1795++)
                                                                    {
                                                                        Vector2 spinninpoint2 = vec9 * (6f + (float)Main.rand.NextDouble() * 4f);
                                                                        spinninpoint2 = spinninpoint2.RotatedByRandom(0.52359879016876221);
                                                                        Projectile.NewProjectile(vector259.X, vector259.Y, spinninpoint2.X, spinninpoint2.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        int num1796 = Math.Sign(player11.Center.X - center30.X);
                                                        if (num1796 != 0)
                                                        {
                                                            npc.direction = (npc.spriteDirection = num1796);
                                                        }
                                                        if (Main.netMode != 1)
                                                        {
                                                            vec9 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
                                                            if (vec9.HasNaNs())
                                                            {
                                                                vec9 = new Vector2((float)npc.direction, 0f);
                                                            }
                                                            Vector2 vector260 = npc.Center + new Vector2((float)(npc.direction * 30), 12f);
                                                            for (int num1797 = 0; num1797 < 1; num1797++)
                                                            {
                                                                Vector2 spinninpoint3 = vec9 * (6f + (float)Main.rand.NextDouble() * 4f);
                                                                spinninpoint3 = spinninpoint3.RotatedByRandom(0.52359879016876221);
                                                                Projectile.NewProjectile(vector260.X, vector260.Y, spinninpoint3.X, spinninpoint3.Y, 467, num1771, 0f, Main.myPlayer, 0f, 0f);
                                                            }
                                                        }
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= (float)(4 + num1769 * num1770))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 4f)
                                                {
                                                    if (flag168)
                                                    {
                                                        npc.localAI[2] = 12f;
                                                    }
                                                    else
                                                    {
                                                        npc.localAI[2] = 11f;
                                                    }
                                                    if (npc.ai[1] == 20f && flag168 && Main.netMode != 1)
                                                    {
                                                        List<int> list6 = new List<int>();
                                                        for (int num1798 = 0; num1798 < 200; num1798++)
                                                        {
                                                            if (Main.npc[num1798].active && Main.npc[num1798].type == 440 && Main.npc[num1798].ai[3] == (float)npc.whoAmI)
                                                            {
                                                                list6.Add(num1798);
                                                            }
                                                        }
                                                        foreach (int current5 in list6)
                                                        {
                                                            NPC nPC17 = Main.npc[current5];
                                                            Vector2 center34 = nPC17.Center;
                                                            int num1799 = Math.Sign(player11.Center.X - center34.X);
                                                            if (num1799 != 0)
                                                            {
                                                                nPC17.direction = (nPC17.spriteDirection = num1799);
                                                            }
                                                            if (Main.netMode != 1)
                                                            {
                                                                Vector2 vec10 = Vector2.Normalize(player11.Center - center34 + player11.velocity * 20f);
                                                                if (vec10.HasNaNs())
                                                                {
                                                                    vec10 = new Vector2((float)npc.direction, 0f);
                                                                }
                                                                Vector2 vector261 = center34 + new Vector2((float)(npc.direction * 30), 12f);
                                                                for (int num1800 = 0; num1800 < 1; num1800++)
                                                                {
                                                                    Vector2 spinninpoint4 = vec10 * (6f + (float)Main.rand.NextDouble() * 4f);
                                                                    spinninpoint4 = spinninpoint4.RotatedByRandom(0.52359879016876221);
                                                                    Projectile.NewProjectile(vector261.X, vector261.Y, spinninpoint4.X, spinninpoint4.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                                                }
                                                            }
                                                        }
                                                        if ((int)(npc.ai[1] - 20f) % num1772 == 0)
                                                        {
                                                            Projectile.NewProjectile(npc.Center.X, npc.Center.Y - 100f, 0f, 0f, 465, num1773, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= (float)(20 + num1772))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 5f)
                                                {
                                                    npc.localAI[2] = 10f;
                                                    Vector2 vec11 = Vector2.Normalize(player11.Center - center30);
                                                    if (vec11.HasNaNs())
                                                    {
                                                        vec11 = new Vector2((float)npc.direction, 0f);
                                                    }
                                                    if (npc.ai[1] >= 0f && npc.ai[1] < 30f)
                                                    {
                                                        flag169 = true;
                                                        flag170 = true;
                                                        float num1801 = (npc.ai[1] - 0f) / 30f;
                                                        npc.alpha = (int)(num1801 * 255f);
                                                    }
                                                    else if (npc.ai[1] >= 30f && npc.ai[1] < 90f)
                                                    {
                                                        if (npc.ai[1] == 30f && Main.netMode != 1 && flag168)
                                                        {
                                                            npc.localAI[1] += 1f;
                                                            Vector2 spinningpoint10 = new Vector2(180f, 0f);
                                                            List<int> list7 = new List<int>();
                                                            for (int num1802 = 0; num1802 < 200; num1802++)
                                                            {
                                                                if (Main.npc[num1802].active && Main.npc[num1802].type == 440 && Main.npc[num1802].ai[3] == (float)npc.whoAmI)
                                                                {
                                                                    list7.Add(num1802);
                                                                }
                                                            }
                                                            int num1803 = 6 - list7.Count;
                                                            if (num1803 > 2)
                                                            {
                                                                num1803 = 2;
                                                            }
                                                            int num1804 = list7.Count + num1803 + 1;
                                                            float[] array8 = new float[num1804];
                                                            for (int num1805 = 0; num1805 < array8.Length; num1805++)
                                                            {
                                                                array8[num1805] = Vector2.Distance(npc.Center + spinningpoint10.RotatedBy((double)((float)num1805 * 6.28318548f / (float)num1804 - 1.57079637f), default(Vector2)), player11.Center);
                                                            }
                                                            int num1806 = 0;
                                                            for (int num1807 = 1; num1807 < array8.Length; num1807++)
                                                            {
                                                                if (array8[num1806] > array8[num1807])
                                                                {
                                                                    num1806 = num1807;
                                                                }
                                                            }
                                                            if (num1806 < num1804 / 2)
                                                            {
                                                                num1806 += num1804 / 2;
                                                            }
                                                            else
                                                            {
                                                                num1806 -= num1804 / 2;
                                                            }
                                                            int num1808 = num1803;
                                                            for (int num1809 = 0; num1809 < array8.Length; num1809++)
                                                            {
                                                                if (num1806 != num1809)
                                                                {
                                                                    Vector2 center35 = npc.Center + spinningpoint10.RotatedBy((double)((float)num1809 * 6.28318548f / (float)num1804 - 1.57079637f), default(Vector2));
                                                                    if (num1808-- > 0)
                                                                    {
                                                                        int num1810 = NPC.NewNPC((int)center35.X, (int)center35.Y + npc.height / 2, 440, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                                        Main.npc[num1810].ai[3] = (float)npc.whoAmI;
                                                                        Main.npc[num1810].netUpdate = true;
                                                                        Main.npc[num1810].localAI[1] = npc.localAI[1];
                                                                    }
                                                                    else
                                                                    {
                                                                        int num1811 = list7[-num1808 - 1];
                                                                        Main.npc[num1811].Center = center35;
                                                                        NetMessage.SendData(23, -1, -1, null, num1811, 0f, 0f, 0f, 0, 0, 0);
                                                                    }
                                                                }
                                                            }
                                                            npc.ai[2] = (float)Projectile.NewProjectile(npc.Center.X, npc.Center.Y, 0f, 0f, 490, 0, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                                            npc.Center += spinningpoint10.RotatedBy((double)((float)num1806 * 6.28318548f / (float)num1804 - 1.57079637f), default(Vector2));
                                                            npc.netUpdate = true;
                                                            list7.Clear();
                                                        }
                                                        flag169 = true;
                                                        flag170 = true;
                                                        npc.alpha = 255;
                                                        if (flag168)
                                                        {
                                                            Vector2 value62 = Main.projectile[(int)npc.ai[2]].Center;
                                                            value62 -= npc.Center;
                                                            if (value62 == Vector2.Zero)
                                                            {
                                                                value62 = -Vector2.UnitY;
                                                            }
                                                            value62.Normalize();
                                                            if (Math.Abs(value62.Y) < 0.77f)
                                                            {
                                                                npc.localAI[2] = 11f;
                                                            }
                                                            else if (value62.Y < 0f)
                                                            {
                                                                npc.localAI[2] = 12f;
                                                            }
                                                            else
                                                            {
                                                                npc.localAI[2] = 10f;
                                                            }
                                                            int num1812 = Math.Sign(value62.X);
                                                            if (num1812 != 0)
                                                            {
                                                                npc.direction = (npc.spriteDirection = num1812);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            Vector2 value63 = Main.projectile[(int)Main.npc[(int)npc.ai[3]].ai[2]].Center;
                                                            value63 -= npc.Center;
                                                            if (value63 == Vector2.Zero)
                                                            {
                                                                value63 = -Vector2.UnitY;
                                                            }
                                                            value63.Normalize();
                                                            if (Math.Abs(value63.Y) < 0.77f)
                                                            {
                                                                npc.localAI[2] = 11f;
                                                            }
                                                            else if (value63.Y < 0f)
                                                            {
                                                                npc.localAI[2] = 12f;
                                                            }
                                                            else
                                                            {
                                                                npc.localAI[2] = 10f;
                                                            }
                                                            int num1813 = Math.Sign(value63.X);
                                                            if (num1813 != 0)
                                                            {
                                                                npc.direction = (npc.spriteDirection = num1813);
                                                            }
                                                        }
                                                    }
                                                    else if (npc.ai[1] >= 90f && npc.ai[1] < 120f)
                                                    {
                                                        flag169 = true;
                                                        flag170 = true;
                                                        float num1814 = (npc.ai[1] - 90f) / 30f;
                                                        npc.alpha = 255 - (int)(num1814 * 255f);
                                                    }
                                                    else if (npc.ai[1] >= 120f && npc.ai[1] < 420f)
                                                    {
                                                        flag170 = true;
                                                        npc.alpha = 0;
                                                        if (flag168)
                                                        {
                                                            Vector2 value64 = Main.projectile[(int)npc.ai[2]].Center;
                                                            value64 -= npc.Center;
                                                            if (value64 == Vector2.Zero)
                                                            {
                                                                value64 = -Vector2.UnitY;
                                                            }
                                                            value64.Normalize();
                                                            if (Math.Abs(value64.Y) < 0.77f)
                                                            {
                                                                npc.localAI[2] = 11f;
                                                            }
                                                            else if (value64.Y < 0f)
                                                            {
                                                                npc.localAI[2] = 12f;
                                                            }
                                                            else
                                                            {
                                                                npc.localAI[2] = 10f;
                                                            }
                                                            int num1815 = Math.Sign(value64.X);
                                                            if (num1815 != 0)
                                                            {
                                                                npc.direction = (npc.spriteDirection = num1815);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            Vector2 value65 = Main.projectile[(int)Main.npc[(int)npc.ai[3]].ai[2]].Center;
                                                            value65 -= npc.Center;
                                                            if (value65 == Vector2.Zero)
                                                            {
                                                                value65 = -Vector2.UnitY;
                                                            }
                                                            value65.Normalize();
                                                            if (Math.Abs(value65.Y) < 0.77f)
                                                            {
                                                                npc.localAI[2] = 11f;
                                                            }
                                                            else if (value65.Y < 0f)
                                                            {
                                                                npc.localAI[2] = 12f;
                                                            }
                                                            else
                                                            {
                                                                npc.localAI[2] = 10f;
                                                            }
                                                            int num1816 = Math.Sign(value65.X);
                                                            if (num1816 != 0)
                                                            {
                                                                npc.direction = (npc.spriteDirection = num1816);
                                                            }
                                                        }
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 420f)
                                                    {
                                                        flag170 = true;
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 6f)
                                                {
                                                    npc.localAI[2] = 13f;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 120f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 7f)
                                                {
                                                    npc.localAI[2] = 11f;
                                                    Vector2 vec12 = Vector2.Normalize(player11.Center - center30);
                                                    if (vec12.HasNaNs())
                                                    {
                                                        vec12 = new Vector2((float)npc.direction, 0f);
                                                    }
                                                    if (npc.ai[1] >= 4f && flag168 && (int)(npc.ai[1] - 4f) % num1774 == 0)
                                                    {
                                                        int num1817 = (int)(npc.ai[1] - 4f) / num1774;
                                                        if (num1817 == 2)
                                                        {
                                                            List<int> list8 = new List<int>();
                                                            for (int num1818 = 0; num1818 < 200; num1818++)
                                                            {
                                                                if (Main.npc[num1818].active && Main.npc[num1818].type == 440 && Main.npc[num1818].ai[3] == (float)npc.whoAmI)
                                                                {
                                                                    list8.Add(num1818);
                                                                }
                                                            }
                                                            foreach (int current6 in list8)
                                                            {
                                                                NPC nPC18 = Main.npc[current6];
                                                                Vector2 center36 = nPC18.Center;
                                                                int num1819 = Math.Sign(player11.Center.X - center36.X);
                                                                if (num1819 != 0)
                                                                {
                                                                    nPC18.direction = (nPC18.spriteDirection = num1819);
                                                                }
                                                                if (Main.netMode != 1)
                                                                {
                                                                    vec12 = Vector2.Normalize(player11.Center - center36 + player11.velocity * 20f);
                                                                    if (vec12.HasNaNs())
                                                                    {
                                                                        vec12 = new Vector2((float)npc.direction, 0f);
                                                                    }
                                                                    Vector2 vector262 = center36 + new Vector2((float)(npc.direction * 30), 12f);
                                                                    int num1820 = 0;
                                                                    while ((float)num1820 < 5f)
                                                                    {
                                                                        Vector2 spinninpoint5 = vec12 * (6f + (float)Main.rand.NextDouble() * 4f);
                                                                        spinninpoint5 = spinninpoint5.RotatedByRandom(1.2566370964050293);
                                                                        Projectile.NewProjectile(vector262.X, vector262.Y, spinninpoint5.X, spinninpoint5.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                                                        num1820++;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        int num1821 = Math.Sign(player11.Center.X - center30.X);
                                                        if (num1821 != 0)
                                                        {
                                                            npc.direction = (npc.spriteDirection = num1821);
                                                        }
                                                        if (Main.netMode != 1)
                                                        {
                                                            vec12 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
                                                            if (vec12.HasNaNs())
                                                            {
                                                                vec12 = new Vector2((float)npc.direction, 0f);
                                                            }
                                                            Vector2 vector263 = npc.Center + new Vector2((float)(npc.direction * 30), 12f);
                                                            float scaleFactor24 = 8f;
                                                            float num1822 = 0.251327425f;
                                                            int num1823 = 0;
                                                            while ((float)num1823 < 5f)
                                                            {
                                                                Vector2 vector264 = vec12 * scaleFactor24;
                                                                vector264 = vector264.RotatedBy((double)(num1822 * (float)num1823 - (1.2566371f - num1822) / 2f), default(Vector2));
                                                                float ai4 = (Main.rand.NextFloat() - 0.5f) * 0.3f * 6.28318548f / 60f;
                                                                int num1824 = NPC.NewNPC((int)vector263.X, (int)vector263.Y + 7, 522, 0, 0f, ai4, vector264.X, vector264.Y, 255);
                                                                Main.npc[num1824].velocity = vector264;
                                                                num1823++;
                                                            }
                                                        }
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= (float)(4 + num1774 * num1775))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                else if (npc.ai[0] == 8f)
                                                {
                                                    npc.localAI[2] = 13f;
                                                    if (npc.ai[1] >= 4f && flag168 && (int)(npc.ai[1] - 4f) % num1776 == 0)
                                                    {
                                                        List<int> list9 = new List<int>();
                                                        for (int num1825 = 0; num1825 < 200; num1825++)
                                                        {
                                                            if (Main.npc[num1825].active && Main.npc[num1825].type == 440 && Main.npc[num1825].ai[3] == (float)npc.whoAmI)
                                                            {
                                                                list9.Add(num1825);
                                                            }
                                                        }
                                                        int num1826 = list9.Count + 1;
                                                        if (num1826 > 3)
                                                        {
                                                            num1826 = 3;
                                                        }
                                                        int num1827 = Math.Sign(player11.Center.X - center30.X);
                                                        if (num1827 != 0)
                                                        {
                                                            npc.direction = (npc.spriteDirection = num1827);
                                                        }
                                                        if (Main.netMode != 1)
                                                        {
                                                            for (int num1828 = 0; num1828 < num1826; num1828++)
                                                            {
                                                                Point point11 = npc.Center.ToTileCoordinates();
                                                                Point point12 = Main.player[npc.target].Center.ToTileCoordinates();
                                                                Vector2 vector265 = Main.player[npc.target].Center - npc.Center;
                                                                int num1829 = 20;
                                                                int num1830 = 3;
                                                                int num1831 = 7;
                                                                int num1832 = 2;
                                                                int num1833 = 0;
                                                                bool flag173 = false;
                                                                if (vector265.Length() > 2000f)
                                                                {
                                                                    flag173 = true;
                                                                }
                                                                while (!flag173 && num1833 < 100)
                                                                {
                                                                    num1833++;
                                                                    int num1834 = Main.rand.Next(point12.X - num1829, point12.X + num1829 + 1);
                                                                    int num1835 = Main.rand.Next(point12.Y - num1829, point12.Y + num1829 + 1);
                                                                    if ((num1835 < point12.Y - num1831 || num1835 > point12.Y + num1831 || num1834 < point12.X - num1831 || num1834 > point12.X + num1831) && (num1835 < point11.Y - num1830 || num1835 > point11.Y + num1830 || num1834 < point11.X - num1830 || num1834 > point11.X + num1830) && !Main.tile[num1834, num1835].nactive())
                                                                    {
                                                                        bool flag174 = true;
                                                                        if (flag174 && Collision.SolidTiles(num1834 - num1832, num1834 + num1832, num1835 - num1832, num1835 + num1832))
                                                                        {
                                                                            flag174 = false;
                                                                        }
                                                                        if (flag174)
                                                                        {
                                                                            NPC.NewNPC(num1834 * 16 + 8, num1835 * 16 + 8, 523, 0, (float)npc.whoAmI, 0f, 0f, 0f, 255);
                                                                            break;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= (float)(4 + num1776 * num1777))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[3] += 1f;
                                                        npc.velocity = Vector2.Zero;
                                                        npc.netUpdate = true;
                                                    }
                                                }
                                                if (!flag168)
                                                {
                                                    npc.ai[3] = num1781;
                                                }
                                                npc.dontTakeDamage = flag169;
                                                npc.chaseable = !flag170;
                                                return;
                                            }
                                            if (npc.aiStyle == 85)
                                            {
                                                npc.noTileCollide = false;
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    if (Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 1f;
                                                    }
                                                    else
                                                    {
                                                        Vector2 value66 = Main.player[npc.target].Center - npc.Center;
                                                        value66.Y -= (float)(Main.player[npc.target].height / 4);
                                                        float num1836 = value66.Length();
                                                        if (num1836 > 800f)
                                                        {
                                                            npc.ai[0] = 2f;
                                                        }
                                                        else
                                                        {
                                                            Vector2 center37 = npc.Center;
                                                            center37.X = Main.player[npc.target].Center.X;
                                                            Vector2 vector266 = center37 - npc.Center;
                                                            if (vector266.Length() > 8f && Collision.CanHit(npc.Center, 1, 1, center37, 1, 1))
                                                            {
                                                                npc.ai[0] = 3f;
                                                                npc.ai[1] = center37.X;
                                                                npc.ai[2] = center37.Y;
                                                                Vector2 center38 = npc.Center;
                                                                center38.Y = Main.player[npc.target].Center.Y;
                                                                if (vector266.Length() > 8f && Collision.CanHit(npc.Center, 1, 1, center38, 1, 1) && Collision.CanHit(center38, 1, 1, Main.player[npc.target].position, 1, 1))
                                                                {
                                                                    npc.ai[0] = 3f;
                                                                    npc.ai[1] = center38.X;
                                                                    npc.ai[2] = center38.Y;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                center37 = npc.Center;
                                                                center37.Y = Main.player[npc.target].Center.Y;
                                                                if ((center37 - npc.Center).Length() > 8f && Collision.CanHit(npc.Center, 1, 1, center37, 1, 1))
                                                                {
                                                                    npc.ai[0] = 3f;
                                                                    npc.ai[1] = center37.X;
                                                                    npc.ai[2] = center37.Y;
                                                                }
                                                            }
                                                            if (npc.ai[0] == 0f)
                                                            {
                                                                npc.localAI[0] = 0f;
                                                                value66.Normalize();
                                                                value66 *= 0.5f;
                                                                npc.velocity += value66;
                                                                npc.ai[0] = 4f;
                                                                npc.ai[1] = 0f;
                                                            }
                                                        }
                                                    }
                                                }
                                                else if (npc.ai[0] == 1f)
                                                {
                                                    npc.rotation += (float)npc.direction * 0.3f;
                                                    Vector2 value67 = Main.player[npc.target].Center - npc.Center;
                                                    if (npc.type == 421)
                                                    {
                                                        value67 = Main.player[npc.target].Top - npc.Center;
                                                    }
                                                    float num1837 = value67.Length();
                                                    float num1838 = 5.5f;
                                                    num1838 += num1837 / 100f;
                                                    int num1839 = 50;
                                                    value67.Normalize();
                                                    value67 *= num1838;
                                                    npc.velocity = (npc.velocity * (float)(num1839 - 1) + value67) / (float)num1839;
                                                    if (!Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    if (npc.type == 421 && num1837 < 40f && Main.player[npc.target].active && !Main.player[npc.target].dead)
                                                    {
                                                        bool flag175 = true;
                                                        for (int num1840 = 0; num1840 < 200; num1840++)
                                                        {
                                                            NPC nPC19 = Main.npc[num1840];
                                                            if (nPC19.active && nPC19.type == npc.type && nPC19.ai[0] == 5f && nPC19.target == npc.target)
                                                            {
                                                                flag175 = false;
                                                                break;
                                                            }
                                                        }
                                                        if (flag175)
                                                        {
                                                            npc.Center = Main.player[npc.target].Top;
                                                            npc.velocity = Vector2.Zero;
                                                            npc.ai[0] = 5f;
                                                            npc.ai[1] = 0f;
                                                            npc.netUpdate = true;
                                                        }
                                                    }
                                                }
                                                else if (npc.ai[0] == 2f)
                                                {
                                                    npc.rotation = npc.velocity.X * 0.1f;
                                                    npc.noTileCollide = true;
                                                    Vector2 value68 = Main.player[npc.target].Center - npc.Center;
                                                    float num1841 = value68.Length();
                                                    float scaleFactor25 = 3f;
                                                    int num1842 = 3;
                                                    value68.Normalize();
                                                    value68 *= scaleFactor25;
                                                    npc.velocity = (npc.velocity * (float)(num1842 - 1) + value68) / (float)num1842;
                                                    if (num1841 < 600f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                }
                                                else if (npc.ai[0] == 3f)
                                                {
                                                    npc.rotation = npc.velocity.X * 0.1f;
                                                    Vector2 value69 = new Vector2(npc.ai[1], npc.ai[2]);
                                                    Vector2 value70 = value69 - npc.Center;
                                                    float num1843 = value70.Length();
                                                    float num1844 = 2f;
                                                    float num1845 = 3f;
                                                    value70.Normalize();
                                                    value70 *= num1844;
                                                    npc.velocity = (npc.velocity * (num1845 - 1f) + value70) / num1845;
                                                    if (npc.collideX || npc.collideY)
                                                    {
                                                        npc.ai[0] = 4f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    if (num1843 < num1844 || num1843 > 800f || Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                }
                                                else if (npc.ai[0] == 4f)
                                                {
                                                    npc.rotation = npc.velocity.X * 0.1f;
                                                    if (npc.collideX)
                                                    {
                                                        npc.velocity.X = npc.velocity.X * -0.8f;
                                                    }
                                                    if (npc.collideY)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * -0.8f;
                                                    }
                                                    Vector2 value71;
                                                    if (npc.velocity.X == 0f && npc.velocity.Y == 0f)
                                                    {
                                                        value71 = Main.player[npc.target].Center - npc.Center;
                                                        value71.Y -= (float)(Main.player[npc.target].height / 4);
                                                        value71.Normalize();
                                                        npc.velocity = value71 * 0.1f;
                                                    }
                                                    float scaleFactor26 = 2f;
                                                    float num1846 = 20f;
                                                    value71 = npc.velocity;
                                                    value71.Normalize();
                                                    value71 *= scaleFactor26;
                                                    npc.velocity = (npc.velocity * (num1846 - 1f) + value71) / num1846;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] > 180f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    if (Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                    npc.localAI[0] += 1f;
                                                    if (npc.localAI[0] >= 5f && !Collision.SolidCollision(npc.position - new Vector2(10f, 10f), npc.width + 20, npc.height + 20))
                                                    {
                                                        npc.localAI[0] = 0f;
                                                        Vector2 center39 = npc.Center;
                                                        center39.X = Main.player[npc.target].Center.X;
                                                        if (Collision.CanHit(npc.Center, 1, 1, center39, 1, 1) && Collision.CanHit(npc.Center, 1, 1, center39, 1, 1) && Collision.CanHit(Main.player[npc.target].Center, 1, 1, center39, 1, 1))
                                                        {
                                                            npc.ai[0] = 3f;
                                                            npc.ai[1] = center39.X;
                                                            npc.ai[2] = center39.Y;
                                                        }
                                                        else
                                                        {
                                                            center39 = npc.Center;
                                                            center39.Y = Main.player[npc.target].Center.Y;
                                                            if (Collision.CanHit(npc.Center, 1, 1, center39, 1, 1) && Collision.CanHit(Main.player[npc.target].Center, 1, 1, center39, 1, 1))
                                                            {
                                                                npc.ai[0] = 3f;
                                                                npc.ai[1] = center39.X;
                                                                npc.ai[2] = center39.Y;
                                                            }
                                                        }
                                                    }
                                                }
                                                else if (npc.ai[0] == 5f)
                                                {
                                                    Player player12 = Main.player[npc.target];
                                                    if (!player12.active || player12.dead)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        npc.netUpdate = true;
                                                    }
                                                    else
                                                    {
                                                        npc.Center = ((player12.gravDir == 1f) ? player12.Top : player12.Bottom) + new Vector2((float)(player12.direction * 4), 0f);
                                                        npc.gfxOffY = player12.gfxOffY;
                                                        npc.velocity = Vector2.Zero;
                                                        player12.AddBuff(163, 59, true);
                                                    }
                                                }
                                                if (npc.type == 405)
                                                {
                                                    npc.rotation = 0f;
                                                    for (int num1847 = 0; num1847 < 200; num1847++)
                                                    {
                                                        if (num1847 != npc.whoAmI && Main.npc[num1847].active && Main.npc[num1847].type == npc.type && Math.Abs(npc.position.X - Main.npc[num1847].position.X) + Math.Abs(npc.position.Y - Main.npc[num1847].position.Y) < (float)npc.width)
                                                        {
                                                            if (npc.position.X < Main.npc[num1847].position.X)
                                                            {
                                                                npc.velocity.X = npc.velocity.X - 0.05f;
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.X = npc.velocity.X + 0.05f;
                                                            }
                                                            if (npc.position.Y < Main.npc[num1847].position.Y)
                                                            {
                                                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                                                            }
                                                        }
                                                    }
                                                    return;
                                                }
                                                if (npc.type == 421)
                                                {
                                                    npc.hide = (npc.ai[0] == 5f);
                                                    npc.rotation = npc.velocity.X * 0.1f;
                                                    for (int num1848 = 0; num1848 < 200; num1848++)
                                                    {
                                                        if (num1848 != npc.whoAmI && Main.npc[num1848].active && Main.npc[num1848].type == npc.type && Math.Abs(npc.position.X - Main.npc[num1848].position.X) + Math.Abs(npc.position.Y - Main.npc[num1848].position.Y) < (float)npc.width)
                                                        {
                                                            if (npc.position.X < Main.npc[num1848].position.X)
                                                            {
                                                                npc.velocity.X = npc.velocity.X - 0.05f;
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.X = npc.velocity.X + 0.05f;
                                                            }
                                                            if (npc.position.Y < Main.npc[num1848].position.Y)
                                                            {
                                                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                                                            }
                                                        }
                                                    }
                                                    return;
                                                }
                                            }
                                            else if (npc.aiStyle == 86)
                                            {
                                                if (npc.alpha > 0)
                                                {
                                                    npc.alpha -= 30;
                                                    if (npc.alpha < 0)
                                                    {
                                                        npc.alpha = 0;
                                                    }
                                                }
                                                npc.noGravity = true;
                                                npc.noTileCollide = true;
                                                npc.knockBackResist = 0f;
                                                for (int num1849 = 0; num1849 < 200; num1849++)
                                                {
                                                    if (num1849 != npc.whoAmI && Main.npc[num1849].active && Main.npc[num1849].type == npc.type)
                                                    {
                                                        Vector2 value72 = Main.npc[num1849].Center - npc.Center;
                                                        if (value72.Length() < 50f)
                                                        {
                                                            value72.Normalize();
                                                            if (value72.X == 0f && value72.Y == 0f)
                                                            {
                                                                if (num1849 > npc.whoAmI)
                                                                {
                                                                    value72.X = 1f;
                                                                }
                                                                else
                                                                {
                                                                    value72.X = -1f;
                                                                }
                                                            }
                                                            value72 *= 0.4f;
                                                            npc.velocity -= value72;
                                                            Main.npc[num1849].velocity += value72;
                                                        }
                                                    }
                                                }
                                                if (npc.type == 472)
                                                {
                                                    float num1850 = 120f;
                                                    if (npc.localAI[0] < num1850)
                                                    {
                                                        if (npc.localAI[0] == 0f)
                                                        {
                                                            npc.TargetClosest(true);
                                                            if (npc.direction > 0)
                                                            {
                                                                npc.velocity.X = npc.velocity.X + 2f;
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.X = npc.velocity.X - 2f;
                                                            }
                                                        }
                                                        npc.localAI[0] += 1f;
                                                    }
                                                }
                                                if (npc.type == 521)
                                                {
                                                    float num1857 = 120f;
                                                    if (npc.localAI[0] < num1857)
                                                    {
                                                        if (npc.localAI[0] == 0f)
                                                        {
                                                            npc.TargetClosest(true);
                                                            if (npc.direction > 0)
                                                            {
                                                                npc.velocity.X = npc.velocity.X + 2f;
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.X = npc.velocity.X - 2f;
                                                            }
                                                        }
                                                        npc.localAI[0] += 1f;
                                                    }
                                                }
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    npc.ai[0] = 1f;
                                                    npc.ai[1] = (float)npc.direction;
                                                }
                                                else if (npc.ai[0] == 1f)
                                                {
                                                    npc.TargetClosest(true);
                                                    float num1861 = 0.3f;
                                                    float num1862 = 7f;
                                                    float num1863 = 4f;
                                                    float num1864 = 660f;
                                                    float num1865 = 4f;
                                                    if (npc.type == 521)
                                                    {
                                                        num1861 = 0.7f;
                                                        num1862 = 14f;
                                                        num1864 = 500f;
                                                        num1863 = 6f;
                                                        num1865 = 3f;
                                                    }
                                                    npc.velocity.X = npc.velocity.X + npc.ai[1] * num1861;
                                                    if (npc.velocity.X > num1862)
                                                    {
                                                        npc.velocity.X = num1862;
                                                    }
                                                    if (npc.velocity.X < -num1862)
                                                    {
                                                        npc.velocity.X = -num1862;
                                                    }
                                                    float num1866 = Main.player[npc.target].Center.Y - npc.Center.Y;
                                                    if (Math.Abs(num1866) > num1863)
                                                    {
                                                        num1865 = 15f;
                                                    }
                                                    if (num1866 > num1863)
                                                    {
                                                        num1866 = num1863;
                                                    }
                                                    else if (num1866 < -num1863)
                                                    {
                                                        num1866 = -num1863;
                                                    }
                                                    npc.velocity.Y = (npc.velocity.Y * (num1865 - 1f) + num1866) / num1865;
                                                    if ((npc.ai[1] > 0f && Main.player[npc.target].Center.X - npc.Center.X < -num1864) || (npc.ai[1] < 0f && Main.player[npc.target].Center.X - npc.Center.X > num1864))
                                                    {
                                                        npc.ai[0] = 2f;
                                                        npc.ai[1] = 0f;
                                                        if (npc.Center.Y + 20f > Main.player[npc.target].Center.Y)
                                                        {
                                                            npc.ai[1] = -1f;
                                                        }
                                                        else
                                                        {
                                                            npc.ai[1] = 1f;
                                                        }
                                                    }
                                                }
                                                else if (npc.ai[0] == 2f)
                                                {
                                                    float num1867 = 0.4f;
                                                    float scaleFactor27 = 0.95f;
                                                    float num1868 = 5f;
                                                    if (npc.type == 521)
                                                    {
                                                        num1867 = 0.3f;
                                                        num1868 = 7f;
                                                        scaleFactor27 = 0.9f;
                                                    }
                                                    npc.velocity.Y = npc.velocity.Y + npc.ai[1] * num1867;
                                                    if (npc.velocity.Length() > num1868)
                                                    {
                                                        npc.velocity *= scaleFactor27;
                                                    }
                                                    if (npc.velocity.X > -1f && npc.velocity.X < 1f)
                                                    {
                                                        npc.TargetClosest(true);
                                                        npc.ai[0] = 3f;
                                                        npc.ai[1] = (float)npc.direction;
                                                    }
                                                }
                                                else if (npc.ai[0] == 3f)
                                                {
                                                    float num1869 = 0.4f;
                                                    float num1870 = 0.2f;
                                                    float num1871 = 5f;
                                                    float scaleFactor28 = 0.95f;
                                                    if (npc.type == 521)
                                                    {
                                                        num1869 = 0.6f;
                                                        num1870 = 0.3f;
                                                        num1871 = 7f;
                                                        scaleFactor28 = 0.9f;
                                                    }
                                                    npc.velocity.X = npc.velocity.X + npc.ai[1] * num1869;
                                                    if (npc.Center.Y > Main.player[npc.target].Center.Y)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y - num1870;
                                                    }
                                                    else
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y + num1870;
                                                    }
                                                    if (npc.velocity.Length() > num1871)
                                                    {
                                                        npc.velocity *= scaleFactor28;
                                                    }
                                                    if (npc.velocity.Y > -1f && npc.velocity.Y < 1f)
                                                    {
                                                        npc.TargetClosest(true);
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = (float)npc.direction;
                                                    }
                                                }
                                                if (npc.type == 521)
                                                {
                                                    return;
                                                }
                                            }
                                            else if (npc.aiStyle == 87)
                                            {
                                                npc.knockBackResist = 0.2f * Main.knockBackMultiplier;
                                                npc.dontTakeDamage = false;
                                                npc.noTileCollide = false;
                                                npc.noGravity = false;
                                                npc.reflectingProjectiles = false;
                                                if (npc.ai[0] != 7f && Main.player[npc.target].dead)
                                                {
                                                    npc.TargetClosest(true);
                                                    if (Main.player[npc.target].dead)
                                                    {
                                                        npc.ai[0] = 7f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                    }
                                                }
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    Vector2 vector268 = Main.player[npc.target].Center - npc.Center;
                                                    if (npc.velocity.X != 0f || npc.velocity.Y > 100f || npc.justHit || vector268.Length() < 80f)
                                                    {
                                                        npc.ai[0] = 1f;
                                                        npc.ai[1] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 1f)
                                                {
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] > 36f)
                                                    {
                                                        npc.ai[0] = 2f;
                                                        npc.ai[1] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 2f)
                                                {
                                                    if ((Main.player[npc.target].Center - npc.Center).Length() > 600f)
                                                    {
                                                        npc.ai[0] = 5f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                    }
                                                    if (npc.velocity.Y == 0f)
                                                    {
                                                        npc.TargetClosest(true);
                                                        npc.velocity.X = npc.velocity.X * 0.85f;
                                                        npc.ai[1] += 1f;
                                                        float num1875 = 15f + 30f * ((float)npc.life / (float)npc.lifeMax);
                                                        float num1876 = 3f + 4f * (1f - (float)npc.life / (float)npc.lifeMax);
                                                        float num1877 = 4f;
                                                        if (!Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                        {
                                                            num1877 += 2f;
                                                        }
                                                        if (npc.ai[1] > num1875)
                                                        {
                                                            npc.ai[3] += 1f;
                                                            if (npc.ai[3] >= 3f)
                                                            {
                                                                npc.ai[3] = 0f;
                                                                num1877 *= 2f;
                                                                num1876 /= 2f;
                                                            }
                                                            npc.ai[1] = 0f;
                                                            npc.velocity.Y = npc.velocity.Y - num1877;
                                                            npc.velocity.X = num1876 * (float)npc.direction;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        npc.knockBackResist = 0f;
                                                        npc.velocity.X = npc.velocity.X * 0.99f;
                                                        if (npc.direction < 0 && npc.velocity.X > -1f)
                                                        {
                                                            npc.velocity.X = -1f;
                                                        }
                                                        if (npc.direction > 0 && npc.velocity.X < 1f)
                                                        {
                                                            npc.velocity.X = 1f;
                                                        }
                                                    }
                                                    npc.ai[2] += 1f;
                                                    if ((double)npc.ai[2] > 210.0 && npc.velocity.Y == 0f && Main.netMode != 1)
                                                    {
                                                        int num1878 = Main.rand.Next(3);
                                                        if (num1878 == 0)
                                                        {
                                                            npc.ai[0] = 3f;
                                                        }
                                                        else if (num1878 == 1)
                                                        {
                                                            npc.ai[0] = 4f;
                                                            npc.noTileCollide = true;
                                                            npc.velocity.Y = -8f;
                                                        }
                                                        else if (num1878 == 2)
                                                        {
                                                            npc.ai[0] = 6f;
                                                        }
                                                        else
                                                        {
                                                            npc.ai[0] = 2f;
                                                        }
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 3f)
                                                {
                                                    npc.velocity.X = npc.velocity.X * 0.85f;
                                                    npc.dontTakeDamage = true;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 180f)
                                                    {
                                                        npc.ai[0] = 2f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    if (Main.expertMode)
                                                    {
                                                        npc.ReflectProjectiles(npc.Hitbox);
                                                        npc.reflectingProjectiles = true;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 4f)
                                                {
                                                    npc.noTileCollide = true;
                                                    npc.noGravity = true;
                                                    npc.knockBackResist = 0f;
                                                    if (npc.velocity.X < 0f)
                                                    {
                                                        npc.direction = -1;
                                                    }
                                                    else
                                                    {
                                                        npc.direction = 1;
                                                    }
                                                    npc.spriteDirection = npc.direction;
                                                    npc.TargetClosest(true);
                                                    Vector2 center40 = Main.player[npc.target].Center;
                                                    center40.Y -= 350f;
                                                    Vector2 vector269 = center40 - npc.Center;
                                                    if (npc.ai[2] == 1f)
                                                    {
                                                        npc.ai[1] += 1f;
                                                        vector269 = Main.player[npc.target].Center - npc.Center;
                                                        vector269.Normalize();
                                                        vector269 *= 8f;
                                                        npc.velocity = (npc.velocity * 4f + vector269) / 5f;
                                                        if (npc.ai[1] > 6f)
                                                        {
                                                            npc.ai[1] = 0f;
                                                            npc.ai[0] = 4.1f;
                                                            npc.ai[2] = 0f;
                                                            npc.velocity = vector269;
                                                            return;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) < 40f && npc.Center.Y < Main.player[npc.target].Center.Y - 300f)
                                                        {
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 1f;
                                                            return;
                                                        }
                                                        vector269.Normalize();
                                                        vector269 *= 12f;
                                                        npc.velocity = (npc.velocity * 5f + vector269) / 6f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 4.1f)
                                                {
                                                    npc.knockBackResist = 0f;
                                                    if (npc.ai[2] == 0f && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1) && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                    {
                                                        npc.ai[2] = 1f;
                                                    }
                                                    if (npc.position.Y + (float)npc.height >= Main.player[npc.target].position.Y || npc.velocity.Y <= 0f)
                                                    {
                                                        npc.ai[1] += 1f;
                                                        if (npc.ai[1] > 10f)
                                                        {
                                                            npc.ai[0] = 2f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                            if (Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                            {
                                                                npc.ai[0] = 5f;
                                                            }
                                                        }
                                                    }
                                                    else if (npc.ai[2] == 0f)
                                                    {
                                                        npc.noTileCollide = true;
                                                        npc.noGravity = true;
                                                        npc.knockBackResist = 0f;
                                                    }
                                                    npc.velocity.Y = npc.velocity.Y + 0.2f;
                                                    if (npc.velocity.Y > 16f)
                                                    {
                                                        npc.velocity.Y = 16f;
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (npc.ai[0] == 5f)
                                                    {
                                                        if (npc.velocity.X > 0f)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        else
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.noTileCollide = true;
                                                        npc.noGravity = true;
                                                        npc.knockBackResist = 0f;
                                                        Vector2 value74 = Main.player[npc.target].Center - npc.Center;
                                                        value74.Y -= 4f;
                                                        if (value74.Length() < 200f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                        {
                                                            npc.ai[0] = 2f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                        }
                                                        if (value74.Length() > 10f)
                                                        {
                                                            value74.Normalize();
                                                            value74 *= 10f;
                                                        }
                                                        npc.velocity = (npc.velocity * 4f + value74) / 5f;
                                                        return;
                                                    }
                                                    if (npc.ai[0] == 6f)
                                                    {
                                                        npc.knockBackResist = 0f;
                                                        if (npc.velocity.Y == 0f)
                                                        {
                                                            npc.TargetClosest(true);
                                                            npc.velocity.X = npc.velocity.X * 0.8f;
                                                            npc.ai[1] += 1f;
                                                            if (npc.ai[1] > 5f)
                                                            {
                                                                npc.ai[1] = 0f;
                                                                npc.velocity.Y = npc.velocity.Y - 4f;
                                                                if (Main.player[npc.target].position.Y + (float)Main.player[npc.target].height < npc.Center.Y)
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 1.25f;
                                                                }
                                                                if (Main.player[npc.target].position.Y + (float)Main.player[npc.target].height < npc.Center.Y - 40f)
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 1.5f;
                                                                }
                                                                if (Main.player[npc.target].position.Y + (float)Main.player[npc.target].height < npc.Center.Y - 80f)
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 1.75f;
                                                                }
                                                                if (Main.player[npc.target].position.Y + (float)Main.player[npc.target].height < npc.Center.Y - 120f)
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 2f;
                                                                }
                                                                if (Main.player[npc.target].position.Y + (float)Main.player[npc.target].height < npc.Center.Y - 160f)
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 2.25f;
                                                                }
                                                                if (Main.player[npc.target].position.Y + (float)Main.player[npc.target].height < npc.Center.Y - 200f)
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 2.5f;
                                                                }
                                                                if (!Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                                {
                                                                    npc.velocity.Y = npc.velocity.Y - 2f;
                                                                }
                                                                npc.velocity.X = (float)(12 * npc.direction);
                                                                npc.ai[2] += 1f;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            npc.velocity.X = npc.velocity.X * 0.98f;
                                                            if (npc.direction < 0 && npc.velocity.X > -8f)
                                                            {
                                                                npc.velocity.X = -8f;
                                                            }
                                                            if (npc.direction > 0 && npc.velocity.X < 8f)
                                                            {
                                                                npc.velocity.X = 8f;
                                                            }
                                                        }
                                                        if (npc.ai[2] >= 3f && npc.velocity.Y == 0f)
                                                        {
                                                            npc.ai[0] = 2f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                            return;
                                                        }
                                                    }
                                                    else if (npc.ai[0] == 7f)
                                                    {
                                                        npc.damage = 0;
                                                        npc.life = npc.lifeMax;
                                                        npc.defense = 9999;
                                                        npc.noTileCollide = true;
                                                        npc.alpha += 7;
                                                        if (npc.alpha > 255)
                                                        {
                                                            npc.alpha = 255;
                                                        }
                                                        npc.velocity.X = npc.velocity.X * 0.98f;
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 88)
                                            {
                                                int num1879 = 7;
                                                npc.noTileCollide = false;
                                                npc.noGravity = true;
                                                npc.knockBackResist = 0.2f * Main.expertKnockBack;
                                                npc.damage = npc.defDamage;
                                                if (!Main.eclipse)
                                                {
                                                    npc.ai[0] = -1f;
                                                }
                                                else if (npc.target < 0 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                                                {
                                                    npc.TargetClosest(true);
                                                    Vector2 vector270 = Main.player[npc.target].Center - npc.Center;
                                                    if (Main.player[npc.target].dead || vector270.Length() > 3000f)
                                                    {
                                                        npc.ai[0] = -1f;
                                                    }
                                                }
                                                else
                                                {
                                                    Vector2 vector271 = Main.player[npc.target].Center - npc.Center;
                                                    if (npc.ai[0] > 1f && vector271.Length() > 1000f)
                                                    {
                                                        npc.ai[0] = 1f;
                                                    }
                                                }
                                                if (npc.ai[0] == -1f)
                                                {
                                                    Vector2 value75 = new Vector2(0f, -8f);
                                                    npc.velocity = (npc.velocity * 9f + value75) / 10f;
                                                    npc.noTileCollide = true;
                                                    npc.dontTakeDamage = true;
                                                    return;
                                                }
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    if (npc.Center.X < Main.player[npc.target].Center.X - 2f)
                                                    {
                                                        npc.direction = 1;
                                                    }
                                                    if (npc.Center.X > Main.player[npc.target].Center.X + 2f)
                                                    {
                                                        npc.direction = -1;
                                                    }
                                                    npc.spriteDirection = npc.direction;
                                                    npc.rotation = (npc.rotation * 9f + npc.velocity.X * 0.1f) / 10f;
                                                    if (npc.collideX)
                                                    {
                                                        npc.velocity.X = npc.velocity.X * (-npc.oldVelocity.X * 0.5f);
                                                        if (npc.velocity.X > 4f)
                                                        {
                                                            npc.velocity.X = 4f;
                                                        }
                                                        if (npc.velocity.X < -4f)
                                                        {
                                                            npc.velocity.X = -4f;
                                                        }
                                                    }
                                                    if (npc.collideY)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * (-npc.oldVelocity.Y * 0.5f);
                                                        if (npc.velocity.Y > 4f)
                                                        {
                                                            npc.velocity.Y = 4f;
                                                        }
                                                        if (npc.velocity.Y < -4f)
                                                        {
                                                            npc.velocity.Y = -4f;
                                                        }
                                                    }
                                                    Vector2 value76 = Main.player[npc.target].Center - npc.Center;
                                                    value76.Y -= 200f;
                                                    if (value76.Length() > 800f)
                                                    {
                                                        npc.ai[0] = 1f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                    }
                                                    else if (value76.Length() > 80f)
                                                    {
                                                        float scaleFactor29 = 6f;
                                                        float num1880 = 30f;
                                                        value76.Normalize();
                                                        value76 *= scaleFactor29;
                                                        npc.velocity = (npc.velocity * (num1880 - 1f) + value76) / num1880;
                                                    }
                                                    else if (npc.velocity.Length() > 2f)
                                                    {
                                                        npc.velocity *= 0.95f;
                                                    }
                                                    else if (npc.velocity.Length() < 1f)
                                                    {
                                                        npc.velocity *= 1.05f;
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.justHit)
                                                    {
                                                        npc.ai[1] += (float)Main.rand.Next(10, 30);
                                                    }
                                                    if (npc.ai[1] >= 180f && Main.netMode != 1)
                                                    {
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                        npc.netUpdate = true;
                                                        while (npc.ai[0] == 0f)
                                                        {
                                                            int num1881 = Main.rand.Next(3);
                                                            if (num1881 == 0 && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                            {
                                                                npc.ai[0] = 2f;
                                                            }
                                                            else if (num1881 == 1)
                                                            {
                                                                npc.ai[0] = 3f;
                                                            }
                                                            else if (num1881 == 2 && NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1879)
                                                            {
                                                                npc.ai[0] = 4f;
                                                            }
                                                        }
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (npc.ai[0] == 1f)
                                                    {
                                                        npc.collideX = false;
                                                        npc.collideY = false;
                                                        npc.noTileCollide = true;
                                                        npc.knockBackResist = 0f;
                                                        if (npc.target < 0 || !Main.player[npc.target].active || Main.player[npc.target].dead)
                                                        {
                                                            npc.TargetClosest(true);
                                                        }
                                                        if (npc.velocity.X < 0f)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        else if (npc.velocity.X > 0f)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.rotation = (npc.rotation * 9f + npc.velocity.X * 0.08f) / 10f;
                                                        Vector2 value77 = Main.player[npc.target].Center - npc.Center;
                                                        if (value77.Length() < 300f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                        {
                                                            npc.ai[0] = 0f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                        }
                                                        float scaleFactor30 = 7f + value77.Length() / 100f;
                                                        float num1882 = 25f;
                                                        value77.Normalize();
                                                        value77 *= scaleFactor30;
                                                        npc.velocity = (npc.velocity * (num1882 - 1f) + value77) / num1882;
                                                        return;
                                                    }
                                                    if (npc.ai[0] == 2f)
                                                    {
                                                        npc.damage = (int)((double)npc.defDamage * 0.5);
                                                        npc.knockBackResist = 0f;
                                                        if (npc.target < 0 || !Main.player[npc.target].active || Main.player[npc.target].dead)
                                                        {
                                                            npc.TargetClosest(true);
                                                            npc.ai[0] = 0f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                        }
                                                        if (Main.player[npc.target].Center.X - 10f < npc.Center.X)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        else if (Main.player[npc.target].Center.X + 10f > npc.Center.X)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.rotation = (npc.rotation * 4f + npc.velocity.X * 0.1f) / 5f;
                                                        if (npc.collideX)
                                                        {
                                                            npc.velocity.X = npc.velocity.X * (-npc.oldVelocity.X * 0.5f);
                                                            if (npc.velocity.X > 4f)
                                                            {
                                                                npc.velocity.X = 4f;
                                                            }
                                                            if (npc.velocity.X < -4f)
                                                            {
                                                                npc.velocity.X = -4f;
                                                            }
                                                        }
                                                        if (npc.collideY)
                                                        {
                                                            npc.velocity.Y = npc.velocity.Y * (-npc.oldVelocity.Y * 0.5f);
                                                            if (npc.velocity.Y > 4f)
                                                            {
                                                                npc.velocity.Y = 4f;
                                                            }
                                                            if (npc.velocity.Y < -4f)
                                                            {
                                                                npc.velocity.Y = -4f;
                                                            }
                                                        }
                                                        Vector2 value78 = Main.player[npc.target].Center - npc.Center;
                                                        value78.Y -= 20f;
                                                        npc.ai[2] += 0.0222222228f;
                                                        if (Main.expertMode)
                                                        {
                                                            npc.ai[2] += 0.0166666675f;
                                                        }
                                                        float scaleFactor31 = 4f + npc.ai[2] + value78.Length() / 120f;
                                                        float num1883 = 20f;
                                                        value78.Normalize();
                                                        value78 *= scaleFactor31;
                                                        npc.velocity = (npc.velocity * (num1883 - 1f) + value78) / num1883;
                                                        npc.ai[1] += 1f;
                                                        if (npc.ai[1] > 240f || !Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                        {
                                                            npc.ai[0] = 0f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                            return;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (npc.ai[0] == 3f)
                                                        {
                                                            npc.knockBackResist = 0f;
                                                            npc.noTileCollide = true;
                                                            if (npc.velocity.X < 0f)
                                                            {
                                                                npc.direction = -1;
                                                            }
                                                            else
                                                            {
                                                                npc.direction = 1;
                                                            }
                                                            npc.spriteDirection = npc.direction;
                                                            npc.rotation = (npc.rotation * 4f + npc.velocity.X * 0.07f) / 5f;
                                                            Vector2 value79 = Main.player[npc.target].Center - npc.Center;
                                                            value79.Y -= 12f;
                                                            if (npc.Center.X > Main.player[npc.target].Center.X)
                                                            {
                                                                value79.X += 400f;
                                                            }
                                                            else
                                                            {
                                                                value79.X -= 400f;
                                                            }
                                                            if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) > 350f && Math.Abs(npc.Center.Y - Main.player[npc.target].Center.Y) < 20f)
                                                            {
                                                                npc.ai[0] = 3.1f;
                                                                npc.ai[1] = 0f;
                                                            }
                                                            npc.ai[1] += 0.0333333351f;
                                                            float scaleFactor32 = 8f + npc.ai[1];
                                                            float num1884 = 4f;
                                                            value79.Normalize();
                                                            value79 *= scaleFactor32;
                                                            npc.velocity = (npc.velocity * (num1884 - 1f) + value79) / num1884;
                                                            return;
                                                        }
                                                        if (npc.ai[0] == 3.1f)
                                                        {
                                                            npc.knockBackResist = 0f;
                                                            npc.noTileCollide = true;
                                                            npc.rotation = (npc.rotation * 4f + npc.velocity.X * 0.07f) / 5f;
                                                            Vector2 vector272 = Main.player[npc.target].Center - npc.Center;
                                                            vector272.Y -= 12f;
                                                            float scaleFactor33 = 16f;
                                                            float num1885 = 8f;
                                                            vector272.Normalize();
                                                            vector272 *= scaleFactor33;
                                                            npc.velocity = (npc.velocity * (num1885 - 1f) + vector272) / num1885;
                                                            if (npc.velocity.X < 0f)
                                                            {
                                                                npc.direction = -1;
                                                            }
                                                            else
                                                            {
                                                                npc.direction = 1;
                                                            }
                                                            npc.spriteDirection = npc.direction;
                                                            npc.ai[1] += 1f;
                                                            if (npc.ai[1] > 10f)
                                                            {
                                                                npc.velocity = vector272;
                                                                if (npc.velocity.X < 0f)
                                                                {
                                                                    npc.direction = -1;
                                                                }
                                                                else
                                                                {
                                                                    npc.direction = 1;
                                                                }
                                                                npc.ai[0] = 3.2f;
                                                                npc.ai[1] = 0f;
                                                                npc.ai[1] = (float)npc.direction;
                                                                return;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (npc.ai[0] == 3.2f)
                                                            {
                                                                npc.damage = (int)((double)npc.defDamage * 1.3);
                                                                npc.collideX = false;
                                                                npc.collideY = false;
                                                                npc.knockBackResist = 0f;
                                                                npc.noTileCollide = true;
                                                                npc.ai[2] += 0.0333333351f;
                                                                npc.velocity.X = (16f + npc.ai[2]) * npc.ai[1];
                                                                if ((npc.ai[1] > 0f && npc.Center.X > Main.player[npc.target].Center.X + 260f) || (npc.ai[1] < 0f && npc.Center.X < Main.player[npc.target].Center.X - 260f))
                                                                {
                                                                    if (!Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                                    {
                                                                        npc.ai[0] = 0f;
                                                                        npc.ai[1] = 0f;
                                                                        npc.ai[2] = 0f;
                                                                        npc.ai[3] = 0f;
                                                                    }
                                                                    else if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) > 800f)
                                                                    {
                                                                        npc.ai[0] = 1f;
                                                                        npc.ai[1] = 0f;
                                                                        npc.ai[2] = 0f;
                                                                        npc.ai[3] = 0f;
                                                                    }
                                                                }
                                                                npc.rotation = (npc.rotation * 4f + npc.velocity.X * 0.07f) / 5f;
                                                                return;
                                                            }
                                                            if (npc.ai[0] == 4f)
                                                            {
                                                                npc.ai[0] = 0f;
                                                                npc.TargetClosest(true);
                                                                if (Main.netMode != 1)
                                                                {
                                                                    npc.ai[1] = -1f;
                                                                    npc.ai[2] = -1f;
                                                                    for (int num1886 = 0; num1886 < 1000; num1886++)
                                                                    {
                                                                        int num1887 = (int)Main.player[npc.target].Center.X / 16;
                                                                        int num1888 = (int)Main.player[npc.target].Center.Y / 16;
                                                                        int num1889 = 30 + num1886 / 50;
                                                                        int num1890 = 20 + num1886 / 75;
                                                                        num1887 += Main.rand.Next(-num1889, num1889 + 1);
                                                                        num1888 += Main.rand.Next(-num1890, num1890 + 1);
                                                                        if (!WorldGen.SolidTile(num1887, num1888))
                                                                        {
                                                                            while (!WorldGen.SolidTile(num1887, num1888) && (double)num1888 < Main.worldSurface)
                                                                            {
                                                                                num1888++;
                                                                            }
                                                                            if ((new Vector2((float)(num1887 * 16 + 8), (float)(num1888 * 16 + 8)) - Main.player[npc.target].Center).Length() < 600f)
                                                                            {
                                                                                npc.ai[0] = 4.1f;
                                                                                npc.ai[1] = (float)num1887;
                                                                                npc.ai[2] = (float)num1888;
                                                                                break;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                npc.netUpdate = true;
                                                                return;
                                                            }
                                                            if (npc.ai[0] == 4.1f)
                                                            {
                                                                if (npc.velocity.X < -2f)
                                                                {
                                                                    npc.direction = -1;
                                                                }
                                                                else if (npc.velocity.X > 2f)
                                                                {
                                                                    npc.direction = 1;
                                                                }
                                                                npc.spriteDirection = npc.direction;
                                                                npc.rotation = (npc.rotation * 9f + npc.velocity.X * 0.1f) / 10f;
                                                                npc.noTileCollide = true;
                                                                int num1891 = (int)npc.ai[1];
                                                                int num1892 = (int)npc.ai[2];
                                                                float x2 = (float)(num1891 * 16 + 8);
                                                                float y2 = (float)(num1892 * 16 - 20);
                                                                Vector2 vector273 = new Vector2(x2, y2);
                                                                vector273 -= npc.Center;
                                                                float num1893 = 6f + vector273.Length() / 150f;
                                                                if (num1893 > 10f)
                                                                {
                                                                    num1893 = 10f;
                                                                }
                                                                float num1894 = 10f;
                                                                if (vector273.Length() < 10f)
                                                                {
                                                                    npc.ai[0] = 4.2f;
                                                                }
                                                                vector273.Normalize();
                                                                vector273 *= num1893;
                                                                npc.velocity = (npc.velocity * (num1894 - 1f) + vector273) / num1894;
                                                                return;
                                                            }
                                                            if (npc.ai[0] == 4.2f)
                                                            {
                                                                npc.rotation = (npc.rotation * 9f + npc.velocity.X * 0.1f) / 10f;
                                                                npc.knockBackResist = 0f;
                                                                npc.noTileCollide = true;
                                                                int num1895 = (int)npc.ai[1];
                                                                int num1896 = (int)npc.ai[2];
                                                                float x3 = (float)(num1895 * 16 + 8);
                                                                float y3 = (float)(num1896 * 16 - 20);
                                                                Vector2 vector274 = new Vector2(x3, y3);
                                                                vector274 -= npc.Center;
                                                                float num1897 = 4f;
                                                                float num1898 = 2f;
                                                                if (Main.netMode != 1 && vector274.Length() < 4f)
                                                                {
                                                                    int num1899 = 70;
                                                                    if (Main.expertMode)
                                                                    {
                                                                        num1899 = (int)((double)num1899 * 0.75);
                                                                    }
                                                                    npc.ai[3] += 1f;
                                                                    if (npc.ai[3] == (float)num1899)
                                                                    {
                                                                        NPC.NewNPC(num1895 * 16 + 8, num1896 * 16, 478, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                                    }
                                                                    else if (npc.ai[3] == (float)(num1899 * 2))
                                                                    {
                                                                        npc.ai[0] = 0f;
                                                                        npc.ai[1] = 0f;
                                                                        npc.ai[2] = 0f;
                                                                        npc.ai[3] = 0f;
                                                                        if (NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1879 && Main.rand.Next(3) != 0)
                                                                        {
                                                                            npc.ai[0] = 4f;
                                                                        }
                                                                        else if (Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                                        {
                                                                            npc.ai[0] = 1f;
                                                                        }
                                                                    }
                                                                }
                                                                if (vector274.Length() > num1897)
                                                                {
                                                                    vector274.Normalize();
                                                                    vector274 *= num1897;
                                                                }
                                                                npc.velocity = (npc.velocity * (num1898 - 1f) + vector274) / num1898;
                                                                return;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 89)
                                            {
                                                if (npc.velocity.Y == 0f)
                                                {
                                                    npc.velocity.X = npc.velocity.X * 0.9f;
                                                    npc.rotation += npc.velocity.X * 0.02f;
                                                }
                                                else
                                                {
                                                    npc.velocity.X = npc.velocity.X * 0.99f;
                                                    npc.rotation += npc.velocity.X * 0.04f;
                                                }
                                                int num1900 = 900;
                                                if (Main.expertMode)
                                                {
                                                    num1900 = 600;
                                                }
                                                if (npc.justHit)
                                                {
                                                    npc.ai[0] -= (float)Main.rand.Next(10, 21);
                                                    if (!Main.expertMode)
                                                    {
                                                        npc.ai[0] -= (float)Main.rand.Next(10, 21);
                                                    }
                                                }
                                                npc.ai[0] += 1f;
                                                if (npc.ai[0] >= (float)num1900)
                                                {
                                                    npc.Transform(479);
                                                }
                                                if (Main.netMode != 1 && npc.velocity.Y == 0f && (double)Math.Abs(npc.velocity.X) < 0.2 && (double)npc.ai[0] >= (double)num1900 * 0.75)
                                                {
                                                    float num1901 = npc.ai[0] - (float)num1900 * 0.75f;
                                                    num1901 /= (float)num1900 * 0.25f;
                                                    if ((float)Main.rand.Next(-10, 120) < num1901 * 100f)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y - (float)Main.rand.Next(20, 40) * 0.025f;
                                                        npc.velocity.X = npc.velocity.X + (float)Main.rand.Next(-20, 20) * 0.025f;
                                                        npc.velocity *= 1f + num1901 * 2f;
                                                        npc.netUpdate = true;
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 90)
                                            {
                                                npc.noTileCollide = false;
                                                npc.knockBackResist = 0.4f * Main.knockBackMultiplier;
                                                npc.noGravity = true;
                                                npc.rotation = (npc.rotation * 9f + npc.velocity.X * 0.1f) / 10f;
                                                if (!Main.eclipse)
                                                {
                                                    if (npc.timeLeft > 5)
                                                    {
                                                        npc.timeLeft = 5;
                                                    }
                                                    npc.velocity.Y = npc.velocity.Y - 0.2f;
                                                    if (npc.velocity.Y < -8f)
                                                    {
                                                        npc.velocity.Y = -8f;
                                                    }
                                                    npc.noTileCollide = true;
                                                    return;
                                                }
                                                if (npc.ai[0] == 0f || npc.ai[0] == 1f)
                                                {
                                                    for (int num1902 = 0; num1902 < 200; num1902++)
                                                    {
                                                        if (num1902 != npc.whoAmI && Main.npc[num1902].active && Main.npc[num1902].type == npc.type)
                                                        {
                                                            Vector2 value80 = Main.npc[num1902].Center - npc.Center;
                                                            if (value80.Length() < (float)(npc.width + npc.height))
                                                            {
                                                                value80.Normalize();
                                                                value80 *= -0.1f;
                                                                npc.velocity += value80;
                                                                Main.npc[num1902].velocity -= value80;
                                                            }
                                                        }
                                                    }
                                                }
                                                if (npc.target < 0 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                                                {
                                                    npc.TargetClosest(true);
                                                    Vector2 vector275 = Main.player[npc.target].Center - npc.Center;
                                                    if (Main.player[npc.target].dead || vector275.Length() > 3000f)
                                                    {
                                                        npc.ai[0] = -1f;
                                                    }
                                                }
                                                else
                                                {
                                                    Vector2 vector276 = Main.player[npc.target].Center - npc.Center;
                                                    if (npc.ai[0] > 1f && vector276.Length() > 1000f)
                                                    {
                                                        npc.ai[0] = 1f;
                                                    }
                                                }
                                                if (npc.ai[0] == -1f)
                                                {
                                                    Vector2 value81 = new Vector2(0f, -8f);
                                                    npc.velocity = (npc.velocity * 9f + value81) / 10f;
                                                    npc.noTileCollide = true;
                                                    npc.dontTakeDamage = true;
                                                    return;
                                                }
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    npc.spriteDirection = npc.direction;
                                                    if (npc.collideX)
                                                    {
                                                        npc.velocity.X = npc.velocity.X * (-npc.oldVelocity.X * 0.5f);
                                                        if (npc.velocity.X > 4f)
                                                        {
                                                            npc.velocity.X = 4f;
                                                        }
                                                        if (npc.velocity.X < -4f)
                                                        {
                                                            npc.velocity.X = -4f;
                                                        }
                                                    }
                                                    if (npc.collideY)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * (-npc.oldVelocity.Y * 0.5f);
                                                        if (npc.velocity.Y > 4f)
                                                        {
                                                            npc.velocity.Y = 4f;
                                                        }
                                                        if (npc.velocity.Y < -4f)
                                                        {
                                                            npc.velocity.Y = -4f;
                                                        }
                                                    }
                                                    Vector2 value82 = Main.player[npc.target].Center - npc.Center;
                                                    if (value82.Length() > 800f)
                                                    {
                                                        npc.ai[0] = 1f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                    }
                                                    else if (value82.Length() > 200f)
                                                    {
                                                        float scaleFactor34 = 5.5f + value82.Length() / 100f + npc.ai[1] / 15f;
                                                        float num1903 = 40f;
                                                        value82.Normalize();
                                                        value82 *= scaleFactor34;
                                                        npc.velocity = (npc.velocity * (num1903 - 1f) + value82) / num1903;
                                                    }
                                                    else if (npc.velocity.Length() > 2f)
                                                    {
                                                        npc.velocity *= 0.95f;
                                                    }
                                                    else if (npc.velocity.Length() < 1f)
                                                    {
                                                        npc.velocity *= 1.05f;
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 90f)
                                                    {
                                                        npc.ai[1] = 0f;
                                                        npc.ai[0] = 2f;
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    if (npc.ai[0] == 1f)
                                                    {
                                                        npc.collideX = false;
                                                        npc.collideY = false;
                                                        npc.noTileCollide = true;
                                                        npc.knockBackResist = 0f;
                                                        if (npc.target < 0 || !Main.player[npc.target].active || Main.player[npc.target].dead)
                                                        {
                                                            npc.TargetClosest(true);
                                                        }
                                                        if (npc.velocity.X < 0f)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        else if (npc.velocity.X > 0f)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.rotation = (npc.rotation * 9f + npc.velocity.X * 0.08f) / 10f;
                                                        Vector2 value83 = Main.player[npc.target].Center - npc.Center;
                                                        if (value83.Length() < 300f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                        {
                                                            npc.ai[0] = 0f;
                                                            npc.ai[1] = 0f;
                                                            npc.ai[2] = 0f;
                                                            npc.ai[3] = 0f;
                                                        }
                                                        npc.ai[2] += 0.0166666675f;
                                                        float scaleFactor35 = 5.5f + npc.ai[2] + value83.Length() / 150f;
                                                        float num1904 = 35f;
                                                        value83.Normalize();
                                                        value83 *= scaleFactor35;
                                                        npc.velocity = (npc.velocity * (num1904 - 1f) + value83) / num1904;
                                                        return;
                                                    }
                                                    if (npc.ai[0] == 2f)
                                                    {
                                                        if (npc.velocity.X < 0f)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        else if (npc.velocity.X > 0f)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.rotation = (npc.rotation * 7f + npc.velocity.X * 0.1f) / 8f;
                                                        npc.knockBackResist = 0f;
                                                        npc.noTileCollide = true;
                                                        Vector2 vector277 = Main.player[npc.target].Center - npc.Center;
                                                        vector277.Y -= 8f;
                                                        float scaleFactor36 = 9f;
                                                        float num1905 = 8f;
                                                        vector277.Normalize();
                                                        vector277 *= scaleFactor36;
                                                        npc.velocity = (npc.velocity * (num1905 - 1f) + vector277) / num1905;
                                                        if (npc.velocity.X < 0f)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        else
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.ai[1] += 1f;
                                                        if (npc.ai[1] > 10f)
                                                        {
                                                            npc.velocity = vector277;
                                                            if (npc.velocity.X < 0f)
                                                            {
                                                                npc.direction = -1;
                                                            }
                                                            else
                                                            {
                                                                npc.direction = 1;
                                                            }
                                                            npc.ai[0] = 2.1f;
                                                            npc.ai[1] = 0f;
                                                            return;
                                                        }
                                                    }
                                                    else if (npc.ai[0] == 2.1f)
                                                    {
                                                        if (npc.velocity.X < 0f)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        else if (npc.velocity.X > 0f)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                        npc.velocity *= 1.01f;
                                                        npc.knockBackResist = 0f;
                                                        npc.noTileCollide = true;
                                                        npc.ai[1] += 1f;
                                                        int num1906 = 45;
                                                        if (npc.ai[1] > (float)num1906)
                                                        {
                                                            if (!Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                            {
                                                                npc.ai[0] = 0f;
                                                                npc.ai[1] = 0f;
                                                                npc.ai[2] = 0f;
                                                                return;
                                                            }
                                                            if (npc.ai[1] > (float)(num1906 * 2))
                                                            {
                                                                npc.ai[0] = 1f;
                                                                npc.ai[1] = 0f;
                                                                npc.ai[2] = 0f;
                                                                return;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 91)
                                            {
                                                npc.noGravity = true;
                                                npc.noTileCollide = false;
                                                npc.dontTakeDamage = false;
                                                if (npc.justHit && Main.netMode != 1 && Main.expertMode && Main.rand.Next(6) == 0)
                                                {
                                                    npc.netUpdate = true;
                                                    npc.ai[0] = -1f;
                                                    npc.ai[1] = 0f;
                                                }
                                                if (npc.ai[0] == -1f)
                                                {
                                                    npc.dontTakeDamage = true;
                                                    npc.noGravity = false;
                                                    npc.velocity.X = npc.velocity.X * 0.98f;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 120f)
                                                    {
                                                        npc.ai[0] = (npc.ai[1] = (npc.ai[2] = (npc.ai[3] = 0f)));
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    if (Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 1f;
                                                        return;
                                                    }
                                                    Vector2 value84 = Main.player[npc.target].Center - npc.Center;
                                                    value84.Y -= (float)(Main.player[npc.target].height / 4);
                                                    float num1907 = value84.Length();
                                                    if (num1907 > 800f)
                                                    {
                                                        npc.ai[0] = 2f;
                                                        return;
                                                    }
                                                    Vector2 center41 = npc.Center;
                                                    center41.X = Main.player[npc.target].Center.X;
                                                    Vector2 vector278 = center41 - npc.Center;
                                                    if (vector278.Length() > 8f && Collision.CanHit(npc.Center, 1, 1, center41, 1, 1))
                                                    {
                                                        npc.ai[0] = 3f;
                                                        npc.ai[1] = center41.X;
                                                        npc.ai[2] = center41.Y;
                                                        Vector2 center42 = npc.Center;
                                                        center42.Y = Main.player[npc.target].Center.Y;
                                                        if (vector278.Length() > 8f && Collision.CanHit(npc.Center, 1, 1, center42, 1, 1) && Collision.CanHit(center42, 1, 1, Main.player[npc.target].position, 1, 1))
                                                        {
                                                            npc.ai[0] = 3f;
                                                            npc.ai[1] = center42.X;
                                                            npc.ai[2] = center42.Y;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        center41 = npc.Center;
                                                        center41.Y = Main.player[npc.target].Center.Y;
                                                        if ((center41 - npc.Center).Length() > 8f && Collision.CanHit(npc.Center, 1, 1, center41, 1, 1))
                                                        {
                                                            npc.ai[0] = 3f;
                                                            npc.ai[1] = center41.X;
                                                            npc.ai[2] = center41.Y;
                                                        }
                                                    }
                                                    if (npc.ai[0] == 0f)
                                                    {
                                                        npc.localAI[0] = 0f;
                                                        value84.Normalize();
                                                        value84 *= 0.5f;
                                                        npc.velocity += value84;
                                                        npc.ai[0] = 4f;
                                                        npc.ai[1] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 1f)
                                                {
                                                    Vector2 value85 = Main.player[npc.target].Center - npc.Center;
                                                    float num1908 = value85.Length();
                                                    float num1909 = 2f;
                                                    num1909 += num1908 / 200f;
                                                    int num1910 = 50;
                                                    value85.Normalize();
                                                    value85 *= num1909;
                                                    npc.velocity = (npc.velocity * (float)(num1910 - 1) + value85) / (float)num1910;
                                                    if (!Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 2f)
                                                {
                                                    npc.noTileCollide = true;
                                                    Vector2 value86 = Main.player[npc.target].Center - npc.Center;
                                                    float num1911 = value86.Length();
                                                    float scaleFactor37 = 2f;
                                                    int num1912 = 4;
                                                    value86.Normalize();
                                                    value86 *= scaleFactor37;
                                                    npc.velocity = (npc.velocity * (float)(num1912 - 1) + value86) / (float)num1912;
                                                    if (num1911 < 600f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 3f)
                                                {
                                                    Vector2 value87 = new Vector2(npc.ai[1], npc.ai[2]);
                                                    Vector2 value88 = value87 - npc.Center;
                                                    float num1913 = value88.Length();
                                                    float num1914 = 1f;
                                                    float num1915 = 3f;
                                                    value88.Normalize();
                                                    value88 *= num1914;
                                                    npc.velocity = (npc.velocity * (num1915 - 1f) + value88) / num1915;
                                                    if (npc.collideX || npc.collideY)
                                                    {
                                                        npc.ai[0] = 4f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    if (num1913 < num1914 || num1913 > 800f || Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 0f;
                                                        return;
                                                    }
                                                }
                                                else if (npc.ai[0] == 4f)
                                                {
                                                    if (npc.collideX)
                                                    {
                                                        npc.velocity.X = npc.velocity.X * -0.8f;
                                                    }
                                                    if (npc.collideY)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * -0.8f;
                                                    }
                                                    Vector2 value89;
                                                    if (npc.velocity.X == 0f && npc.velocity.Y == 0f)
                                                    {
                                                        value89 = Main.player[npc.target].Center - npc.Center;
                                                        value89.Y -= (float)(Main.player[npc.target].height / 4);
                                                        value89.Normalize();
                                                        npc.velocity = value89 * 0.1f;
                                                    }
                                                    float scaleFactor38 = 1.5f;
                                                    float num1916 = 20f;
                                                    value89 = npc.velocity;
                                                    value89.Normalize();
                                                    value89 *= scaleFactor38;
                                                    npc.velocity = (npc.velocity * (num1916 - 1f) + value89) / num1916;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] > 180f)
                                                    {
                                                        npc.ai[0] = 0f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    if (Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                    npc.localAI[0] += 1f;
                                                    if (npc.localAI[0] >= 5f && !Collision.SolidCollision(npc.position - new Vector2(10f, 10f), npc.width + 20, npc.height + 20))
                                                    {
                                                        npc.localAI[0] = 0f;
                                                        Vector2 center43 = npc.Center;
                                                        center43.X = Main.player[npc.target].Center.X;
                                                        if (Collision.CanHit(npc.Center, 1, 1, center43, 1, 1) && Collision.CanHit(npc.Center, 1, 1, center43, 1, 1) && Collision.CanHit(Main.player[npc.target].Center, 1, 1, center43, 1, 1))
                                                        {
                                                            npc.ai[0] = 3f;
                                                            npc.ai[1] = center43.X;
                                                            npc.ai[2] = center43.Y;
                                                            return;
                                                        }
                                                        center43 = npc.Center;
                                                        center43.Y = Main.player[npc.target].Center.Y;
                                                        if (Collision.CanHit(npc.Center, 1, 1, center43, 1, 1) && Collision.CanHit(Main.player[npc.target].Center, 1, 1, center43, 1, 1))
                                                        {
                                                            npc.ai[0] = 3f;
                                                            npc.ai[1] = center43.X;
                                                            npc.ai[2] = center43.Y;
                                                            return;
                                                        }
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 92)
                                            {
                                                if (Main.rand.Next(20) == 0)
                                                {
                                                    //npc.soundHit = Main.rand.Next(15, 18);
                                                }
                                                if (Main.netMode != 1)
                                                {
                                                    bool flag176 = false;
                                                    int num1917 = (int)npc.ai[0];
                                                    int num1918 = (int)npc.ai[1];
                                                    if (!flag176 && (!Main.tile[num1917, num1918].active() || Main.tile[num1917, num1918].type != 378))
                                                    {
                                                        flag176 = true;
                                                    }
                                                    if (!flag176 && (npc.target == 255 || Main.player[npc.target].dead || Vector2.Distance(npc.Center, Main.player[npc.target].Center) > 160000f))
                                                    {
                                                        npc.TargetClosest(false);
                                                        if (npc.target == 255 || Main.player[npc.target].dead || Vector2.Distance(npc.Center, Main.player[npc.target].Center) > 160000f)
                                                        {
                                                            flag176 = true;
                                                        }
                                                    }
                                                    if (flag176)
                                                    {
                                                        npc.life = 0;
                                                        npc.HitEffect(0, 10.0);
                                                        npc.active = false;
                                                        //int num1919 = TETrainingDummy.Find((int)npc.ai[0], (int)npc.ai[1]);
                                                        //if (num1919 != -1)
                                                        //{
                                                        //    ((TETrainingDummy)TileEntity.ByID[num1919]).Deactivate();
                                                        //}
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 93)
                                            {
                                                if (npc.localAI[0] == 0f)
                                                {
                                                    npc.localAI[0] = 1f;
                                                    for (int num1920 = 0; num1920 < 4; num1920++)
                                                    {
                                                        int num1921 = NPC.NewNPC((int)npc.Center.X + num1920 * 40 - 150, (int)npc.Center.Y, 492, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                        Main.npc[num1921].netUpdate = true;
                                                        Main.npc[num1921].ai[0] = (float)npc.whoAmI;
                                                        Main.npc[num1921].ai[1] = (float)num1920;
                                                        Main.npc[num1921].ai[3] = (float)(60 * num1920);
                                                        Main.npc[num1921].TargetClosest(false);
                                                        Main.npc[num1921].timeLeft = 600;
                                                        npc.ai[num1920] = (float)num1921;
                                                    }
                                                }
                                                bool flag177 = true;
                                                for (int num1922 = 0; num1922 < 4; num1922++)
                                                {
                                                    if (npc.ai[num1922] >= 0f && (!Main.npc[(int)npc.ai[num1922]].active || Main.npc[(int)npc.ai[num1922]].type != 492))
                                                    {
                                                        npc.ai[num1922] = -1f;
                                                        npc.netUpdate = true;
                                                    }
                                                    else if (npc.ai[num1922] >= 0f)
                                                    {
                                                        flag177 = false;
                                                    }
                                                }
                                                if (flag177)
                                                {
                                                    npc.life = 0;
                                                    npc.HitEffect(9999, 10.0);
                                                    npc.checkDead();
                                                    return;
                                                }
                                                if (Main.netMode != 1 && Main.rand.Next(300) == 0)
                                                {
                                                    Vector2 value90 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(npc.width - 70), (Main.rand.NextFloat() - 0.5f) * 20f - (float)(npc.height / 2) - 20f).RotatedBy((double)npc.rotation, default(Vector2));
                                                    value90 += npc.Center;
                                                    int num1923 = NPC.NewNPC((int)value90.X, (int)value90.Y, Utils.SelectRandom<int>(Main.rand, new int[]
												{
													213,
													215,
													214,
													212
												}), 0, 0f, 0f, 0f, 0f, 255);
                                                    Main.npc[num1923].velocity = new Vector2((Main.rand.NextFloat() - 0.5f) * 5f, -8.01f) + npc.velocity;
                                                    Main.npc[num1923].netUpdate = true;
                                                    Main.npc[num1923].timeLeft = 600;
                                                }
                                                if ((npc.localAI[3] += 1f) >= 64f)
                                                {
                                                    npc.localAI[3] = 0f;
                                                }
                                                npc.TargetClosest(true);
                                                int num1924 = (int)npc.Center.X / 16 + Math.Sign(npc.velocity.X) * 10;
                                                int num1925 = (int)(npc.position.Y + (float)npc.height) / 16;
                                                int num1926 = 0;
                                                bool flag178 = Main.tile[num1924, num1925].nactive() && Main.tileSolid[(int)Main.tile[num1924, num1925].type] && !Main.tileSolidTop[(int)Main.tile[num1924, num1925].type];
                                                if (flag178)
                                                {
                                                    num1926 = 1;
                                                }
                                                else
                                                {
                                                    while (num1926 < 150 && num1925 + num1926 < Main.maxTilesY)
                                                    {
                                                        int num1927 = num1925 + num1926;
                                                        bool flag179 = Main.tile[num1924, num1927].nactive() && Main.tileSolid[(int)Main.tile[num1924, num1927].type] && !Main.tileSolidTop[(int)Main.tile[num1924, num1927].type];
                                                        if (flag179)
                                                        {
                                                            num1926--;
                                                            break;
                                                        }
                                                        num1926++;
                                                    }
                                                }
                                                float num1928 = (float)(num1926 * 16);
                                                if (num1928 < 350f)
                                                {
                                                    float num1929 = num1928 - 350f;
                                                    if (num1929 < -4f)
                                                    {
                                                        num1929 = -4f;
                                                    }
                                                    npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, num1929, 0.05f);
                                                }
                                                else if (num1928 > 450f)
                                                {
                                                    float num1930 = num1928 - 350f;
                                                    if (num1930 > 4f)
                                                    {
                                                        num1930 = 4f;
                                                    }
                                                    npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, num1930, 0.05f);
                                                }
                                                else
                                                {
                                                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                                                }
                                                float num1931 = Main.player[npc.target].Center.X - npc.Center.X;
                                                if (Math.Abs(num1931) >= 300f && (Math.Abs(npc.velocity.X) < 6f || Math.Sign(npc.velocity.X) != npc.direction))
                                                {
                                                    npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.06f;
                                                }
                                                npc.rotation = npc.velocity.X * 0.025f;
                                                npc.spriteDirection = -Math.Sign(npc.velocity.X);
                                                return;
                                            }
                                            else if (npc.aiStyle == 94)
                                            {
                                                int num75;
                                                if (npc.ai[2] == 1f)
                                                {
                                                    npc.velocity = Vector2.UnitY * npc.velocity.Length();
                                                    if (npc.velocity.Y < 0.25f)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y + 0.02f;
                                                    }
                                                    if (npc.velocity.Y > 0.25f)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y - 0.02f;
                                                    }
                                                    npc.dontTakeDamage = true;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] > 120f)
                                                    {
                                                        npc.Opacity = 1f - (npc.ai[1] - 120f) / 60f;
                                                    }
                                                    num75 = npc.type;
                                                    if (npc.ai[1] >= 180f)
                                                    {
                                                        npc.life = 0;
                                                        npc.HitEffect(0, 1337.0);
                                                        npc.checkDead();
                                                    }
                                                    return;
                                                }
                                                if (npc.ai[3] > 0f)
                                                {
                                                    bool flag180 = npc.dontTakeDamage;
                                                    num75 = npc.type;
                                                    if (num75 <= 493)
                                                    {
                                                        if (num75 != 422)
                                                        {
                                                            if (num75 == 493)
                                                            {
                                                                flag180 = (NpcMgr.ShieldStrengthTowerStardust != 0);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            flag180 = (NpcMgr.ShieldStrengthTowerVortex != 0);
                                                        }
                                                    }
                                                    else if (num75 != 507)
                                                    {
                                                        if (num75 == 517)
                                                        {
                                                            flag180 = (NpcMgr.ShieldStrengthTowerSolar != 0);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        flag180 = (NpcMgr.ShieldStrengthTowerNebula != 0);
                                                    }
                                                    npc.ai[3] += 1f;
                                                    if (npc.ai[3] > 120f)
                                                    {
                                                        npc.ai[3] = 0f;
                                                    }
                                                }
                                                num75 = npc.type;
                                                if (num75 <= 493)
                                                {
                                                    if (num75 != 422)
                                                    {
                                                        if (num75 == 493)
                                                        {
                                                            npc.dontTakeDamage = (NpcMgr.ShieldStrengthTowerStardust != 0);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        npc.dontTakeDamage = (NpcMgr.ShieldStrengthTowerVortex != 0);
                                                    }
                                                }
                                                else if (num75 != 507)
                                                {
                                                    if (num75 == 517)
                                                    {
                                                        npc.dontTakeDamage = (NpcMgr.ShieldStrengthTowerSolar != 0);
                                                    }
                                                }
                                                else
                                                {
                                                    npc.dontTakeDamage = (NpcMgr.ShieldStrengthTowerNebula != 0);
                                                }
                                                npc.TargetClosest(false);
                                                if (Main.player[npc.target].Distance(npc.Center) > 2000f)
                                                {
                                                    npc.localAI[0] += 1f;
                                                }
                                                if (npc.localAI[0] >= 60f && Main.netMode != 1)
                                                {
                                                    npc.localAI[0] = 0f;
                                                    npc.netUpdate = true;
                                                    npc.life = (int)MathHelper.Clamp((float)(npc.life + 200), 0f, (float)npc.lifeMax);
                                                }
                                                else
                                                {
                                                    npc.localAI[0] = 0f;
                                                }
                                                npc.velocity = new Vector2(0f, (float)Math.Sin((double)(6.28318548f * npc.ai[0] / 300f)) * 0.5f);
                                                npc.ai[0] += 1f;
                                                if (npc.ai[0] >= 300f)
                                                {
                                                    npc.ai[0] = 0f;
                                                    npc.netUpdate = true;
                                                }
                                                if (npc.type == 493)
                                                {
                                                    if (npc.ai[1] > 0f)
                                                    {
                                                        npc.ai[1] -= 1f;
                                                    }
                                                    if (Main.netMode != 1 && npc.ai[1] <= 0f && Main.player[npc.target].active && !Main.player[npc.target].dead && npc.Distance(Main.player[npc.target].Center) < 1080f && Main.player[npc.target].position.Y - npc.position.Y < 400f)
                                                    {
                                                        List<int> list10 = new List<int>();
                                                        if (NPC.CountNPCS(405) + NPC.CountNPCS(406) < 2)
                                                        {
                                                            list10.Add(405);
                                                        }
                                                        if (NPC.CountNPCS(402) < 2)
                                                        {
                                                            list10.Add(402);
                                                        }
                                                        if (NPC.CountNPCS(407) < 1)
                                                        {
                                                            list10.Add(407);
                                                        }
                                                        if (list10.Count > 0)
                                                        {
                                                            int num1940 = Utils.SelectRandom<int>(Main.rand, list10.ToArray());
                                                            npc.ai[1] = (float)(30 * Main.rand.Next(5, 16));
                                                            int num1941 = Main.rand.Next(3, 6);
                                                            int num1942 = Main.rand.Next(0, 4);
                                                            int num1943 = 0;
                                                            List<Tuple<Vector2, int, int>> list11 = new List<Tuple<Vector2, int, int>>();
                                                            List<Vector2> list12 = new List<Vector2>();
                                                            list11.Add(Tuple.Create<Vector2, int, int>(npc.Top - Vector2.UnitY * 120f, num1941, 0));
                                                            int num1944 = 0;
                                                            int num1945 = list11.Count;
                                                            while (list11.Count > 0)
                                                            {
                                                                Vector2 item = list11[0].Item1;
                                                                int num1946 = 1;
                                                                int num1947 = 1;
                                                                if (num1944 > 0 && num1942 > 0 && (Main.rand.Next(3) != 0 || num1944 == 1))
                                                                {
                                                                    num1947 = Main.rand.Next(Math.Max(1, list11[0].Item2));
                                                                    num1946++;
                                                                    num1942--;
                                                                }
                                                                for (int num1948 = 0; num1948 < num1946; num1948++)
                                                                {
                                                                    int num1949 = list11[0].Item3;
                                                                    if (num1944 == 0)
                                                                    {
                                                                        num1949 = Utils.SelectRandom<int>(Main.rand, new int[]
																	{
																		-1,
																		1
																	});
                                                                    }
                                                                    else if (num1948 == 1)
                                                                    {
                                                                        num1949 *= -1;
                                                                    }
                                                                    float num1950 = ((num1944 % 2 == 0) ? 0f : 3.14159274f) + (0.5f - Main.rand.NextFloat()) * 0.7853982f + (float)num1949 * 0.7853982f * (float)(num1944 % 2 == 0).ToDirectionInt();
                                                                    float scaleFactor39 = 100f + 50f * Main.rand.NextFloat();
                                                                    int num1951 = list11[0].Item2;
                                                                    if (num1948 != 0)
                                                                    {
                                                                        num1951 = num1947;
                                                                    }
                                                                    if (num1944 == 0)
                                                                    {
                                                                        num1950 = (0.5f - Main.rand.NextFloat()) * 0.7853982f;
                                                                        scaleFactor39 = 100f + 100f * Main.rand.NextFloat();
                                                                    }
                                                                    Vector2 value92 = (-Vector2.UnitY).RotatedBy((double)num1950, default(Vector2)) * scaleFactor39;
                                                                    if (num1951 - 1 < 0)
                                                                    {
                                                                        value92 = Vector2.Zero;
                                                                    }
                                                                    num1943 = Projectile.NewProjectile(item.X, item.Y, value92.X, value92.Y, 540, 0, 0f, Main.myPlayer, (float)(-(float)num1944) * 10f, 0.5f + Main.rand.NextFloat() * 0.5f);
                                                                    list12.Add(item + value92);
                                                                    if (num1944 < num1941 && list11[0].Item2 > 0)
                                                                    {
                                                                        list11.Add(Tuple.Create<Vector2, int, int>(item + value92, num1951 - 1, num1949));
                                                                    }
                                                                }
                                                                list11.Remove(list11[0]);
                                                                if (--num1945 == 0)
                                                                {
                                                                    num1945 = list11.Count;
                                                                    num1944++;
                                                                }
                                                            }
                                                            Main.projectile[num1943].localAI[0] = (float)num1940;
                                                        }
                                                        else
                                                        {
                                                            npc.ai[1] = 30f;
                                                        }
                                                    }
                                                }
                                                if (npc.type == 422)
                                                {
                                                    if (npc.ai[1] > 0f)
                                                    {
                                                        npc.ai[1] -= 1f;
                                                    }
                                                    if (Main.netMode != 1 && npc.ai[1] <= 0f && Main.player[npc.target].active && !Main.player[npc.target].dead && npc.Distance(Main.player[npc.target].Center) < 3240f && !Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                                                    {
                                                        npc.ai[1] = (float)(60 + Main.rand.Next(120));
                                                        Point point13 = Main.player[npc.target].Top.ToTileCoordinates();
                                                        bool flag181 = NPC.CountNPCS(427) + NPC.CountNPCS(426) < 14;
                                                        int num1954 = 0;
                                                        while (num1954 < 10 && !WorldGen.SolidTile(point13.X, point13.Y) && point13.Y > 10)
                                                        {
                                                            point13.Y--;
                                                            num1954++;
                                                        }
                                                        if (flag181)
                                                        {
                                                            Projectile.NewProjectile((float)(point13.X * 16 + 8), (float)(point13.Y * 16 + 24), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                        else
                                                        {
                                                            Projectile.NewProjectile((float)(point13.X * 16 + 8), (float)(point13.Y * 16 + 17), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                    if (Main.netMode != 1 && npc.ai[1] <= 0f && Main.player[npc.target].active && !Main.player[npc.target].dead && npc.Distance(Main.player[npc.target].Center) < 1080f && Main.player[npc.target].position.Y - npc.position.Y < 400f)
                                                    {
                                                        bool flag182 = NPC.CountNPCS(427) + NPC.CountNPCS(426) * 3 + NPC.CountNPCS(428) < 20;
                                                        if (flag182)
                                                        {
                                                            npc.ai[1] = (float)(420 + Main.rand.Next(360));
                                                            Point point14 = npc.Center.ToTileCoordinates();
                                                            Point point15 = Main.player[npc.target].Center.ToTileCoordinates();
                                                            Vector2 vector279 = Main.player[npc.target].Center - npc.Center;
                                                            int num1955 = 20;
                                                            int num1956 = 3;
                                                            int num1957 = 8;
                                                            int num1958 = 2;
                                                            int num1959 = 0;
                                                            bool flag183 = false;
                                                            if (vector279.Length() > 2000f)
                                                            {
                                                                flag183 = true;
                                                            }
                                                            while (!flag183 && num1959 < 100)
                                                            {
                                                                num1959++;
                                                                int num1960 = Main.rand.Next(point15.X - num1955, point15.X + num1955 + 1);
                                                                int num1961 = Main.rand.Next(point15.Y - num1955, point15.Y + num1955 + 1);
                                                                if ((num1961 < point15.Y - num1957 || num1961 > point15.Y + num1957 || num1960 < point15.X - num1957 || num1960 > point15.X + num1957) && (num1961 < point14.Y - num1956 || num1961 > point14.Y + num1956 || num1960 < point14.X - num1956 || num1960 > point14.X + num1956) && !Main.tile[num1960, num1961].nactive())
                                                                {
                                                                    bool flag184 = true;
                                                                    if (flag184 && Main.tile[num1960, num1961].lava())
                                                                    {
                                                                        flag184 = false;
                                                                    }
                                                                    if (flag184 && Collision.SolidTiles(num1960 - num1958, num1960 + num1958, num1961 - num1958, num1961 + num1958))
                                                                    {
                                                                        flag184 = false;
                                                                    }
                                                                    if (flag184 && !Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                                                                    {
                                                                        flag184 = false;
                                                                    }
                                                                    if (flag184)
                                                                    {
                                                                        Projectile.NewProjectile((float)(num1960 * 16 + 8), (float)(num1961 * 16 + 8), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                if (npc.type == 517)
                                                {
                                                    if (npc.ai[1] > 0f)
                                                    {
                                                        npc.ai[1] -= 1f;
                                                    }
                                                    if (Main.netMode != 1 && npc.ai[1] <= 0f && Main.player[npc.target].active && !Main.player[npc.target].dead && npc.Distance(Main.player[npc.target].Center) < 1080f && Main.player[npc.target].position.Y - npc.position.Y < 700f)
                                                    {
                                                        Vector2 vector280 = npc.Top + new Vector2((float)(-(float)npc.width) * 0.33f, -20f) + new Vector2((float)npc.width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0f, 1f);
                                                        Vector2 velocity10 = -Vector2.UnitY.RotatedByRandom(0.78539818525314331) * (7f + Main.rand.NextFloat() * 5f);
                                                        int num1963 = NPC.NewNPC((int)vector280.X, (int)vector280.Y, 519, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                                        Main.npc[num1963].velocity = velocity10;
                                                        Main.npc[num1963].netUpdate = true;
                                                        npc.ai[1] = 60f;
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 95)
                                            {
                                                float num1964 = 300f;
                                                if (npc.velocity.Length() > 4f)
                                                {
                                                    npc.velocity *= 0.95f;
                                                }
                                                npc.velocity *= 0.99f;
                                                npc.ai[0] += 1f;
                                                npc.scale = 1f + 0.3f * (npc.ai[0] / num1964);
                                                if (npc.ai[0] >= num1964)
                                                {
                                                    if (Main.netMode != 1)
                                                    {
                                                        npc.Transform(405);
                                                    }
                                                    return;
                                                }
                                                npc.rotation += npc.velocity.X * 0.1f;
                                                if (npc.ai[0] > 20f)
                                                {
                                                    return;
                                                }
                                            }
                                            else if (npc.aiStyle == 96)
                                            {
                                                float num1970 = 5f;
                                                float moveSpeed = 0.15f;
                                                npc.TargetClosest(true);
                                                Vector2 desiredVelocity4 = Main.player[npc.target].Center - npc.Center + new Vector2(0f, -250f);
                                                float num1971 = desiredVelocity4.Length();
                                                if (num1971 < 20f)
                                                {
                                                    desiredVelocity4 = npc.velocity;
                                                }
                                                else if (num1971 < 40f)
                                                {
                                                    desiredVelocity4.Normalize();
                                                    desiredVelocity4 *= num1970 * 0.35f;
                                                }
                                                else if (num1971 < 80f)
                                                {
                                                    desiredVelocity4.Normalize();
                                                    desiredVelocity4 *= num1970 * 0.65f;
                                                }
                                                else
                                                {
                                                    desiredVelocity4.Normalize();
                                                    desiredVelocity4 *= num1970;
                                                }
                                                npc.SimpleFlyMovement(desiredVelocity4, moveSpeed);
                                                npc.rotation = npc.velocity.X * 0.1f;
                                                if ((npc.ai[0] += 1f) >= 70f)
                                                {
                                                    npc.ai[0] = 0f;
                                                    if (Main.netMode != 1)
                                                    {
                                                        Vector2 vector282 = Vector2.Zero;
                                                        while (Math.Abs(vector282.X) < 1.5f)
                                                        {
                                                            vector282 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(5f, 3f);
                                                        }
                                                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector282.X, vector282.Y, 539, 60, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 97)
                                            {
                                                float num1972 = 7f;
                                                int num1973 = 480;
                                                if (npc.localAI[2] < 180f)
                                                {
                                                    npc.localAI[2] += 1f;
                                                    if (Main.netMode != 1 && npc.localAI[2] % 60f == 0f)
                                                    {
                                                        Vector2 vector283 = Vector2.Zero;
                                                        while (Math.Abs(vector283.X) < 1.5f)
                                                        {
                                                            vector283 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(4f, 2.5f);
                                                        }
                                                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector283.X, vector283.Y, 574, 0, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                                    }
                                                }
                                                if (npc.localAI[1] == 1f)
                                                {
                                                    npc.localAI[1] = 0f;
                                                    if (Main.rand.Next(4) == 0)
                                                    {
                                                        npc.ai[0] = (float)num1973;
                                                    }
                                                }
                                                npc.TargetClosest(true);
                                                npc.rotation = Math.Abs(npc.velocity.X) * (float)npc.direction * 0.1f;
                                                npc.spriteDirection = -npc.direction;
                                                Vector2 value93 = npc.Center + new Vector2((float)(npc.direction * 20), 6f);
                                                Vector2 vector284 = Main.player[npc.target].Center - value93;
                                                bool flag185 = Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1);
                                                bool flag186 = false;
                                                if (vector284.Length() > 400f || !flag185)
                                                {
                                                    Vector2 value94 = vector284;
                                                    if (value94.Length() > num1972)
                                                    {
                                                        value94.Normalize();
                                                        value94 *= num1972;
                                                    }
                                                    int num1974 = 30;
                                                    npc.velocity = (npc.velocity * (float)(num1974 - 1) + value94) / (float)num1974;
                                                }
                                                else
                                                {
                                                    npc.velocity *= 0.98f;
                                                    flag186 = true;
                                                }
                                                if (npc.ai[2] != 0f && npc.ai[3] != 0f)
                                                {
                                                    npc.Center = new Vector2(npc.ai[2] * 16f, npc.ai[3] * 16f);
                                                    npc.velocity = Vector2.Zero;
                                                    npc.ai[2] = 0f;
                                                    npc.ai[3] = 0f;
                                                }
                                                npc.ai[0] += 1f;
                                                if (npc.ai[0] >= (float)num1973 && Main.netMode != 1)
                                                {
                                                    npc.ai[0] = 0f;
                                                    Point point16 = npc.Center.ToTileCoordinates();
                                                    Point point17 = Main.player[npc.target].Center.ToTileCoordinates();
                                                    int num1979 = 20;
                                                    int num1980 = 3;
                                                    int num1981 = 10;
                                                    int num1982 = 1;
                                                    int num1983 = 0;
                                                    bool flag187 = false;
                                                    if (vector284.Length() > 2000f)
                                                    {
                                                        flag187 = true;
                                                    }
                                                    while (!flag187 && num1983 < 100)
                                                    {
                                                        num1983++;
                                                        int num1984 = Main.rand.Next(point17.X - num1979, point17.X + num1979 + 1);
                                                        int num1985 = Main.rand.Next(point17.Y - num1979, point17.Y + num1979 + 1);
                                                        if ((num1985 < point17.Y - num1981 || num1985 > point17.Y + num1981 || num1984 < point17.X - num1981 || num1984 > point17.X + num1981) && (num1985 < point16.Y - num1980 || num1985 > point16.Y + num1980 || num1984 < point16.X - num1980 || num1984 > point16.X + num1980) && !Main.tile[num1984, num1985].nactive())
                                                        {
                                                            bool flag188 = true;
                                                            if (flag188 && Main.tile[num1984, num1985].lava())
                                                            {
                                                                flag188 = false;
                                                            }
                                                            if (flag188 && Collision.SolidTiles(num1984 - num1982, num1984 + num1982, num1985 - num1982, num1985 + num1982))
                                                            {
                                                                flag188 = false;
                                                            }
                                                            if (flag188)
                                                            {
                                                                npc.ai[1] = 20f;
                                                                npc.ai[2] = (float)num1984;
                                                                npc.ai[3] = (float)num1985;
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    npc.netUpdate = true;
                                                }
                                                if (flag186 && npc.velocity.Length() < 2f && Main.netMode != 1)
                                                {
                                                    npc.localAI[0] += 1f;
                                                    if (npc.localAI[0] >= 13f)
                                                    {
                                                        return;
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 98)
                                            {
                                                npc.noTileCollide = false;
                                                if (npc.ai[0] == 0f)
                                                {
                                                    npc.TargetClosest(true);
                                                    npc.ai[0] = 1f;
                                                    npc.ai[1] = 0f;
                                                    npc.ai[2] = 0f;
                                                    npc.ai[3] = 0f;
                                                }
                                                bool flag189 = Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].position, 1, 1);
                                                bool flag190 = true;
                                                if (!flag189 || Main.player[npc.target].dead)
                                                {
                                                    flag190 = false;
                                                }
                                                else
                                                {
                                                    int num1986 = (int)(Main.player[npc.target].Center.X / 16f);
                                                    int num1987 = (int)(Main.player[npc.target].Center.Y / 16f);
                                                    for (int num1988 = num1986 - 2; num1988 <= num1986 + 2; num1988++)
                                                    {
                                                        for (int num1989 = num1987; num1989 <= num1987 + 25; num1989++)
                                                        {
                                                            if (WorldGen.SolidTile2(num1988, num1989))
                                                            {
                                                                flag190 = false;
                                                            }
                                                        }
                                                    }
                                                }
                                                if (npc.ai[0] < 0f)
                                                {
                                                    Vector2 vector285 = Main.player[npc.target].Center - npc.Center;
                                                    float num1990 = vector285.Length();
                                                    if (npc.ai[0] == -1f)
                                                    {
                                                        vector285.Normalize();
                                                        if (vector285.HasNaNs())
                                                        {
                                                            vector285 = new Vector2((float)npc.direction, 0f);
                                                        }
                                                        float num1991 = 8f + num1990 / 100f;
                                                        float num1992 = 12f;
                                                        if (Main.player[npc.target].velocity.Length() > num1992)
                                                        {
                                                            num1992 = Main.player[npc.target].velocity.Length();
                                                        }
                                                        if (num1991 > num1992)
                                                        {
                                                            num1991 = num1992;
                                                        }
                                                        vector285 *= num1991;
                                                        float num1993 = 10f;
                                                        npc.velocity = (npc.velocity * (num1993 - 1f) + vector285) / num1993;
                                                        for (int num1994 = 0; num1994 < 200; num1994++)
                                                        {
                                                            if (Main.npc[num1994].active && Main.npc[num1994].type == npc.type && num1994 != npc.whoAmI)
                                                            {
                                                                Vector2 value95 = Main.npc[num1994].Center - npc.Center;
                                                                if (value95.Length() < 40f)
                                                                {
                                                                    value95.Normalize();
                                                                    value95 *= 1f;
                                                                    npc.velocity -= value95;
                                                                }
                                                            }
                                                        }
                                                        npc.rotation += npc.velocity.X * 0.03f;
                                                        if ((double)npc.rotation < -6.2831)
                                                        {
                                                            npc.rotation += 6.2831f;
                                                        }
                                                        if ((double)npc.rotation > 6.2831)
                                                        {
                                                            npc.rotation -= 6.2831f;
                                                        }
                                                        if (npc.velocity.X > 0f)
                                                        {
                                                            npc.direction = 1;
                                                        }
                                                        else if (npc.velocity.X < 0f)
                                                        {
                                                            npc.direction = -1;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                    }
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 60f && !flag190)
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                }
                                                else if (npc.ai[0] == 2f)
                                                {
                                                    npc.rotation *= 0.92f;
                                                    if ((double)Math.Abs(npc.rotation) < 0.02)
                                                    {
                                                        npc.rotation = 0f;
                                                    }
                                                    int num1995 = 300;
                                                    float num1996 = Math.Abs(npc.Center.X - Main.player[npc.target].Center.X);
                                                    if (num1996 < (float)num1995 && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].position, 1, 1))
                                                    {
                                                        npc.velocity.X = npc.velocity.X * 0.96f;
                                                        npc.velocity.Y = npc.velocity.Y * 0.96f;
                                                        npc.ai[1] += 1f;
                                                        if (npc.ai[1] == 20f)
                                                        {
                                                            if (Main.netMode != 1)
                                                            {
                                                                NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y + 26, 516, 0, 0f, 0f, 0f, 0f, npc.target);
                                                            }
                                                        }
                                                        else if (npc.ai[1] >= 30f)
                                                        {
                                                            npc.ai[1] = 0f;
                                                        }
                                                        for (int num1997 = 0; num1997 < 200; num1997++)
                                                        {
                                                            if (Main.npc[num1997].active && Main.npc[num1997].type == npc.type && num1997 != npc.whoAmI)
                                                            {
                                                                Vector2 value96 = Main.npc[num1997].Center - npc.Center;
                                                                if (value96.Length() < 100f)
                                                                {
                                                                    value96.Normalize();
                                                                    value96 *= 0.1f;
                                                                    npc.velocity -= value96;
                                                                }
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        npc.ai[0] = 0f;
                                                    }
                                                    if (Main.player[npc.target].Center.X < npc.Center.X)
                                                    {
                                                        npc.direction = -1;
                                                    }
                                                    else if (Main.player[npc.target].Center.X > npc.Center.X)
                                                    {
                                                        npc.direction = 1;
                                                    }
                                                    npc.spriteDirection = npc.direction;
                                                }
                                                if (npc.ai[0] == 1f)
                                                {
                                                    npc.rotation *= 0.92f;
                                                    if ((double)Math.Abs(npc.rotation) < 0.02)
                                                    {
                                                        npc.rotation = 0f;
                                                    }
                                                    if (flag190)
                                                    {
                                                        npc.ai[0] = -1f;
                                                        npc.ai[1] = 0f;
                                                        npc.ai[2] = 0f;
                                                        npc.ai[3] = 0f;
                                                    }
                                                    int num1998 = 300;
                                                    for (int num1999 = 0; num1999 < 200; num1999++)
                                                    {
                                                        if (Main.npc[num1999].active && Main.npc[num1999].type == npc.type && num1999 != npc.whoAmI)
                                                        {
                                                            Vector2 value97 = Main.npc[num1999].Center - npc.Center;
                                                            if (value97.Length() < 50f)
                                                            {
                                                                value97.Normalize();
                                                                value97 *= 0.1f;
                                                                npc.velocity -= value97;
                                                                npc.velocity.X = npc.velocity.X - value97.X * 1f;
                                                            }
                                                        }
                                                    }
                                                    int num2000 = 800;
                                                    float num2001 = Math.Abs(npc.Center.X - Main.player[npc.target].Center.X);
                                                    if (num2001 < (float)num1998 && flag189)
                                                    {
                                                        npc.ai[0] = 2f;
                                                        npc.ai[1] = 0f;
                                                    }
                                                    else
                                                    {
                                                        if (npc.collideX)
                                                        {
                                                            npc.velocity.X = npc.velocity.X * -0.5f;
                                                            npc.ai[1] = 60f;
                                                            npc.direction *= -1;
                                                        }
                                                        if (npc.ai[1] > 0f)
                                                        {
                                                            npc.ai[1] -= 1f;
                                                        }
                                                        else if (flag189)
                                                        {
                                                            if (npc.Center.X > Main.player[npc.target].Center.X)
                                                            {
                                                                npc.direction = -1;
                                                            }
                                                            else
                                                            {
                                                                npc.direction = 1;
                                                            }
                                                        }
                                                        else if (num2001 > (float)num2000)
                                                        {
                                                            if (npc.Center.X > Main.player[npc.target].Center.X)
                                                            {
                                                                npc.direction = -1;
                                                            }
                                                            else
                                                            {
                                                                npc.direction = 1;
                                                            }
                                                        }
                                                        float num2002 = 2f;
                                                        float num2003 = 0.1f;
                                                        if (npc.velocity.X > num2002 || npc.velocity.X < -num2002)
                                                        {
                                                            if (Math.Abs(npc.velocity.X) < num2002 + num2003 * 2f)
                                                            {
                                                                if (npc.velocity.X < 0f)
                                                                {
                                                                    npc.velocity.X = -num2002;
                                                                }
                                                                else
                                                                {
                                                                    npc.velocity.X = num2002;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                npc.velocity.X = npc.velocity.X * 0.99f;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            npc.velocity.X = npc.velocity.X + (float)npc.direction * num2003;
                                                        }
                                                        npc.spriteDirection = npc.direction;
                                                    }
                                                    if (npc.collideY)
                                                    {
                                                        npc.ai[2] = 60f;
                                                        npc.directionY *= -1;
                                                        npc.velocity.Y = npc.velocity.Y * -0.5f;
                                                    }
                                                    if (npc.ai[2] > 0f)
                                                    {
                                                        npc.ai[2] -= 1f;
                                                    }
                                                    else
                                                    {
                                                        int num2004 = (int)(npc.Center.Y / 16f);
                                                        int num2005 = (int)((npc.Center.X - 8f) / 16f);
                                                        int num2006 = 30;
                                                        int num2007 = 15;
                                                        int num2008 = 0;
                                                        for (int num2009 = num2004; num2009 < num2004 + num2006; num2009++)
                                                        {
                                                            for (int num2010 = num2005; num2010 <= num2005 + 1; num2010++)
                                                            {
                                                                if (WorldGen.SolidTile(num2010, num2009) || Main.tile[num2010, num2009].liquid > 0)
                                                                {
                                                                    num2008 = num2009 - num2004;
                                                                    break;
                                                                }
                                                            }
                                                            if (num2008 != 0)
                                                            {
                                                                break;
                                                            }
                                                        }
                                                        if (num2008 == 0)
                                                        {
                                                            npc.directionY = 1;
                                                        }
                                                        else if (num2008 < num2007)
                                                        {
                                                            npc.directionY = -1;
                                                        }
                                                    }
                                                    float num2011 = 2f;
                                                    float num2012 = 0.1f;
                                                    if (npc.velocity.Y <= num2011 && npc.velocity.Y >= -num2011)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y + (float)npc.directionY * num2012;
                                                        return;
                                                    }
                                                    if (Math.Abs(npc.velocity.Y) >= num2011 + num2012 * 2f)
                                                    {
                                                        npc.velocity.Y = npc.velocity.Y * 0.99f;
                                                        return;
                                                    }
                                                    if (npc.velocity.Y < 0f)
                                                    {
                                                        npc.velocity.Y = -num2011;
                                                        return;
                                                    }
                                                    npc.velocity.Y = num2011;
                                                    return;
                                                }
                                            }
                                            else if (npc.aiStyle == 99)
                                            {
                                                if (npc.velocity.Y == 0f && npc.ai[0] == 0f)
                                                {
                                                    npc.ai[0] = 1f;
                                                    npc.ai[1] = 0f;
                                                    npc.netUpdate = true;
                                                    return;
                                                }
                                                if (npc.ai[0] == 1f)
                                                {
                                                    npc.velocity = Vector2.Zero;
                                                    npc.position = npc.oldPosition;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 5f)
                                                    {
                                                        npc.HitEffect(0, 9999.0);
                                                        npc.active = false;
                                                    }
                                                    return;
                                                }
                                                npc.velocity.Y = npc.velocity.Y + 0.2f;
                                                if (npc.velocity.Y > 12f)
                                                {
                                                    npc.velocity.Y = 12f;
                                                }
                                                npc.rotation = npc.velocity.ToRotation() - 1.57079637f;
                                                if (npc.type == 519)
                                                {
                                                    if (npc.localAI[0] == 0f)
                                                    {
                                                        npc.localAI[0] = 1f;
                                                    }
                                                    return;
                                                }
                                            }
                                            else if (npc.aiStyle == 100)
                                            {
                                                if (npc.velocity.Y == 0f && npc.ai[0] >= 0f)
                                                {
                                                    npc.ai[0] = -1f;
                                                    npc.ai[1] = 0f;
                                                    npc.netUpdate = true;
                                                    return;
                                                }
                                                if (npc.ai[0] == -1f)
                                                {
                                                    npc.velocity = Vector2.Zero;
                                                    npc.position = npc.oldPosition;
                                                    npc.ai[1] += 1f;
                                                    if (npc.ai[1] >= 5f)
                                                    {
                                                        npc.HitEffect(0, 9999.0);
                                                        npc.active = false;
                                                    }
                                                    return;
                                                }
                                                npc.rotation = npc.velocity.ToRotation() - 1.57079637f;
                                                if (npc.type == 522)
                                                {
                                                    if (npc.localAI[0] == 0f)
                                                    {
                                                        npc.localAI[0] = 1f;
                                                        npc.velocity.X = npc.ai[2];
                                                        npc.velocity.Y = npc.ai[3];
                                                    }
                                                    npc.dontTakeDamage = (npc.ai[0] >= 0f && npc.ai[0] <= 20f);
                                                    if (npc.ai[0] >= 0f)
                                                    {
                                                        npc.ai[0] += 1f;
                                                        if (npc.ai[0] > 60f)
                                                        {
                                                            npc.velocity = npc.velocity.RotatedBy((double)npc.ai[1], default(Vector2));
                                                        }
                                                        if (npc.ai[0] > 120f)
                                                        {
                                                            npc.velocity *= 0.98f;
                                                        }
                                                        if (npc.velocity.Length() < 0.2f)
                                                        {
                                                            npc.velocity = Vector2.Zero;
                                                            return;
                                                        }
                                                    }
                                                }
                                            }
                                            else if (npc.aiStyle == 101)
                                            {
                                                float num2021 = 420f;
                                                float num2022 = 120f;
                                                int num2023 = 1;
                                                float value98 = 0f;
                                                float value99 = 1f;
                                                float num2024 = 4f;
                                                bool flag191 = npc.ai[1] < 0f || !Main.npc[(int)npc.ai[0]].active;
                                                if (Main.npc[(int)npc.ai[0]].type == 439)
                                                {
                                                    if (Main.npc[(int)npc.ai[0]].life < Main.npc[(int)npc.ai[0]].lifeMax / 2)
                                                    {
                                                        num2023 = 2;
                                                    }
                                                    if (Main.npc[(int)npc.ai[0]].life < Main.npc[(int)npc.ai[0]].lifeMax / 4)
                                                    {
                                                        num2023 = 3;
                                                    }
                                                }
                                                else
                                                {
                                                    flag191 = true;
                                                }
                                                npc.ai[1] += (float)num2023;
                                                float num2025 = npc.ai[1] / num2022;
                                                num2025 = MathHelper.Clamp(num2025, 0f, 1f);
                                                npc.position = npc.Center;
                                                npc.scale = MathHelper.Lerp(value98, value99, num2025);
                                                npc.Center = npc.position;
                                                npc.alpha = (int)(255f - num2025 * 255f);

                                                npc.localAI[0] += 0.05235988f;
                                                npc.localAI[1] = 0.25f + Vector2.UnitY.RotatedBy((double)(npc.ai[1] * 6.28318548f / 60f), default(Vector2)).Y * 0.25f;
                                                if (npc.ai[1] >= num2021)
                                                {
                                                    flag191 = true;
                                                    if (Main.netMode != 1)
                                                    {
                                                        for (int num2026 = 0; num2026 < 4; num2026++)
                                                        {
                                                            Vector2 vector287 = new Vector2(0f, -num2024).RotatedBy((double)(1.57079637f * (float)num2026), default(Vector2));
                                                            Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector287.X, vector287.Y, 593, npc.damage, 0f, Main.myPlayer, 0f, 0f);
                                                        }
                                                    }
                                                }
                                                if (flag191)
                                                {
                                                    npc.HitEffect(0, 9999.0);
                                                    npc.active = false;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        // Token: 0x0600023D RID: 573 RVA: 0x0016BD58 File Offset: 0x00169F58
        private static void AI_001_Slimes(NPC npc)
        {
            if (npc.type == 1 && (npc.ai[1] == 1f || npc.ai[1] == 2f || npc.ai[1] == 3f))
            {
                npc.ai[1] = -1f;
            }
            if (npc.type == 1 && npc.ai[1] == 0f && Main.netMode != 1 && npc.value > 0f)
            {
                npc.ai[1] = -1f;
                if (Main.rand.Next(20) == 0)
                {
                    int num = Main.rand.Next(4);
                    if (num == 0)
                    {
                        num = Main.rand.Next(7);
                        if (num == 0)
                        {
                            num = 290;
                        }
                        else if (num == 1)
                        {
                            num = 292;
                        }
                        else if (num == 2)
                        {
                            num = 296;
                        }
                        else if (num == 3)
                        {
                            num = 2322;
                        }
                        else if (Main.netMode != 0 && Main.rand.Next(2) == 0)
                        {
                            num = 2997;
                        }
                        else
                        {
                            num = 2350;
                        }
                    }
                    else if (num == 1)
                    {
                        num = Main.rand.Next(4);
                        if (num == 0)
                        {
                            num = 8;
                        }
                        else if (num == 1)
                        {
                            num = 166;
                        }
                        else if (num == 2)
                        {
                            num = 965;
                        }
                        else
                        {
                            num = 58;
                        }
                    }
                    else if (num == 2)
                    {
                        if (Main.rand.Next(2) == 0)
                        {
                            num = Main.rand.Next(11, 15);
                        }
                        else
                        {
                            num = Main.rand.Next(699, 703);
                        }
                    }
                    else
                    {
                        num = Main.rand.Next(3);
                        if (num == 0)
                        {
                            num = 71;
                        }
                        else if (num == 1)
                        {
                            num = 72;
                        }
                        else
                        {
                            num = 73;
                        }
                    }
                    npc.ai[1] = (float)num;
                    npc.netUpdate = true;
                }
            }
            if (npc.type == 244)
            {
                float num2 = (float)Main.DiscoR / 255f;
                float num3 = (float)Main.DiscoG / 255f;
                float num4 = (float)Main.DiscoB / 255f;
                num2 *= 1f;
                num3 *= 1f;
                num4 *= 1f;
                Lighting.AddLight((int)((npc.position.X + (float)(npc.width / 2)) / 16f), (int)((npc.position.Y + (float)(npc.height / 2)) / 16f), num2, num3, num4);
                npc.color.R = (byte)Main.DiscoR;
                npc.color.G = (byte)Main.DiscoG;
                npc.color.B = (byte)Main.DiscoB;
                npc.color.A = 100;
                npc.alpha = 175;
            }
            bool flag = false;
            if (!Main.dayTime || npc.life != npc.lifeMax || (double)npc.position.Y > Main.worldSurface * 16.0 || Main.slimeRain)
            {
                flag = true;
            }
            if (npc.type == 81)
            {
                flag = true;
                if (Main.rand.Next(30) == 0)
                {
                    int num5 = Dust.NewDust(npc.position, npc.width, npc.height, 14, 0f, 0f, npc.alpha, npc.color, 1f);
                    Main.dust[num5].velocity *= 0.3f;
                }
            }
            if ((npc.type == 377 || npc.type == 446) && npc.target != 255 && !Main.player[npc.target].dead && Vector2.Distance(npc.Center, Main.player[npc.target].Center) <= 200f)
            {
                flag = true;
            }
            if (npc.type == 183)
            {
                flag = true;
            }
            if (npc.type == 304)
            {
                flag = true;
            }
            if (npc.type == 244)
            {
                flag = true;
                npc.ai[0] += 2f;
            }
            if (npc.type == 147 && Main.rand.Next(10) == 0)
            {
                int num6 = Dust.NewDust(npc.position, npc.width, npc.height, 76, 0f, 0f, 0, default(Color), 1f);
                Main.dust[num6].noGravity = true;
                Main.dust[num6].velocity *= 0.1f;
            }
            if (npc.type == 184)
            {
                if (Main.rand.Next(8) == 0)
                {
                    int num7 = Dust.NewDust(npc.position - npc.velocity, npc.width, npc.height, 76, 0f, 0f, 0, default(Color), 1f);
                    Main.dust[num7].noGravity = true;
                    Main.dust[num7].velocity *= 0.15f;
                }
                flag = true;
                if (npc.localAI[0] > 0f)
                {
                    npc.localAI[0] -= 1f;
                }
                if (!npc.wet && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                {
                    Vector2 vector = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num8 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector.X;
                    float num9 = Main.player[npc.target].position.Y - vector.Y;
                    float num10 = (float)Math.Sqrt((double)(num8 * num8 + num9 * num9));
                    if (Main.expertMode && num10 < 120f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                    {
                        npc.ai[0] = -40f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (Main.netMode != 1 && npc.localAI[0] == 0f)
                        {
                            for (int i = 0; i < 5; i++)
                            {
                                Vector2 vector2 = new Vector2((float)(i - 2), -4f);
                                vector2.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                vector2.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                vector2.Normalize();
                                vector2 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
                                Projectile.NewProjectile(vector.X, vector.Y, vector2.X, vector2.Y, 174, 9, 0f, Main.myPlayer, 0f, 0f);
                                npc.localAI[0] = 30f;
                            }
                        }
                    }
                    else if (num10 < 200f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                    {
                        npc.ai[0] = -40f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (Main.netMode != 1 && npc.localAI[0] == 0f)
                        {
                            num9 = Main.player[npc.target].position.Y - vector.Y - (float)Main.rand.Next(0, 200);
                            num10 = (float)Math.Sqrt((double)(num8 * num8 + num9 * num9));
                            num10 = 4.5f / num10;
                            num8 *= num10;
                            num9 *= num10;
                            npc.localAI[0] = 50f;
                            Projectile.NewProjectile(vector.X, vector.Y, num8, num9, 174, 9, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
            }
            if (npc.type == 535)
            {
                flag = true;
                if (npc.localAI[0] > 0f)
                {
                    npc.localAI[0] -= 1f;
                }
                if (!npc.wet && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                {
                    Vector2 vector3 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num11 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector3.X;
                    float num12 = Main.player[npc.target].position.Y - vector3.Y;
                    float num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
                    if (Main.expertMode && num13 < 120f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                    {
                        npc.ai[0] = -40f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (Main.netMode != 1 && npc.localAI[0] == 0f)
                        {
                            for (int j = 0; j < 5; j++)
                            {
                                Vector2 vector4 = new Vector2((float)(j - 2), -4f);
                                vector4.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                vector4.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
                                vector4.Normalize();
                                vector4 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
                                Projectile.NewProjectile(vector3.X, vector3.Y, vector4.X, vector4.Y, 605, 9, 0f, Main.myPlayer, 0f, 0f);
                                npc.localAI[0] = 30f;
                            }
                        }
                    }
                    else if (num13 < 200f && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                    {
                        npc.ai[0] = -40f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (Main.netMode != 1 && npc.localAI[0] == 0f)
                        {
                            num12 = Main.player[npc.target].position.Y - vector3.Y - (float)Main.rand.Next(0, 200);
                            num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
                            num13 = 4.5f / num13;
                            num11 *= num13;
                            num12 *= num13;
                            npc.localAI[0] = 50f;
                            Projectile.NewProjectile(vector3.X, vector3.Y, num11, num12, 605, 9, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
            }
            if (npc.type == 204)
            {
                flag = true;
                if (npc.localAI[0] > 0f)
                {
                    npc.localAI[0] -= 1f;
                }
                if (!npc.wet && !Main.player[npc.target].npcTypeNoAggro[npc.type])
                {
                    Vector2 vector5 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num14 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector5.X;
                    float num15 = Main.player[npc.target].position.Y - vector5.Y;
                    float num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
                    if (Main.expertMode && num16 < 200f && Collision.CanHit(new Vector2(npc.position.X, npc.position.Y - 20f), npc.width, npc.height + 20, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                    {
                        npc.ai[0] = -40f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (Main.netMode != 1 && npc.localAI[0] == 0f)
                        {
                            for (int k = 0; k < 5; k++)
                            {
                                Vector2 vector6 = new Vector2((float)(k - 2), -2f);
                                vector6.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
                                vector6.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
                                vector6.Normalize();
                                vector6 *= 3f + (float)Main.rand.Next(-50, 51) * 0.01f;
                                Projectile.NewProjectile(vector5.X, vector5.Y, vector6.X, vector6.Y, 176, 13, 0f, Main.myPlayer, 0f, 0f);
                                npc.localAI[0] = 80f;
                            }
                        }
                    }
                    if (num16 < 400f && Collision.CanHit(new Vector2(npc.position.X, npc.position.Y - 20f), npc.width, npc.height + 20, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height) && npc.velocity.Y == 0f)
                    {
                        npc.ai[0] = -80f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (Main.netMode != 1 && npc.localAI[0] == 0f)
                        {
                            num15 = Main.player[npc.target].position.Y - vector5.Y - (float)Main.rand.Next(-30, 20);
                            num15 -= num16 * 0.05f;
                            num14 = Main.player[npc.target].position.X - vector5.X - (float)Main.rand.Next(-20, 20);
                            num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
                            num16 = 7f / num16;
                            num14 *= num16;
                            num15 *= num16;
                            npc.localAI[0] = 65f;
                            Projectile.NewProjectile(vector5.X, vector5.Y, num14, num15, 176, 13, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
            }
            if (npc.type == 377 || npc.type == 446)
            {
                if (npc.localAI[2] < 90f)
                {
                    npc.localAI[2] += 1f;
                }
                else
                {
                    npc.friendly = false;
                }
            }
            if (npc.type == 59)
            {
                Lighting.AddLight((int)((npc.position.X + (float)(npc.width / 2)) / 16f), (int)((npc.position.Y + (float)(npc.height / 2)) / 16f), 1f, 0.3f, 0.1f);
                int num17 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, npc.velocity.X * 0.2f, npc.velocity.Y * 0.2f, 100, default(Color), 1.7f);
                Main.dust[num17].noGravity = true;
            }
            if (npc.ai[2] > 1f)
            {
                npc.ai[2] -= 1f;
            }
            if (npc.wet)
            {
                if (npc.collideY)
                {
                    npc.velocity.Y = -2f;
                }
                if (npc.velocity.Y < 0f && npc.ai[3] == npc.position.X)
                {
                    npc.direction *= -1;
                    npc.ai[2] = 200f;
                }
                if (npc.velocity.Y > 0f)
                {
                    npc.ai[3] = npc.position.X;
                }
                if (npc.type == 59)
                {
                    if (npc.velocity.Y > 2f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                    }
                    else if (npc.directionY < 0)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.8f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                    if (npc.velocity.Y < -10f)
                    {
                        npc.velocity.Y = -10f;
                    }
                }
                else
                {
                    if (npc.velocity.Y > 2f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                }
                if (npc.ai[2] == 1f & flag)
                {
                    npc.TargetClosest(true);
                }
            }
            npc.aiAction = 0;
            if (npc.ai[2] == 0f)
            {
                npc.ai[0] = -100f;
                npc.ai[2] = 1f;
                npc.TargetClosest(true);
            }
            if (npc.velocity.Y == 0f)
            {
                if (npc.collideY && npc.oldVelocity.Y != 0f && Collision.SolidCollision(npc.position, npc.width, npc.height))
                {
                    npc.position.X = npc.position.X - (npc.velocity.X + (float)npc.direction);
                }
                if (npc.ai[3] == npc.position.X)
                {
                    npc.direction *= -1;
                    npc.ai[2] = 200f;
                }
                npc.ai[3] = 0f;
                npc.velocity.X = npc.velocity.X * 0.8f;
                if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                {
                    npc.velocity.X = 0f;
                }
                if (flag)
                {
                    npc.ai[0] += 1f;
                }
                npc.ai[0] += 1f;
                if (npc.type == 59)
                {
                    npc.ai[0] += 2f;
                }
                if (npc.type == 71)
                {
                    npc.ai[0] += 3f;
                }
                if (npc.type == 138)
                {
                    npc.ai[0] += 2f;
                }
                if (npc.type == 183)
                {
                    npc.ai[0] += 1f;
                }
                if (npc.type == 304)
                {
                    float num18 = (float)((1 - npc.life / npc.lifeMax) * 10);
                    npc.ai[0] += num18;
                }
                if (npc.type == 377 || npc.type == 446)
                {
                    npc.ai[0] += 3f;
                }
                if (npc.type == 81)
                {
                    if (npc.scale >= 0f)
                    {
                        npc.ai[0] += 4f;
                    }
                    else
                    {
                        npc.ai[0] += 1f;
                    }
                }
                int num19 = 0;
                if (npc.ai[0] >= 0f)
                {
                    num19 = 1;
                }
                if (npc.ai[0] >= -1000f && npc.ai[0] <= -500f)
                {
                    num19 = 2;
                }
                if (npc.ai[0] >= -2000f && npc.ai[0] <= -1500f)
                {
                    num19 = 3;
                }
                if (num19 > 0)
                {
                    npc.netUpdate = true;
                    if (flag && npc.ai[2] == 1f)
                    {
                        npc.TargetClosest(true);
                    }
                    if (num19 == 3)
                    {
                        npc.velocity.Y = -8f;
                        if (npc.type == 59)
                        {
                            npc.velocity.Y = npc.velocity.Y - 2f;
                        }
                        npc.velocity.X = npc.velocity.X + (float)(3 * npc.direction);
                        if (npc.type == 59)
                        {
                            npc.velocity.X = npc.velocity.X + 0.5f * (float)npc.direction;
                        }
                        npc.ai[0] = -200f;
                        npc.ai[3] = npc.position.X;
                    }
                    else
                    {
                        npc.velocity.Y = -6f;
                        npc.velocity.X = npc.velocity.X + (float)(2 * npc.direction);
                        if (npc.type == 59)
                        {
                            npc.velocity.X = npc.velocity.X + (float)(2 * npc.direction);
                        }
                        npc.ai[0] = -120f;
                        if (num19 == 1)
                        {
                            npc.ai[0] -= 1000f;
                        }
                        else
                        {
                            npc.ai[0] -= 2000f;
                        }
                    }
                    if (npc.type == 141)
                    {
                        npc.velocity.Y = npc.velocity.Y * 1.3f;
                        npc.velocity.X = npc.velocity.X * 1.2f;
                    }
                    if (npc.type == 377 || npc.type == 446)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.9f;
                        npc.velocity.X = npc.velocity.X * 0.6f;
                        if (flag)
                        {
                            npc.direction = -npc.direction;
                            npc.velocity.X = npc.velocity.X * -1f;
                            return;
                        }
                    }
                }
                else if (npc.ai[0] >= -30f)
                {
                    npc.aiAction = 1;
                    return;
                }
            }
            else if (npc.target < 255 && ((npc.direction == 1 && npc.velocity.X < 3f) || (npc.direction == -1 && npc.velocity.X > -3f)))
            {
                if (npc.collideX && Math.Abs(npc.velocity.X) == 0.2f)
                {
                    npc.position.X = npc.position.X - 1.4f * (float)npc.direction;
                }
                if (npc.collideY && npc.oldVelocity.Y != 0f && Collision.SolidCollision(npc.position, npc.width, npc.height))
                {
                    npc.position.X = npc.position.X - (npc.velocity.X + (float)npc.direction);
                }
                if ((npc.direction == -1 && (double)npc.velocity.X < 0.01) || (npc.direction == 1 && (double)npc.velocity.X > -0.01))
                {
                    npc.velocity.X = npc.velocity.X + 0.2f * (float)npc.direction;
                    return;
                }
                npc.velocity.X = npc.velocity.X * 0.93f;
            }
        }

        // Token: 0x0600023A RID: 570 RVA: 0x001591EC File Offset: 0x001573EC
        private static void AI_002_FloatingEye(NPC npc)
        {
            if ((npc.type == 170 || npc.type == 171 || npc.type == 180) && Main.rand.Next(1000) == 0)
            {
                Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, 9, 1f, 0f);
            }
            npc.noGravity = true;
            if (!npc.noTileCollide)
            {
                if (npc.collideX)
                {
                    npc.velocity.X = npc.oldVelocity.X * -0.5f;
                    if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                    if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                }
                if (npc.collideY)
                {
                    npc.velocity.Y = npc.oldVelocity.Y * -0.5f;
                    if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                    {
                        npc.velocity.Y = 1f;
                    }
                    if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                    {
                        npc.velocity.Y = -1f;
                    }
                }
            }
            if (Main.dayTime && (double)npc.position.Y <= Main.worldSurface * 16.0 && (npc.type == 2 || npc.type == 133 || npc.type == 190 || npc.type == 191 || npc.type == 192 || npc.type == 193 || npc.type == 194 || npc.type == 317 || npc.type == 318))
            {
                if (npc.timeLeft > 10)
                {
                    npc.timeLeft = 10;
                }
                npc.directionY = -1;
                if (npc.velocity.Y > 0f)
                {
                    npc.direction = 1;
                }
                npc.direction = -1;
                if (npc.velocity.X > 0f)
                {
                    npc.direction = 1;
                }
            }
            else
            {
                npc.TargetClosest(true);
            }
            if (npc.type == 170 || npc.type == 171 || npc.type == 180)
            {
                if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    if (npc.ai[1] > 0f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                    {
                        npc.ai[1] = 0f;
                        npc.ai[0] = 0f;
                        npc.netUpdate = true;
                    }
                }
                else if (npc.ai[1] == 0f)
                {
                    npc.ai[0] += 1f;
                }
                if (npc.ai[0] >= 300f)
                {
                    npc.ai[1] = 1f;
                    npc.ai[0] = 0f;
                    npc.netUpdate = true;
                }
                if (npc.ai[1] == 0f)
                {
                    npc.alpha = 0;
                    npc.noTileCollide = false;
                }
                else
                {
                    npc.wet = false;
                    npc.alpha = 200;
                    npc.noTileCollide = true;
                }
                npc.rotation = npc.velocity.Y * 0.1f * (float)npc.direction;
                npc.TargetClosest(true);
                if (npc.direction == -1 && npc.velocity.X > -4f && npc.position.X > Main.player[npc.target].position.X + (float)Main.player[npc.target].width)
                {
                    npc.velocity.X = npc.velocity.X - 0.08f;
                    if (npc.velocity.X > 4f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.04f;
                    }
                    else if (npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.2f;
                    }
                    if (npc.velocity.X < -4f)
                    {
                        npc.velocity.X = -4f;
                    }
                }
                else if (npc.direction == 1 && npc.velocity.X < 4f && npc.position.X + (float)npc.width < Main.player[npc.target].position.X)
                {
                    npc.velocity.X = npc.velocity.X + 0.08f;
                    if (npc.velocity.X < -4f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.04f;
                    }
                    else if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.2f;
                    }
                    if (npc.velocity.X > 4f)
                    {
                        npc.velocity.X = 4f;
                    }
                }
                if (npc.directionY == -1 && (double)npc.velocity.Y > -2.5 && npc.position.Y > Main.player[npc.target].position.Y + (float)Main.player[npc.target].height)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.1f;
                    if ((double)npc.velocity.Y > 2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.05f;
                    }
                    else if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.15f;
                    }
                    if ((double)npc.velocity.Y < -2.5)
                    {
                        npc.velocity.Y = -2.5f;
                    }
                }
                else if (npc.directionY == 1 && (double)npc.velocity.Y < 2.5 && npc.position.Y + (float)npc.height < Main.player[npc.target].position.Y)
                {
                    npc.velocity.Y = npc.velocity.Y + 0.1f;
                    if ((double)npc.velocity.Y < -2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.05f;
                    }
                    else if (npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.15f;
                    }
                    if ((double)npc.velocity.Y > 2.5)
                    {
                        npc.velocity.Y = 2.5f;
                    }
                }
            }
            else if (npc.type == 116)
            {
                npc.TargetClosest(true);
                Lighting.AddLight((int)(npc.position.X + (float)(npc.width / 2)) / 16, (int)(npc.position.Y + (float)(npc.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
                if (npc.direction == -1 && npc.velocity.X > -6f)
                {
                    npc.velocity.X = npc.velocity.X - 0.1f;
                    if (npc.velocity.X > 6f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                    }
                    else if (npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.2f;
                    }
                    if (npc.velocity.X < -6f)
                    {
                        npc.velocity.X = -6f;
                    }
                }
                else if (npc.direction == 1 && npc.velocity.X < 6f)
                {
                    npc.velocity.X = npc.velocity.X + 0.1f;
                    if (npc.velocity.X < -6f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                    }
                    else if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.2f;
                    }
                    if (npc.velocity.X > 6f)
                    {
                        npc.velocity.X = 6f;
                    }
                }
                if (npc.directionY == -1 && (double)npc.velocity.Y > -2.5)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.04f;
                    if ((double)npc.velocity.Y > 2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.05f;
                    }
                    else if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.15f;
                    }
                    if ((double)npc.velocity.Y < -2.5)
                    {
                        npc.velocity.Y = -2.5f;
                    }
                }
                else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                {
                    npc.velocity.Y = npc.velocity.Y + 0.04f;
                    if ((double)npc.velocity.Y < -2.5)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.05f;
                    }
                    else if (npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.15f;
                    }
                    if ((double)npc.velocity.Y > 2.5)
                    {
                        npc.velocity.Y = 2.5f;
                    }
                }
                if (Main.rand.Next(40) == 0)
                {
                    int num = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y + (float)npc.height * 0.25f), npc.width, (int)((float)npc.height * 0.5f), 5, npc.velocity.X, 2f, 0, default(Color), 1f);
                    Dust expr_B48_cp_0_cp_0 = Main.dust[num];
                    expr_B48_cp_0_cp_0.velocity.X = expr_B48_cp_0_cp_0.velocity.X * 0.5f;
                    Dust expr_B62_cp_0_cp_0 = Main.dust[num];
                    expr_B62_cp_0_cp_0.velocity.Y = expr_B62_cp_0_cp_0.velocity.Y * 0.1f;
                }
            }
            else if (npc.type == 133)
            {
                if ((double)npc.life < (double)npc.lifeMax * 0.5)
                {
                    if (npc.direction == -1 && npc.velocity.X > -6f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 6f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                    }
                    if (npc.directionY == -1 && npc.velocity.Y > -4f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.1f;
                        if (npc.velocity.Y > 4f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.1f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        if (npc.velocity.Y < -4f)
                        {
                            npc.velocity.Y = -4f;
                        }
                    }
                    else if (npc.directionY == 1 && npc.velocity.Y < 4f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                        if (npc.velocity.Y < -4f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.1f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        if (npc.velocity.Y > 4f)
                        {
                            npc.velocity.Y = 4f;
                        }
                    }
                }
                else
                {
                    if (npc.direction == -1 && npc.velocity.X > -4f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = -4f;
                        }
                    }
                    else if (npc.direction == 1 && npc.velocity.X < 4f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                        if (npc.velocity.X < -4f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        else if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        if (npc.velocity.X > 4f)
                        {
                            npc.velocity.X = 4f;
                        }
                    }
                    if (npc.directionY == -1 && (double)npc.velocity.Y > -1.5)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.04f;
                        if ((double)npc.velocity.Y > 1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.03f;
                        }
                        if ((double)npc.velocity.Y < -1.5)
                        {
                            npc.velocity.Y = -1.5f;
                        }
                    }
                    else if (npc.directionY == 1 && (double)npc.velocity.Y < 1.5)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.04f;
                        if ((double)npc.velocity.Y < -1.5)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                        else if (npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.03f;
                        }
                        if ((double)npc.velocity.Y > 1.5)
                        {
                            npc.velocity.Y = 1.5f;
                        }
                    }
                }
            }
            else
            {
                float num2 = 4f;
                float num3 = 1.5f;
                num2 *= 1f + (1f - npc.scale);
                num3 *= 1f + (1f - npc.scale);
                if (npc.direction == -1 && npc.velocity.X > -num2)
                {
                    npc.velocity.X = npc.velocity.X - 0.1f;
                    if (npc.velocity.X > num2)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                    }
                    else if (npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.05f;
                    }
                    if (npc.velocity.X < -num2)
                    {
                        npc.velocity.X = -num2;
                    }
                }
                else if (npc.direction == 1 && npc.velocity.X < num2)
                {
                    npc.velocity.X = npc.velocity.X + 0.1f;
                    if (npc.velocity.X < -num2)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                    }
                    else if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.05f;
                    }
                    if (npc.velocity.X > num2)
                    {
                        npc.velocity.X = num2;
                    }
                }
                if (npc.directionY == -1 && npc.velocity.Y > -num3)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.04f;
                    if (npc.velocity.Y > num3)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.05f;
                    }
                    else if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.03f;
                    }
                    if (npc.velocity.Y < -num3)
                    {
                        npc.velocity.Y = -num3;
                    }
                }
                else if (npc.directionY == 1 && npc.velocity.Y < num3)
                {
                    npc.velocity.Y = npc.velocity.Y + 0.04f;
                    if (npc.velocity.Y < -num3)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.05f;
                    }
                    else if (npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.03f;
                    }
                    if (npc.velocity.Y > num3)
                    {
                        npc.velocity.Y = num3;
                    }
                }
            }
            if ((npc.type == 2 || npc.type == 133 || npc.type == 190 || npc.type == 191 || npc.type == 192 || npc.type == 193 || npc.type == 194) && Main.rand.Next(40) == 0)
            {
                int num4 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y + (float)npc.height * 0.25f), npc.width, (int)((float)npc.height * 0.5f), 5, npc.velocity.X, 2f, 0, default(Color), 1f);
                Dust expr_1490_cp_0_cp_0 = Main.dust[num4];
                expr_1490_cp_0_cp_0.velocity.X = expr_1490_cp_0_cp_0.velocity.X * 0.5f;
                Dust expr_14AB_cp_0_cp_0 = Main.dust[num4];
                expr_14AB_cp_0_cp_0.velocity.Y = expr_14AB_cp_0_cp_0.velocity.Y * 0.1f;
            }
            if (npc.wet && npc.type != 170 && npc.type != 171 && npc.type != 172)
            {
                if (npc.velocity.Y > 0f)
                {
                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                }
                npc.velocity.Y = npc.velocity.Y - 0.5f;
                if (npc.velocity.Y < -4f)
                {
                    npc.velocity.Y = -4f;
                }
                npc.TargetClosest(true);
            }
        }

        // Token: 0x0600023C RID: 572 RVA: 0x0015FCC0 File Offset: 0x0015DEC0
        private static void AI_003_Fighters(NPC npc)
        {
            if (npc.type == 466)
            {
                int num = 200;
                if (npc.ai[2] == 0f)
                {
                    npc.alpha = num;
                    npc.TargetClosest(true);
                    if (!Main.player[npc.target].dead && (Main.player[npc.target].Center - npc.Center).Length() < 170f)
                    {
                        npc.ai[2] = -16f;
                    }
                    if (npc.velocity.X != 0f || npc.velocity.Y < 0f || npc.velocity.Y > 2f || npc.justHit)
                    {
                        npc.ai[2] = -16f;
                    }
                    return;
                }
                if (npc.ai[2] < 0f)
                {
                    if (npc.alpha > 0)
                    {
                        npc.alpha -= num / 16;
                        if (npc.alpha < 0)
                        {
                            npc.alpha = 0;
                        }
                    }
                    npc.ai[2] += 1f;
                    if (npc.ai[2] == 0f)
                    {
                        npc.ai[2] = 1f;
                        npc.velocity.X = (float)(npc.direction * 2);
                    }
                    return;
                }
                npc.alpha = 0;
            }
            if (npc.type == 166)
            {
                if (Main.netMode != 1 && Main.rand.Next(240) == 0)
                {
                    npc.ai[2] = (float)Main.rand.Next(-480, -60);
                    npc.netUpdate = true;
                }
                if (npc.ai[2] < 0f)
                {
                    npc.TargetClosest(true);
                    if (npc.justHit)
                    {
                        npc.ai[2] = 0f;
                    }
                    if (Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                    {
                        npc.ai[2] = 0f;
                    }
                }
                if (npc.ai[2] < 0f)
                {
                    npc.velocity.X = npc.velocity.X * 0.9f;
                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                    {
                        npc.velocity.X = 0f;
                    }
                    npc.ai[2] += 1f;
                    if (npc.ai[2] == 0f)
                    {
                        npc.velocity.X = (float)npc.direction * 0.1f;
                    }
                    return;
                }
            }
            if (npc.type == 461)
            {
                if (npc.wet)
                {
                    npc.knockBackResist = 0f;
                    npc.ai[3] = -0.10101f;
                    npc.noGravity = true;
                    Vector2 center = npc.Center;
                    npc.width = 34;
                    npc.height = 24;
                    npc.position.X = center.X - (float)(npc.width / 2);
                    npc.position.Y = center.Y - (float)(npc.height / 2);
                    npc.TargetClosest(true);
                    if (npc.collideX)
                    {
                        npc.velocity.X = -npc.oldVelocity.X;
                    }
                    if (npc.velocity.X < 0f)
                    {
                        npc.direction = -1;
                    }
                    if (npc.velocity.X > 0f)
                    {
                        npc.direction = 1;
                    }
                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].Center, 1, 1))
                    {
                        Vector2 value = Main.player[npc.target].Center - npc.Center;
                        value.Normalize();
                        value *= 5f;
                        npc.velocity = (npc.velocity * 19f + value) / 20f;
                        return;
                    }
                    float num2 = 5f;
                    if (npc.velocity.Y > 0f)
                    {
                        num2 = 3f;
                    }
                    if (npc.velocity.Y < 0f)
                    {
                        num2 = 8f;
                    }
                    Vector2 value2 = new Vector2((float)npc.direction, -1f);
                    value2.Normalize();
                    value2 *= num2;
                    if (num2 < 5f)
                    {
                        npc.velocity = (npc.velocity * 24f + value2) / 25f;
                        return;
                    }
                    npc.velocity = (npc.velocity * 9f + value2) / 10f;
                    return;
                }
                else
                {
                    npc.knockBackResist = 0.4f * Main.knockBackMultiplier;
                    npc.noGravity = false;
                    Vector2 center2 = npc.Center;
                    npc.width = 18;
                    npc.height = 40;
                    npc.position.X = center2.X - (float)(npc.width / 2);
                    npc.position.Y = center2.Y - (float)(npc.height / 2);
                    if (npc.ai[3] == -0.10101f)
                    {
                        npc.ai[3] = 0f;
                        float num3 = npc.velocity.Length();
                        num3 *= 2f;
                        if (num3 > 10f)
                        {
                            num3 = 10f;
                        }
                        npc.velocity.Normalize();
                        npc.velocity *= num3;
                        if (npc.velocity.X < 0f)
                        {
                            npc.direction = -1;
                        }
                        if (npc.velocity.X > 0f)
                        {
                            npc.direction = 1;
                        }
                        npc.spriteDirection = npc.direction;
                    }
                }
            }
            if (npc.type == 379 || npc.type == 380)
            {
                if (npc.ai[3] < 0f)
                {
                    npc.damage = 0;
                    npc.velocity.X = npc.velocity.X * 0.93f;
                    if ((double)npc.velocity.X > -0.1 && (double)npc.velocity.X < 0.1)
                    {
                        npc.velocity.X = 0f;
                    }
                    int num4 = (int)(-npc.ai[3] - 1f);
                    int num5 = Math.Sign(Main.npc[num4].Center.X - npc.Center.X);
                    if (num5 != npc.direction)
                    {
                        npc.velocity.X = 0f;
                        npc.direction = num5;
                        npc.netUpdate = true;
                    }
                    if (npc.justHit && Main.netMode != 1 && Main.npc[num4].localAI[0] == 0f)
                    {
                        Main.npc[num4].localAI[0] = 1f;
                    }
                    if (npc.ai[0] < 1000f)
                    {
                        npc.ai[0] = 1000f;
                    }
                    float[] expr_710_cp_0 = npc.ai;
                    int expr_710_cp_1 = 0;
                    float num6 = expr_710_cp_0[expr_710_cp_1] + 1f;
                    expr_710_cp_0[expr_710_cp_1] = num6;
                    if (num6 >= 1300f)
                    {
                        npc.ai[0] = 1000f;
                        npc.netUpdate = true;
                    }
                    return;
                }
                if (npc.ai[0] >= 1000f)
                {
                    npc.ai[0] = 0f;
                }
                npc.damage = npc.defDamage;
            }
            if (npc.type == 383 && npc.ai[2] == 0f && npc.localAI[0] == 0f && Main.netMode != 1)
            {
                int num7 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 384, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                npc.ai[2] = (float)(num7 + 1);
                npc.localAI[0] = -1f;
                npc.netUpdate = true;
                Main.npc[num7].ai[0] = (float)npc.whoAmI;
                Main.npc[num7].netUpdate = true;
            }
            if (npc.type == 383)
            {
                int num8 = (int)npc.ai[2] - 1;
                if (num8 != -1 && Main.npc[num8].active && Main.npc[num8].type == 384)
                {
                    npc.dontTakeDamage = true;
                }
                else
                {
                    npc.dontTakeDamage = false;
                    npc.ai[2] = 0f;
                    if (npc.localAI[0] == -1f)
                    {
                        npc.localAI[0] = 180f;
                    }
                    if (npc.localAI[0] > 0f)
                    {
                        npc.localAI[0] -= 1f;
                    }
                }
            }
            if (npc.type == 482)
            {
                int num9 = 300;
                int num10 = 120;
                npc.dontTakeDamage = false;
                if (npc.ai[2] < 0f)
                {
                    npc.dontTakeDamage = true;
                    npc.ai[2] += 1f;
                    npc.velocity.X = npc.velocity.X * 0.9f;
                    if ((double)Math.Abs(npc.velocity.X) < 0.001)
                    {
                        npc.velocity.X = 0.001f * (float)npc.direction;
                    }
                    if (Math.Abs(npc.velocity.Y) > 1f)
                    {
                        npc.ai[2] += 10f;
                    }
                    if (npc.ai[2] >= 0f)
                    {
                        npc.netUpdate = true;
                        npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.3f;
                    }
                    return;
                }
                if (npc.ai[2] < (float)num9)
                {
                    if (npc.justHit)
                    {
                        npc.ai[2] += 15f;
                    }
                    npc.ai[2] += 1f;
                }
                else if (npc.velocity.Y == 0f)
                {
                    npc.ai[2] = (float)(-(float)num10);
                    npc.netUpdate = true;
                }
            }
            if (npc.type == 480)
            {
                int num11 = 180;
                int num12 = 300;
                int num13 = 180;
                int num14 = 60;
                int num15 = 20;
                if (npc.life < npc.lifeMax / 3)
                {
                    num11 = 120;
                    num12 = 240;
                    num13 = 240;
                    num14 = 90;
                }
                if (npc.ai[2] > 0f)
                {
                    npc.ai[2] -= 1f;
                }
                else if (npc.ai[2] == 0f)
                {
                    if (((Main.player[npc.target].Center.X < npc.Center.X && npc.direction < 0) || (Main.player[npc.target].Center.X > npc.Center.X && npc.direction > 0)) && npc.velocity.Y == 0f && npc.Distance(Main.player[npc.target].Center) < 900f && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                    {
                        npc.ai[2] = (float)(-(float)num13 - num15);
                        npc.netUpdate = true;
                    }
                }
                else
                {
                    if (npc.ai[2] < 0f && npc.ai[2] < (float)(-(float)num13))
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                        if (npc.velocity.Y < -2f || npc.velocity.Y > 4f || npc.justHit)
                        {
                            npc.ai[2] = (float)num11;
                        }
                        else
                        {
                            npc.ai[2] += 1f;
                            if (npc.ai[2] == 0f)
                            {
                                npc.ai[2] = (float)num12;
                            }
                        }
                        float num16 = npc.ai[2] + (float)num13 + (float)num15;
                        if (num16 == 1f)
                        {
                            Main.PlaySound(4, (int)npc.position.X, (int)npc.position.Y, 17, 1f, 0f);
                        }
                        if (num16 < (float)num15)
                        {
                            Vector2 vector = npc.Top + new Vector2((float)(npc.spriteDirection * 6), 6f);
                            float scaleFactor = MathHelper.Lerp(20f, 30f, (num16 * 3f + 50f) / 182f);
                            Main.rand.NextFloat();
                            for (float num17 = 0f; num17 < 2f; num17 += 1f)
                            {
                                Vector2 vector2 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (Main.rand.NextFloat() * 0.5f + 0.5f);
                                Dust expr_D34 = Main.dust[Dust.NewDust(vector, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
                                expr_D34.position = vector + vector2 * scaleFactor;
                                expr_D34.noGravity = true;
                                expr_D34.velocity = vector2 * 2f;
                                expr_D34.scale = 0.5f + Main.rand.NextFloat() * 0.5f;
                            }
                        }
                        Lighting.AddLight(npc.Center, 0.9f, 0.75f, 0.1f);
                        return;
                    }
                    if (npc.ai[2] < 0f && npc.ai[2] >= (float)(-(float)num13))
                    {
                        Lighting.AddLight(npc.Center, 0.9f, 0.75f, 0.1f);
                        npc.velocity.X = npc.velocity.X * 0.9f;
                        if (npc.velocity.Y < -2f || npc.velocity.Y > 4f || npc.justHit)
                        {
                            npc.ai[2] = (float)num11;
                        }
                        else
                        {
                            npc.ai[2] += 1f;
                            if (npc.ai[2] == 0f)
                            {
                                npc.ai[2] = (float)num12;
                            }
                        }
                        float num18 = npc.ai[2] + (float)num13;
                        if (num18 < 180f && (Main.rand.Next(3) == 0 || npc.ai[2] % 3f == 0f))
                        {
                            Vector2 vector3 = npc.Top + new Vector2((float)(npc.spriteDirection * 10), 10f);
                            float scaleFactor2 = MathHelper.Lerp(20f, 30f, (num18 * 3f + 50f) / 182f);
                            Main.rand.NextFloat();
                            for (float num19 = 0f; num19 < 1f; num19 += 1f)
                            {
                                Vector2 vector4 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (Main.rand.NextFloat() * 0.5f + 0.5f);
                                Dust expr_F62 = Main.dust[Dust.NewDust(vector3, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
                                expr_F62.position = vector3 + vector4 * scaleFactor2;
                                expr_F62.noGravity = true;
                                expr_F62.velocity = vector4 * 4f;
                                expr_F62.scale = 0.5f + Main.rand.NextFloat();
                            }
                        }
                        if (Main.netMode != 2)
                        {
                            Player player = Main.player[Main.myPlayer];
                            int arg_FD9_0 = Main.myPlayer;
                            if (!player.dead && player.active && player.FindBuffIndex(156) == -1)
                            {
                                Vector2 vector5 = player.Center - npc.Center;
                                if (vector5.Length() < 700f)
                                {
                                    bool flag = vector5.Length() < 30f;
                                    if (!flag)
                                    {
                                        float x = 0.7853982f.ToRotationVector2().X;
                                        Vector2 vector6 = Vector2.Normalize(vector5);
                                        if (vector6.X > x || vector6.X < -x)
                                        {
                                            flag = true;
                                        }
                                    }
                                    if (((player.Center.X < npc.Center.X && npc.direction < 0 && player.direction > 0) || (player.Center.X > npc.Center.X && npc.direction > 0 && player.direction < 0)) && flag && (Collision.CanHitLine(npc.Center, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(npc.Center - Vector2.UnitY * 16f, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(npc.Center + Vector2.UnitY * 8f, 1, 1, player.Center, 1, 1)))
                                    {
                                        player.AddBuff(156, num14 + (int)npc.ai[2] * -1, true);
                                    }
                                }
                            }
                        }
                        return;
                    }
                }
            }
            if (npc.type == 471)
            {
                if (npc.ai[3] < 0f)
                {
                    npc.knockBackResist = 0f;
                    npc.defense = (int)((double)npc.defDefense * 1.1);
                    npc.noGravity = true;
                    npc.noTileCollide = true;
                    if (npc.velocity.X < 0f)
                    {
                        npc.direction = -1;
                    }
                    else if (npc.velocity.X > 0f)
                    {
                        npc.direction = 1;
                    }
                    npc.rotation = npc.velocity.X * 0.1f;
                    if (Main.netMode != 1)
                    {
                        npc.localAI[3] += 1f;
                        if (npc.localAI[3] > (float)Main.rand.Next(20, 180))
                        {
                            npc.localAI[3] = 0f;
                            Vector2 vector7 = npc.Center;
                            vector7 += npc.velocity;
                            NPC.NewNPC((int)vector7.X, (int)vector7.Y, 30, 0, 0f, 0f, 0f, 0f, 255);
                        }
                    }
                }
                else
                {
                    npc.localAI[3] = 0f;
                    npc.knockBackResist = 0.35f * Main.knockBackMultiplier;
                    npc.rotation *= 0.9f;
                    npc.defense = npc.defDefense;
                    npc.noGravity = false;
                    npc.noTileCollide = false;
                }
                if (npc.ai[3] == 1f)
                {
                    npc.knockBackResist = 0f;
                    npc.defense += 10;
                }
                if (npc.ai[3] == -1f)
                {
                    npc.TargetClosest(true);
                    float num20 = 8f;
                    float num21 = 40f;
                    Vector2 value3 = Main.player[npc.target].Center - npc.Center;
                    float num22 = value3.Length();
                    num20 += num22 / 200f;
                    value3.Normalize();
                    value3 *= num20;
                    npc.velocity = (npc.velocity * (num21 - 1f) + value3) / num21;
                    if (num22 < 500f && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                    {
                        npc.ai[3] = 0f;
                        npc.ai[2] = 0f;
                    }
                    return;
                }
                if (npc.ai[3] == -2f)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.2f;
                    if (npc.velocity.Y < -10f)
                    {
                        npc.velocity.Y = -10f;
                    }
                    if (Main.player[npc.target].Center.Y - npc.Center.Y > 200f)
                    {
                        npc.TargetClosest(true);
                        npc.ai[3] = -3f;
                        if (Main.player[npc.target].Center.X > npc.Center.X)
                        {
                            npc.ai[2] = 1f;
                        }
                        else
                        {
                            npc.ai[2] = -1f;
                        }
                    }
                    npc.velocity.X = npc.velocity.X * 0.99f;
                    return;
                }
                if (npc.ai[3] == -3f)
                {
                    if (npc.direction == 0)
                    {
                        npc.TargetClosest(true);
                    }
                    if (npc.ai[2] == 0f)
                    {
                        npc.ai[2] = (float)npc.direction;
                    }
                    npc.velocity.Y = npc.velocity.Y * 0.9f;
                    npc.velocity.X = npc.velocity.X + npc.ai[2] * 0.3f;
                    if (npc.velocity.X > 10f)
                    {
                        npc.velocity.X = 10f;
                    }
                    if (npc.velocity.X < -10f)
                    {
                        npc.velocity.X = -10f;
                    }
                    float num23 = Main.player[npc.target].Center.X - npc.Center.X;
                    if ((npc.ai[2] < 0f && num23 > 300f) || (npc.ai[2] > 0f && num23 < -300f))
                    {
                        npc.ai[3] = -4f;
                        npc.ai[2] = 0f;
                        return;
                    }
                    if (Math.Abs(num23) > 800f)
                    {
                        npc.ai[3] = -1f;
                        npc.ai[2] = 0f;
                    }
                    return;
                }
                else
                {
                    if (npc.ai[3] == -4f)
                    {
                        npc.ai[2] += 1f;
                        npc.velocity.Y = npc.velocity.Y + 0.1f;
                        if (npc.velocity.Length() > 4f)
                        {
                            npc.velocity *= 0.9f;
                        }
                        int num24 = (int)npc.Center.X / 16;
                        int num25 = (int)(npc.position.Y + (float)npc.height + 12f) / 16;
                        bool flag2 = false;
                        for (int i = num24 - 1; i <= num24 + 1; i++)
                        {
                            if (Main.tile[i, num25] == null)
                            {
                                Main.tile[num24, num25] = new Tile();
                            }
                            if (Main.tile[i, num25].active() && Main.tileSolid[(int)Main.tile[i, num25].type])
                            {
                                flag2 = true;
                            }
                        }
                        if (flag2 && !Collision.SolidCollision(npc.position, npc.width, npc.height))
                        {
                            npc.ai[3] = 0f;
                            npc.ai[2] = 0f;
                        }
                        else if (npc.ai[2] > 300f || npc.Center.Y > Main.player[npc.target].Center.Y + 200f)
                        {
                            npc.ai[3] = -1f;
                            npc.ai[2] = 0f;
                        }
                    }
                    else
                    {
                        if (npc.ai[3] == 1f)
                        {
                            Vector2 center3 = npc.Center;
                            center3.Y -= 70f;
                            npc.velocity.X = npc.velocity.X * 0.8f;
                            npc.ai[2] += 1f;
                            if (npc.ai[2] == 60f)
                            {
                                if (Main.netMode != 1)
                                {
                                    NPC.NewNPC((int)center3.X, (int)center3.Y + 18, 472, 0, 0f, 0f, 0f, 0f, 255);
                                }
                            }
                            else if (npc.ai[2] >= 90f)
                            {
                                npc.ai[3] = -2f;
                                npc.ai[2] = 0f;
                            }
                            for (int j = 0; j < 2; j++)
                            {
                                Vector2 arg_18C0_0 = center3;
                                Vector2 value4 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                                value4.Normalize();
                                value4 *= (float)Main.rand.Next(0, 100) * 0.1f;
                                Vector2 arg_1908_0 = arg_18C0_0 + value4;
                                value4.Normalize();
                                value4 *= (float)Main.rand.Next(50, 90) * 0.1f;
                                int num26 = Dust.NewDust(arg_1908_0, 1, 1, 27, 0f, 0f, 0, default(Color), 1f);
                                Main.dust[num26].velocity = -value4 * 0.3f;
                                Main.dust[num26].alpha = 100;
                                if (Main.rand.Next(2) == 0)
                                {
                                    Main.dust[num26].noGravity = true;
                                    Main.dust[num26].scale += 0.3f;
                                }
                            }
                            return;
                        }
                        npc.ai[2] += 1f;
                        int num27 = 10;
                        if (npc.velocity.Y == 0f && NPC.CountNPCS(472) < num27)
                        {
                            if (npc.ai[2] >= 180f)
                            {
                                npc.ai[2] = 0f;
                                npc.ai[3] = 1f;
                            }
                        }
                        else
                        {
                            if (NPC.CountNPCS(472) >= num27)
                            {
                                npc.ai[2] += 1f;
                            }
                            if (npc.ai[2] >= 360f)
                            {
                                npc.ai[2] = 0f;
                                npc.ai[3] = -2f;
                                npc.velocity.Y = npc.velocity.Y - 3f;
                            }
                        }
                        if (npc.target >= 0 && !Main.player[npc.target].dead && (Main.player[npc.target].Center - npc.Center).Length() > 800f)
                        {
                            npc.ai[3] = -1f;
                            npc.ai[2] = 0f;
                        }
                    }
                    if (Main.player[npc.target].dead)
                    {
                        npc.TargetClosest(true);
                        if (Main.player[npc.target].dead && npc.timeLeft > 1)
                        {
                            npc.timeLeft = 1;
                        }
                    }
                }
            }
            if (npc.type == 419)
            {
                npc.reflectingProjectiles = false;
                npc.takenDamageMultiplier = 1f;
                int num28 = 6;
                int num29 = 10;
                float scaleFactor3 = 16f;
                if (npc.ai[2] > 0f)
                {
                    npc.ai[2] -= 1f;
                }
                if (npc.ai[2] == 0f)
                {
                    if (((Main.player[npc.target].Center.X < npc.Center.X && npc.direction < 0) || (Main.player[npc.target].Center.X > npc.Center.X && npc.direction > 0)) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                    {
                        npc.ai[2] = -1f;
                        npc.netUpdate = true;
                        npc.TargetClosest(true);
                    }
                }
                else
                {
                    if (npc.ai[2] < 0f && npc.ai[2] > (float)(-(float)num28))
                    {
                        npc.ai[2] -= 1f;
                        npc.velocity.X = npc.velocity.X * 0.9f;
                        return;
                    }
                    if (npc.ai[2] == (float)(-(float)num28))
                    {
                        npc.ai[2] -= 1f;
                        npc.TargetClosest(true);
                        Vector2 vec = npc.DirectionTo(Main.player[npc.target].Top + new Vector2(0f, -30f));
                        if (vec.HasNaNs())
                        {
                            vec = Vector2.Normalize(new Vector2((float)npc.spriteDirection, -1f));
                        }
                        npc.velocity = vec * scaleFactor3;
                        npc.netUpdate = true;
                        return;
                    }
                    if (npc.ai[2] < (float)(-(float)num28))
                    {
                        npc.ai[2] -= 1f;
                        if (npc.velocity.Y == 0f)
                        {
                            npc.ai[2] = 60f;
                        }
                        else if (npc.ai[2] < (float)(-(float)num28 - num29))
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.15f;
                            if (npc.velocity.Y > 24f)
                            {
                                npc.velocity.Y = 24f;
                            }
                        }
                        npc.reflectingProjectiles = true;
                        npc.takenDamageMultiplier = 3f;
                        if (npc.justHit)
                        {
                            npc.ai[2] = 60f;
                            npc.netUpdate = true;
                        }
                        return;
                    }
                }
            }
            if (npc.type == 415)
            {
                int num30 = 42;
                int num31 = 18;
                if (npc.justHit)
                {
                    npc.ai[2] = 120f;
                    npc.netUpdate = true;
                }
                if (npc.ai[2] > 0f)
                {
                    npc.ai[2] -= 1f;
                }
                if (npc.ai[2] == 0f)
                {
                    int num32 = 0;
                    for (int k = 0; k < 200; k++)
                    {
                        if (Main.npc[k].active && Main.npc[k].type == 516)
                        {
                            num32++;
                        }
                    }
                    if (num32 > 6)
                    {
                        npc.ai[2] = 90f;
                    }
                    else if (((Main.player[npc.target].Center.X < npc.Center.X && npc.direction < 0) || (Main.player[npc.target].Center.X > npc.Center.X && npc.direction > 0)) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                    {
                        npc.ai[2] = -1f;
                        npc.netUpdate = true;
                        npc.TargetClosest(true);
                    }
                }
                else if (npc.ai[2] < 0f && npc.ai[2] > (float)(-(float)num30))
                {
                    npc.ai[2] -= 1f;
                    if (npc.ai[2] == (float)(-(float)num30))
                    {
                        npc.ai[2] = (float)(180 + 30 * Main.rand.Next(10));
                    }
                    npc.velocity.X = npc.velocity.X * 0.8f;
                    if (npc.ai[2] == (float)(-(float)num31) || npc.ai[2] == (float)(-(float)num31 - 8) || npc.ai[2] == (float)(-(float)num31 - 16))
                    {
                        for (int l = 0; l < 20; l++)
                        {
                            Vector2 vector8 = npc.Center + Vector2.UnitX * (float)npc.spriteDirection * 40f;
                            Dust arg_2002_0 = Main.dust[Dust.NewDust(vector8, 0, 0, 259, 0f, 0f, 0, default(Color), 1f)];
                            Vector2 vector9 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                            arg_2002_0.position = vector8 + vector9 * 4f;
                            arg_2002_0.velocity = vector9 * 2f + Vector2.UnitX * Main.rand.NextFloat() * (float)npc.spriteDirection * 3f;
                            arg_2002_0.scale = 0.3f + vector9.X * (float)(-(float)npc.spriteDirection);
                            arg_2002_0.fadeIn = 0.7f;
                            arg_2002_0.noGravity = true;
                        }
                        if (npc.velocity.X > -0.5f && npc.velocity.X < 0.5f)
                        {
                            npc.velocity.X = 0f;
                        }
                        if (Main.netMode != 1)
                        {
                            NPC.NewNPC((int)npc.Center.X + npc.spriteDirection * 45, (int)npc.Center.Y + 8, 516, 0, 0f, 0f, 0f, 0f, npc.target);
                        }
                    }
                    return;
                }
            }
            if (npc.type == 428)
            {
                npc.localAI[0] += 1f;
                if (npc.localAI[0] >= 300f)
                {
                    int arg_2177_0 = (int)npc.Center.X / 16 - 1;
                    int num33 = (int)npc.Center.Y / 16 - 1;
                    if (!Collision.SolidTiles(arg_2177_0, arg_2177_0 + 2, num33, num33 + 1) && Main.netMode != 1)
                    {
                        npc.Transform(427);
                        npc.life = npc.lifeMax;
                        npc.localAI[0] = 0f;
                        return;
                    }
                }
                int maxValue;
                if (npc.localAI[0] < 60f)
                {
                    maxValue = 16;
                }
                else if (npc.localAI[0] < 120f)
                {
                    maxValue = 8;
                }
                else if (npc.localAI[0] < 180f)
                {
                    maxValue = 4;
                }
                else if (npc.localAI[0] < 240f)
                {
                    maxValue = 2;
                }
                else if (npc.localAI[0] < 300f)
                {
                    maxValue = 1;
                }
                else
                {
                    maxValue = 1;
                }
                if (Main.rand.Next(maxValue) == 0)
                {
                    Dust dust = Main.dust[Dust.NewDust(npc.position, npc.width, npc.height, 229, 0f, 0f, 0, default(Color), 1f)];
                    dust.noGravity = true;
                    dust.scale = 1f;
                    dust.noLight = true;
                    dust.velocity = npc.DirectionFrom(dust.position) * dust.velocity.Length();
                    dust.position -= dust.velocity * 5f;
                    Dust expr_22DE_cp_0_cp_0 = dust;
                    expr_22DE_cp_0_cp_0.position.X = expr_22DE_cp_0_cp_0.position.X + (float)(npc.direction * 6);
                    Dust expr_22F7_cp_0_cp_0 = dust;
                    expr_22F7_cp_0_cp_0.position.Y = expr_22F7_cp_0_cp_0.position.Y + 4f;
                }
            }
            if (npc.type == 427)
            {
                npc.localAI[0] += 1f;
                npc.localAI[0] += Math.Abs(npc.velocity.X) / 2f;
                if (npc.localAI[0] >= 1200f && Main.netMode != 1)
                {
                    int arg_2386_0 = (int)npc.Center.X / 16 - 2;
                    int num34 = (int)npc.Center.Y / 16 - 3;
                    if (!Collision.SolidTiles(arg_2386_0, arg_2386_0 + 4, num34, num34 + 4))
                    {
                        npc.Transform(426);
                        npc.life = npc.lifeMax;
                        npc.localAI[0] = 0f;
                        return;
                    }
                }
                int maxValue2;
                if (npc.localAI[0] < 360f)
                {
                    maxValue2 = 32;
                }
                else if (npc.localAI[0] < 720f)
                {
                    maxValue2 = 16;
                }
                else if (npc.localAI[0] < 1080f)
                {
                    maxValue2 = 6;
                }
                else if (npc.localAI[0] < 1440f)
                {
                    maxValue2 = 2;
                }
                else if (npc.localAI[0] < 1800f)
                {
                    maxValue2 = 1;
                }
                else
                {
                    maxValue2 = 1;
                }
                if (Main.rand.Next(maxValue2) == 0)
                {
                    Dust expr_2471 = Main.dust[Dust.NewDust(npc.position, npc.width, npc.height, 229, 0f, 0f, 0, default(Color), 1f)];
                    expr_2471.noGravity = true;
                    expr_2471.scale = 1f;
                    expr_2471.noLight = true;
                }
            }
            bool flag3 = false;
            if (npc.velocity.X == 0f)
            {
                flag3 = true;
            }
            if (npc.justHit)
            {
                flag3 = false;
            }
            if (Main.netMode != 1 && npc.type == 198 && (double)npc.life <= (double)npc.lifeMax * 0.55)
            {
                npc.Transform(199);
            }
            if (Main.netMode != 1 && npc.type == 348 && (double)npc.life <= (double)npc.lifeMax * 0.55)
            {
                npc.Transform(349);
            }
            int num35 = 60;
            if (npc.type == 120)
            {
                num35 = 180;
                if (npc.ai[3] == -120f)
                {
                    npc.velocity *= 0f;
                    npc.ai[3] = 0f;
                    Main.PlaySound(SoundID.Item8, npc.position);
                    Vector2 vector10 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    float num36 = npc.oldPos[2].X + (float)npc.width * 0.5f - vector10.X;
                    float num37 = npc.oldPos[2].Y + (float)npc.height * 0.5f - vector10.Y;
                    float num38 = (float)Math.Sqrt((double)(num36 * num36 + num37 * num37));
                    num38 = 2f / num38;
                    num36 *= num38;
                    num37 *= num38;
                    for (int m = 0; m < 20; m++)
                    {
                        int num39 = Dust.NewDust(npc.position, npc.width, npc.height, 71, num36, num37, 200, default(Color), 2f);
                        Main.dust[num39].noGravity = true;
                        Dust expr_2688_cp_0_cp_0 = Main.dust[num39];
                        expr_2688_cp_0_cp_0.velocity.X = expr_2688_cp_0_cp_0.velocity.X * 2f;
                    }
                    for (int n = 0; n < 20; n++)
                    {
                        int num40 = Dust.NewDust(npc.oldPos[2], npc.width, npc.height, 71, -num36, -num37, 200, default(Color), 2f);
                        Main.dust[num40].noGravity = true;
                        Dust expr_26FD_cp_0_cp_0 = Main.dust[num40];
                        expr_26FD_cp_0_cp_0.velocity.X = expr_26FD_cp_0_cp_0.velocity.X * 2f;
                    }
                }
            }
            bool flag4 = false;
            bool flag5 = true;
            if (npc.type == 343 || npc.type == 47 || npc.type == 67 || npc.type == 109 || npc.type == 110 || npc.type == 111 || npc.type == 120 || npc.type == 163 || npc.type == 164 || npc.type == 239 || npc.type == 168 || npc.type == 199 || npc.type == 206 || npc.type == 214 || npc.type == 215 || npc.type == 216 || npc.type == 217 || npc.type == 218 || npc.type == 219 || npc.type == 220 || npc.type == 226 || npc.type == 243 || npc.type == 251 || npc.type == 257 || npc.type == 258 || npc.type == 290 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 305 || npc.type == 306 || npc.type == 307 || npc.type == 308 || npc.type == 309 || npc.type == 348 || npc.type == 349 || npc.type == 350 || npc.type == 351 || npc.type == 379 || (npc.type >= 430 && npc.type <= 436) || (npc.type == 380 || npc.type == 381 || npc.type == 382 || npc.type == 383 || npc.type == 386 || npc.type == 391 || (npc.type >= 449 && npc.type <= 452)) || (npc.type == 466 || npc.type == 464 || npc.type == 166 || npc.type == 469 || npc.type == 468 || npc.type == 471 || npc.type == 470 || npc.type == 480 || npc.type == 481 || npc.type == 482 || npc.type == 411 || npc.type == 424 || npc.type == 409 || (npc.type >= 494 && npc.type <= 506)) || (npc.type == 425 || npc.type == 427 || npc.type == 426 || npc.type == 428 || npc.type == 508 || npc.type == 415 || npc.type == 419 || npc.type == 520 || (npc.type >= 524 && npc.type <= 527)) || npc.type == 528 || npc.type == 529 || npc.type == 530 || npc.type == 532)
            {
                flag5 = false;
            }
            bool flag6 = false;
            int num41 = npc.type;
            if (num41 == 425 || num41 == 471)
            {
                flag6 = true;
            }
            bool flag7 = true;
            num41 = npc.type;
            if (num41 <= 382)
            {
                if (num41 <= 216)
                {
                    if (num41 - 110 > 1 && num41 != 206 && num41 - 214 > 2)
                    {
                        goto IL_2CAD;
                    }
                }
                else if (num41 - 291 > 2 && num41 != 350 && num41 - 379 > 3)
                {
                    goto IL_2CAD;
                }
            }
            else if (num41 <= 424)
            {
                if (num41 != 409 && num41 != 411 && num41 != 424)
                {
                    goto IL_2CAD;
                }
            }
            else if (num41 <= 466)
            {
                if (num41 != 426 && num41 != 466)
                {
                    goto IL_2CAD;
                }
            }
            else if (num41 - 498 > 8 && num41 != 520)
            {
                goto IL_2CAD;
            }
            if (npc.ai[2] > 0f)
            {
                flag7 = false;
            }
        IL_2CAD:
            if (!flag6 & flag7)
            {
                if (npc.velocity.Y == 0f && ((npc.velocity.X > 0f && npc.direction < 0) || (npc.velocity.X < 0f && npc.direction > 0)))
                {
                    flag4 = true;
                }
                if ((npc.position.X == npc.oldPosition.X || npc.ai[3] >= (float)num35) | flag4)
                {
                    npc.ai[3] += 1f;
                }
                else if ((double)Math.Abs(npc.velocity.X) > 0.9 && npc.ai[3] > 0f)
                {
                    npc.ai[3] -= 1f;
                }
                if (npc.ai[3] > (float)(num35 * 10))
                {
                    npc.ai[3] = 0f;
                }
                if (npc.justHit)
                {
                    npc.ai[3] = 0f;
                }
                if (npc.ai[3] == (float)num35)
                {
                    npc.netUpdate = true;
                }
            }
            if (npc.type == 463 && Main.netMode != 1)
            {
                if (npc.localAI[3] > 0f)
                {
                    npc.localAI[3] -= 1f;
                }
                if (npc.justHit && npc.localAI[3] <= 0f && Main.rand.Next(3) == 0)
                {
                    npc.localAI[3] = 30f;
                    int num42 = Main.rand.Next(3, 6);
                    int[] array = new int[num42];
                    int num43 = 0;
                    for (int num44 = 0; num44 < 255; num44++)
                    {
                        if (Main.player[num44].active && !Main.player[num44].dead && Collision.CanHitLine(npc.position, npc.width, npc.height, Main.player[num44].position, Main.player[num44].width, Main.player[num44].height))
                        {
                            array[num43] = num44;
                            num43++;
                            if (num43 == num42)
                            {
                                break;
                            }
                        }
                    }
                    if (num43 > 1)
                    {
                        for (int num45 = 0; num45 < 100; num45++)
                        {
                            int num46 = Main.rand.Next(num43);
                            int num47;
                            for (num47 = num46; num47 == num46; num47 = Main.rand.Next(num43))
                            {
                            }
                            int num48 = array[num46];
                            array[num46] = array[num47];
                            array[num47] = num48;
                        }
                    }
                    Vector2 vector11 = new Vector2(-1f, -1f);
                    for (int num49 = 0; num49 < num43; num49++)
                    {
                        Vector2 value5 = Main.npc[array[num49]].Center - npc.Center;
                        value5.Normalize();
                        vector11 += value5;
                    }
                    vector11.Normalize();
                    for (int num50 = 0; num50 < num42; num50++)
                    {
                        float scaleFactor4 = (float)Main.rand.Next(8, 13);
                        Vector2 vector12 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector12.Normalize();
                        if (num43 > 0)
                        {
                            vector12 += vector11;
                            vector12.Normalize();
                        }
                        vector12 *= scaleFactor4;
                        if (num43 > 0)
                        {
                            num43--;
                            vector12 = Main.player[array[num43]].Center - npc.Center;
                            vector12.Normalize();
                            vector12 *= scaleFactor4;
                        }
                        Projectile.NewProjectile(npc.Center.X, npc.position.Y + (float)(npc.width / 4), vector12.X, vector12.Y, 498, (int)((double)npc.damage * 0.15), 1f, 255, 0f, 0f);
                    }
                }
            }
            if (npc.type == 460)
            {
                if (npc.velocity.Y < -NPC.gravity || npc.velocity.Y > NPC.gravity)
                {
                    npc.knockBackResist = 0f;
                }
                else
                {
                    npc.knockBackResist = 0.25f * Main.knockBackMultiplier;
                }
            }
            if (npc.type == 469)
            {
                npc.knockBackResist = 0.45f * Main.knockBackMultiplier;
                if (npc.ai[2] == 1f)
                {
                    npc.knockBackResist = 0f;
                }
                bool flag8 = false;
                int num51 = (int)npc.Center.X / 16;
                int num52 = (int)npc.Center.Y / 16;
                for (int num53 = num51 - 1; num53 <= num51 + 1; num53++)
                {
                    for (int num54 = num52 - 1; num54 <= num52 + 1; num54++)
                    {
                        if (Main.tile[num53, num54] != null && Main.tile[num53, num54].wall > 0)
                        {
                            flag8 = true;
                            break;
                        }
                    }
                    if (flag8)
                    {
                        break;
                    }
                }
                if (npc.ai[2] == 0f & flag8)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity.Y = -4.6f;
                        npc.velocity.X = npc.velocity.X * 1.3f;
                    }
                    else if (npc.velocity.Y > 0f)
                    {
                        npc.ai[2] = 1f;
                    }
                }
                if (flag8 && npc.ai[2] == 1f && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                {
                    Vector2 value6 = Main.player[npc.target].Center - npc.Center;
                    float num55 = value6.Length();
                    value6.Normalize();
                    value6 *= 4.5f + num55 / 300f;
                    npc.velocity = (npc.velocity * 29f + value6) / 30f;
                    npc.noGravity = true;
                    npc.ai[2] = 1f;
                    return;
                }
                npc.noGravity = false;
                npc.ai[2] = 0f;
            }
            if (npc.type == 462 && npc.velocity.Y == 0f && (Main.player[npc.target].Center - npc.Center).Length() < 150f && Math.Abs(npc.velocity.X) > 3f && ((npc.velocity.X < 0f && npc.Center.X > Main.player[npc.target].Center.X) || (npc.velocity.X > 0f && npc.Center.X < Main.player[npc.target].Center.X)))
            {
                npc.velocity.X = npc.velocity.X * 1.75f;
                npc.velocity.Y = npc.velocity.Y - 4.5f;
                if (npc.Center.Y - Main.player[npc.target].Center.Y > 20f)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                }
                if (npc.Center.Y - Main.player[npc.target].Center.Y > 40f)
                {
                    npc.velocity.Y = npc.velocity.Y - 1f;
                }
                if (npc.Center.Y - Main.player[npc.target].Center.Y > 80f)
                {
                    npc.velocity.Y = npc.velocity.Y - 1.5f;
                }
                if (npc.Center.Y - Main.player[npc.target].Center.Y > 100f)
                {
                    npc.velocity.Y = npc.velocity.Y - 1.5f;
                }
                if (Math.Abs(npc.velocity.X) > 7f)
                {
                    if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = -7f;
                    }
                    else
                    {
                        npc.velocity.X = 7f;
                    }
                }
            }
            if (npc.ai[3] < (float)num35 && (Main.eclipse || !Main.dayTime || (double)npc.position.Y > Main.worldSurface * 16.0 || (Main.invasionType == 1 && (npc.type == 343 || npc.type == 350)) || (Main.invasionType == 1 && (npc.type == 26 || npc.type == 27 || npc.type == 28 || npc.type == 111 || npc.type == 471)) || (npc.type == 73 || (Main.invasionType == 3 && npc.type >= 212 && npc.type <= 216)) || (Main.invasionType == 4 && (npc.type == 381 || npc.type == 382 || npc.type == 383 || npc.type == 385 || npc.type == 386 || npc.type == 389 || npc.type == 391 || npc.type == 520)) || (npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 47 || npc.type == 67 || npc.type == 77 || npc.type == 78 || npc.type == 79 || npc.type == 80 || npc.type == 110 || npc.type == 120 || npc.type == 168 || npc.type == 181 || npc.type == 185 || npc.type == 198 || npc.type == 199 || npc.type == 206 || npc.type == 217 || npc.type == 218 || npc.type == 219 || npc.type == 220 || npc.type == 239 || npc.type == 243 || npc.type == 254 || npc.type == 255 || npc.type == 257 || npc.type == 258 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 379 || npc.type == 380 || npc.type == 464 || npc.type == 470 || npc.type == 424 || (npc.type == 411 && (npc.ai[1] >= 180f || npc.ai[1] < 90f))) || (npc.type == 409 || npc.type == 425 || npc.type == 429 || npc.type == 427 || npc.type == 428 || npc.type == 508 || npc.type == 415 || npc.type == 419 || (npc.type >= 524 && npc.type <= 527)) || npc.type == 528 || npc.type == 529 || npc.type == 530 || npc.type == 532))
            {
                if ((npc.type == 3 || npc.type == 331 || npc.type == 332 || npc.type == 21 || (npc.type >= 449 && npc.type <= 452) || npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 77 || npc.type == 110 || npc.type == 132 || npc.type == 167 || npc.type == 161 || npc.type == 162 || npc.type == 186 || npc.type == 187 || npc.type == 188 || npc.type == 189 || npc.type == 197 || npc.type == 200 || npc.type == 201 || npc.type == 202 || npc.type == 203 || npc.type == 223 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 320 || npc.type == 321 || npc.type == 319 || npc.type == 481) && Main.rand.Next(1000) == 0)
                {
                    Main.PlaySound(14, (int)npc.position.X, (int)npc.position.Y, 1, 1f, 0f);
                }
                if (npc.type == 489 && Main.rand.Next(800) == 0)
                {
                    Main.PlaySound(14, (int)npc.position.X, (int)npc.position.Y, npc.type, 1f, 0f);
                }
                if ((npc.type == 78 || npc.type == 79 || npc.type == 80) && Main.rand.Next(500) == 0)
                {
                    Main.PlaySound(26, (int)npc.position.X, (int)npc.position.Y, 1, 1f, 0f);
                }
                if (npc.type == 159 && Main.rand.Next(500) == 0)
                {
                    Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, 7, 1f, 0f);
                }
                if (npc.type == 162 && Main.rand.Next(500) == 0)
                {
                    Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, 6, 1f, 0f);
                }
                if (npc.type == 181 && Main.rand.Next(500) == 0)
                {
                    Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, 8, 1f, 0f);
                }
                if (npc.type >= 269 && npc.type <= 280 && Main.rand.Next(1000) == 0)
                {
                    Main.PlaySound(14, (int)npc.position.X, (int)npc.position.Y, 1, 1f, 0f);
                }
                npc.TargetClosest(true);
            }
            else if (npc.ai[2] <= 0f || (npc.type != 110 && npc.type != 111 && npc.type != 206 && npc.type != 216 && npc.type != 214 && npc.type != 215 && npc.type != 291 && npc.type != 292 && npc.type != 293 && npc.type != 350 && npc.type != 381 && npc.type != 382 && npc.type != 383 && npc.type != 385 && npc.type != 386 && npc.type != 389 && npc.type != 391 && npc.type != 469 && npc.type != 166 && npc.type != 466 && npc.type != 471 && npc.type != 411 && npc.type != 409 && npc.type != 424 && npc.type != 425 && npc.type != 426 && npc.type != 415 && npc.type != 419 && npc.type != 520))
            {
                if (Main.dayTime && (double)(npc.position.Y / 16f) < Main.worldSurface && npc.timeLeft > 10)
                {
                    npc.timeLeft = 10;
                }
                if (npc.velocity.X == 0f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.ai[0] += 1f;
                        if (npc.ai[0] >= 2f)
                        {
                            npc.direction *= -1;
                            npc.spriteDirection = npc.direction;
                            npc.ai[0] = 0f;
                        }
                    }
                }
                else
                {
                    npc.ai[0] = 0f;
                }
                if (npc.direction == 0)
                {
                    npc.direction = 1;
                }
            }
            if (npc.type == 159 || npc.type == 349)
            {
                if (npc.type == 159 && ((npc.velocity.X > 0f && npc.direction < 0) || (npc.velocity.X < 0f && npc.direction > 0)))
                {
                    npc.velocity.X = npc.velocity.X * 0.95f;
                }
                if (npc.velocity.X < -6f || npc.velocity.X > 6f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < 6f && npc.direction == 1)
                {
                    if (npc.velocity.Y == 0f && npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.99f;
                    }
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > 6f)
                    {
                        npc.velocity.X = 6f;
                    }
                }
                else if (npc.velocity.X > -6f && npc.direction == -1)
                {
                    if (npc.velocity.Y == 0f && npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.99f;
                    }
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -6f)
                    {
                        npc.velocity.X = -6f;
                    }
                }
            }
            else if (npc.type == 199)
            {
                if (npc.velocity.X < -4f || npc.velocity.X > 4f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < 4f && npc.direction == 1)
                {
                    if (npc.velocity.Y == 0f && npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.8f;
                    }
                    npc.velocity.X = npc.velocity.X + 0.1f;
                    if (npc.velocity.X > 4f)
                    {
                        npc.velocity.X = 4f;
                    }
                }
                else if (npc.velocity.X > -4f && npc.direction == -1)
                {
                    if (npc.velocity.Y == 0f && npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.8f;
                    }
                    npc.velocity.X = npc.velocity.X - 0.1f;
                    if (npc.velocity.X < -4f)
                    {
                        npc.velocity.X = -4f;
                    }
                }
            }
            else if (npc.type == 120 || npc.type == 166 || npc.type == 213 || npc.type == 258 || npc.type == 528 || npc.type == 529)
            {
                if (npc.velocity.X < -3f || npc.velocity.X > 3f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < 3f && npc.direction == 1)
                {
                    if (npc.velocity.Y == 0f && npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.99f;
                    }
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > 3f)
                    {
                        npc.velocity.X = 3f;
                    }
                }
                else if (npc.velocity.X > -3f && npc.direction == -1)
                {
                    if (npc.velocity.Y == 0f && npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.99f;
                    }
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -3f)
                    {
                        npc.velocity.X = -3f;
                    }
                }
            }
            else if (npc.type == 461 || npc.type == 27 || npc.type == 77 || npc.type == 104 || npc.type == 163 || npc.type == 162 || npc.type == 196 || npc.type == 197 || npc.type == 212 || npc.type == 257 || npc.type == 326 || npc.type == 343 || npc.type == 348 || npc.type == 351 || (npc.type >= 524 && npc.type <= 527) || npc.type == 530)
            {
                if (npc.velocity.X < -2f || npc.velocity.X > 2f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < 2f && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                }
                else if (npc.velocity.X > -2f && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                }
            }
            else if (npc.type == 109)
            {
                if (npc.velocity.X < -2f || npc.velocity.X > 2f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < 2f && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + 0.04f;
                    if (npc.velocity.X > 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                }
                else if (npc.velocity.X > -2f && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - 0.04f;
                    if (npc.velocity.X < -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                }
            }
            else if (npc.type == 21 || npc.type == 26 || npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 47 || npc.type == 73 || npc.type == 140 || npc.type == 164 || npc.type == 239 || npc.type == 167 || npc.type == 168 || npc.type == 185 || npc.type == 198 || npc.type == 201 || npc.type == 202 || npc.type == 203 || npc.type == 217 || npc.type == 218 || npc.type == 219 || npc.type == 226 || npc.type == 181 || npc.type == 254 || npc.type == 338 || npc.type == 339 || npc.type == 340 || npc.type == 342 || npc.type == 385 || npc.type == 389 || npc.type == 462 || npc.type == 463 || npc.type == 466 || npc.type == 464 || npc.type == 469 || npc.type == 470 || npc.type == 480 || npc.type == 482 || npc.type == 425 || npc.type == 429)
            {
                float num56 = 1.5f;
                if (npc.type == 294)
                {
                    num56 = 2f;
                }
                else if (npc.type == 295)
                {
                    num56 = 1.75f;
                }
                else if (npc.type == 296)
                {
                    num56 = 1.25f;
                }
                else if (npc.type == 201)
                {
                    num56 = 1.1f;
                }
                else if (npc.type == 202)
                {
                    num56 = 0.9f;
                }
                else if (npc.type == 203)
                {
                    num56 = 1.2f;
                }
                else if (npc.type == 338)
                {
                    num56 = 1.75f;
                }
                else if (npc.type == 339)
                {
                    num56 = 1.25f;
                }
                else if (npc.type == 340)
                {
                    num56 = 2f;
                }
                else if (npc.type == 385)
                {
                    num56 = 1.8f;
                }
                else if (npc.type == 389)
                {
                    num56 = 2.25f;
                }
                else if (npc.type == 462)
                {
                    num56 = 4f;
                }
                else if (npc.type == 463)
                {
                    num56 = 0.75f;
                }
                else if (npc.type == 466)
                {
                    num56 = 3.75f;
                }
                else if (npc.type == 469)
                {
                    num56 = 3.25f;
                }
                else if (npc.type == 480)
                {
                    num56 = 1.5f + (1f - (float)npc.life / (float)npc.lifeMax) * 2f;
                }
                else if (npc.type == 425)
                {
                    num56 = 6f;
                }
                else if (npc.type == 429)
                {
                    num56 = 4f;
                }
                if (npc.type == 21 || npc.type == 201 || npc.type == 202 || npc.type == 203 || npc.type == 342)
                {
                    num56 *= 1f + (1f - npc.scale);
                }
                if (npc.velocity.X < -num56 || npc.velocity.X > num56)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < num56 && npc.direction == 1)
                {
                    if (npc.type == 466 && npc.velocity.X < -2f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > num56)
                    {
                        npc.velocity.X = num56;
                    }
                }
                else if (npc.velocity.X > -num56 && npc.direction == -1)
                {
                    if (npc.type == 466 && npc.velocity.X > 2f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -num56)
                    {
                        npc.velocity.X = -num56;
                    }
                }
                if (npc.velocity.Y == 0f && npc.type == 462 && ((npc.direction > 0 && npc.velocity.X < 0f) || (npc.direction < 0 && npc.velocity.X > 0f)))
                {
                    npc.velocity.X = npc.velocity.X * 0.9f;
                }
            }
            else if (npc.type >= 269 && npc.type <= 280)
            {
                float num57 = 1.5f;
                if (npc.type == 269)
                {
                    num57 = 2f;
                }
                if (npc.type == 270)
                {
                    num57 = 1f;
                }
                if (npc.type == 271)
                {
                    num57 = 1.5f;
                }
                if (npc.type == 272)
                {
                    num57 = 3f;
                }
                if (npc.type == 273)
                {
                    num57 = 1.25f;
                }
                if (npc.type == 274)
                {
                    num57 = 3f;
                }
                if (npc.type == 275)
                {
                    num57 = 3.25f;
                }
                if (npc.type == 276)
                {
                    num57 = 2f;
                }
                if (npc.type == 277)
                {
                    num57 = 2.75f;
                }
                if (npc.type == 278)
                {
                    num57 = 1.8f;
                }
                if (npc.type == 279)
                {
                    num57 = 1.3f;
                }
                if (npc.type == 280)
                {
                    num57 = 2.5f;
                }
                num57 *= 1f + (1f - npc.scale);
                if (npc.velocity.X < -num57 || npc.velocity.X > num57)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < num57 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > num57)
                    {
                        npc.velocity.X = num57;
                    }
                }
                else if (npc.velocity.X > -num57 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -num57)
                    {
                        npc.velocity.X = -num57;
                    }
                }
            }
            else if (npc.type >= 305 && npc.type <= 314)
            {
                float num58 = 1.5f;
                if (npc.type == 305 || npc.type == 310)
                {
                    num58 = 2f;
                }
                if (npc.type == 306 || npc.type == 311)
                {
                    num58 = 1.25f;
                }
                if (npc.type == 307 || npc.type == 312)
                {
                    num58 = 2.25f;
                }
                if (npc.type == 308 || npc.type == 313)
                {
                    num58 = 1.5f;
                }
                if (npc.type == 309 || npc.type == 314)
                {
                    num58 = 1f;
                }
                if (npc.type < 310)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.85f;
                        if ((double)npc.velocity.X > -0.3 && (double)npc.velocity.X < 0.3)
                        {
                            npc.velocity.Y = -7f;
                            npc.velocity.X = num58 * (float)npc.direction;
                        }
                    }
                    else if (npc.spriteDirection == npc.direction)
                    {
                        npc.velocity.X = (npc.velocity.X * 10f + num58 * (float)npc.direction) / 11f;
                    }
                }
                else if (npc.velocity.X < -num58 || npc.velocity.X > num58)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < num58 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > num58)
                    {
                        npc.velocity.X = num58;
                    }
                }
                else if (npc.velocity.X > -num58 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -num58)
                    {
                        npc.velocity.X = -num58;
                    }
                }
            }
            else if (npc.type == 67 || npc.type == 220 || npc.type == 428)
            {
                if (npc.velocity.X < -0.5f || npc.velocity.X > 0.5f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.7f;
                    }
                }
                else if (npc.velocity.X < 0.5f && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + 0.03f;
                    if (npc.velocity.X > 0.5f)
                    {
                        npc.velocity.X = 0.5f;
                    }
                }
                else if (npc.velocity.X > -0.5f && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - 0.03f;
                    if (npc.velocity.X < -0.5f)
                    {
                        npc.velocity.X = -0.5f;
                    }
                }
            }
            else if (npc.type == 78 || npc.type == 79 || npc.type == 80)
            {
                float num59 = 1f;
                float num60 = 0.05f;
                if (npc.life < npc.lifeMax / 2)
                {
                    num59 = 2f;
                    num60 = 0.1f;
                }
                if (npc.type == 79)
                {
                    num59 *= 1.5f;
                }
                if (npc.velocity.X < -num59 || npc.velocity.X > num59)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.7f;
                    }
                }
                else if (npc.velocity.X < num59 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + num60;
                    if (npc.velocity.X > num59)
                    {
                        npc.velocity.X = num59;
                    }
                }
                else if (npc.velocity.X > -num59 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - num60;
                    if (npc.velocity.X < -num59)
                    {
                        npc.velocity.X = -num59;
                    }
                }
            }
            else if (npc.type == 287)
            {
                float num61 = 5f;
                float num62 = 0.2f;
                if (npc.velocity.X < -num61 || npc.velocity.X > num61)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.7f;
                    }
                }
                else if (npc.velocity.X < num61 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + num62;
                    if (npc.velocity.X > num61)
                    {
                        npc.velocity.X = num61;
                    }
                }
                else if (npc.velocity.X > -num61 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - num62;
                    if (npc.velocity.X < -num61)
                    {
                        npc.velocity.X = -num61;
                    }
                }
            }
            else if (npc.type == 243)
            {
                float num63 = 1f;
                float num64 = 0.07f;
                num63 += (1f - (float)npc.life / (float)npc.lifeMax) * 1.5f;
                num64 += (1f - (float)npc.life / (float)npc.lifeMax) * 0.15f;
                if (npc.velocity.X < -num63 || npc.velocity.X > num63)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.7f;
                    }
                }
                else if (npc.velocity.X < num63 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + num64;
                    if (npc.velocity.X > num63)
                    {
                        npc.velocity.X = num63;
                    }
                }
                else if (npc.velocity.X > -num63 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - num64;
                    if (npc.velocity.X < -num63)
                    {
                        npc.velocity.X = -num63;
                    }
                }
            }
            else if (npc.type == 251)
            {
                float num65 = 1f;
                float num66 = 0.08f;
                num65 += (1f - (float)npc.life / (float)npc.lifeMax) * 2f;
                num66 += (1f - (float)npc.life / (float)npc.lifeMax) * 0.2f;
                if (npc.velocity.X < -num65 || npc.velocity.X > num65)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.7f;
                    }
                }
                else if (npc.velocity.X < num65 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + num66;
                    if (npc.velocity.X > num65)
                    {
                        npc.velocity.X = num65;
                    }
                }
                else if (npc.velocity.X > -num65 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - num66;
                    if (npc.velocity.X < -num65)
                    {
                        npc.velocity.X = -num65;
                    }
                }
            }
            else if (npc.type == 386)
            {
                if (npc.ai[2] > 0f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.8f;
                    }
                }
                else
                {
                    float num67 = 0.15f;
                    float num68 = 1.5f;
                    if (npc.velocity.X < -num68 || npc.velocity.X > num68)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                    }
                    else if (npc.velocity.X < num68 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num67;
                        if (npc.velocity.X > num68)
                        {
                            npc.velocity.X = num68;
                        }
                    }
                    else if (npc.velocity.X > -num68 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num67;
                        if (npc.velocity.X < -num68)
                        {
                            npc.velocity.X = -num68;
                        }
                    }
                }
            }
            else if (npc.type == 460)
            {
                float num69 = 3f;
                float num70 = 0.1f;
                if (Math.Abs(npc.velocity.X) > 2f)
                {
                    num70 *= 0.8f;
                }
                if ((double)Math.Abs(npc.velocity.X) > 2.5)
                {
                    num70 *= 0.8f;
                }
                if (Math.Abs(npc.velocity.X) > 3f)
                {
                    num70 *= 0.8f;
                }
                if ((double)Math.Abs(npc.velocity.X) > 3.5)
                {
                    num70 *= 0.8f;
                }
                if (Math.Abs(npc.velocity.X) > 4f)
                {
                    num70 *= 0.8f;
                }
                if ((double)Math.Abs(npc.velocity.X) > 4.5)
                {
                    num70 *= 0.8f;
                }
                if (Math.Abs(npc.velocity.X) > 5f)
                {
                    num70 *= 0.8f;
                }
                if ((double)Math.Abs(npc.velocity.X) > 5.5)
                {
                    num70 *= 0.8f;
                }
                num69 += (1f - (float)npc.life / (float)npc.lifeMax) * 3f;
                if (npc.velocity.X < -num69 || npc.velocity.X > num69)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.7f;
                    }
                }
                else if (npc.velocity.X < num69 && npc.direction == 1)
                {
                    if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.93f;
                    }
                    npc.velocity.X = npc.velocity.X + num70;
                    if (npc.velocity.X > num69)
                    {
                        npc.velocity.X = num69;
                    }
                }
                else if (npc.velocity.X > -num69 && npc.direction == -1)
                {
                    if (npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.93f;
                    }
                    npc.velocity.X = npc.velocity.X - num70;
                    if (npc.velocity.X < -num69)
                    {
                        npc.velocity.X = -num69;
                    }
                }
            }
            else if (npc.type == 508)
            {
                float num71 = 2.5f;
                float num72 = 40f;
                float num73 = Math.Abs(npc.velocity.X);
                if (num73 > 2.75f)
                {
                    num71 = 3.5f;
                    num72 += 80f;
                }
                else if ((double)num73 > 2.25)
                {
                    num71 = 3f;
                    num72 += 60f;
                }
                if ((double)Math.Abs(npc.velocity.Y) < 0.5)
                {
                    if (npc.velocity.X > 0f && npc.direction < 0)
                    {
                        npc.velocity *= 0.9f;
                    }
                    if (npc.velocity.X < 0f && npc.direction > 0)
                    {
                        npc.velocity *= 0.9f;
                    }
                }
                if (Math.Abs(npc.velocity.Y) > NPC.gravity)
                {
                    num72 *= 3f;
                }
                if (npc.velocity.X <= 0f && npc.direction < 0)
                {
                    npc.velocity.X = (npc.velocity.X * num72 - num71) / (num72 + 1f);
                }
                else if (npc.velocity.X >= 0f && npc.direction > 0)
                {
                    npc.velocity.X = (npc.velocity.X * num72 + num71) / (num72 + 1f);
                }
                else if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) > 20f && Math.Abs(npc.velocity.Y) <= NPC.gravity)
                {
                    npc.velocity.X = npc.velocity.X * 0.99f;
                    npc.velocity.X = npc.velocity.X + (float)npc.direction * 0.025f;
                }
            }
            else if (npc.type == 391 || npc.type == 427 || npc.type == 415 || npc.type == 419 || npc.type == 518 || npc.type == 532)
            {
                float num74 = 5f;
                float num75 = 0.25f;
                float scaleFactor5 = 0.7f;
                if (npc.type == 427)
                {
                    num74 = 6f;
                    num75 = 0.2f;
                    scaleFactor5 = 0.8f;
                }
                else if (npc.type == 415)
                {
                    num74 = 4f;
                    num75 = 0.1f;
                    scaleFactor5 = 0.95f;
                }
                else if (npc.type == 419)
                {
                    num74 = 6f;
                    num75 = 0.15f;
                    scaleFactor5 = 0.85f;
                }
                else if (npc.type == 518)
                {
                    num74 = 5f;
                    num75 = 0.1f;
                    scaleFactor5 = 0.95f;
                }
                else if (npc.type == 532)
                {
                    num74 = 5f;
                    num75 = 0.15f;
                    scaleFactor5 = 0.98f;
                }
                if (npc.velocity.X < -num74 || npc.velocity.X > num74)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= scaleFactor5;
                    }
                }
                else if (npc.velocity.X < num74 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + num75;
                    if (npc.velocity.X > num74)
                    {
                        npc.velocity.X = num74;
                    }
                }
                else if (npc.velocity.X > -num74 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - num75;
                    if (npc.velocity.X < -num74)
                    {
                        npc.velocity.X = -num74;
                    }
                }
            }
            else if ((npc.type >= 430 && npc.type <= 436) || npc.type == 494 || npc.type == 495)
            {
                if (npc.ai[2] == 0f)
                {
                    npc.damage = npc.defDamage;
                    float num76 = 1f;
                    num76 *= 1f + (1f - npc.scale);
                    if (npc.velocity.X < -num76 || npc.velocity.X > num76)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num76 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > num76)
                        {
                            npc.velocity.X = num76;
                        }
                    }
                    else if (npc.velocity.X > -num76 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -num76)
                        {
                            npc.velocity.X = -num76;
                        }
                    }
                    if (npc.velocity.Y == 0f && (!Main.dayTime || (double)npc.position.Y > Main.worldSurface * 16.0) && !Main.player[npc.target].dead)
                    {
                        Vector2 vector13 = npc.Center - Main.player[npc.target].Center;
                        int num77 = 50;
                        if (npc.type >= 494 && npc.type <= 495)
                        {
                            num77 = 42;
                        }
                        if (vector13.Length() < (float)num77 && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            npc.velocity.X = npc.velocity.X * 0.7f;
                            npc.ai[2] = 1f;
                        }
                    }
                }
                else
                {
                    npc.damage = (int)((double)npc.defDamage * 1.5);
                    npc.ai[3] = 1f;
                    npc.velocity.X = npc.velocity.X * 0.9f;
                    if ((double)Math.Abs(npc.velocity.X) < 0.1)
                    {
                        npc.velocity.X = 0f;
                    }
                    npc.ai[2] += 1f;
                    if (npc.ai[2] >= 20f || npc.velocity.Y != 0f || (Main.dayTime && (double)npc.position.Y < Main.worldSurface * 16.0))
                    {
                        npc.ai[2] = 0f;
                    }
                }
            }
            else if (npc.type != 110 && npc.type != 111 && npc.type != 206 && npc.type != 214 && npc.type != 215 && npc.type != 216 && npc.type != 290 && npc.type != 291 && npc.type != 292 && npc.type != 293 && npc.type != 350 && npc.type != 379 && npc.type != 380 && npc.type != 381 && npc.type != 382 && (npc.type < 449 || npc.type > 452) && npc.type != 468 && npc.type != 481 && npc.type != 411 && npc.type != 409 && (npc.type < 498 || npc.type > 506) && npc.type != 424 && npc.type != 426 && npc.type != 520)
            {
                float num78 = 1f;
                if (npc.type == 186)
                {
                    num78 = 1.1f;
                }
                if (npc.type == 187)
                {
                    num78 = 0.9f;
                }
                if (npc.type == 188)
                {
                    num78 = 1.2f;
                }
                if (npc.type == 189)
                {
                    num78 = 0.8f;
                }
                if (npc.type == 132)
                {
                    num78 = 0.95f;
                }
                if (npc.type == 200)
                {
                    num78 = 0.87f;
                }
                if (npc.type == 223)
                {
                    num78 = 1.05f;
                }
                if (npc.type == 489)
                {
                    float num79 = (Main.player[npc.target].Center - npc.Center).Length();
                    num79 *= 0.0025f;
                    if ((double)num79 > 1.5)
                    {
                        num79 = 1.5f;
                    }
                    if (Main.expertMode)
                    {
                        num78 = 3f - num79;
                    }
                    else
                    {
                        num78 = 2.5f - num79;
                    }
                    num78 *= 0.8f;
                }
                if (npc.type == 489 || npc.type == 3 || npc.type == 132 || npc.type == 186 || npc.type == 187 || npc.type == 188 || npc.type == 189 || npc.type == 200 || npc.type == 223 || npc.type == 331 || npc.type == 332)
                {
                    num78 *= 1f + (1f - npc.scale);
                }
                if (npc.velocity.X < -num78 || npc.velocity.X > num78)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < num78 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + 0.07f;
                    if (npc.velocity.X > num78)
                    {
                        npc.velocity.X = num78;
                    }
                }
                else if (npc.velocity.X > -num78 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - 0.07f;
                    if (npc.velocity.X < -num78)
                    {
                        npc.velocity.X = -num78;
                    }
                }
            }
            if (npc.type >= 277 && npc.type <= 280)
            {
                Lighting.AddLight((int)npc.Center.X / 16, (int)npc.Center.Y / 16, 0.2f, 0.1f, 0f);
            }
            else if (npc.type == 520)
            {
                Lighting.AddLight(npc.Top + new Vector2(0f, 20f), 0.3f, 0.3f, 0.7f);
            }
            else if (npc.type == 525)
            {
                Vector3 rgb = new Vector3(0.7f, 1f, 0.2f) * 0.5f;
                Lighting.AddLight(npc.Top + new Vector2(0f, 15f), rgb);
            }
            else if (npc.type == 526)
            {
                Vector3 rgb2 = new Vector3(1f, 1f, 0.5f) * 0.4f;
                Lighting.AddLight(npc.Top + new Vector2(0f, 15f), rgb2);
            }
            else if (npc.type == 527)
            {
                Vector3 rgb3 = new Vector3(0.6f, 0.3f, 1f) * 0.4f;
                Lighting.AddLight(npc.Top + new Vector2(0f, 15f), rgb3);
            }
            else if (npc.type == 415)
            {
                npc.hide = false;
                for (int num80 = 0; num80 < 200; num80++)
                {
                    if (Main.npc[num80].active && Main.npc[num80].type == 416 && Main.npc[num80].ai[0] == (float)npc.whoAmI)
                    {
                        npc.hide = true;
                        break;
                    }
                }
            }
            else if (npc.type == 258)
            {
                if (npc.velocity.Y != 0f)
                {
                    npc.TargetClosest(true);
                    npc.spriteDirection = npc.direction;
                    if (Main.player[npc.target].Center.X < npc.position.X && npc.velocity.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    else if (Main.player[npc.target].Center.X > npc.position.X + (float)npc.width && npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    if (Main.player[npc.target].Center.X < npc.position.X && npc.velocity.X > -5f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                    }
                    else if (Main.player[npc.target].Center.X > npc.position.X + (float)npc.width && npc.velocity.X < 5f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                    }
                }
                else if (Main.player[npc.target].Center.Y + 50f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    npc.velocity.Y = -7f;
                }
            }
            else if (npc.type == 425)
            {
                if (npc.velocity.Y == 0f)
                {
                    npc.ai[2] = 0f;
                }
                if (npc.velocity.Y != 0f && npc.ai[2] == 1f)
                {
                    npc.TargetClosest(true);
                    npc.spriteDirection = -npc.direction;
                    if (Collision.CanHit(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                    {
                        float num81 = Main.player[npc.target].Center.X - (float)(npc.direction * 400) - npc.Center.X;
                        float num82 = Main.player[npc.target].Bottom.Y - npc.Bottom.Y;
                        if (num81 < 0f && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        else if (num81 > 0f && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                        }
                        if (num81 < 0f && npc.velocity.X > -5f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else if (num81 > 0f && npc.velocity.X < 5f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                        if (num82 < -20f && npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.8f;
                        }
                        else if (num82 > 20f && npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.8f;
                        }
                        if (num82 < -20f && npc.velocity.Y > -5f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.3f;
                        }
                        else if (num82 > 20f && npc.velocity.Y < 5f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.3f;
                        }
                    }
                    if (Main.rand.Next(3) == 0)
                    {
                        Vector2 position = npc.Center + new Vector2((float)(npc.direction * -14), -8f) - Vector2.One * 4f;
                        Vector2 vector14 = new Vector2((float)(npc.direction * -6), 12f) * 0.2f + Utils.RandomVector2(Main.rand, -1f, 1f) * 0.1f;
                        Dust expr_70AD = Main.dust[Dust.NewDust(position, 8, 8, 229, vector14.X, vector14.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 0.5f)];
                        expr_70AD.noGravity = true;
                        expr_70AD.velocity = vector14;
                        expr_70AD.customData = npc;
                    }
                    for (int num83 = 0; num83 < 200; num83++)
                    {
                        if (num83 != npc.whoAmI && Main.npc[num83].active && Main.npc[num83].type == npc.type && Math.Abs(npc.position.X - Main.npc[num83].position.X) + Math.Abs(npc.position.Y - Main.npc[num83].position.Y) < (float)npc.width)
                        {
                            if (npc.position.X < Main.npc[num83].position.X)
                            {
                                npc.velocity.X = npc.velocity.X - 0.05f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X + 0.05f;
                            }
                            if (npc.position.Y < Main.npc[num83].position.Y)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                        }
                    }
                }
                else if (Main.player[npc.target].Center.Y + 100f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    npc.velocity.Y = -5f;
                    npc.ai[2] = 1f;
                }
                if (Main.netMode != 1)
                {
                    npc.localAI[2] += 1f;
                    if (npc.localAI[2] >= (float)(360 + Main.rand.Next(360)) && npc.Distance(Main.player[npc.target].Center) < 400f && Math.Abs(npc.DirectionTo(Main.player[npc.target].Center).Y) < 0.5f && Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                    {
                        npc.localAI[2] = 0f;
                        Vector2 vector15 = npc.Center + new Vector2((float)(npc.direction * 30), 2f);
                        Vector2 vector16 = npc.DirectionTo(Main.player[npc.target].Center) * 7f;
                        if (vector16.HasNaNs())
                        {
                            vector16 = new Vector2((float)(npc.direction * 8), 0f);
                        }
                        int num84 = Main.expertMode ? 50 : 75;
                        for (int num85 = 0; num85 < 4; num85++)
                        {
                            Vector2 vector17 = vector16 + Utils.RandomVector2(Main.rand, -0.8f, 0.8f);
                            Projectile.NewProjectile(vector15.X, vector15.Y, vector17.X, vector17.Y, 577, num84, 1f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
            }
            else if (npc.type == 427)
            {
                if (npc.velocity.Y == 0f)
                {
                    npc.ai[2] = 0f;
                    npc.rotation = 0f;
                }
                else
                {
                    npc.rotation = npc.velocity.X * 0.1f;
                }
                if (npc.velocity.Y != 0f && npc.ai[2] == 1f)
                {
                    npc.TargetClosest(true);
                    npc.spriteDirection = -npc.direction;
                    if (Collision.CanHit(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                    {
                        float num86 = Main.player[npc.target].Center.X - npc.Center.X;
                        float num87 = Main.player[npc.target].Center.Y - npc.Center.Y;
                        if (num86 < 0f && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.98f;
                        }
                        else if (num86 > 0f && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.98f;
                        }
                        if (num86 < -20f && npc.velocity.X > -6f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.015f;
                        }
                        else if (num86 > 20f && npc.velocity.X < 6f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.015f;
                        }
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                        if (num87 < -20f && npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.98f;
                        }
                        else if (num87 > 20f && npc.velocity.Y < 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y * 0.98f;
                        }
                        if (num87 < -20f && npc.velocity.Y > -6f)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.15f;
                        }
                        else if (num87 > 20f && npc.velocity.Y < 6f)
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.15f;
                        }
                    }
                    for (int num88 = 0; num88 < 200; num88++)
                    {
                        if (num88 != npc.whoAmI && Main.npc[num88].active && Main.npc[num88].type == npc.type && Math.Abs(npc.position.X - Main.npc[num88].position.X) + Math.Abs(npc.position.Y - Main.npc[num88].position.Y) < (float)npc.width)
                        {
                            if (npc.position.X < Main.npc[num88].position.X)
                            {
                                npc.velocity.X = npc.velocity.X - 0.05f;
                            }
                            else
                            {
                                npc.velocity.X = npc.velocity.X + 0.05f;
                            }
                            if (npc.position.Y < Main.npc[num88].position.Y)
                            {
                                npc.velocity.Y = npc.velocity.Y - 0.05f;
                            }
                            else
                            {
                                npc.velocity.Y = npc.velocity.Y + 0.05f;
                            }
                        }
                    }
                }
                else if (Main.player[npc.target].Center.Y + 100f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    npc.velocity.Y = -5f;
                    npc.ai[2] = 1f;
                }
            }
            else if (npc.type == 426)
            {
                if (npc.ai[1] > 0f && npc.velocity.Y > 0f)
                {
                    npc.velocity.Y = npc.velocity.Y * 0.85f;
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity.Y = -0.4f;
                    }
                }
                if (npc.velocity.Y != 0f)
                {
                    npc.TargetClosest(true);
                    npc.spriteDirection = npc.direction;
                    if (Collision.CanHit(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                    {
                        float num89 = Main.player[npc.target].Center.X - (float)(npc.direction * 300) - npc.Center.X;
                        if (num89 < 40f && npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.98f;
                        }
                        else if (num89 > 40f && npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X * 0.98f;
                        }
                        if (num89 < 40f && npc.velocity.X > -5f)
                        {
                            npc.velocity.X = npc.velocity.X - 0.2f;
                        }
                        else if (num89 > 40f && npc.velocity.X < 5f)
                        {
                            npc.velocity.X = npc.velocity.X + 0.2f;
                        }
                        if (npc.velocity.X > 6f)
                        {
                            npc.velocity.X = 6f;
                        }
                        if (npc.velocity.X < -6f)
                        {
                            npc.velocity.X = -6f;
                        }
                    }
                }
                else if (Main.player[npc.target].Center.Y + 100f < npc.position.Y && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    npc.velocity.Y = -6f;
                }
                for (int num90 = 0; num90 < 200; num90++)
                {
                    if (num90 != npc.whoAmI && Main.npc[num90].active && Main.npc[num90].type == npc.type && Math.Abs(npc.position.X - Main.npc[num90].position.X) + Math.Abs(npc.position.Y - Main.npc[num90].position.Y) < (float)npc.width)
                    {
                        if (npc.position.X < Main.npc[num90].position.X)
                        {
                            npc.velocity.X = npc.velocity.X - 0.1f;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + 0.1f;
                        }
                        if (npc.position.Y < Main.npc[num90].position.Y)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.1f;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.1f;
                        }
                    }
                }
                if (Main.rand.Next(6) == 0 && npc.ai[1] <= 20f)
                {
                    Dust expr_7CF3 = Main.dust[Dust.NewDust(npc.Center + new Vector2((float)((npc.spriteDirection == 1) ? 8 : -20), -20f), 8, 8, 229, npc.velocity.X, npc.velocity.Y, 100, default(Color), 1f)];
                    expr_7CF3.velocity = expr_7CF3.velocity / 4f + npc.velocity / 2f;
                    expr_7CF3.scale = 0.6f;
                    expr_7CF3.noLight = true;
                }
                if (npc.ai[1] >= 57f)
                {
                    int num91 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						161,
						229
					});
                    Dust expr_7DBD = Main.dust[Dust.NewDust(npc.Center + new Vector2((float)((npc.spriteDirection == 1) ? 8 : -20), -20f), 8, 8, num91, npc.velocity.X, npc.velocity.Y, 100, default(Color), 1f)];
                    expr_7DBD.velocity = expr_7DBD.velocity / 4f + npc.DirectionTo(Main.player[npc.target].Top);
                    expr_7DBD.scale = 1.2f;
                    expr_7DBD.noLight = true;
                }
                if (Main.rand.Next(6) == 0)
                {
                    Dust dust2 = Main.dust[Dust.NewDust(npc.Center, 2, 2, 229, 0f, 0f, 0, default(Color), 1f)];
                    dust2.position = npc.Center + new Vector2((float)((npc.spriteDirection == 1) ? 26 : -26), 24f);
                    dust2.velocity.X = 0f;
                    if (dust2.velocity.Y < 0f)
                    {
                        dust2.velocity.Y = 0f;
                    }
                    dust2.noGravity = true;
                    dust2.scale = 1f;
                    dust2.noLight = true;
                }
            }
            else if (npc.type == 185)
            {
                if (npc.velocity.Y == 0f)
                {
                    npc.rotation = 0f;
                    npc.localAI[0] = 0f;
                }
                else if (npc.localAI[0] == 1f)
                {
                    npc.rotation += npc.velocity.X * 0.05f;
                }
            }
            else if (npc.type == 428)
            {
                if (npc.velocity.Y == 0f)
                {
                    npc.rotation = 0f;
                }
                else
                {
                    npc.rotation += npc.velocity.X * 0.08f;
                }
            }
            if (npc.type == 159 && Main.netMode != 1)
            {
                Vector2 vector18 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                float arg_803C_0 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector18.X;
                float num92 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector18.Y;
                if ((float)Math.Sqrt((double)(arg_803C_0 * arg_803C_0 + num92 * num92)) > 300f)
                {
                    npc.Transform(158);
                }
            }
            if (npc.type == 164 && Main.netMode != 1 && npc.velocity.Y == 0f)
            {
                int num93 = (int)npc.Center.X / 16;
                int num94 = (int)npc.Center.Y / 16;
                bool flag9 = false;
                for (int num95 = num93 - 1; num95 <= num93 + 1; num95++)
                {
                    for (int num96 = num94 - 1; num96 <= num94 + 1; num96++)
                    {
                        if (Main.tile[num95, num96].wall > 0)
                        {
                            flag9 = true;
                        }
                    }
                }
                if (flag9)
                {
                    npc.Transform(165);
                }
            }
            if (npc.type == 239 && Main.netMode != 1 && npc.velocity.Y == 0f)
            {
                int num97 = (int)npc.Center.X / 16;
                int num98 = (int)npc.Center.Y / 16;
                bool flag10 = false;
                for (int num99 = num97 - 1; num99 <= num97 + 1; num99++)
                {
                    for (int num100 = num98 - 1; num100 <= num98 + 1; num100++)
                    {
                        if (Main.tile[num99, num100].wall > 0)
                        {
                            flag10 = true;
                        }
                    }
                }
                if (flag10)
                {
                    npc.Transform(240);
                }
            }
            if (npc.type == 530 && Main.netMode != 1 && npc.velocity.Y == 0f)
            {
                int num101 = (int)npc.Center.X / 16;
                int num102 = (int)npc.Center.Y / 16;
                bool flag11 = false;
                for (int num103 = num101 - 1; num103 <= num101 + 1; num103++)
                {
                    for (int num104 = num102 - 1; num104 <= num102 + 1; num104++)
                    {
                        if (Main.tile[num103, num104].wall > 0)
                        {
                            flag11 = true;
                        }
                    }
                }
                if (flag11)
                {
                    npc.Transform(531);
                }
            }
            if (Main.netMode != 1 && Main.expertMode && npc.target >= 0 && (npc.type == 163 || npc.type == 238) && Collision.CanHit(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
            {
                npc.localAI[0] += 1f;
                if (npc.justHit)
                {
                    npc.localAI[0] -= (float)Main.rand.Next(20, 60);
                    if (npc.localAI[0] < 0f)
                    {
                        npc.localAI[0] = 0f;
                    }
                }
                if (npc.localAI[0] > (float)Main.rand.Next(180, 900))
                {
                    npc.localAI[0] = 0f;
                    Vector2 vector19 = Main.player[npc.target].Center - npc.Center;
                    vector19.Normalize();
                    vector19 *= 8f;
                    Projectile.NewProjectile(npc.Center.X, npc.Center.Y, vector19.X, vector19.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
                }
            }
            if (npc.type == 163 && Main.netMode != 1 && npc.velocity.Y == 0f)
            {
                int num105 = (int)npc.Center.X / 16;
                int num106 = (int)npc.Center.Y / 16;
                bool flag12 = false;
                for (int num107 = num105 - 1; num107 <= num105 + 1; num107++)
                {
                    for (int num108 = num106 - 1; num108 <= num106 + 1; num108++)
                    {
                        if (Main.tile[num107, num108].wall > 0)
                        {
                            flag12 = true;
                        }
                    }
                }
                if (flag12)
                {
                    npc.Transform(238);
                }
            }
            if (npc.type == 236 && Main.netMode != 1 && npc.velocity.Y == 0f)
            {
                int num109 = (int)npc.Center.X / 16;
                int num110 = (int)npc.Center.Y / 16;
                bool flag13 = false;
                for (int num111 = num109 - 1; num111 <= num109 + 1; num111++)
                {
                    for (int num112 = num110 - 1; num112 <= num110 + 1; num112++)
                    {
                        if (Main.tile[num111, num112].wall > 0)
                        {
                            flag13 = true;
                        }
                    }
                }
                if (flag13)
                {
                    npc.Transform(237);
                }
            }
            if (npc.type == 243)
            {
                if (npc.justHit && Main.rand.Next(3) == 0)
                {
                    npc.ai[2] -= (float)Main.rand.Next(30);
                }
                if (npc.ai[2] < 0f)
                {
                    npc.ai[2] = 0f;
                }
                if (npc.confused)
                {
                    npc.ai[2] = 0f;
                }
                npc.ai[2] += 1f;
                float num113 = (float)Main.rand.Next(30, 900);
                num113 *= (float)npc.life / (float)npc.lifeMax;
                num113 += 30f;
                if (Main.netMode != 1 && npc.ai[2] >= num113 && npc.velocity.Y == 0f && !Main.player[npc.target].dead && !Main.player[npc.target].frozen && ((npc.direction > 0 && npc.Center.X < Main.player[npc.target].Center.X) || (npc.direction < 0 && npc.Center.X > Main.player[npc.target].Center.X)) && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    float arg_87C1_0 = 15f;
                    Vector2 vector20 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + 20f);
                    vector20.X += (float)(10 * npc.direction);
                    float num114 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector20.X;
                    float num115 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector20.Y;
                    num114 += (float)Main.rand.Next(-40, 41);
                    num115 += (float)Main.rand.Next(-40, 41);
                    float num116 = (float)Math.Sqrt((double)(num114 * num114 + num115 * num115));
                    npc.netUpdate = true;
                    num116 = arg_87C1_0 / num116;
                    num114 *= num116;
                    num115 *= num116;
                    int num117 = 32;
                    int num118 = 257;
                    vector20.X += num114 * 3f;
                    vector20.Y += num115 * 3f;
                    Projectile.NewProjectile(vector20.X, vector20.Y, num114, num115, num118, num117, 0f, Main.myPlayer, 0f, 0f);
                    npc.ai[2] = 0f;
                }
            }
            if (npc.type == 251)
            {
                if (npc.justHit)
                {
                    npc.ai[2] -= (float)Main.rand.Next(30);
                }
                if (npc.ai[2] < 0f)
                {
                    npc.ai[2] = 0f;
                }
                if (npc.confused)
                {
                    npc.ai[2] = 0f;
                }
                npc.ai[2] += 1f;
                float num119 = (float)Main.rand.Next(60, 1800);
                num119 *= (float)npc.life / (float)npc.lifeMax;
                num119 += 15f;
                if (Main.netMode != 1 && npc.ai[2] >= num119 && npc.velocity.Y == 0f && !Main.player[npc.target].dead && !Main.player[npc.target].frozen && ((npc.direction > 0 && npc.Center.X < Main.player[npc.target].Center.X) || (npc.direction < 0 && npc.Center.X > Main.player[npc.target].Center.X)) && Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    float arg_8AF5_0 = 15f;
                    Vector2 vector21 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + 12f);
                    vector21.X += (float)(6 * npc.direction);
                    float num120 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector21.X;
                    float num121 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector21.Y;
                    num120 += (float)Main.rand.Next(-40, 41);
                    num121 += (float)Main.rand.Next(-30, 0);
                    float num122 = (float)Math.Sqrt((double)(num120 * num120 + num121 * num121));
                    npc.netUpdate = true;
                    num122 = arg_8AF5_0 / num122;
                    num120 *= num122;
                    num121 *= num122;
                    int num123 = 30;
                    int num124 = 83;
                    vector21.X += num120 * 3f;
                    vector21.Y += num121 * 3f;
                    Projectile.NewProjectile(vector21.X, vector21.Y, num120, num121, num124, num123, 0f, Main.myPlayer, 0f, 0f);
                    npc.ai[2] = 0f;
                }
            }
            if (npc.type == 386)
            {
                if (npc.confused)
                {
                    npc.ai[2] = -60f;
                }
                else
                {
                    if (npc.ai[2] < 60f)
                    {
                        npc.ai[2] += 1f;
                    }
                    if (npc.ai[2] > 0f && NPC.CountNPCS(387) >= 4 * NPC.CountNPCS(386))
                    {
                        npc.ai[2] = 0f;
                    }
                    if (npc.justHit)
                    {
                        npc.ai[2] = -30f;
                    }
                    if (npc.ai[2] == 30f)
                    {
                        int num125 = (int)npc.position.X / 16;
                        int num126 = (int)npc.position.Y / 16;
                        int num127 = (int)npc.position.X / 16;
                        int num128 = (int)npc.position.Y / 16;
                        int num129 = 5;
                        int num130 = 0;
                        bool flag14 = false;
                        int num131 = 2;
                        int num132 = 0;
                        while (!flag14 && num130 < 100)
                        {
                            num130++;
                            int num133 = Main.rand.Next(num125 - num129, num125 + num129);
                            for (int num134 = Main.rand.Next(num126 - num129, num126 + num129); num134 < num126 + num129; num134++)
                            {
                                if ((num134 < num126 - num131 || num134 > num126 + num131 || num133 < num125 - num131 || num133 > num125 + num131) && (num134 < num128 - num132 || num134 > num128 + num132 || num133 < num127 - num132 || num133 > num127 + num132) && Main.tile[num133, num134].nactive())
                                {
                                    bool flag15 = true;
                                    if (Main.tile[num133, num134 - 1].lava())
                                    {
                                        flag15 = false;
                                    }
                                    if (flag15 && Main.tileSolid[(int)Main.tile[num133, num134].type] && !Collision.SolidTiles(num133 - 1, num133 + 1, num134 - 4, num134 - 1))
                                    {
                                        int num135 = NPC.NewNPC(num133 * 16 - npc.width / 2, num134 * 16, 387, 0, 0f, 0f, 0f, 0f, 255);
                                        Main.npc[num135].position.Y = (float)(num134 * 16 - Main.npc[num135].height);
                                        flag14 = true;
                                        npc.netUpdate = true;
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    if (npc.ai[2] == 60f)
                    {
                        npc.ai[2] = -120f;
                    }
                }
            }
            if (npc.type == 389)
            {
                if (npc.confused)
                {
                    npc.ai[2] = -60f;
                }
                else
                {
                    if (npc.ai[2] < 20f)
                    {
                        npc.ai[2] += 1f;
                    }
                    if (npc.justHit)
                    {
                        npc.ai[2] = -30f;
                    }
                    if (npc.ai[2] == 20f && Main.netMode != 1)
                    {
                        npc.ai[2] = (float)(-10 + Main.rand.Next(3) * -10);
                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y + 8f, (float)(npc.direction * 6), 0f, 437, 25, 1f, Main.myPlayer, 0f, 0f);
                    }
                }
            }
            if (npc.type == 110 || npc.type == 111 || npc.type == 206 || npc.type == 214 || npc.type == 215 || npc.type == 216 || npc.type == 290 || npc.type == 291 || npc.type == 292 || npc.type == 293 || npc.type == 350 || npc.type == 379 || npc.type == 380 || npc.type == 381 || npc.type == 382 || (npc.type >= 449 && npc.type <= 452) || (npc.type == 468 || npc.type == 481 || npc.type == 411 || npc.type == 409 || (npc.type >= 498 && npc.type <= 506)) || npc.type == 424 || npc.type == 426 || npc.type == 520)
            {
                bool flag16 = npc.type == 381 || npc.type == 382 || npc.type == 520;
                bool flag17 = npc.type == 426;
                bool flag18 = true;
                int num136 = -1;
                int num137 = -1;
                if (npc.type == 411)
                {
                    flag16 = true;
                    num136 = 90;
                    num137 = 90;
                    if (npc.ai[1] <= 150f)
                    {
                        flag18 = false;
                    }
                }
                if (npc.confused)
                {
                    npc.ai[2] = 0f;
                }
                else
                {
                    if (npc.ai[1] > 0f)
                    {
                        npc.ai[1] -= 1f;
                    }
                    if (npc.justHit)
                    {
                        npc.ai[1] = 30f;
                        npc.ai[2] = 0f;
                    }
                    int num138 = 70;
                    if (npc.type == 379 || npc.type == 380)
                    {
                        num138 = 80;
                    }
                    if (npc.type == 381 || npc.type == 382)
                    {
                        num138 = 80;
                    }
                    if (npc.type == 520)
                    {
                        num138 = 15;
                    }
                    if (npc.type == 350)
                    {
                        num138 = 110;
                    }
                    if (npc.type == 291)
                    {
                        num138 = 200;
                    }
                    if (npc.type == 292)
                    {
                        num138 = 120;
                    }
                    if (npc.type == 293)
                    {
                        num138 = 90;
                    }
                    if (npc.type == 111)
                    {
                        num138 = 180;
                    }
                    if (npc.type == 206)
                    {
                        num138 = 50;
                    }
                    if (npc.type == 481)
                    {
                        num138 = 100;
                    }
                    if (npc.type == 214)
                    {
                        num138 = 40;
                    }
                    if (npc.type == 215)
                    {
                        num138 = 80;
                    }
                    if (npc.type == 290)
                    {
                        num138 = 30;
                    }
                    if (npc.type == 411)
                    {
                        num138 = 300;
                    }
                    if (npc.type == 409)
                    {
                        num138 = 60;
                    }
                    if (npc.type == 424)
                    {
                        num138 = 180;
                    }
                    if (npc.type == 426)
                    {
                        num138 = 60;
                    }
                    bool flag19 = false;
                    if (npc.type == 216)
                    {
                        if (npc.localAI[2] >= 20f)
                        {
                            flag19 = true;
                        }
                        if (flag19)
                        {
                            num138 = 60;
                        }
                        else
                        {
                            num138 = 8;
                        }
                    }
                    int num139 = num138 / 2;
                    if (npc.type == 424)
                    {
                        num139 = num138 - 1;
                    }
                    if (npc.type == 426)
                    {
                        num139 = num138 - 1;
                    }
                    if (npc.ai[2] > 0f)
                    {
                        if (flag18)
                        {
                            npc.TargetClosest(true);
                        }
                        if (npc.ai[1] == (float)num139)
                        {
                            if (npc.type == 216)
                            {
                                npc.localAI[2] += 1f;
                            }
                            float num140 = 11f;
                            if (npc.type == 111)
                            {
                                num140 = 9f;
                            }
                            if (npc.type == 206)
                            {
                                num140 = 7f;
                            }
                            if (npc.type == 290)
                            {
                                num140 = 9f;
                            }
                            if (npc.type == 293)
                            {
                                num140 = 4f;
                            }
                            if (npc.type == 214)
                            {
                                num140 = 14f;
                            }
                            if (npc.type == 215)
                            {
                                num140 = 16f;
                            }
                            if (npc.type == 382)
                            {
                                num140 = 7f;
                            }
                            if (npc.type == 520)
                            {
                                num140 = 8f;
                            }
                            if (npc.type == 409)
                            {
                                num140 = 4f;
                            }
                            if (npc.type >= 449 && npc.type <= 452)
                            {
                                num140 = 7f;
                            }
                            if (npc.type == 481)
                            {
                                num140 = 8f;
                            }
                            if (npc.type == 468)
                            {
                                num140 = 7.5f;
                            }
                            if (npc.type == 411)
                            {
                                num140 = 1f;
                            }
                            if (npc.type >= 498 && npc.type <= 506)
                            {
                                num140 = 7f;
                            }
                            Vector2 vector22 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            if (npc.type == 481)
                            {
                                vector22.Y -= 14f;
                            }
                            if (npc.type == 206)
                            {
                                vector22.Y -= 10f;
                            }
                            if (npc.type == 290)
                            {
                                vector22.Y -= 10f;
                            }
                            if (npc.type == 381 || npc.type == 382)
                            {
                                vector22.Y += 6f;
                            }
                            if (npc.type == 520)
                            {
                                vector22.Y = npc.position.Y + 20f;
                            }
                            if (npc.type >= 498 && npc.type <= 506)
                            {
                                vector22.Y -= 8f;
                            }
                            if (npc.type == 426)
                            {
                                vector22 += new Vector2((float)(npc.spriteDirection * 2), -12f);
                            }
                            float num141 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector22.X;
                            float num142 = Math.Abs(num141) * 0.1f;
                            if (npc.type == 291 || npc.type == 292)
                            {
                                num142 = 0f;
                            }
                            if (npc.type == 215)
                            {
                                num142 = Math.Abs(num141) * 0.08f;
                            }
                            if (npc.type == 214 || (npc.type == 216 && !flag19))
                            {
                                num142 = 0f;
                            }
                            if (npc.type == 381 || npc.type == 382 || npc.type == 520)
                            {
                                num142 = 0f;
                            }
                            if (npc.type >= 449 && npc.type <= 452)
                            {
                                num142 = Math.Abs(num141) * (float)Main.rand.Next(10, 50) * 0.01f;
                            }
                            if (npc.type == 468)
                            {
                                num142 = Math.Abs(num141) * (float)Main.rand.Next(10, 50) * 0.01f;
                            }
                            if (npc.type == 481)
                            {
                                num142 = Math.Abs(num141) * (float)Main.rand.Next(-10, 11) * 0.0035f;
                            }
                            if (npc.type >= 498 && npc.type <= 506)
                            {
                                num142 = Math.Abs(num141) * (float)Main.rand.Next(1, 11) * 0.0025f;
                            }
                            float num143 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector22.Y - num142;
                            if (npc.type == 291)
                            {
                                num141 += (float)Main.rand.Next(-40, 41) * 0.2f;
                                num143 += (float)Main.rand.Next(-40, 41) * 0.2f;
                            }
                            else if (npc.type == 381 || npc.type == 382 || npc.type == 520)
                            {
                                num141 += (float)Main.rand.Next(-100, 101) * 0.4f;
                                num143 += (float)Main.rand.Next(-100, 101) * 0.4f;
                                num141 *= (float)Main.rand.Next(85, 116) * 0.01f;
                                num143 *= (float)Main.rand.Next(85, 116) * 0.01f;
                                if (npc.type == 520)
                                {
                                    num141 += (float)Main.rand.Next(-100, 101) * 0.6f;
                                    num143 += (float)Main.rand.Next(-100, 101) * 0.6f;
                                    num141 *= (float)Main.rand.Next(85, 116) * 0.015f;
                                    num143 *= (float)Main.rand.Next(85, 116) * 0.015f;
                                }
                            }
                            else if (npc.type == 481)
                            {
                                num141 += (float)Main.rand.Next(-40, 41) * 0.4f;
                                num143 += (float)Main.rand.Next(-40, 41) * 0.4f;
                            }
                            else if (npc.type >= 498 && npc.type <= 506)
                            {
                                num141 += (float)Main.rand.Next(-40, 41) * 0.3f;
                                num143 += (float)Main.rand.Next(-40, 41) * 0.3f;
                            }
                            else if (npc.type != 292)
                            {
                                num141 += (float)Main.rand.Next(-40, 41);
                                num143 += (float)Main.rand.Next(-40, 41);
                            }
                            float num144 = (float)Math.Sqrt((double)(num141 * num141 + num143 * num143));
                            npc.netUpdate = true;
                            num144 = num140 / num144;
                            num141 *= num144;
                            num143 *= num144;
                            int num145 = 35;
                            int num146 = 82;
                            if (npc.type == 111)
                            {
                                num145 = 11;
                            }
                            if (npc.type == 206)
                            {
                                num145 = 37;
                            }
                            if (npc.type == 379 || npc.type == 380)
                            {
                                num145 = 40;
                            }
                            if (npc.type == 350)
                            {
                                num145 = 45;
                            }
                            if (npc.type == 468)
                            {
                                num145 = 50;
                            }
                            if (npc.type == 111)
                            {
                                num146 = 81;
                            }
                            if (npc.type == 379 || npc.type == 380)
                            {
                                num146 = 81;
                            }
                            if (npc.type == 381)
                            {
                                num146 = 436;
                                num145 = 24;
                            }
                            if (npc.type == 382)
                            {
                                num146 = 438;
                                num145 = 30;
                            }
                            if (npc.type == 520)
                            {
                                num146 = 592;
                                num145 = 35;
                            }
                            if (npc.type >= 449 && npc.type <= 452)
                            {
                                num146 = 471;
                                num145 = 20;
                            }
                            if (npc.type >= 498 && npc.type <= 506)
                            {
                                num146 = 572;
                                num145 = 14;
                            }
                            if (npc.type == 481)
                            {
                                num146 = 508;
                                num145 = 18;
                            }
                            if (npc.type == 206)
                            {
                                num146 = 177;
                            }
                            if (npc.type == 468)
                            {
                                num146 = 501;
                            }
                            if (npc.type == 411)
                            {
                                num146 = 537;
                                num145 = (Main.expertMode ? 45 : 60);
                            }
                            if (npc.type == 424)
                            {
                                num146 = 573;
                                num145 = (Main.expertMode ? 45 : 60);
                            }
                            if (npc.type == 426)
                            {
                                num146 = 581;
                                num145 = (Main.expertMode ? 45 : 60);
                            }
                            if (npc.type == 291)
                            {
                                num146 = 302;
                                num145 = 100;
                            }
                            if (npc.type == 290)
                            {
                                num146 = 300;
                                num145 = 60;
                            }
                            if (npc.type == 293)
                            {
                                num146 = 303;
                                num145 = 60;
                            }
                            if (npc.type == 214)
                            {
                                num146 = 180;
                                num145 = 25;
                            }
                            if (npc.type == 215)
                            {
                                num146 = 82;
                                num145 = 40;
                            }
                            if (npc.type == 292)
                            {
                                num145 = 50;
                                num146 = 180;
                            }
                            if (npc.type == 216)
                            {
                                num146 = 180;
                                num145 = 30;
                                if (flag19)
                                {
                                    num145 = 100;
                                    num146 = 240;
                                    npc.localAI[2] = 0f;
                                }
                            }
                            vector22.X += num141;
                            vector22.Y += num143;
                            if (Main.expertMode && npc.type == 290)
                            {
                                num145 = (int)((double)num145 * 0.75);
                            }
                            if (Main.expertMode && npc.type >= 381 && npc.type <= 392)
                            {
                                num145 = (int)((double)num145 * 0.8);
                            }
                            if (Main.netMode != 1)
                            {
                                if (npc.type == 292)
                                {
                                    for (int num147 = 0; num147 < 4; num147++)
                                    {
                                        num141 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector22.X;
                                        num143 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector22.Y;
                                        num144 = (float)Math.Sqrt((double)(num141 * num141 + num143 * num143));
                                        num144 = 12f / num144;
                                        num141 += (float)Main.rand.Next(-40, 41);
                                        num143 += (float)Main.rand.Next(-40, 41);
                                        num141 *= num144;
                                        num143 *= num144;
                                        Projectile.NewProjectile(vector22.X, vector22.Y, num141, num143, num146, num145, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                }
                                else if (npc.type == 411)
                                {
                                    Projectile.NewProjectile(vector22.X, vector22.Y, num141, num143, num146, num145, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                }
                                else if (npc.type == 424)
                                {
                                    for (int num148 = 0; num148 < 4; num148++)
                                    {
                                        Projectile.NewProjectile(npc.Center.X - (float)(npc.spriteDirection * 4), npc.Center.Y + 6f, (float)(-3 + 2 * num148) * 0.15f, (float)(-(float)Main.rand.Next(0, 3)) * 0.2f - 0.1f, num146, num145, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                                    }
                                }
                                else if (npc.type == 409)
                                {
                                    int num149 = NPC.NewNPC((int)npc.Center.X, (int)npc.Center.Y, 410, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num149].velocity = new Vector2(num141, -6f + num143);
                                }
                                else
                                {
                                    Projectile.NewProjectile(vector22.X, vector22.Y, num141, num143, num146, num145, 0f, Main.myPlayer, 0f, 0f);
                                }
                            }
                            if (Math.Abs(num143) > Math.Abs(num141) * 2f)
                            {
                                if (num143 > 0f)
                                {
                                    npc.ai[2] = 1f;
                                }
                                else
                                {
                                    npc.ai[2] = 5f;
                                }
                            }
                            else if (Math.Abs(num141) > Math.Abs(num143) * 2f)
                            {
                                npc.ai[2] = 3f;
                            }
                            else if (num143 > 0f)
                            {
                                npc.ai[2] = 2f;
                            }
                            else
                            {
                                npc.ai[2] = 4f;
                            }
                        }
                        if ((npc.velocity.Y != 0f && !flag17) || npc.ai[1] <= 0f)
                        {
                            npc.ai[2] = 0f;
                            npc.ai[1] = 0f;
                        }
                        else if (!flag16 || (num136 != -1 && npc.ai[1] >= (float)num136 && npc.ai[1] < (float)(num136 + num137) && (!flag17 || npc.velocity.Y == 0f)))
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                            npc.spriteDirection = npc.direction;
                        }
                    }
                    if (npc.type == 468 && !Main.eclipse)
                    {
                        flag16 = true;
                    }
                    else if ((npc.ai[2] <= 0f | flag16) && (npc.velocity.Y == 0f | flag17) && npc.ai[1] <= 0f && !Main.player[npc.target].dead)
                    {
                        bool flag20 = Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                        if (npc.type == 520)
                        {
                            flag20 = Collision.CanHitLine(npc.Top + new Vector2(0f, 20f), 0, 0, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height);
                        }
                        if (Main.player[npc.target].stealth == 0f && Main.player[npc.target].itemAnimation == 0)
                        {
                            flag20 = false;
                        }
                        if (flag20)
                        {
                            float num150 = 10f;
                            Vector2 vector23 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                            float num151 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector23.X;
                            float num152 = Math.Abs(num151) * 0.1f;
                            float num153 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector23.Y - num152;
                            num151 += (float)Main.rand.Next(-40, 41);
                            num153 += (float)Main.rand.Next(-40, 41);
                            float num154 = (float)Math.Sqrt((double)(num151 * num151 + num153 * num153));
                            float num155 = 700f;
                            if (npc.type == 214)
                            {
                                num155 = 550f;
                            }
                            if (npc.type == 215)
                            {
                                num155 = 800f;
                            }
                            if (npc.type >= 498 && npc.type <= 506)
                            {
                                num155 = 190f;
                            }
                            if (npc.type >= 449 && npc.type <= 452)
                            {
                                num155 = 200f;
                            }
                            if (npc.type == 481)
                            {
                                num155 = 400f;
                            }
                            if (npc.type == 468)
                            {
                                num155 = 400f;
                            }
                            if (num154 < num155)
                            {
                                npc.netUpdate = true;
                                npc.velocity.X = npc.velocity.X * 0.5f;
                                num154 = num150 / num154;
                                num151 *= num154;
                                num153 *= num154;
                                npc.ai[2] = 3f;
                                npc.ai[1] = (float)num138;
                                if (Math.Abs(num153) > Math.Abs(num151) * 2f)
                                {
                                    if (num153 > 0f)
                                    {
                                        npc.ai[2] = 1f;
                                    }
                                    else
                                    {
                                        npc.ai[2] = 5f;
                                    }
                                }
                                else if (Math.Abs(num151) > Math.Abs(num153) * 2f)
                                {
                                    npc.ai[2] = 3f;
                                }
                                else if (num153 > 0f)
                                {
                                    npc.ai[2] = 2f;
                                }
                                else
                                {
                                    npc.ai[2] = 4f;
                                }
                            }
                        }
                    }
                    if (npc.ai[2] <= 0f || (flag16 && (num136 == -1 || npc.ai[1] < (float)num136 || npc.ai[1] >= (float)(num136 + num137))))
                    {
                        float num156 = 1f;
                        float num157 = 0.07f;
                        float scaleFactor6 = 0.8f;
                        if (npc.type == 214)
                        {
                            num156 = 2f;
                            num157 = 0.09f;
                        }
                        else if (npc.type == 215)
                        {
                            num156 = 1.5f;
                            num157 = 0.08f;
                        }
                        else if (npc.type == 381 || npc.type == 382)
                        {
                            num156 = 2f;
                            num157 = 0.5f;
                        }
                        else if (npc.type == 520)
                        {
                            num156 = 4f;
                            num157 = 1f;
                            scaleFactor6 = 0.7f;
                        }
                        else if (npc.type == 411)
                        {
                            num156 = 2f;
                            num157 = 0.5f;
                        }
                        else if (npc.type == 409)
                        {
                            num156 = 2f;
                            num157 = 0.5f;
                        }
                        bool flag21 = false;
                        if ((npc.type == 381 || npc.type == 382) && Vector2.Distance(npc.Center, Main.player[npc.target].Center) < 300f && Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                        {
                            flag21 = true;
                            npc.ai[3] = 0f;
                        }
                        if (npc.type == 520 && Vector2.Distance(npc.Center, Main.player[npc.target].Center) < 400f && Collision.CanHitLine(npc.Center, 0, 0, Main.player[npc.target].Center, 0, 0))
                        {
                            flag21 = true;
                            npc.ai[3] = 0f;
                        }
                        if ((npc.velocity.X < -num156 || npc.velocity.X > num156) | flag21)
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity *= scaleFactor6;
                            }
                        }
                        else if (npc.velocity.X < num156 && npc.direction == 1)
                        {
                            npc.velocity.X = npc.velocity.X + num157;
                            if (npc.velocity.X > num156)
                            {
                                npc.velocity.X = num156;
                            }
                        }
                        else if (npc.velocity.X > -num156 && npc.direction == -1)
                        {
                            npc.velocity.X = npc.velocity.X - num157;
                            if (npc.velocity.X < -num156)
                            {
                                npc.velocity.X = -num156;
                            }
                        }
                    }
                    if (npc.type == 520)
                    {
                        npc.localAI[2] += 1f;
                        if (npc.localAI[2] >= 6f)
                        {
                            npc.localAI[2] = 0f;
                            npc.localAI[3] = Main.player[npc.target].DirectionFrom(npc.Top + new Vector2(0f, 20f)).ToRotation();
                        }
                    }
                }
            }
            if (npc.type == 109 && Main.netMode != 1 && !Main.player[npc.target].dead)
            {
                if (npc.justHit)
                {
                    npc.ai[2] = 0f;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] > 450f)
                {
                    Vector2 vector24 = new Vector2(npc.position.X + (float)npc.width * 0.5f - (float)(npc.direction * 24), npc.position.Y + 4f);
                    int num158 = 3 * npc.direction;
                    int num159 = -5;
                    int num160 = Projectile.NewProjectile(vector24.X, vector24.Y, (float)num158, (float)num159, 75, 0, 0f, Main.myPlayer, 0f, 0f);
                    Main.projectile[num160].timeLeft = 300;
                    npc.ai[2] = 0f;
                }
            }
            bool flag22 = false;
            if (npc.velocity.Y == 0f)
            {
                int num161 = (int)(npc.position.Y + (float)npc.height + 7f) / 16;
                int arg_A8FB_0 = (int)npc.position.X / 16;
                int num162 = (int)(npc.position.X + (float)npc.width) / 16;
                for (int num163 = arg_A8FB_0; num163 <= num162; num163++)
                {
                    if (Main.tile[num163, num161] == null)
                    {
                        return;
                    }
                    if (Main.tile[num163, num161].nactive() && Main.tileSolid[(int)Main.tile[num163, num161].type])
                    {
                        flag22 = true;
                        break;
                    }
                }
            }
            if (npc.type == 428)
            {
                flag22 = false;
            }
            if (npc.velocity.Y >= 0f)
            {
                int num164 = 0;
                if (npc.velocity.X < 0f)
                {
                    num164 = -1;
                }
                if (npc.velocity.X > 0f)
                {
                    num164 = 1;
                }
                Vector2 position2 = npc.position;
                position2.X += npc.velocity.X;
                int num165 = (int)((position2.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 1) * num164)) / 16f);
                int num166 = (int)((position2.Y + (float)npc.height - 1f) / 16f);
                if (Main.tile[num165, num166] == null)
                {
                    Main.tile[num165, num166] = new Tile();
                }
                if (Main.tile[num165, num166 - 1] == null)
                {
                    Main.tile[num165, num166 - 1] = new Tile();
                }
                if (Main.tile[num165, num166 - 2] == null)
                {
                    Main.tile[num165, num166 - 2] = new Tile();
                }
                if (Main.tile[num165, num166 - 3] == null)
                {
                    Main.tile[num165, num166 - 3] = new Tile();
                }
                if (Main.tile[num165, num166 + 1] == null)
                {
                    Main.tile[num165, num166 + 1] = new Tile();
                }
                if (Main.tile[num165 - num164, num166 - 3] == null)
                {
                    Main.tile[num165 - num164, num166 - 3] = new Tile();
                }
                if ((float)(num165 * 16) < position2.X + (float)npc.width && (float)(num165 * 16 + 16) > position2.X && ((Main.tile[num165, num166].nactive() && !Main.tile[num165, num166].topSlope() && !Main.tile[num165, num166 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num165, num166].type] && !Main.tileSolidTop[(int)Main.tile[num165, num166].type]) || (Main.tile[num165, num166 - 1].halfBrick() && Main.tile[num165, num166 - 1].nactive())) && (!Main.tile[num165, num166 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num165, num166 - 1].type] || Main.tileSolidTop[(int)Main.tile[num165, num166 - 1].type] || (Main.tile[num165, num166 - 1].halfBrick() && (!Main.tile[num165, num166 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num165, num166 - 4].type] || Main.tileSolidTop[(int)Main.tile[num165, num166 - 4].type]))) && (!Main.tile[num165, num166 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num165, num166 - 2].type] || Main.tileSolidTop[(int)Main.tile[num165, num166 - 2].type]) && (!Main.tile[num165, num166 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num165, num166 - 3].type] || Main.tileSolidTop[(int)Main.tile[num165, num166 - 3].type]) && (!Main.tile[num165 - num164, num166 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num165 - num164, num166 - 3].type]))
                {
                    float num167 = (float)(num166 * 16);
                    if (Main.tile[num165, num166].halfBrick())
                    {
                        num167 += 8f;
                    }
                    if (Main.tile[num165, num166 - 1].halfBrick())
                    {
                        num167 -= 8f;
                    }
                    if (num167 < position2.Y + (float)npc.height)
                    {
                        float num168 = position2.Y + (float)npc.height - num167;
                        float num169 = 16.1f;
                        if (npc.type == 163 || npc.type == 164 || npc.type == 236 || npc.type == 239 || npc.type == 530)
                        {
                            num169 += 8f;
                        }
                        if (num168 <= num169)
                        {
                            npc.gfxOffY += npc.position.Y + (float)npc.height - num167;
                            npc.position.Y = num167 - (float)npc.height;
                            if (num168 < 9f)
                            {
                                npc.stepSpeed = 1f;
                            }
                            else
                            {
                                npc.stepSpeed = 2f;
                            }
                        }
                    }
                }
            }
            if (flag22)
            {
                int num170 = (int)((npc.position.X + (float)(npc.width / 2) + (float)(15 * npc.direction)) / 16f);
                int num171 = (int)((npc.position.Y + (float)npc.height - 15f) / 16f);
                if (npc.type == 109 || npc.type == 163 || npc.type == 164 || npc.type == 199 || npc.type == 236 || npc.type == 239 || npc.type == 257 || npc.type == 258 || npc.type == 290 || npc.type == 391 || npc.type == 425 || npc.type == 427 || npc.type == 426 || npc.type == 508 || npc.type == 415 || npc.type == 530 || npc.type == 532)
                {
                    num170 = (int)((npc.position.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 16) * npc.direction)) / 16f);
                }
                if (Main.tile[num170, num171] == null)
                {
                    Main.tile[num170, num171] = new Tile();
                }
                if (Main.tile[num170, num171 - 1] == null)
                {
                    Main.tile[num170, num171 - 1] = new Tile();
                }
                if (Main.tile[num170, num171 - 2] == null)
                {
                    Main.tile[num170, num171 - 2] = new Tile();
                }
                if (Main.tile[num170, num171 - 3] == null)
                {
                    Main.tile[num170, num171 - 3] = new Tile();
                }
                if (Main.tile[num170, num171 + 1] == null)
                {
                    Main.tile[num170, num171 + 1] = new Tile();
                }
                if (Main.tile[num170 + npc.direction, num171 - 1] == null)
                {
                    Main.tile[num170 + npc.direction, num171 - 1] = new Tile();
                }
                if (Main.tile[num170 + npc.direction, num171 + 1] == null)
                {
                    Main.tile[num170 + npc.direction, num171 + 1] = new Tile();
                }
                if (Main.tile[num170 - npc.direction, num171 + 1] == null)
                {
                    Main.tile[num170 - npc.direction, num171 + 1] = new Tile();
                }
                Main.tile[num170, num171 + 1].halfBrick();
                if ((Main.tile[num170, num171 - 1].nactive() && (Main.tile[num170, num171 - 1].type == 10 || Main.tile[num170, num171 - 1].type == 388)) & flag5)
                {
                    npc.ai[2] += 1f;
                    npc.ai[3] = 0f;
                    if (npc.ai[2] >= 60f)
                    {
                        if (!Main.bloodMoon && (npc.type == 3 || npc.type == 331 || npc.type == 332 || npc.type == 132 || npc.type == 161 || npc.type == 186 || npc.type == 187 || npc.type == 188 || npc.type == 189 || npc.type == 200 || npc.type == 223 || npc.type == 320 || npc.type == 321 || npc.type == 319))
                        {
                            npc.ai[1] = 0f;
                        }
                        npc.velocity.X = 0.5f * (float)(-(float)npc.direction);
                        int num172 = 5;
                        if (Main.tile[num170, num171 - 1].type == 388)
                        {
                            num172 = 2;
                        }
                        npc.ai[1] += (float)num172;
                        if (npc.type == 27)
                        {
                            npc.ai[1] += 1f;
                        }
                        if (npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296)
                        {
                            npc.ai[1] += 6f;
                        }
                        npc.ai[2] = 0f;
                        bool flag23 = false;
                        if (npc.ai[1] >= 10f)
                        {
                            flag23 = true;
                            npc.ai[1] = 10f;
                        }
                        if (npc.type == 460)
                        {
                            flag23 = true;
                        }
                        WorldGen.KillTile(num170, num171 - 1, true, false, false);
                        if ((Main.netMode != 1 || !flag23) && flag23 && Main.netMode != 1)
                        {
                            if (npc.type == 26)
                            {
                                WorldGen.KillTile(num170, num171 - 1, false, false, false);
                                if (Main.netMode == 2)
                                {
                                    NetMessage.SendData(17, -1, -1, null, 0, (float)num170, (float)(num171 - 1), 0f, 0, 0, 0);
                                }
                            }
                            else
                            {
                                if (Main.tile[num170, num171 - 1].type == 10)
                                {
                                    bool flag24 = WorldGen.OpenDoor(num170, num171 - 1, npc.direction);
                                    if (!flag24)
                                    {
                                        npc.ai[3] = (float)num35;
                                        npc.netUpdate = true;
                                    }
                                    if (Main.netMode == 2 & flag24)
                                    {
                                        NetMessage.SendData(19, -1, -1, null, 0, (float)num170, (float)(num171 - 1), (float)npc.direction, 0, 0, 0);
                                    }
                                }
                                if (Main.tile[num170, num171 - 1].type == 388)
                                {
                                    bool flag25 = WorldGen.ShiftTallGate(num170, num171 - 1, false);
                                    if (!flag25)
                                    {
                                        npc.ai[3] = (float)num35;
                                        npc.netUpdate = true;
                                    }
                                    if (Main.netMode == 2 & flag25)
                                    {
                                        NetMessage.SendData(19, -1, -1, null, 4, (float)num170, (float)(num171 - 1), 0f, 0, 0, 0);
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    int num173 = npc.spriteDirection;
                    if (npc.type == 425)
                    {
                        num173 *= -1;
                    }
                    if ((npc.velocity.X < 0f && num173 == -1) || (npc.velocity.X > 0f && num173 == 1))
                    {
                        if (npc.height >= 32 && Main.tile[num170, num171 - 2].nactive() && Main.tileSolid[(int)Main.tile[num170, num171 - 2].type])
                        {
                            if (Main.tile[num170, num171 - 3].nactive() && Main.tileSolid[(int)Main.tile[num170, num171 - 3].type])
                            {
                                npc.velocity.Y = -8f;
                                npc.netUpdate = true;
                            }
                            else
                            {
                                npc.velocity.Y = -7f;
                                npc.netUpdate = true;
                            }
                        }
                        else if (Main.tile[num170, num171 - 1].nactive() && Main.tileSolid[(int)Main.tile[num170, num171 - 1].type])
                        {
                            npc.velocity.Y = -6f;
                            npc.netUpdate = true;
                        }
                        else if (npc.position.Y + (float)npc.height - (float)(num171 * 16) > 20f && Main.tile[num170, num171].nactive() && !Main.tile[num170, num171].topSlope() && Main.tileSolid[(int)Main.tile[num170, num171].type])
                        {
                            npc.velocity.Y = -5f;
                            npc.netUpdate = true;
                        }
                        else if (npc.directionY < 0 && npc.type != 67 && (!Main.tile[num170, num171 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num170, num171 + 1].type]) && (!Main.tile[num170 + npc.direction, num171 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num170 + npc.direction, num171 + 1].type]))
                        {
                            npc.velocity.Y = -8f;
                            npc.velocity.X = npc.velocity.X * 1.5f;
                            npc.netUpdate = true;
                        }
                        else if (flag5)
                        {
                            npc.ai[1] = 0f;
                            npc.ai[2] = 0f;
                        }
                        if ((npc.velocity.Y == 0f & flag3) && npc.ai[3] == 1f)
                        {
                            npc.velocity.Y = -5f;
                        }
                    }
                    if ((npc.type == 31 || npc.type == 294 || npc.type == 295 || npc.type == 296 || npc.type == 47 || npc.type == 77 || npc.type == 104 || npc.type == 168 || npc.type == 196 || npc.type == 385 || npc.type == 389 || npc.type == 464 || npc.type == 470 || (npc.type >= 524 && npc.type <= 527)) && npc.velocity.Y == 0f && Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) < 100f && Math.Abs(npc.position.Y + (float)(npc.height / 2) - (Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2))) < 50f && ((npc.direction > 0 && npc.velocity.X >= 1f) || (npc.direction < 0 && npc.velocity.X <= -1f)))
                    {
                        npc.velocity.X = npc.velocity.X * 2f;
                        if (npc.velocity.X > 3f)
                        {
                            npc.velocity.X = 3f;
                        }
                        if (npc.velocity.X < -3f)
                        {
                            npc.velocity.X = -3f;
                        }
                        npc.velocity.Y = -4f;
                        npc.netUpdate = true;
                    }
                    if (npc.type == 120 && npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 1.1f;
                    }
                    if (npc.type == 287 && npc.velocity.Y == 0f && Math.Abs(npc.position.X + (float)(npc.width / 2) - (Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2))) < 150f && Math.Abs(npc.position.Y + (float)(npc.height / 2) - (Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2))) < 50f && ((npc.direction > 0 && npc.velocity.X >= 1f) || (npc.direction < 0 && npc.velocity.X <= -1f)))
                    {
                        npc.velocity.X = (float)(8 * npc.direction);
                        npc.velocity.Y = -4f;
                        npc.netUpdate = true;
                    }
                    if (npc.type == 287 && npc.velocity.Y < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 1.2f;
                        npc.velocity.Y = npc.velocity.Y * 1.1f;
                    }
                    if (npc.type == 460 && npc.velocity.Y < 0f)
                    {
                        npc.velocity.X = npc.velocity.X * 1.3f;
                        npc.velocity.Y = npc.velocity.Y * 1.1f;
                    }
                }
            }
            else if (flag5)
            {
                npc.ai[1] = 0f;
                npc.ai[2] = 0f;
            }
            if (Main.netMode != 1 && npc.type == 120 && npc.ai[3] >= (float)num35)
            {
                int num174 = (int)Main.player[npc.target].position.X / 16;
                int num175 = (int)Main.player[npc.target].position.Y / 16;
                int num176 = (int)npc.position.X / 16;
                int num177 = (int)npc.position.Y / 16;
                int num178 = 20;
                int num179 = 0;
                bool flag26 = false;
                if (Math.Abs(npc.position.X - Main.player[npc.target].position.X) + Math.Abs(npc.position.Y - Main.player[npc.target].position.Y) > 2000f)
                {
                    num179 = 100;
                    flag26 = true;
                }
                while (!flag26 && num179 < 100)
                {
                    num179++;
                    int num180 = Main.rand.Next(num174 - num178, num174 + num178);
                    for (int num181 = Main.rand.Next(num175 - num178, num175 + num178); num181 < num175 + num178; num181++)
                    {
                        if ((num181 < num175 - 4 || num181 > num175 + 4 || num180 < num174 - 4 || num180 > num174 + 4) && (num181 < num177 - 1 || num181 > num177 + 1 || num180 < num176 - 1 || num180 > num176 + 1) && Main.tile[num180, num181].nactive())
                        {
                            bool flag27 = true;
                            if (npc.type == 32 && Main.tile[num180, num181 - 1].wall == 0)
                            {
                                flag27 = false;
                            }
                            else if (Main.tile[num180, num181 - 1].lava())
                            {
                                flag27 = false;
                            }
                            if (flag27 && Main.tileSolid[(int)Main.tile[num180, num181].type] && !Collision.SolidTiles(num180 - 1, num180 + 1, num181 - 4, num181 - 1))
                            {
                                npc.position.X = (float)(num180 * 16 - npc.width / 2);
                                npc.position.Y = (float)(num181 * 16 - npc.height);
                                npc.netUpdate = true;
                                npc.ai[3] = -120f;
                            }
                        }
                    }
                }
            }
        }

        // Token: 0x06000238 RID: 568 RVA: 0x001546B0 File Offset: 0x001528B0
        private static void AI_005_EaterOfSouls(NPC npc)
        {
            if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
            {
                npc.TargetClosest(true);
            }
            float num = 6f;
            float num2 = 0.05f;
            if (npc.type == 6 || npc.type == 173)
            {
                num = 4f;
                num2 = 0.02f;
                if (npc.type == 6 && Main.expertMode)
                {
                    num2 = 0.035f;
                }
            }
            else if (npc.type == 94)
            {
                num = 4.2f;
                num2 = 0.022f;
            }
            else if (npc.type == 252)
            {
                if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                {
                    num = 6f;
                    num2 = 0.1f;
                }
                else
                {
                    num2 = 0.01f;
                    num = 2f;
                }
            }
            else if (npc.type == 42 || (npc.type >= 231 && npc.type <= 235))
            {
                num = 3.5f;
                num2 = 0.021f;
                if (npc.type == 231)
                {
                    num = 3f;
                    num2 = 0.017f;
                }
                num *= 1f - npc.scale;
                num2 *= 1f - npc.scale;
            }
            else if (npc.type == 205)
            {
                num = 3.25f;
                num2 = 0.018f;
            }
            else if (npc.type == 176)
            {
                num = 4f;
                num2 = 0.017f;
            }
            else if (npc.type == 23)
            {
                num = 1f;
                num2 = 0.03f;
            }
            else if (npc.type == 5)
            {
                num = 5f;
                num2 = 0.03f;
            }
            else if (npc.type == 210 || npc.type == 211)
            {
                npc.localAI[0] += 1f;
                float num3 = (npc.localAI[0] - 60f) / 60f;
                if (num3 > 1f)
                {
                    num3 = 1f;
                }
                else
                {
                    if (npc.velocity.X > 6f)
                    {
                        npc.velocity.X = 6f;
                    }
                    if (npc.velocity.X < -6f)
                    {
                        npc.velocity.X = -6f;
                    }
                    if (npc.velocity.Y > 6f)
                    {
                        npc.velocity.Y = 6f;
                    }
                    if (npc.velocity.Y < -6f)
                    {
                        npc.velocity.Y = -6f;
                    }
                }
                num = 5f;
                num2 = 0.1f;
                num2 *= num3;
            }
            Vector2 vector = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
            float num4 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
            float num5 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
            num4 = (float)((int)(num4 / 8f) * 8);
            num5 = (float)((int)(num5 / 8f) * 8);
            vector.X = (float)((int)(vector.X / 8f) * 8);
            vector.Y = (float)((int)(vector.Y / 8f) * 8);
            num4 -= vector.X;
            num5 -= vector.Y;
            float num6 = (float)Math.Sqrt((double)(num4 * num4 + num5 * num5));
            float num7 = num6;
            bool flag = false;
            if (num6 > 600f)
            {
                flag = true;
            }
            if (num6 == 0f)
            {
                num4 = npc.velocity.X;
                num5 = npc.velocity.Y;
            }
            else
            {
                num6 = num / num6;
                num4 *= num6;
                num5 *= num6;
            }
            if (npc.type == 6 || npc.type == 42 || npc.type == 94 || npc.type == 139 || npc.type == 173 || npc.type == 176 || npc.type == 205 || npc.type == 210 || npc.type == 211 || (npc.type >= 231 && npc.type <= 235))
            {
                if (num7 > 100f || npc.type == 42 || npc.type == 94 || npc.type == 176 || npc.type == 210 || npc.type == 211 || (npc.type >= 231 && npc.type <= 235))
                {
                    npc.ai[0] += 1f;
                    if (npc.ai[0] > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.023f;
                    }
                    else
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.023f;
                    }
                    if (npc.ai[0] < -100f || npc.ai[0] > 100f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.023f;
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X - 0.023f;
                    }
                    if (npc.ai[0] > 200f)
                    {
                        npc.ai[0] = -200f;
                    }
                }
                if (num7 < 150f && (npc.type == 6 || npc.type == 94 || npc.type == 173))
                {
                    npc.velocity.X = npc.velocity.X + num4 * 0.007f;
                    npc.velocity.Y = npc.velocity.Y + num5 * 0.007f;
                }
            }
            if (Main.player[npc.target].dead)
            {
                num4 = (float)npc.direction * num / 2f;
                num5 = -num / 2f;
            }
            if (npc.velocity.X < num4)
            {
                npc.velocity.X = npc.velocity.X + num2;
                if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.X < 0f && num4 > 0f)
                {
                    npc.velocity.X = npc.velocity.X + num2;
                }
            }
            else if (npc.velocity.X > num4)
            {
                npc.velocity.X = npc.velocity.X - num2;
                if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.X > 0f && num4 < 0f)
                {
                    npc.velocity.X = npc.velocity.X - num2;
                }
            }
            if (npc.velocity.Y < num5)
            {
                npc.velocity.Y = npc.velocity.Y + num2;
                if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.Y < 0f && num5 > 0f)
                {
                    npc.velocity.Y = npc.velocity.Y + num2;
                }
            }
            else if (npc.velocity.Y > num5)
            {
                npc.velocity.Y = npc.velocity.Y - num2;
                if (npc.type != 173 && npc.type != 6 && npc.type != 42 && (npc.type < 231 || npc.type > 235) && npc.type != 94 && npc.type != 139 && npc.velocity.Y > 0f && num5 < 0f)
                {
                    npc.velocity.Y = npc.velocity.Y - num2;
                }
            }
            if (npc.type == 23)
            {
                if (num4 > 0f)
                {
                    npc.spriteDirection = 1;
                    npc.rotation = (float)Math.Atan2((double)num5, (double)num4);
                }
                else if (num4 < 0f)
                {
                    npc.spriteDirection = -1;
                    npc.rotation = (float)Math.Atan2((double)num5, (double)num4) + 3.14f;
                }
            }
            else if (npc.type == 139)
            {
                npc.localAI[0] += 1f;
                if (npc.justHit)
                {
                    npc.localAI[0] = 0f;
                }
                if (Main.netMode != 1 && npc.localAI[0] >= 120f)
                {
                    npc.localAI[0] = 0f;
                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        int num8 = 25;
                        if (Main.expertMode)
                        {
                            num8 = 22;
                        }
                        int num9 = 84;
                        Projectile.NewProjectile(vector.X, vector.Y, num4, num5, num9, num8, 0f, Main.myPlayer, 0f, 0f);
                    }
                }
                int arg_A81_0 = (int)npc.position.X + npc.width / 2;
                int num10 = (int)npc.position.Y + npc.height / 2;
                int arg_A8B_0 = arg_A81_0 / 16;
                num10 /= 16;
                if (!WorldGen.SolidTile(arg_A8B_0, num10))
                {
                    Lighting.AddLight((int)((npc.position.X + (float)(npc.width / 2)) / 16f), (int)((npc.position.Y + (float)(npc.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
                }
                if (num4 > 0f)
                {
                    npc.spriteDirection = 1;
                    npc.rotation = (float)Math.Atan2((double)num5, (double)num4);
                }
                if (num4 < 0f)
                {
                    npc.spriteDirection = -1;
                    npc.rotation = (float)Math.Atan2((double)num5, (double)num4) + 3.14f;
                }
            }
            else if (npc.type == 6 || npc.type == 94 || npc.type == 173)
            {
                npc.rotation = (float)Math.Atan2((double)num5, (double)num4) - 1.57f;
            }
            else if (npc.type == 42 || npc.type == 176 || npc.type == 205 || (npc.type >= 231 && npc.type <= 235))
            {
                if (npc.velocity.X > 0f)
                {
                    npc.spriteDirection = 1;
                }
                if (npc.velocity.X < 0f)
                {
                    npc.spriteDirection = -1;
                }
                npc.rotation = npc.velocity.X * 0.1f;
            }
            else
            {
                npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) - 1.57f;
            }
            if (npc.type == 6 || npc.type == 23 || npc.type == 42 || npc.type == 94 || npc.type == 139 || npc.type == 173 || npc.type == 176 || npc.type == 205 || npc.type == 210 || npc.type == 211 || (npc.type >= 231 && npc.type <= 235))
            {
                float num11 = 0.7f;
                if (npc.type == 6 || npc.type == 173)
                {
                    num11 = 0.4f;
                }
                if (npc.collideX)
                {
                    npc.netUpdate = true;
                    npc.velocity.X = npc.oldVelocity.X * -num11;
                    if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 2f)
                    {
                        npc.velocity.X = 2f;
                    }
                    if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -2f)
                    {
                        npc.velocity.X = -2f;
                    }
                }
                if (npc.collideY)
                {
                    npc.netUpdate = true;
                    npc.velocity.Y = npc.oldVelocity.Y * -num11;
                    if (npc.velocity.Y > 0f && (double)npc.velocity.Y < 1.5)
                    {
                        npc.velocity.Y = 2f;
                    }
                    if (npc.velocity.Y < 0f && (double)npc.velocity.Y > -1.5)
                    {
                        npc.velocity.Y = -2f;
                    }
                }
                if (npc.type == 23)
                {
                    int num12 = Dust.NewDust(new Vector2(npc.position.X - npc.velocity.X, npc.position.Y - npc.velocity.Y), npc.width, npc.height, 6, npc.velocity.X * 0.2f, npc.velocity.Y * 0.2f, 100, default(Color), 2f);
                    Main.dust[num12].noGravity = true;
                    Dust expr_EC5_cp_0_cp_0 = Main.dust[num12];
                    expr_EC5_cp_0_cp_0.velocity.X = expr_EC5_cp_0_cp_0.velocity.X * 0.3f;
                    Dust expr_EE0_cp_0_cp_0 = Main.dust[num12];
                    expr_EE0_cp_0_cp_0.velocity.Y = expr_EE0_cp_0_cp_0.velocity.Y * 0.3f;
                }
                else if (npc.type != 42 && npc.type != 139 && npc.type != 176 && npc.type != 205 && npc.type != 210 && npc.type != 211 && npc.type != 252 && (npc.type < 231 || npc.type > 235) && Main.rand.Next(20) == 0)
                {
                    int num13 = 18;
                    if (npc.type == 173)
                    {
                        num13 = 5;
                    }
                    int num14 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y + (float)npc.height * 0.25f), npc.width, (int)((float)npc.height * 0.5f), num13, npc.velocity.X, 2f, 75, npc.color, npc.scale);
                    Dust expr_1013_cp_0_cp_0 = Main.dust[num14];
                    expr_1013_cp_0_cp_0.velocity.X = expr_1013_cp_0_cp_0.velocity.X * 0.5f;
                    Dust expr_102E_cp_0_cp_0 = Main.dust[num14];
                    expr_102E_cp_0_cp_0.velocity.Y = expr_102E_cp_0_cp_0.velocity.Y * 0.1f;
                }
            }
            else if (npc.type != 252 && Main.rand.Next(40) == 0)
            {
                int num15 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y + (float)npc.height * 0.25f), npc.width, (int)((float)npc.height * 0.5f), 5, npc.velocity.X, 2f, 0, default(Color), 1f);
                Dust expr_10D4_cp_0_cp_0 = Main.dust[num15];
                expr_10D4_cp_0_cp_0.velocity.X = expr_10D4_cp_0_cp_0.velocity.X * 0.5f;
                Dust expr_10EF_cp_0_cp_0 = Main.dust[num15];
                expr_10EF_cp_0_cp_0.velocity.Y = expr_10EF_cp_0_cp_0.velocity.Y * 0.1f;
            }
            if ((npc.type == 6 || npc.type == 94 || npc.type == 173) && npc.wet)
            {
                if (npc.velocity.Y > 0f)
                {
                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                }
                npc.velocity.Y = npc.velocity.Y - 0.3f;
                if (npc.velocity.Y < -2f)
                {
                    npc.velocity.Y = -2f;
                }
            }
            if (npc.type == 205 && npc.wet)
            {
                if (npc.velocity.Y > 0f)
                {
                    npc.velocity.Y = npc.velocity.Y * 0.95f;
                }
                npc.velocity.Y = npc.velocity.Y - 0.5f;
                if (npc.velocity.Y < -4f)
                {
                    npc.velocity.Y = -4f;
                }
                npc.TargetClosest(true);
            }
            if (npc.type == 42 || npc.type == 176 || (npc.type >= 231 && npc.type <= 235))
            {
                if (npc.wet)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y * 0.95f;
                    }
                    npc.velocity.Y = npc.velocity.Y - 0.5f;
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                    npc.TargetClosest(true);
                }
                if (npc.ai[1] == 101f)
                {
                    Main.PlaySound(SoundID.Item17, npc.position);
                    npc.ai[1] = 0f;
                }
                if (Main.netMode != 1)
                {
                    npc.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * npc.scale;
                    if (npc.type == 176)
                    {
                        npc.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * npc.scale;
                    }
                    if (Main.player[npc.target].stealth == 0f && Main.player[npc.target].itemAnimation == 0)
                    {
                        npc.ai[1] = 0f;
                    }
                    if (npc.ai[1] >= 130f)
                    {
                        if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                        {
                            float num16 = 8f;
                            Vector2 vector2 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)(npc.height / 2));
                            float num17 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-20, 21);
                            float num18 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-20, 21);
                            if ((num17 < 0f && npc.velocity.X < 0f) || (num17 > 0f && npc.velocity.X > 0f))
                            {
                                float num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
                                num19 = num16 / num19;
                                num17 *= num19;
                                num18 *= num19;
                                int num20 = (int)(10f * npc.scale);
                                if (npc.type == 176)
                                {
                                    num20 = (int)(30f * npc.scale);
                                }
                                int num21 = 55;
                                int num22 = Projectile.NewProjectile(vector2.X, vector2.Y, num17, num18, num21, num20, 0f, Main.myPlayer, 0f, 0f);
                                Main.projectile[num22].timeLeft = 300;
                                npc.ai[1] = 101f;
                                npc.netUpdate = true;
                            }
                            else
                            {
                                npc.ai[1] = 0f;
                            }
                        }
                        else
                        {
                            npc.ai[1] = 0f;
                        }
                    }
                }
            }
            if (npc.type == 139 & flag)
            {
                if ((npc.velocity.X > 0f && num4 > 0f) || (npc.velocity.X < 0f && num4 < 0f))
                {
                    if (Math.Abs(npc.velocity.X) < 12f)
                    {
                        npc.velocity.X = npc.velocity.X * 1.05f;
                    }
                }
                else
                {
                    npc.velocity.X = npc.velocity.X * 0.9f;
                }
            }
            if (Main.netMode != 1 && npc.type == 94 && !Main.player[npc.target].dead)
            {
                if (npc.justHit)
                {
                    npc.localAI[0] = 0f;
                }
                npc.localAI[0] += 1f;
                if (npc.localAI[0] == 180f)
                {
                    if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                    {
                        NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2) + npc.velocity.X), (int)(npc.position.Y + (float)(npc.height / 2) + npc.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
                    }
                    npc.localAI[0] = 0f;
                }
            }
            if ((Main.dayTime && npc.type != 173 && npc.type != 6 && npc.type != 23 && npc.type != 42 && npc.type != 94 && npc.type != 176 && npc.type != 205 && npc.type != 210 && npc.type != 211 && npc.type != 252 && (npc.type < 231 || npc.type > 235)) || Main.player[npc.target].dead)
            {
                npc.velocity.Y = npc.velocity.Y - num2 * 2f;
                if (npc.timeLeft > 10)
                {
                    npc.timeLeft = 10;
                }
            }
            if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
            {
                npc.netUpdate = true;
            }
        }

        // Token: 0x06000239 RID: 569 RVA: 0x00155F84 File Offset: 0x00154184
        private static void AI_006_Worms(NPC npc)
        {
            if (npc.type == 117 && npc.localAI[1] == 0f)
            {
                npc.localAI[1] = 1f;
                Main.PlaySound(SoundID.NPCDeath13, npc.position);
                int num = 1;
                if (npc.velocity.X < 0f)
                {
                    num = -1;
                }
                for (int i = 0; i < 20; i++)
                {
                    Dust.NewDust(new Vector2(npc.position.X - 20f, npc.position.Y - 20f), npc.width + 40, npc.height + 40, 5, (float)(num * 8), -1f, 0, default(Color), 1f);
                }
            }
            if (npc.type == 454 && npc.localAI[3] == 0f)
            {
                Main.PlaySound(SoundID.Item119, npc.position);
                npc.localAI[3] = 1f;
            }
            if (npc.type >= 454 && npc.type <= 459)
            {
                npc.dontTakeDamage = (npc.alpha > 0);
                if (npc.type == 454 || (npc.type != 454 && Main.npc[(int)npc.ai[1]].alpha < 85))
                {
                    if (npc.dontTakeDamage)
                    {
                        for (int j = 0; j < 2; j++)
                        {
                            int num2 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 228, 0f, 0f, 100, default(Color), 2f);
                            Main.dust[num2].noGravity = true;
                            Main.dust[num2].noLight = true;
                        }
                    }
                    npc.alpha -= 42;
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                }
            }
            else if (npc.type == 402 && npc.ai[1] == 0f)
            {
                npc.ai[1] = (float)Main.rand.Next(-2, 0);
                npc.netUpdate = true;
            }
            if (Main.netMode != 1 && Main.expertMode)
            {
                if (npc.type == 14 && (double)(npc.position.Y / 16f) < Main.worldSurface)
                {
                    if (Main.rand.Next(900) == 0)
                    {
                        npc.TargetClosest(true);
                        if (Collision.CanHitLine(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2) + npc.velocity.X), (int)(npc.position.Y + (float)(npc.height / 2) + npc.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
                        }
                    }
                }
                else if (npc.type == 13)
                {
                    int num3 = 90;
                    num3 += (int)((float)npc.life / (float)npc.lifeMax * 60f * 5f);
                    if (Main.rand.Next(num3) == 0)
                    {
                        npc.TargetClosest(true);
                        if (Collision.CanHitLine(npc.Center, 1, 1, Main.player[npc.target].Center, 1, 1))
                        {
                            NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2) + npc.velocity.X), (int)(npc.position.Y + (float)(npc.height / 2) + npc.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
                        }
                    }
                }
            }
            bool flag = false;
            float num4 = 0.2f;
            int num5 = npc.type;
            if (num5 <= 95)
            {
                if (num5 != 10 && num5 != 39 && num5 != 95)
                {
                    goto IL_459;
                }
            }
            else if (num5 != 117 && num5 != 510)
            {
                if (num5 == 513)
                {
                    flag = !Main.player[npc.target].ZoneUndergroundDesert;
                    num4 = 0.1f;
                    goto IL_459;
                }
                goto IL_459;
            }
            flag = true;
        IL_459:
            if (npc.type >= 13 && npc.type <= 15)
            {
                npc.realLife = -1;
            }
            else if (npc.ai[3] > 0f)
            {
                npc.realLife = (int)npc.ai[3];
            }
            if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead || (flag && (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0))
            {
                npc.TargetClosest(true);
            }
            if (Main.player[npc.target].dead || (flag && (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0))
            {
                if (npc.timeLeft > 300)
                {
                    npc.timeLeft = 300;
                }
                if (flag)
                {
                    npc.velocity.Y = npc.velocity.Y + num4;
                }
            }
            if (Main.netMode != 1)
            {
                if (npc.type == 87 && npc.ai[0] == 0f)
                {
                    npc.ai[3] = (float)npc.whoAmI;
                    npc.realLife = npc.whoAmI;
                    int num6 = npc.whoAmI;
                    for (int k = 0; k < 14; k++)
                    {
                        int num7 = 89;
                        if (k == 1 || k == 8)
                        {
                            num7 = 88;
                        }
                        else if (k == 11)
                        {
                            num7 = 90;
                        }
                        else if (k == 12)
                        {
                            num7 = 91;
                        }
                        else if (k == 13)
                        {
                            num7 = 92;
                        }
                        int num8 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num7, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num8].ai[3] = (float)npc.whoAmI;
                        Main.npc[num8].realLife = npc.whoAmI;
                        Main.npc[num8].ai[1] = (float)num6;
                        Main.npc[num6].ai[0] = (float)num8;
                        NetMessage.SendData(23, -1, -1, null, num8, 0f, 0f, 0f, 0, 0, 0);
                        num6 = num8;
                    }
                }
                if (npc.type == 454 && npc.ai[0] == 0f)
                {
                    npc.ai[3] = (float)npc.whoAmI;
                    npc.realLife = npc.whoAmI;
                    int num9 = npc.whoAmI;
                    for (int l = 0; l < 30; l++)
                    {
                        int num10 = 456;
                        if ((l - 2) % 4 == 0 && l < 26)
                        {
                            num10 = 455;
                        }
                        else if (l == 27)
                        {
                            num10 = 457;
                        }
                        else if (l == 28)
                        {
                            num10 = 458;
                        }
                        else if (l == 29)
                        {
                            num10 = 459;
                        }
                        int num11 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num10, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num11].ai[3] = (float)npc.whoAmI;
                        Main.npc[num11].realLife = npc.whoAmI;
                        Main.npc[num11].ai[1] = (float)num9;
                        Main.npc[num9].ai[0] = (float)num11;
                        NetMessage.SendData(23, -1, -1, null, num11, 0f, 0f, 0f, 0, 0, 0);
                        num9 = num11;
                    }
                }
                if (npc.type == 513 && npc.ai[0] == 0f)
                {
                    npc.ai[3] = (float)npc.whoAmI;
                    npc.realLife = npc.whoAmI;
                    int num12 = npc.whoAmI;
                    int num13 = Main.rand.Next(6, 10);
                    for (int m = 0; m < num13; m++)
                    {
                        int num14 = 514;
                        if (m == num13 - 1)
                        {
                            num14 = 515;
                        }
                        int num15 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num14, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num15].ai[3] = (float)npc.whoAmI;
                        Main.npc[num15].realLife = npc.whoAmI;
                        Main.npc[num15].ai[1] = (float)num12;
                        Main.npc[num12].ai[0] = (float)num15;
                        NetMessage.SendData(23, -1, -1, null, num15, 0f, 0f, 0f, 0, 0, 0);
                        num12 = num15;
                    }
                }
                if (npc.type == 510 && npc.ai[0] == 0f)
                {
                    npc.ai[3] = (float)npc.whoAmI;
                    npc.realLife = npc.whoAmI;
                    int num16 = npc.whoAmI;
                    int num17 = Main.rand.Next(12, 21);
                    for (int n = 0; n < num17; n++)
                    {
                        int num18 = 511;
                        if (n == num17 - 1)
                        {
                            num18 = 512;
                        }
                        int num19 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num18, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num19].ai[3] = (float)npc.whoAmI;
                        Main.npc[num19].realLife = npc.whoAmI;
                        Main.npc[num19].ai[1] = (float)num16;
                        Main.npc[num16].ai[0] = (float)num19;
                        NetMessage.SendData(23, -1, -1, null, num19, 0f, 0f, 0f, 0, 0, 0);
                        num16 = num19;
                    }
                }
                else if ((npc.type == 7 || npc.type == 8 || npc.type == 10 || npc.type == 11 || npc.type == 13 || npc.type == 14 || npc.type == 39 || npc.type == 40 || npc.type == 95 || npc.type == 96 || npc.type == 98 || npc.type == 99 || npc.type == 117 || npc.type == 118) && npc.ai[0] == 0f)
                {
                    if (npc.type == 7 || npc.type == 10 || npc.type == 13 || npc.type == 39 || npc.type == 95 || npc.type == 98 || npc.type == 117)
                    {
                        if (npc.type < 13 || npc.type > 15)
                        {
                            npc.ai[3] = (float)npc.whoAmI;
                            npc.realLife = npc.whoAmI;
                        }
                        npc.ai[2] = (float)Main.rand.Next(8, 13);
                        if (npc.type == 10)
                        {
                            npc.ai[2] = (float)Main.rand.Next(4, 7);
                        }
                        if (npc.type == 13)
                        {
                            npc.ai[2] = (float)Main.rand.Next(45, 56);
                            if (Main.expertMode)
                            {
                                npc.ai[2] = (float)((int)(npc.ai[2] * 1.1f));
                            }
                        }
                        if (npc.type == 39)
                        {
                            npc.ai[2] = (float)Main.rand.Next(12, 19);
                        }
                        if (npc.type == 95)
                        {
                            npc.ai[2] = (float)Main.rand.Next(6, 12);
                        }
                        if (npc.type == 98)
                        {
                            npc.ai[2] = (float)Main.rand.Next(20, 26);
                        }
                        if (npc.type == 117)
                        {
                            npc.ai[2] = (float)Main.rand.Next(3, 6);
                        }
                        npc.ai[0] = (float)NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), npc.type + 1, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                    }
                    else if ((npc.type == 8 || npc.type == 11 || npc.type == 14 || npc.type == 40 || npc.type == 96 || npc.type == 99 || npc.type == 118) && npc.ai[2] > 0f)
                    {
                        npc.ai[0] = (float)NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), npc.type, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                    }
                    else
                    {
                        npc.ai[0] = (float)NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), npc.type + 1, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                    }
                    if (npc.type < 13 || npc.type > 15)
                    {
                        Main.npc[(int)npc.ai[0]].ai[3] = npc.ai[3];
                        Main.npc[(int)npc.ai[0]].realLife = npc.realLife;
                    }
                    Main.npc[(int)npc.ai[0]].ai[1] = (float)npc.whoAmI;
                    Main.npc[(int)npc.ai[0]].ai[2] = npc.ai[2] - 1f;
                    npc.netUpdate = true;
                }
                if (npc.type == 412 && npc.ai[0] == 0f)
                {
                    npc.ai[3] = (float)npc.whoAmI;
                    npc.realLife = npc.whoAmI;
                    int num20 = npc.whoAmI;
                    int num21 = 30;
                    for (int num22 = 0; num22 < num21; num22++)
                    {
                        int num23 = 413;
                        if (num22 == num21 - 1)
                        {
                            num23 = 414;
                        }
                        int num24 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num23, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num24].ai[3] = (float)npc.whoAmI;
                        Main.npc[num24].realLife = npc.whoAmI;
                        Main.npc[num24].ai[1] = (float)num20;
                        Main.npc[num20].ai[0] = (float)num24;
                        NetMessage.SendData(23, -1, -1, null, num24, 0f, 0f, 0f, 0, 0, 0);
                        num20 = num24;
                    }
                }
                num5 = npc.type;
                if (num5 <= 100)
                {
                    if (num5 <= 12)
                    {
                        if (num5 - 8 > 1 && num5 - 11 > 1)
                        {
                            goto IL_1132;
                        }
                    }
                    else if (num5 - 40 > 1)
                    {
                        switch (num5)
                        {
                            case 88:
                            case 89:
                            case 90:
                            case 91:
                            case 92:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                                break;
                            case 93:
                            case 94:
                            case 95:
                            case 98:
                                goto IL_1132;
                            default:
                                goto IL_1132;
                        }
                    }
                }
                else if (num5 <= 414)
                {
                    if (num5 - 118 > 1 && num5 - 413 > 1)
                    {
                        goto IL_1132;
                    }
                }
                else if (num5 - 455 > 4 && num5 - 511 > 1 && num5 - 514 > 1)
                {
                    goto IL_1132;
                }
                if (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != npc.aiStyle)
                {
                    npc.life = 0;
                    npc.HitEffect(0, 10.0);
                    npc.active = false;
                    NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                }
            IL_1132:
                num5 = npc.type;
                if (num5 <= 99)
                {
                    if (num5 <= 11)
                    {
                        if (num5 - 7 > 1 && num5 - 10 > 1)
                        {
                            goto IL_1262;
                        }
                    }
                    else if (num5 - 39 > 1)
                    {
                        switch (num5)
                        {
                            case 87:
                            case 88:
                            case 89:
                            case 90:
                            case 91:
                            case 95:
                            case 96:
                            case 98:
                            case 99:
                                break;
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                                goto IL_1262;
                            default:
                                goto IL_1262;
                        }
                    }
                }
                else if (num5 <= 413)
                {
                    if (num5 - 117 > 1 && num5 - 412 > 1)
                    {
                        goto IL_1262;
                    }
                }
                else if (num5 - 454 > 4 && num5 - 510 > 1 && num5 - 513 > 1)
                {
                    goto IL_1262;
                }
                if (!Main.npc[(int)npc.ai[0]].active || Main.npc[(int)npc.ai[0]].aiStyle != npc.aiStyle)
                {
                    npc.life = 0;
                    npc.HitEffect(0, 10.0);
                    npc.active = false;
                    NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                }
            IL_1262:
                if (npc.type == 13 || npc.type == 14 || npc.type == 15)
                {
                    if (!Main.npc[(int)npc.ai[1]].active && !Main.npc[(int)npc.ai[0]].active)
                    {
                        npc.life = 0;
                        npc.HitEffect(0, 10.0);
                        npc.checkDead();
                        npc.active = false;
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                    }
                    if (npc.type == 13 && !Main.npc[(int)npc.ai[0]].active)
                    {
                        npc.life = 0;
                        npc.HitEffect(0, 10.0);
                        npc.checkDead();
                        npc.active = false;
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                    }
                    if (npc.type == 15 && !Main.npc[(int)npc.ai[1]].active)
                    {
                        npc.life = 0;
                        npc.HitEffect(0, 10.0);
                        npc.checkDead();
                        npc.active = false;
                        NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                    }
                    if (npc.type == 14 && (!Main.npc[(int)npc.ai[1]].active || Main.npc[(int)npc.ai[1]].aiStyle != npc.aiStyle))
                    {
                        npc.type = 13;
                        int whoAmI = npc.whoAmI;
                        float num25 = (float)npc.life / (float)npc.lifeMax;
                        float num26 = npc.ai[0];
                        npc.SetDefaultsKeepPlayerInteraction(npc.type);
                        npc.life = (int)((float)npc.lifeMax * num25);
                        npc.ai[0] = num26;
                        npc.TargetClosest(true);
                        npc.netUpdate = true;
                        npc.whoAmI = whoAmI;
                    }
                    if (npc.type == 14 && (!Main.npc[(int)npc.ai[0]].active || Main.npc[(int)npc.ai[0]].aiStyle != npc.aiStyle))
                    {
                        int whoAmI2 = npc.whoAmI;
                        float num27 = (float)npc.life / (float)npc.lifeMax;
                        float num28 = npc.ai[1];
                        npc.SetDefaultsKeepPlayerInteraction(npc.type);
                        npc.life = (int)((float)npc.lifeMax * num27);
                        npc.ai[1] = num28;
                        npc.TargetClosest(true);
                        npc.netUpdate = true;
                        npc.whoAmI = whoAmI2;
                    }
                }
                if (!npc.active && Main.netMode == 2)
                {
                    NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                }
            }
            int num29 = (int)(npc.position.X / 16f) - 1;
            int num30 = (int)((npc.position.X + (float)npc.width) / 16f) + 2;
            int num31 = (int)(npc.position.Y / 16f) - 1;
            int num32 = (int)((npc.position.Y + (float)npc.height) / 16f) + 2;
            if (num29 < 0)
            {
                num29 = 0;
            }
            if (num30 > Main.maxTilesX)
            {
                num30 = Main.maxTilesX;
            }
            if (num31 < 0)
            {
                num31 = 0;
            }
            if (num32 > Main.maxTilesY)
            {
                num32 = Main.maxTilesY;
            }
            bool flag2 = false;
            if (npc.type >= 87 && npc.type <= 92)
            {
                flag2 = true;
            }
            if (npc.type >= 454 && npc.type <= 459)
            {
                flag2 = true;
            }
            if (npc.type == 402 && npc.ai[1] == -1f)
            {
                flag2 = true;
            }
            if (npc.type >= 412 && npc.type <= 414)
            {
                flag2 = true;
            }
            if (!flag2)
            {
                for (int num33 = num29; num33 < num30; num33++)
                {
                    for (int num34 = num31; num34 < num32; num34++)
                    {
                        if (Main.tile[num33, num34] != null && ((Main.tile[num33, num34].nactive() && (Main.tileSolid[(int)Main.tile[num33, num34].type] || (Main.tileSolidTop[(int)Main.tile[num33, num34].type] && Main.tile[num33, num34].frameY == 0))) || Main.tile[num33, num34].liquid > 64))
                        {
                            Vector2 vector;
                            vector.X = (float)(num33 * 16);
                            vector.Y = (float)(num34 * 16);
                            if (npc.position.X + (float)npc.width > vector.X && npc.position.X < vector.X + 16f && npc.position.Y + (float)npc.height > vector.Y && npc.position.Y < vector.Y + 16f)
                            {
                                flag2 = true;
                                if (Main.rand.Next(100) == 0 && npc.type != 117 && Main.tile[num33, num34].nactive())
                                {
                                    WorldGen.KillTile(num33, num34, true, true, false);
                                }
                            }
                        }
                    }
                }
            }
            if (!flag2 && (npc.type == 7 || npc.type == 10 || npc.type == 13 || npc.type == 39 || npc.type == 95 || npc.type == 98 || npc.type == 117 || npc.type == 375 || npc.type == 454 || npc.type == 510 || npc.type == 513))
            {
                Rectangle rectangle = new Rectangle((int)npc.position.X, (int)npc.position.Y, npc.width, npc.height);
                int num35 = 1000;
                bool flag3 = true;
                for (int num36 = 0; num36 < 255; num36++)
                {
                    if (Main.player[num36].active)
                    {
                        Rectangle rectangle2 = new Rectangle((int)Main.player[num36].position.X - num35, (int)Main.player[num36].position.Y - num35, num35 * 2, num35 * 2);
                        if (rectangle.Intersects(rectangle2))
                        {
                            flag3 = false;
                            break;
                        }
                    }
                }
                if (flag3)
                {
                    flag2 = true;
                }
            }
            if ((npc.type >= 87 && npc.type <= 92) || (npc.type >= 454 && npc.type <= 459))
            {
                if (npc.velocity.X < 0f)
                {
                    npc.spriteDirection = 1;
                }
                else if (npc.velocity.X > 0f)
                {
                    npc.spriteDirection = -1;
                }
            }
            if (npc.type == 414)
            {
                if (npc.justHit)
                {
                    npc.localAI[3] = 3f;
                }
                if (npc.localAI[2] > 0f)
                {
                    npc.localAI[2] -= 16f;
                    if (npc.localAI[2] == 0f)
                    {
                        npc.localAI[2] = -128f;
                    }
                }
                else if (npc.localAI[2] < 0f)
                {
                    npc.localAI[2] += 16f;
                }
                else if (npc.localAI[3] > 0f)
                {
                    npc.localAI[2] = 128f;
                    npc.localAI[3] -= 1f;
                }
            }
            if (npc.type == 412)
            {
                Vector2 value = npc.Center + (npc.rotation - 1.57079637f).ToRotationVector2() * 8f;
                Vector2 value2 = npc.rotation.ToRotationVector2() * 16f;
                Dust expr_1AAB = Main.dust[Dust.NewDust(value + value2, 0, 0, 6, npc.velocity.X, npc.velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 3f)];
                expr_1AAB.noGravity = true;
                expr_1AAB.noLight = true;
                expr_1AAB.position -= new Vector2(4f);
                expr_1AAB.fadeIn = 1f;
                expr_1AAB.velocity = Vector2.Zero;
                Dust expr_1B33 = Main.dust[Dust.NewDust(value - value2, 0, 0, 6, npc.velocity.X, npc.velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 3f)];
                expr_1B33.noGravity = true;
                expr_1B33.noLight = true;
                expr_1B33.position -= new Vector2(4f);
                expr_1B33.fadeIn = 1f;
                expr_1B33.velocity = Vector2.Zero;
            }
            float num37 = 8f;
            float num38 = 0.07f;
            if (npc.type == 95)
            {
                num37 = 5.5f;
                num38 = 0.045f;
            }
            if (npc.type == 10)
            {
                num37 = 6f;
                num38 = 0.05f;
            }
            if (npc.type == 513)
            {
                num37 = 7f;
                num38 = 0.1f;
            }
            if (npc.type == 13)
            {
                num37 = 10f;
                num38 = 0.07f;
                if (Main.expertMode)
                {
                    num37 = 12f;
                    num38 = 0.15f;
                }
            }
            if (npc.type == 510)
            {
                if (!Main.player[npc.target].dead && Main.player[npc.target].ZoneSandstorm)
                {
                    num37 = 16f;
                    num38 = 0.35f;
                }
                else
                {
                    num37 = 10f;
                    num38 = 0.25f;
                }
            }
            if (npc.type == 87)
            {
                num37 = 11f;
                num38 = 0.25f;
            }
            if (npc.type == 375)
            {
                num37 = 6f;
                num38 = 0.15f;
            }
            if (npc.type == 454)
            {
                num37 = 20f;
                num38 = 0.55f;
            }
            if (npc.type == 402)
            {
                num37 = 6f;
                num38 = 0.2f;
            }
            if (npc.type == 117 && Main.wof >= 0)
            {
                float expr_1CED = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
                if ((double)expr_1CED < 0.5)
                {
                    num37 += 1f;
                    num38 += 0.1f;
                }
                if ((double)expr_1CED < 0.25)
                {
                    num37 += 1f;
                    num38 += 0.1f;
                }
                if ((double)expr_1CED < 0.1)
                {
                    num37 += 2f;
                    num38 += 0.1f;
                }
            }
            Vector2 vector2 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
            float num39 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
            float num40 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
            if (npc.type == 412)
            {
                num37 = 10f;
                num38 = 0.3f;
                int num41 = -1;
                int num42 = (int)(Main.player[npc.target].Center.X / 16f);
                int num43 = (int)(Main.player[npc.target].Center.Y / 16f);
                for (int num44 = num42 - 2; num44 <= num42 + 2; num44++)
                {
                    for (int num45 = num43; num45 <= num43 + 15; num45++)
                    {
                        if (WorldGen.SolidTile2(num44, num45))
                        {
                            num41 = num45;
                            break;
                        }
                    }
                    if (num41 > 0)
                    {
                        break;
                    }
                }
                if (num41 > 0)
                {
                    num41 *= 16;
                    float num46 = (float)(num41 - 800);
                    if (Main.player[npc.target].position.Y > num46)
                    {
                        num40 = num46;
                        if (Math.Abs(npc.Center.X - Main.player[npc.target].Center.X) < 500f)
                        {
                            if (npc.velocity.X > 0f)
                            {
                                num39 = Main.player[npc.target].Center.X + 600f;
                            }
                            else
                            {
                                num39 = Main.player[npc.target].Center.X - 600f;
                            }
                        }
                    }
                }
                else
                {
                    num37 = 14f;
                    num38 = 0.5f;
                }
                float num47 = num37 * 1.3f;
                float num48 = num37 * 0.7f;
                float num49 = npc.velocity.Length();
                if (num49 > 0f)
                {
                    if (num49 > num47)
                    {
                        npc.velocity.Normalize();
                        npc.velocity *= num47;
                    }
                    else if (num49 < num48)
                    {
                        npc.velocity.Normalize();
                        npc.velocity *= num48;
                    }
                }
                if (num41 > 0)
                {
                    for (int num50 = 0; num50 < 200; num50++)
                    {
                        if (Main.npc[num50].active && Main.npc[num50].type == npc.type && num50 != npc.whoAmI)
                        {
                            Vector2 vector3 = Main.npc[num50].Center - npc.Center;
                            if (vector3.Length() < 400f)
                            {
                                vector3.Normalize();
                                vector3 *= 1000f;
                                num39 -= vector3.X;
                                num40 -= vector3.Y;
                            }
                        }
                    }
                }
                else
                {
                    for (int num51 = 0; num51 < 200; num51++)
                    {
                        if (Main.npc[num51].active && Main.npc[num51].type == npc.type && num51 != npc.whoAmI)
                        {
                            Vector2 vector4 = Main.npc[num51].Center - npc.Center;
                            if (vector4.Length() < 60f)
                            {
                                vector4.Normalize();
                                vector4 *= 200f;
                                num39 -= vector4.X;
                                num40 -= vector4.Y;
                            }
                        }
                    }
                }
            }
            num39 = (float)((int)(num39 / 16f) * 16);
            num40 = (float)((int)(num40 / 16f) * 16);
            vector2.X = (float)((int)(vector2.X / 16f) * 16);
            vector2.Y = (float)((int)(vector2.Y / 16f) * 16);
            num39 -= vector2.X;
            num40 -= vector2.Y;
            if (npc.type == 375)
            {
                num39 *= -1f;
                num40 *= -1f;
            }
            float num52 = (float)Math.Sqrt((double)(num39 * num39 + num40 * num40));
            if (npc.ai[1] > 0f && npc.ai[1] < (float)Main.npc.Length)
            {
                try
                {
                    vector2 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    num39 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - vector2.X;
                    num40 = Main.npc[(int)npc.ai[1]].position.Y + (float)(Main.npc[(int)npc.ai[1]].height / 2) - vector2.Y;
                }
                catch
                {
                }
                npc.rotation = (float)Math.Atan2((double)num40, (double)num39) + 1.57f;
                num52 = (float)Math.Sqrt((double)(num39 * num39 + num40 * num40));
                int num53 = npc.width;
                if (npc.type >= 87 && npc.type <= 92)
                {
                    num53 = 42;
                }
                if (npc.type >= 454 && npc.type <= 459)
                {
                    num53 = 36;
                }
                if (npc.type >= 13 && npc.type <= 15)
                {
                    num53 = (int)((float)num53 * npc.scale);
                }
                if (npc.type >= 412 && npc.type <= 414)
                {
                    num53 += 6;
                }
                num52 = (num52 - (float)num53) / num52;
                num39 *= num52;
                num40 *= num52;
                npc.velocity = Vector2.Zero;
                npc.position.X = npc.position.X + num39;
                npc.position.Y = npc.position.Y + num40;
                if (npc.type >= 87 && npc.type <= 92)
                {
                    if (num39 < 0f)
                    {
                        npc.spriteDirection = 1;
                    }
                    else if (num39 > 0f)
                    {
                        npc.spriteDirection = -1;
                    }
                }
                if (npc.type >= 454 && npc.type <= 459)
                {
                    if (num39 < 0f)
                    {
                        npc.spriteDirection = 1;
                        return;
                    }
                    if (num39 > 0f)
                    {
                        npc.spriteDirection = -1;
                        return;
                    }
                }
            }
            else
            {
                if (!flag2)
                {
                    npc.TargetClosest(true);
                    npc.velocity.Y = npc.velocity.Y + 0.11f;
                    if (npc.velocity.Y > num37)
                    {
                        npc.velocity.Y = num37;
                    }
                    if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num37 * 0.4)
                    {
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X - num38 * 1.1f;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + num38 * 1.1f;
                        }
                    }
                    else if (npc.velocity.Y == num37)
                    {
                        if (npc.velocity.X < num39)
                        {
                            npc.velocity.X = npc.velocity.X + num38;
                        }
                        else if (npc.velocity.X > num39)
                        {
                            npc.velocity.X = npc.velocity.X - num38;
                        }
                    }
                    else if (npc.velocity.Y > 4f)
                    {
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X = npc.velocity.X + num38 * 0.9f;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X - num38 * 0.9f;
                        }
                    }
                }
                else
                {
                    if (npc.type != 87 && npc.type != 117 && npc.type != 454 && npc.type != 412 && npc.soundDelay == 0)
                    {
                        float num54 = num52 / 40f;
                        if (num54 < 10f)
                        {
                            num54 = 10f;
                        }
                        if (num54 > 20f)
                        {
                            num54 = 20f;
                        }
                        npc.soundDelay = (int)num54;
                        Main.PlaySound(15, (int)npc.position.X, (int)npc.position.Y, 1, 1f, 0f);
                    }
                    num52 = (float)Math.Sqrt((double)(num39 * num39 + num40 * num40));
                    float num55 = Math.Abs(num39);
                    float num56 = Math.Abs(num40);
                    float num57 = num37 / num52;
                    num39 *= num57;
                    num40 *= num57;
                    bool flag4 = false;
                    if ((npc.type == 7 || npc.type == 13) && ((!Main.player[npc.target].ZoneCorrupt && !Main.player[npc.target].ZoneCrimson) || Main.player[npc.target].dead))
                    {
                        flag4 = true;
                    }
                    if ((npc.type == 513 && (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0 && !Main.player[npc.target].ZoneSandstorm && !Main.player[npc.target].ZoneUndergroundDesert) || Main.player[npc.target].dead)
                    {
                        flag4 = true;
                    }
                    if ((npc.type == 510 && (double)Main.player[npc.target].position.Y < Main.worldSurface * 16.0 && !Main.player[npc.target].ZoneSandstorm && !Main.player[npc.target].ZoneUndergroundDesert) || Main.player[npc.target].dead)
                    {
                        flag4 = true;
                    }
                    if (flag4)
                    {
                        bool flag5 = true;
                        for (int num58 = 0; num58 < 255; num58++)
                        {
                            if (Main.player[num58].active && !Main.player[num58].dead && Main.player[num58].ZoneCorrupt)
                            {
                                flag5 = false;
                            }
                        }
                        if (flag5)
                        {
                            if (Main.netMode != 1 && (double)(npc.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
                            {
                                npc.active = false;
                                int num59 = (int)npc.ai[0];
                                while (num59 > 0 && num59 < 200 && Main.npc[num59].active && Main.npc[num59].aiStyle == npc.aiStyle)
                                {
                                    int arg_2853_0 = (int)Main.npc[num59].ai[0];
                                    Main.npc[num59].active = false;
                                    npc.life = 0;
                                    if (Main.netMode == 2)
                                    {
                                        NetMessage.SendData(23, -1, -1, null, num59, 0f, 0f, 0f, 0, 0, 0);
                                    }
                                    num59 = arg_2853_0;
                                }
                                if (Main.netMode == 2)
                                {
                                    NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                                }
                            }
                            num39 = 0f;
                            num40 = num37;
                        }
                    }
                    bool flag6 = false;
                    if (npc.type == 87)
                    {
                        if (((npc.velocity.X > 0f && num39 < 0f) || (npc.velocity.X < 0f && num39 > 0f) || (npc.velocity.Y > 0f && num40 < 0f) || (npc.velocity.Y < 0f && num40 > 0f)) && Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) > num38 / 2f && num52 < 300f)
                        {
                            flag6 = true;
                            if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < num37)
                            {
                                npc.velocity *= 1.1f;
                            }
                        }
                        if (npc.position.Y > Main.player[npc.target].position.Y || (double)(Main.player[npc.target].position.Y / 16f) > Main.worldSurface || Main.player[npc.target].dead)
                        {
                            flag6 = true;
                            if (Math.Abs(npc.velocity.X) < num37 / 2f)
                            {
                                if (npc.velocity.X == 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - (float)npc.direction;
                                }
                                npc.velocity.X = npc.velocity.X * 1.1f;
                            }
                            else if (npc.velocity.Y > -num37)
                            {
                                npc.velocity.Y = npc.velocity.Y - num38;
                            }
                        }
                    }
                    if (npc.type == 454)
                    {
                        if (((npc.velocity.X > 0f && num39 < 0f) || (npc.velocity.X < 0f && num39 > 0f) || (npc.velocity.Y > 0f && num40 < 0f) || (npc.velocity.Y < 0f && num40 > 0f)) && Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) > num38 / 2f && num52 < 300f)
                        {
                            flag6 = true;
                            if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < num37)
                            {
                                npc.velocity *= 1.1f;
                            }
                        }
                        if (npc.position.Y > Main.player[npc.target].position.Y || Main.player[npc.target].dead)
                        {
                            flag6 = true;
                            if (Math.Abs(npc.velocity.X) < num37 / 2f)
                            {
                                if (npc.velocity.X == 0f)
                                {
                                    npc.velocity.X = npc.velocity.X - (float)npc.direction;
                                }
                                npc.velocity.X = npc.velocity.X * 1.1f;
                            }
                            else if (npc.velocity.Y > -num37)
                            {
                                npc.velocity.Y = npc.velocity.Y - num38;
                            }
                        }
                    }
                    if (!flag6)
                    {
                        if ((npc.velocity.X > 0f && num39 > 0f) || (npc.velocity.X < 0f && num39 < 0f) || (npc.velocity.Y > 0f && num40 > 0f) || (npc.velocity.Y < 0f && num40 < 0f))
                        {
                            if (npc.velocity.X < num39)
                            {
                                npc.velocity.X = npc.velocity.X + num38;
                            }
                            else if (npc.velocity.X > num39)
                            {
                                npc.velocity.X = npc.velocity.X - num38;
                            }
                            if (npc.velocity.Y < num40)
                            {
                                npc.velocity.Y = npc.velocity.Y + num38;
                            }
                            else if (npc.velocity.Y > num40)
                            {
                                npc.velocity.Y = npc.velocity.Y - num38;
                            }
                            if ((double)Math.Abs(num40) < (double)num37 * 0.2 && ((npc.velocity.X > 0f && num39 < 0f) || (npc.velocity.X < 0f && num39 > 0f)))
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num38 * 2f;
                                }
                                else
                                {
                                    npc.velocity.Y = npc.velocity.Y - num38 * 2f;
                                }
                            }
                            if ((double)Math.Abs(num39) < (double)num37 * 0.2 && ((npc.velocity.Y > 0f && num40 < 0f) || (npc.velocity.Y < 0f && num40 > 0f)))
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num38 * 2f;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X - num38 * 2f;
                                }
                            }
                        }
                        else if (num55 > num56)
                        {
                            if (npc.velocity.X < num39)
                            {
                                npc.velocity.X = npc.velocity.X + num38 * 1.1f;
                            }
                            else if (npc.velocity.X > num39)
                            {
                                npc.velocity.X = npc.velocity.X - num38 * 1.1f;
                            }
                            if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num37 * 0.5)
                            {
                                if (npc.velocity.Y > 0f)
                                {
                                    npc.velocity.Y = npc.velocity.Y + num38;
                                }
                                else
                                {
                                    npc.velocity.Y = npc.velocity.Y - num38;
                                }
                            }
                        }
                        else
                        {
                            if (npc.velocity.Y < num40)
                            {
                                npc.velocity.Y = npc.velocity.Y + num38 * 1.1f;
                            }
                            else if (npc.velocity.Y > num40)
                            {
                                npc.velocity.Y = npc.velocity.Y - num38 * 1.1f;
                            }
                            if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num37 * 0.5)
                            {
                                if (npc.velocity.X > 0f)
                                {
                                    npc.velocity.X = npc.velocity.X + num38;
                                }
                                else
                                {
                                    npc.velocity.X = npc.velocity.X - num38;
                                }
                            }
                        }
                    }
                }
                npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) + 1.57f;
                if (npc.type == 7 || npc.type == 10 || npc.type == 13 || npc.type == 39 || npc.type == 95 || npc.type == 98 || npc.type == 117 || npc.type == 510 || npc.type == 513)
                {
                    if (flag2)
                    {
                        if (npc.localAI[0] != 1f)
                        {
                            npc.netUpdate = true;
                        }
                        npc.localAI[0] = 1f;
                    }
                    else
                    {
                        if (npc.localAI[0] != 0f)
                        {
                            npc.netUpdate = true;
                        }
                        npc.localAI[0] = 0f;
                    }
                    if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
                    {
                        npc.netUpdate = true;
                    }
                }
                if (npc.type == 454)
                {
                    float num60 = Vector2.Distance(Main.player[npc.target].Center, npc.Center);
                    int num61 = 0;
                    if (Vector2.Normalize(Main.player[npc.target].Center - npc.Center).ToRotation().AngleTowards(npc.velocity.ToRotation(), 1.57079637f) == npc.velocity.ToRotation() && num60 < 350f)
                    {
                        num61 = 4;
                    }
                    if ((double)num61 > npc.frameCounter)
                    {
                        npc.frameCounter += 1.0;
                    }
                    if ((double)num61 < npc.frameCounter)
                    {
                        npc.frameCounter -= 1.0;
                    }
                    if (npc.frameCounter < 0.0)
                    {
                        npc.frameCounter = 0.0;
                    }
                    if (npc.frameCounter > 4.0)
                    {
                        npc.frameCounter = 4.0;
                    }
                }
            }
        }

        // Token: 0x0600023B RID: 571 RVA: 0x0015A744 File Offset: 0x00158944
        private static void AI_007_TownEntities(NPC npc)
        {
            int maxValue = 300;
            bool flag = Main.raining;
            if (!Main.dayTime)
            {
                flag = true;
            }
            if (Main.eclipse)
            {
                flag = true;
            }
            if (Main.slimeRain)
            {
                flag = true;
            }
            float num = 1f;
            if (Main.expertMode)
            {
                npc.defense = (npc.dryadWard ? (npc.defDefense + 10) : npc.defDefense);
            }
            else
            {
                npc.defense = (npc.dryadWard ? (npc.defDefense + 6) : npc.defDefense);
            }
            if (npc.townNPC || npc.type == 453)
            {
                if (NpcMgr.downedBoss1)
                {
                    num += 0.1f;
                    npc.defense += 3;
                }
                if (NpcMgr.downedBoss2)
                {
                    num += 0.1f;
                    npc.defense += 3;
                }
                if (NpcMgr.downedBoss3)
                {
                    num += 0.1f;
                    npc.defense += 3;
                }
                if (NpcMgr.downedQueenBee)
                {
                    num += 0.1f;
                    npc.defense += 3;
                }
                if (Main.hardMode)
                {
                    num += 0.4f;
                    npc.defense += 12;
                }
                if (NpcMgr.downedMechBoss1)
                {
                    num += 0.15f;
                    npc.defense += 6;
                }
                if (NpcMgr.downedMechBoss2)
                {
                    num += 0.15f;
                    npc.defense += 6;
                }
                if (NpcMgr.downedMechBoss3)
                {
                    num += 0.15f;
                    npc.defense += 6;
                }
                if (NpcMgr.downedPlantBoss)
                {
                    num += 0.15f;
                    npc.defense += 8;
                }
                if (NpcMgr.downedGolemBoss)
                {
                    num += 0.15f;
                    npc.defense += 8;
                }
                if (NpcMgr.downedAncientCultist)
                {
                    num += 0.15f;
                    npc.defense += 8;
                }
            }
            if (npc.type == 142 && Main.netMode != 1 && !Main.xMas)
            {
                npc.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
                if (Main.netMode == 2)
                {
                    NetMessage.SendData(28, -1, -1, null, npc.whoAmI, 9999f, 0f, 0f, 0, 0, 0);
                }
            }
            if ((npc.type == 148 || npc.type == 149) && npc.localAI[0] == 0f)
            {
                npc.localAI[0] = (float)Main.rand.Next(1, 5);
            }
            if (npc.type == 124)
            {
                bool flag2 = false;
                for (int i = 0; i < 1000; i++)
                {
                    if (Main.projectile[i].active && Main.projectile[i].type == 582 && Main.projectile[i].ai[1] == (float)npc.whoAmI)
                    {
                        flag2 = true;
                        break;
                    }
                }
                npc.localAI[0] = (float)flag2.ToInt();
            }
            if ((npc.type == 362 || npc.type == 364) && Main.netMode != 1 && (npc.velocity.Y > 4f || npc.velocity.Y < -4f || npc.wet))
            {
                int direction = npc.direction;
                npc.Transform(npc.type + 1);
                npc.TargetClosest(true);
                npc.direction = direction;
                npc.netUpdate = true;
                return;
            }
            int num2 = npc.type;
            if (num2 <= 124)
            {
                if (num2 != 107)
                {
                    if (num2 != 108)
                    {
                        if (num2 == 124)
                        {
                            NpcMgr.savedMech = true;
                        }
                    }
                    else
                    {
                        NpcMgr.savedWizard = true;
                    }
                }
                else
                {
                    NpcMgr.savedGoblin = true;
                }
            }
            else if (num2 <= 369)
            {
                if (num2 != 353)
                {
                    if (num2 == 369)
                    {
                        NpcMgr.savedAngler = true;
                    }
                }
                else
                {
                    NpcMgr.savedStylist = true;
                }
            }
            else if (num2 != 441)
            {
                if (num2 == 550)
                {
                    NpcMgr.savedBartender = true;
                }
            }
            else
            {
                NpcMgr.savedTaxCollector = true;
            }
            if (npc.type >= 0 && npc.type < 580 && NPCID.Sets.TownCritter[npc.type] && npc.target == 255)
            {
                npc.TargetClosest(true);
                if (npc.position.X < Main.player[npc.target].position.X)
                {
                    npc.direction = 1;
                    npc.spriteDirection = npc.direction;
                }
                if (npc.position.X > Main.player[npc.target].position.X)
                {
                    npc.direction = -1;
                    npc.spriteDirection = npc.direction;
                }
                if (npc.homeTileX == -1)
                {
                    npc.homeTileX = (int)((npc.position.X + (float)(npc.width / 2)) / 16f);
                }
            }
            else if (npc.homeTileX == -1 && npc.homeTileY == -1 && npc.velocity.Y == 0f)
            {
                npc.homeTileX = (int)npc.Center.X / 16;
                npc.homeTileY = (int)(npc.position.Y + (float)npc.height + 4f) / 16;
            }
            bool flag3 = false;
            int num3 = npc.homeTileY;
            if (npc.type == 441)
            {
                NPC.taxCollector = true;
            }
            npc.directionY = -1;
            if (npc.direction == 0)
            {
                npc.direction = 1;
            }
            for (int j = 0; j < 255; j++)
            {
                if (Main.player[j].active && Main.player[j].talkNPC == npc.whoAmI)
                {
                    flag3 = true;
                    if (npc.ai[0] != 0f)
                    {
                        npc.netUpdate = true;
                    }
                    npc.ai[0] = 0f;
                    npc.ai[1] = 300f;
                    npc.localAI[3] = 100f;
                    if (Main.player[j].position.X + (float)(Main.player[j].width / 2) < npc.position.X + (float)(npc.width / 2))
                    {
                        npc.direction = -1;
                    }
                    else
                    {
                        npc.direction = 1;
                    }
                }
            }
            if (npc.ai[3] == 1f)
            {
                npc.life = -1;
                npc.HitEffect(0, 10.0);
                npc.active = false;
                npc.netUpdate = true;
                if (npc.type == 37)
                {
                    Main.PlaySound(15, (int)npc.position.X, (int)npc.position.Y, 0, 1f, 0f);
                }
                return;
            }
            if (npc.type == 37 && Main.netMode != 1)
            {
                npc.homeless = false;
                npc.homeTileX = Main.dungeonX;
                npc.homeTileY = Main.dungeonY;
                if (NpcMgr.downedBoss3)
                {
                    npc.ai[3] = 1f;
                    npc.netUpdate = true;
                }
            }
            if (Main.netMode != 1 && npc.homeTileY > 0)
            {
                while (!WorldGen.SolidTile(npc.homeTileX, num3) && num3 < Main.maxTilesY - 20)
                {
                    num3++;
                }
            }
            if (npc.type == 368)
            {
                npc.homeless = true;
                if (!Main.dayTime)
                {
                    npc.homeTileX = (int)(npc.Center.X / 16f);
                    npc.homeTileY = (int)(npc.position.Y + (float)npc.height + 2f) / 16;
                    if (!flag3 && npc.ai[0] == 0f)
                    {
                        npc.ai[0] = 1f;
                        npc.ai[1] = 200f;
                    }
                    flag = false;
                }
            }
            if (npc.type == 369 && npc.homeless && npc.wet)
            {
                if (npc.Center.X / 16f < 380f || npc.Center.X / 16f > (float)(Main.maxTilesX - 380))
                {
                    npc.homeTileX = Main.spawnTileX;
                    npc.homeTileY = Main.spawnTileY;
                    npc.ai[0] = 1f;
                    npc.ai[1] = 200f;
                }
                if (npc.position.X / 16f < 200f)
                {
                    npc.direction = 1;
                }
                else if (npc.position.X / 16f > (float)(Main.maxTilesX - 200))
                {
                    npc.direction = -1;
                }
            }
            int num4 = (int)(npc.position.X + (float)(npc.width / 2)) / 16;
            int num5 = (int)(npc.position.Y + (float)npc.height + 1f) / 16;
            if (!WorldGen.InWorld(num4, num5, 0) || Main.tile[num4, num5] == null)
            {
                return;
            }
            if (!npc.homeless && Main.netMode != 1 && npc.townNPC && (flag || Main.tileDungeon[(int)Main.tile[num4, num5].type]) && (num4 != npc.homeTileX || num5 != num3))
            {
                bool flag4 = true;
                for (int k = 0; k < 2; k++)
                {
                    Rectangle rectangle = new Rectangle((int)(npc.position.X + (float)(npc.width / 2) - (float)(NpcMgr.sWidth / 2) - (float)NpcMgr.safeRangeX), (int)(npc.position.Y + (float)(npc.height / 2) - (float)(NpcMgr.sHeight / 2) - (float)NpcMgr.safeRangeY), NpcMgr.sWidth + NpcMgr.safeRangeX * 2, NpcMgr.sHeight + NpcMgr.safeRangeY * 2);
                    if (k == 1)
                    {
                        rectangle = new Rectangle(npc.homeTileX * 16 + 8 - NpcMgr.sWidth / 2 - NpcMgr.safeRangeX, num3 * 16 + 8 - NpcMgr.sHeight / 2 - NpcMgr.safeRangeY, NpcMgr.sWidth + NpcMgr.safeRangeX * 2, NpcMgr.sHeight + NpcMgr.safeRangeY * 2);
                    }
                    for (int l = 0; l < 255; l++)
                    {
                        if (Main.player[l].active)
                        {
                            Rectangle rectangle2 = new Rectangle((int)Main.player[l].position.X, (int)Main.player[l].position.Y, Main.player[l].width, Main.player[l].height);
                            if (rectangle2.Intersects(rectangle))
                            {
                                flag4 = false;
                                break;
                            }
                        }
                        if (!flag4)
                        {
                            break;
                        }
                    }
                }
                if (flag4)
                {
                    if (npc.type == 37 || !Collision.SolidTiles(npc.homeTileX - 1, npc.homeTileX + 1, num3 - 3, num3 - 1))
                    {
                        npc.velocity.X = 0f;
                        npc.velocity.Y = 0f;
                        npc.position.X = (float)(npc.homeTileX * 16 + 8 - npc.width / 2);
                        npc.position.Y = (float)(num3 * 16 - npc.height) - 0.1f;
                        npc.netUpdate = true;
                    }
                    else
                    {
                        npc.homeless = true;
                        WorldGen.QuickFindHome(npc.whoAmI);
                    }
                }
            }
            bool flag5 = npc.type == 300 || npc.type == 447;
            float num6 = 200f;
            if (NPCID.Sets.DangerDetectRange[npc.type] != -1)
            {
                num6 = (float)NPCID.Sets.DangerDetectRange[npc.type];
            }
            bool flag6 = false;
            bool flag7 = false;
            float num7 = -1f;
            float num8 = -1f;
            int num9 = 0;
            int num10 = -1;
            int num11 = -1;
            if (Main.netMode != 1 && !flag3)
            {
                for (int m = 0; m < 200; m++)
                {
                    if (Main.npc[m].active && !Main.npc[m].friendly && Main.npc[m].damage > 0 && Main.npc[m].Distance(npc.Center) < num6 && (npc.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[m].netID)))
                    {
                        flag6 = true;
                        float num12 = Main.npc[m].Center.X - npc.Center.X;
                        if (num12 < 0f && (num7 == -1f || num12 > num7))
                        {
                            num7 = num12;
                            num10 = m;
                        }
                        if (num12 > 0f && (num8 == -1f || num12 < num8))
                        {
                            num8 = num12;
                            num11 = m;
                        }
                    }
                }
                if (flag6)
                {
                    if (num7 == -1f)
                    {
                        num9 = 1;
                    }
                    else if (num8 == -1f)
                    {
                        num9 = -1;
                    }
                    else
                    {
                        num9 = (num8 < -num7).ToDirectionInt();
                    }
                    float num13 = 0f;
                    if (num7 != -1f)
                    {
                        num13 = -num7;
                    }
                    if (num13 == 0f || (num8 < num13 && num8 > 0f))
                    {
                        num13 = num8;
                    }
                    if (npc.ai[0] == 8f)
                    {
                        if (npc.direction == -num9)
                        {
                            npc.ai[0] = 1f;
                            npc.ai[1] = (float)(300 + Main.rand.Next(300));
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                    else if (npc.ai[0] != 10f && npc.ai[0] != 12f && npc.ai[0] != 13f && npc.ai[0] != 14f && npc.ai[0] != 15f)
                    {
                        if (NPCID.Sets.PrettySafe[npc.type] != -1 && (float)NPCID.Sets.PrettySafe[npc.type] < num13)
                        {
                            flag6 = false;
                            flag7 = true;
                        }
                        else if (npc.ai[0] != 1f)
                        {
                            if (npc.ai[0] == 3f || npc.ai[0] == 4f || npc.ai[0] == 16f || npc.ai[0] == 17f)
                            {
                                NPC nPC = Main.npc[(int)npc.ai[2]];
                                if (nPC.active)
                                {
                                    nPC.ai[0] = 1f;
                                    nPC.ai[1] = (float)(120 + Main.rand.Next(120));
                                    nPC.ai[2] = 0f;
                                    nPC.localAI[3] = 0f;
                                    nPC.direction = -num9;
                                    nPC.netUpdate = true;
                                }
                            }
                            npc.ai[0] = 1f;
                            npc.ai[1] = (float)(120 + Main.rand.Next(120));
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.direction = -num9;
                            npc.netUpdate = true;
                        }
                        else if (npc.ai[0] == 1f && npc.direction != -num9)
                        {
                            npc.direction = -num9;
                            npc.netUpdate = true;
                        }
                    }
                }
            }
            if (npc.ai[0] == 0f)
            {
                if (npc.localAI[3] > 0f)
                {
                    npc.localAI[3] -= 1f;
                }
                if (flag && !flag3 && !NPCID.Sets.TownCritter[npc.type])
                {
                    if (Main.netMode != 1)
                    {
                        if (num4 == npc.homeTileX && num5 == num3)
                        {
                            if (npc.velocity.X != 0f)
                            {
                                npc.netUpdate = true;
                            }
                            if (npc.velocity.X > 0.1f)
                            {
                                npc.velocity.X = npc.velocity.X - 0.1f;
                            }
                            else if (npc.velocity.X < -0.1f)
                            {
                                npc.velocity.X = npc.velocity.X + 0.1f;
                            }
                            else
                            {
                                npc.velocity.X = 0f;
                            }
                        }
                        else
                        {
                            if (num4 > npc.homeTileX)
                            {
                                npc.direction = -1;
                            }
                            else
                            {
                                npc.direction = 1;
                            }
                            npc.ai[0] = 1f;
                            npc.ai[1] = (float)(200 + Main.rand.Next(200));
                            npc.ai[2] = 0f;
                            npc.localAI[3] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                }
                else
                {
                    if (flag5)
                    {
                        npc.velocity.X = npc.velocity.X * 0.5f;
                    }
                    if (npc.velocity.X > 0.1f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                    }
                    else if (npc.velocity.X < -0.1f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                    }
                    else
                    {
                        npc.velocity.X = 0f;
                    }
                    if (Main.netMode != 1)
                    {
                        if (npc.ai[1] > 0f)
                        {
                            npc.ai[1] -= 1f;
                        }
                        if (npc.ai[1] <= 0f)
                        {
                            npc.ai[0] = 1f;
                            npc.ai[1] = (float)(200 + Main.rand.Next(300));
                            npc.ai[2] = 0f;
                            if (NPCID.Sets.TownCritter[npc.type])
                            {
                                npc.ai[1] += (float)Main.rand.Next(200, 400);
                            }
                            npc.localAI[3] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                }
                if (Main.netMode != 1 && (!flag || (num4 == npc.homeTileX && num5 == num3)))
                {
                    if (num4 < npc.homeTileX - 25 || num4 > npc.homeTileX + 25)
                    {
                        if (npc.localAI[3] == 0f)
                        {
                            if (num4 < npc.homeTileX - 50 && npc.direction == -1)
                            {
                                npc.direction = 1;
                                npc.netUpdate = true;
                            }
                            else if (num4 > npc.homeTileX + 50 && npc.direction == 1)
                            {
                                npc.direction = -1;
                                npc.netUpdate = true;
                            }
                        }
                    }
                    else if (Main.rand.Next(80) == 0 && npc.localAI[3] == 0f)
                    {
                        npc.localAI[3] = 200f;
                        npc.direction *= -1;
                        npc.netUpdate = true;
                    }
                }
            }
            else if (npc.ai[0] == 1f)
            {
                if ((Main.netMode != 1 & flag) && num4 == npc.homeTileX && num5 == npc.homeTileY && !NPCID.Sets.TownCritter[npc.type])
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = (float)(200 + Main.rand.Next(200));
                    npc.localAI[3] = 60f;
                    npc.netUpdate = true;
                }
                else
                {
                    bool flag8 = Collision.DrownCollision(npc.position, npc.width, npc.height, 1f);
                    if (!flag8)
                    {
                        if (Main.netMode != 1 && !npc.homeless && !Main.tileDungeon[(int)Main.tile[num4, num5].type] && (num4 < npc.homeTileX - 35 || num4 > npc.homeTileX + 35))
                        {
                            if (npc.position.X < (float)(npc.homeTileX * 16) && npc.direction == -1)
                            {
                                npc.ai[1] -= 5f;
                            }
                            else if (npc.position.X > (float)(npc.homeTileX * 16) && npc.direction == 1)
                            {
                                npc.ai[1] -= 5f;
                            }
                        }
                        npc.ai[1] -= 1f;
                    }
                    if (npc.ai[1] <= 0f)
                    {
                        npc.ai[0] = 0f;
                        npc.ai[1] = (float)(300 + Main.rand.Next(300));
                        npc.ai[2] = 0f;
                        if (NPCID.Sets.TownCritter[npc.type])
                        {
                            npc.ai[1] -= (float)Main.rand.Next(100);
                        }
                        else
                        {
                            npc.ai[1] += (float)Main.rand.Next(900);
                        }
                        npc.localAI[3] = 60f;
                        npc.netUpdate = true;
                    }
                    if (npc.closeDoor && ((npc.position.X + (float)(npc.width / 2)) / 16f > (float)(npc.doorX + 2) || (npc.position.X + (float)(npc.width / 2)) / 16f < (float)(npc.doorX - 2)))
                    {
                        Tile tileSafely = Framing.GetTileSafely(npc.doorX, npc.doorY);
                        if (tileSafely.type == 11)
                        {
                            if (WorldGen.CloseDoor(npc.doorX, npc.doorY, false))
                            {
                                npc.closeDoor = false;
                                NetMessage.SendData(19, -1, -1, null, 1, (float)npc.doorX, (float)npc.doorY, (float)npc.direction, 0, 0, 0);
                            }
                            if ((npc.position.X + (float)(npc.width / 2)) / 16f > (float)(npc.doorX + 4) || (npc.position.X + (float)(npc.width / 2)) / 16f < (float)(npc.doorX - 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f > (float)(npc.doorY + 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f < (float)(npc.doorY - 4))
                            {
                                npc.closeDoor = false;
                            }
                        }
                        else if (tileSafely.type == 389)
                        {
                            if (WorldGen.ShiftTallGate(npc.doorX, npc.doorY, true))
                            {
                                npc.closeDoor = false;
                                NetMessage.SendData(19, -1, -1, null, 5, (float)npc.doorX, (float)npc.doorY, 0f, 0, 0, 0);
                            }
                            if ((npc.position.X + (float)(npc.width / 2)) / 16f > (float)(npc.doorX + 4) || (npc.position.X + (float)(npc.width / 2)) / 16f < (float)(npc.doorX - 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f > (float)(npc.doorY + 4) || (npc.position.Y + (float)(npc.height / 2)) / 16f < (float)(npc.doorY - 4))
                            {
                                npc.closeDoor = false;
                            }
                        }
                        else
                        {
                            npc.closeDoor = false;
                        }
                    }
                    float num14 = 1f;
                    float num15 = 0.07f;
                    if (npc.type == 299 || npc.type == 539 || npc.type == 538)
                    {
                        num14 = 1.5f;
                    }
                    if (flag5)
                    {
                        num14 = 2f;
                        num15 = 1f;
                    }
                    if (npc.friendly && (flag6 | flag8))
                    {
                        num14 = 1.5f;
                        float num16 = 1f - (float)npc.life / (float)npc.lifeMax;
                        num14 += num16 * 0.9f;
                        num15 = 0.1f;
                    }
                    if (npc.velocity.X < -num14 || npc.velocity.X > num14)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num14 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + num15;
                        if (npc.velocity.X > num14)
                        {
                            npc.velocity.X = num14;
                        }
                    }
                    else if (npc.velocity.X > -num14 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - num15;
                        if (npc.velocity.X > num14)
                        {
                            npc.velocity.X = num14;
                        }
                    }
                    bool holdsMatching = true;
                    if ((float)(npc.homeTileY * 16 - 32) > npc.position.Y)
                    {
                        holdsMatching = false;
                    }
                    if ((npc.direction == 1 && npc.position.Y + (float)(npc.width / 2) > (float)(npc.homeTileX * 16)) || (npc.direction == -1 && npc.position.Y + (float)(npc.width / 2) < (float)(npc.homeTileX * 16)))
                    {
                        holdsMatching = true;
                    }
                    if (npc.velocity.Y == 0f)
                    {
                        Collision.StepDown(ref npc.position, ref npc.velocity, npc.width, npc.height, ref npc.stepSpeed, ref npc.gfxOffY, 1, false);
                    }
                    if (npc.velocity.Y >= 0f)
                    {
                        Collision.StepUp(ref npc.position, ref npc.velocity, npc.width, npc.height, ref npc.stepSpeed, ref npc.gfxOffY, 1, holdsMatching, 1);
                    }
                    if (npc.velocity.Y == 0f)
                    {
                        int num17 = (int)((npc.position.X + (float)(npc.width / 2) + (float)(15 * npc.direction)) / 16f);
                        int num18 = (int)((npc.position.Y + (float)npc.height - 16f) / 16f);
                        bool flag9 = false;
                        bool flag10 = true;
                        bool flag11 = num4 >= npc.homeTileX - 35 && num4 <= npc.homeTileX + 35;
                        if (npc.townNPC && npc.ai[1] < 30f)
                        {
                            flag9 = !Utils.PlotTileLine(npc.Top, npc.Bottom, (float)npc.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs));
                            if (!flag9)
                            {
                                Rectangle hitbox = npc.Hitbox;
                                hitbox.X -= 20;
                                hitbox.Width += 40;
                                for (int n = 0; n < 200; n++)
                                {
                                    if (Main.npc[n].active && Main.npc[n].friendly && n != npc.whoAmI && Main.npc[n].velocity.X == 0f && hitbox.Intersects(Main.npc[n].Hitbox))
                                    {
                                        flag9 = true;
                                        break;
                                    }
                                }
                            }
                        }
                        if (!flag9 & flag8)
                        {
                            flag9 = true;
                        }
                        if (flag10 && (NPCID.Sets.TownCritter[npc.type] || (!flag11 && npc.direction == Math.Sign(npc.homeTileX - num4))))
                        {
                            flag10 = false;
                        }
                        if (flag10)
                        {
                            int num19 = 0;
                            for (int num20 = -1; num20 <= 4; num20++)
                            {
                                Tile tileSafely2 = Framing.GetTileSafely(num17 - npc.direction * num19, num18 + num20);
                                if (tileSafely2.lava() && tileSafely2.liquid > 0)
                                {
                                    flag10 = true;
                                    break;
                                }
                                if (tileSafely2.nactive() && Main.tileSolid[(int)tileSafely2.type])
                                {
                                    flag10 = false;
                                    break;
                                }
                            }
                        }
                        if (!flag10 && npc.wet)
                        {
                            bool flag12 = flag8;
                            bool flag13 = false;
                            if (!flag12)
                            {
                                flag13 = Collision.DrownCollision(npc.position + new Vector2((float)(npc.width * npc.direction), 0f), npc.width, npc.height, 1f);
                            }
                            flag13 = (flag13 || Collision.DrownCollision(npc.position + new Vector2((float)(npc.width * npc.direction), (float)(npc.height * 2 - 16 - (flag12 ? 16 : 0))), npc.width, 16 + (flag12 ? 16 : 0), 1f));
                            if (flag13 && npc.localAI[3] <= 0f)
                            {
                                flag10 = true;
                                npc.localAI[3] = 600f;
                            }
                        }
                        if (npc.position.X == npc.localAI[3])
                        {
                            npc.direction *= -1;
                            npc.netUpdate = true;
                            npc.localAI[3] = 600f;
                        }
                        if (flag8)
                        {
                            if (npc.localAI[3] > 0f)
                            {
                                npc.localAI[3] -= 1f;
                            }
                        }
                        else
                        {
                            npc.localAI[3] = -1f;
                        }
                        Tile tileSafely3 = Framing.GetTileSafely(num17, num18);
                        Tile tileSafely4 = Framing.GetTileSafely(num17, num18 - 1);
                        Tile tileSafely5 = Framing.GetTileSafely(num17, num18 - 2);
                        if (npc.townNPC && tileSafely5.nactive() && (tileSafely5.type == 10 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 | flag))
                        {
                            if (Main.netMode != 1)
                            {
                                if (WorldGen.OpenDoor(num17, num18 - 2, npc.direction))
                                {
                                    npc.closeDoor = true;
                                    npc.doorX = num17;
                                    npc.doorY = num18 - 2;
                                    NetMessage.SendData(19, -1, -1, null, 0, (float)num17, (float)(num18 - 2), (float)npc.direction, 0, 0, 0);
                                    npc.netUpdate = true;
                                    npc.ai[1] += 80f;
                                }
                                else if (WorldGen.OpenDoor(num17, num18 - 2, -npc.direction))
                                {
                                    npc.closeDoor = true;
                                    npc.doorX = num17;
                                    npc.doorY = num18 - 2;
                                    NetMessage.SendData(19, -1, -1, null, 0, (float)num17, (float)(num18 - 2), (float)(-(float)npc.direction), 0, 0, 0);
                                    npc.netUpdate = true;
                                    npc.ai[1] += 80f;
                                }
                                else if (WorldGen.ShiftTallGate(num17, num18 - 2, false))
                                {
                                    npc.closeDoor = true;
                                    npc.doorX = num17;
                                    npc.doorY = num18 - 2;
                                    NetMessage.SendData(19, -1, -1, null, 4, (float)num17, (float)(num18 - 2), 0f, 0, 0, 0);
                                    npc.netUpdate = true;
                                    npc.ai[1] += 80f;
                                }
                                else
                                {
                                    npc.direction *= -1;
                                    npc.netUpdate = true;
                                }
                            }
                        }
                        else
                        {
                            if ((npc.velocity.X < 0f && npc.spriteDirection == -1) || (npc.velocity.X > 0f && npc.spriteDirection == 1))
                            {
                                if (tileSafely5.nactive() && Main.tileSolid[(int)tileSafely5.type] && !Main.tileSolidTop[(int)tileSafely5.type])
                                {
                                    if (!Collision.SolidTilesVersatile(num17 - npc.direction * 2, num17 - npc.direction, num18 - 5, num18 - 1) && !Collision.SolidTiles(num17, num17, num18 - 5, num18 - 3))
                                    {
                                        npc.velocity.Y = -6f;
                                        npc.netUpdate = true;
                                    }
                                    else if (flag5)
                                    {
                                        if (WorldGen.SolidTile((int)(npc.Center.X / 16f) + npc.direction, (int)(npc.Center.Y / 16f)))
                                        {
                                            npc.direction *= -1;
                                            npc.velocity.X = npc.velocity.X * 0f;
                                            npc.netUpdate = true;
                                        }
                                    }
                                    else if (flag6)
                                    {
                                        flag9 = false;
                                        npc.velocity.X = 0f;
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                        npc.ai[0] = 8f;
                                        npc.ai[1] = 240f;
                                    }
                                    else
                                    {
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                    }
                                }
                                else if (tileSafely4.nactive() && Main.tileSolid[(int)tileSafely4.type] && !Main.tileSolidTop[(int)tileSafely4.type])
                                {
                                    if (!Collision.SolidTilesVersatile(num17 - npc.direction * 2, num17 - npc.direction, num18 - 4, num18 - 1) && !Collision.SolidTiles(num17, num17, num18 - 4, num18 - 2))
                                    {
                                        npc.velocity.Y = -5f;
                                        npc.netUpdate = true;
                                    }
                                    else if (flag6)
                                    {
                                        flag9 = false;
                                        npc.velocity.X = 0f;
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                        npc.ai[0] = 8f;
                                        npc.ai[1] = 240f;
                                    }
                                    else
                                    {
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                    }
                                }
                                else if (npc.position.Y + (float)npc.height - (float)(num18 * 16) > 20f && tileSafely3.nactive() && Main.tileSolid[(int)tileSafely3.type] && !tileSafely3.topSlope())
                                {
                                    if (!Collision.SolidTilesVersatile(num17 - npc.direction * 2, num17, num18 - 3, num18 - 1))
                                    {
                                        npc.velocity.Y = -4.4f;
                                        npc.netUpdate = true;
                                    }
                                    else if (flag6)
                                    {
                                        flag9 = false;
                                        npc.velocity.X = 0f;
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                        npc.ai[0] = 8f;
                                        npc.ai[1] = 240f;
                                    }
                                    else
                                    {
                                        npc.direction *= -1;
                                        npc.netUpdate = true;
                                    }
                                }
                                else if (flag10)
                                {
                                    npc.direction *= -1;
                                    npc.velocity.X = npc.velocity.X * -1f;
                                    npc.netUpdate = true;
                                    if (flag6)
                                    {
                                        flag9 = false;
                                        npc.velocity.X = 0f;
                                        npc.ai[0] = 8f;
                                        npc.ai[1] = 240f;
                                    }
                                }
                                if (flag9)
                                {
                                    npc.ai[1] = 90f;
                                    npc.netUpdate = true;
                                }
                                if (npc.velocity.Y < 0f)
                                {
                                    npc.localAI[3] = npc.position.X;
                                }
                            }
                            if (npc.velocity.Y < 0f && npc.wet)
                            {
                                npc.velocity.Y = npc.velocity.Y * 1.2f;
                            }
                            if (npc.velocity.Y < 0f && NPCID.Sets.TownCritter[npc.type] && !flag5)
                            {
                                npc.velocity.Y = npc.velocity.Y * 1.2f;
                            }
                        }
                    }
                }
            }
            else if (npc.ai[0] == 2f || npc.ai[0] == 11f)
            {
                if (Main.netMode != 1)
                {
                    npc.localAI[3] -= 1f;
                    if (Main.rand.Next(60) == 0 && npc.localAI[3] == 0f)
                    {
                        npc.localAI[3] = 60f;
                        npc.direction *= -1;
                        npc.netUpdate = true;
                    }
                }
                npc.ai[1] -= 1f;
                npc.velocity.X = npc.velocity.X * 0.8f;
                if (npc.ai[1] <= 0f)
                {
                    npc.localAI[3] = 40f;
                    npc.ai[0] = 0f;
                    npc.ai[1] = (float)(60 + Main.rand.Next(60));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 3f || npc.ai[0] == 4f || npc.ai[0] == 5f || npc.ai[0] == 8f || npc.ai[0] == 9f || npc.ai[0] == 16f || npc.ai[0] == 17f)
            {
                npc.velocity.X = npc.velocity.X * 0.8f;
                npc.ai[1] -= 1f;
                if (npc.ai[0] == 8f && (npc.ai[1] < 60f & flag6))
                {
                    npc.ai[1] = 180f;
                    npc.netUpdate = true;
                }
                if (npc.ai[0] == 5f)
                {
                    Point point = npc.Center.ToTileCoordinates();
                    if (Main.tile[point.X, point.Y].type != 15)
                    {
                        npc.ai[1] = 0f;
                    }
                }
                if (npc.ai[1] <= 0f)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = (float)(60 + Main.rand.Next(60));
                    npc.ai[2] = 0f;
                    npc.localAI[3] = (float)(30 + Main.rand.Next(60));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 6f || npc.ai[0] == 7f || npc.ai[0] == 18f)
            {
                if (npc.ai[0] == 18f && (npc.localAI[3] < 1f || npc.localAI[3] > 2f))
                {
                    npc.localAI[3] = 2f;
                }
                npc.velocity.X = npc.velocity.X * 0.8f;
                npc.ai[1] -= 1f;
                int num21 = (int)npc.ai[2];
                if (num21 < 0 || num21 > 255 || !Main.player[num21].active || Main.player[num21].dead || Main.player[num21].Distance(npc.Center) > 200f || !Collision.CanHitLine(npc.Top, 0, 0, Main.player[num21].Top, 0, 0))
                {
                    npc.ai[1] = 0f;
                }
                if (npc.ai[1] > 0f)
                {
                    int num22 = (npc.Center.X < Main.player[num21].Center.X) ? 1 : -1;
                    if (num22 != npc.direction)
                    {
                        npc.netUpdate = true;
                    }
                    npc.direction = num22;
                }
                else
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = (float)(60 + Main.rand.Next(60));
                    npc.ai[2] = 0f;
                    npc.localAI[3] = (float)(30 + Main.rand.Next(60));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 10f)
            {
                int num23 = 0;
                int num24 = 0;
                float knockBack = 0f;
                float scaleFactor = 0f;
                int num25 = 0;
                int num26 = 0;
                int maxValue2 = 0;
                float num27 = 0f;
                float num28 = (float)NPCID.Sets.DangerDetectRange[npc.type];
                float num29 = 0f;
                if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                {
                    npc.frameCounter = 0.0;
                    npc.localAI[3] = 0f;
                }
                if (npc.type == 38)
                {
                    num23 = 30;
                    scaleFactor = 6f;
                    num24 = 20;
                    num25 = 10;
                    num26 = 180;
                    maxValue2 = 120;
                    num27 = 16f;
                    knockBack = 7f;
                }
                else if (npc.type == 550)
                {
                    num23 = 669;
                    scaleFactor = 6f;
                    num24 = 24;
                    num25 = 10;
                    num26 = 120;
                    maxValue2 = 60;
                    num27 = 16f;
                    knockBack = 9f;
                }
                else if (npc.type == 208)
                {
                    num23 = 588;
                    scaleFactor = 6f;
                    num24 = 30;
                    num25 = 10;
                    num26 = 60;
                    maxValue2 = 120;
                    num27 = 16f;
                    knockBack = 6f;
                }
                else if (npc.type == 17)
                {
                    num23 = 48;
                    scaleFactor = 9f;
                    num24 = 12;
                    num25 = 10;
                    num26 = 60;
                    maxValue2 = 60;
                    num27 = 16f;
                    knockBack = 1.5f;
                }
                else if (npc.type == 369)
                {
                    num23 = 520;
                    scaleFactor = 12f;
                    num24 = 10;
                    num25 = 10;
                    num26 = 0;
                    maxValue2 = 1;
                    num27 = 16f;
                    knockBack = 3f;
                }
                else if (npc.type == 453)
                {
                    num23 = 21;
                    scaleFactor = 14f;
                    num24 = 14;
                    num25 = 10;
                    num26 = 0;
                    maxValue2 = 1;
                    num27 = 16f;
                    knockBack = 3f;
                }
                else if (npc.type == 107)
                {
                    num23 = 24;
                    scaleFactor = 5f;
                    num24 = 15;
                    num25 = 10;
                    num26 = 60;
                    maxValue2 = 60;
                    num27 = 16f;
                    knockBack = 1f;
                }
                else if (npc.type == 124)
                {
                    num23 = 582;
                    scaleFactor = 10f;
                    num24 = 11;
                    num25 = 1;
                    num26 = 30;
                    maxValue2 = 30;
                    knockBack = 3.5f;
                }
                else if (npc.type == 18)
                {
                    num23 = 583;
                    scaleFactor = 8f;
                    num24 = 8;
                    num25 = 1;
                    num26 = 15;
                    maxValue2 = 10;
                    knockBack = 2f;
                    num27 = 10f;
                }
                else if (npc.type == 142)
                {
                    num23 = 589;
                    scaleFactor = 7f;
                    num24 = 22;
                    num25 = 1;
                    num26 = 10;
                    maxValue2 = 1;
                    knockBack = 2f;
                    num27 = 10f;
                }
                if (Main.expertMode)
                {
                    num24 = (int)((float)num24 * Main.expertNPCDamage);
                }
                num24 = (int)((float)num24 * num);
                npc.velocity.X = npc.velocity.X * 0.8f;
                npc.ai[1] -= 1f;
                npc.localAI[3] += 1f;
                if (npc.localAI[3] == (float)num25 && Main.netMode != 1)
                {
                    Vector2 vector = -Vector2.UnitY;
                    if (num9 == 1 && npc.spriteDirection == 1 && num11 != -1)
                    {
                        vector = npc.DirectionTo(Main.npc[num11].Center + new Vector2(0f, -num27 * MathHelper.Clamp(npc.Distance(Main.npc[num11].Center) / num28, 0f, 1f)));
                    }
                    if (num9 == -1 && npc.spriteDirection == -1 && num10 != -1)
                    {
                        vector = npc.DirectionTo(Main.npc[num10].Center + new Vector2(0f, -num27 * MathHelper.Clamp(npc.Distance(Main.npc[num10].Center) / num28, 0f, 1f)));
                    }
                    if (vector.HasNaNs() || Math.Sign(vector.X) != npc.spriteDirection)
                    {
                        vector = new Vector2((float)npc.spriteDirection, -1f);
                    }
                    vector *= scaleFactor;
                    vector += Utils.RandomVector2(Main.rand, -num29, num29);
                    int num30;
                    if (npc.type == 124)
                    {
                        num30 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector.X, vector.Y, num23, num24, knockBack, Main.myPlayer, 0f, (float)npc.whoAmI);
                    }
                    else if (npc.type == 142)
                    {
                        num30 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector.X, vector.Y, num23, num24, knockBack, Main.myPlayer, 0f, (float)Main.rand.Next(5));
                    }
                    else
                    {
                        num30 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector.X, vector.Y, num23, num24, knockBack, Main.myPlayer, 0f, 0f);
                    }
                    Main.projectile[num30].npcProj = true;
                    Main.projectile[num30].noDropItem = true;
                }
                if (npc.ai[1] <= 0f && !false)
                {
                    npc.ai[0] = (float)((npc.localAI[2] == 8f & flag6) ? 8 : 0);
                    npc.ai[1] = (float)(num26 + Main.rand.Next(maxValue2));
                    npc.ai[2] = 0f;
                    npc.localAI[1] = (npc.localAI[3] = (float)(num26 / 2 + Main.rand.Next(maxValue2)));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 12f)
            {
                int num31 = 0;
                int num32 = 0;
                float scaleFactor2 = 0f;
                int num33 = 0;
                int num34 = 0;
                int maxValue3 = 0;
                float knockBack2 = 0f;
                int num35 = 0;
                bool flag14 = false;
                float num36 = 0f;
                if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                {
                    npc.frameCounter = 0.0;
                    npc.localAI[3] = 0f;
                }
                int num37 = -1;
                if (num9 == 1 && npc.spriteDirection == 1)
                {
                    num37 = num11;
                }
                if (num9 == -1 && npc.spriteDirection == -1)
                {
                    num37 = num10;
                }
                if (npc.type == 19)
                {
                    num31 = 14;
                    scaleFactor2 = 13f;
                    num32 = 24;
                    num34 = 14;
                    maxValue3 = 4;
                    knockBack2 = 3f;
                    num33 = 1;
                    num36 = 0.5f;
                    if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                    {
                        npc.frameCounter = 0.0;
                        npc.localAI[3] = 0f;
                    }
                    if (Main.hardMode)
                    {
                        num32 = 15;
                        if (npc.localAI[3] > (float)num33)
                        {
                            num33 = 10;
                            flag14 = true;
                        }
                        if (npc.localAI[3] > (float)num33)
                        {
                            num33 = 20;
                            flag14 = true;
                        }
                        if (npc.localAI[3] > (float)num33)
                        {
                            num33 = 30;
                            flag14 = true;
                        }
                    }
                }
                else if (npc.type == 227)
                {
                    num31 = 587;
                    scaleFactor2 = 10f;
                    num32 = 8;
                    num34 = 10;
                    maxValue3 = 1;
                    knockBack2 = 1.75f;
                    num33 = 1;
                    num36 = 0.5f;
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 12;
                        flag14 = true;
                    }
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 24;
                        flag14 = true;
                    }
                    if (Main.hardMode)
                    {
                        num32 += 2;
                    }
                }
                else if (npc.type == 368)
                {
                    num31 = 14;
                    scaleFactor2 = 13f;
                    num32 = 24;
                    num34 = 12;
                    maxValue3 = 5;
                    knockBack2 = 2f;
                    num33 = 1;
                    num36 = 0.2f;
                    if (Main.hardMode)
                    {
                        num32 = 30;
                        num31 = 357;
                    }
                }
                else if (npc.type == 22)
                {
                    scaleFactor2 = 10f;
                    num32 = 8;
                    num33 = 1;
                    if (Main.hardMode)
                    {
                        num31 = 2;
                        num34 = 15;
                        maxValue3 = 10;
                        num32 += 6;
                    }
                    else
                    {
                        num31 = 1;
                        num34 = 30;
                        maxValue3 = 20;
                    }
                    knockBack2 = 2.75f;
                    num35 = 4;
                    num36 = 0.7f;
                }
                else if (npc.type == 228)
                {
                    num31 = 267;
                    scaleFactor2 = 14f;
                    num32 = 20;
                    num33 = 1;
                    num34 = 10;
                    maxValue3 = 1;
                    knockBack2 = 3f;
                    num35 = 6;
                    num36 = 0.4f;
                }
                else if (npc.type == 178)
                {
                    num31 = 242;
                    scaleFactor2 = 13f;
                    num32 = 15;
                    num34 = 10;
                    maxValue3 = 1;
                    knockBack2 = 2f;
                    num33 = 1;
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 8;
                        flag14 = true;
                    }
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 16;
                        flag14 = true;
                    }
                    num36 = 0.3f;
                }
                else if (npc.type == 229)
                {
                    num31 = 14;
                    scaleFactor2 = 14f;
                    num32 = 24;
                    num34 = 10;
                    maxValue3 = 1;
                    knockBack2 = 2f;
                    num33 = 1;
                    num36 = 0.7f;
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 16;
                        flag14 = true;
                    }
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 24;
                        flag14 = true;
                    }
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 32;
                        flag14 = true;
                    }
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 40;
                        flag14 = true;
                    }
                    if (npc.localAI[3] > (float)num33)
                    {
                        num33 = 48;
                        flag14 = true;
                    }
                    if (npc.localAI[3] == 0f && num37 != -1 && npc.Distance(Main.npc[num37].Center) < (float)NPCID.Sets.PrettySafe[npc.type])
                    {
                        num36 = 0.1f;
                        num31 = 162;
                        num32 = 50;
                        knockBack2 = 10f;
                        scaleFactor2 = 24f;
                    }
                }
                else if (npc.type == 209)
                {
                    num31 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						134,
						133,
						135
					});
                    num33 = 1;
                    if (num31 == 135)
                    {
                        scaleFactor2 = 12f;
                        num32 = 30;
                        num34 = 30;
                        maxValue3 = 10;
                        knockBack2 = 7f;
                        num36 = 0.2f;
                    }
                    else if (num31 == 133)
                    {
                        scaleFactor2 = 10f;
                        num32 = 25;
                        num34 = 10;
                        maxValue3 = 1;
                        knockBack2 = 6f;
                        num36 = 0.2f;
                    }
                    else if (num31 == 134)
                    {
                        scaleFactor2 = 13f;
                        num32 = 20;
                        num34 = 20;
                        maxValue3 = 10;
                        knockBack2 = 4f;
                        num36 = 0.1f;
                    }
                }
                if (Main.expertMode)
                {
                    num32 = (int)((float)num32 * Main.expertNPCDamage);
                }
                num32 = (int)((float)num32 * num);
                npc.velocity.X = npc.velocity.X * 0.8f;
                npc.ai[1] -= 1f;
                npc.localAI[3] += 1f;
                if (npc.localAI[3] == (float)num33 && Main.netMode != 1)
                {
                    Vector2 vector2 = Vector2.Zero;
                    if (num37 != -1)
                    {
                        vector2 = npc.DirectionTo(Main.npc[num37].Center + new Vector2(0f, (float)(-(float)num35)));
                    }
                    if (vector2.HasNaNs() || Math.Sign(vector2.X) != npc.spriteDirection)
                    {
                        vector2 = new Vector2((float)npc.spriteDirection, 0f);
                    }
                    vector2 *= scaleFactor2;
                    vector2 += Utils.RandomVector2(Main.rand, -num36, num36);
                    int num38;
                    if (npc.type == 227)
                    {
                        num38 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector2.X, vector2.Y, num31, num32, knockBack2, Main.myPlayer, 0f, (float)Main.rand.Next(12) / 6f);
                    }
                    else
                    {
                        num38 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector2.X, vector2.Y, num31, num32, knockBack2, Main.myPlayer, 0f, 0f);
                    }
                    Main.projectile[num38].npcProj = true;
                    Main.projectile[num38].noDropItem = true;
                }
                if ((npc.localAI[3] == (float)num33 & flag14) && num37 != -1)
                {
                    Vector2 vector3 = npc.DirectionTo(Main.npc[num37].Center);
                    if (vector3.Y <= 0.5f && vector3.Y >= -0.5f)
                    {
                        npc.ai[2] = vector3.Y;
                    }
                }
                if (npc.ai[1] <= 0f && !false)
                {
                    npc.ai[0] = (float)((npc.localAI[2] == 8f & flag6) ? 8 : 0);
                    npc.ai[1] = (float)(num34 + Main.rand.Next(maxValue3));
                    npc.ai[2] = 0f;
                    npc.localAI[1] = (npc.localAI[3] = (float)(num34 / 2 + Main.rand.Next(maxValue3)));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 13f)
            {
                npc.velocity.X = npc.velocity.X * 0.8f;
                if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                {
                    npc.frameCounter = 0.0;
                }
                npc.ai[1] -= 1f;
                npc.localAI[3] += 1f;
                if (npc.localAI[3] == 1f && Main.netMode != 1)
                {
                    Vector2 vector4 = npc.DirectionTo(Main.npc[(int)npc.ai[2]].Center + new Vector2(0f, -20f));
                    if (vector4.HasNaNs() || Math.Sign(vector4.X) == -npc.spriteDirection)
                    {
                        vector4 = new Vector2((float)npc.spriteDirection, -1f);
                    }
                    vector4 *= 8f;
                    int num39 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector4.X, vector4.Y, 584, 0, 0f, Main.myPlayer, npc.ai[2], 0f);
                    Main.projectile[num39].npcProj = true;
                    Main.projectile[num39].noDropItem = true;
                }
                if (npc.ai[1] <= 0f)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = (float)(10 + Main.rand.Next(10));
                    npc.ai[2] = 0f;
                    npc.localAI[3] = (float)(5 + Main.rand.Next(10));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 14f)
            {
                int num40 = 0;
                int num41 = 0;
                float scaleFactor3 = 0f;
                int num42 = 0;
                int num43 = 0;
                int maxValue4 = 0;
                float knockBack3 = 0f;
                float num44 = 0f;
                float num45 = (float)NPCID.Sets.DangerDetectRange[npc.type];
                float num46 = 1f;
                float num47 = 0f;
                if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                {
                    npc.frameCounter = 0.0;
                    npc.localAI[3] = 0f;
                }
                int num48 = -1;
                if (num9 == 1 && npc.spriteDirection == 1)
                {
                    num48 = num11;
                }
                if (num9 == -1 && npc.spriteDirection == -1)
                {
                    num48 = num10;
                }
                if (npc.type == 54)
                {
                    num40 = 585;
                    scaleFactor3 = 10f;
                    num41 = 16;
                    num42 = 30;
                    num43 = 20;
                    maxValue4 = 15;
                    knockBack3 = 2f;
                    num47 = 1f;
                }
                else if (npc.type == 108)
                {
                    num40 = 15;
                    scaleFactor3 = 6f;
                    num41 = 18;
                    num42 = 15;
                    num43 = 15;
                    maxValue4 = 5;
                    knockBack3 = 3f;
                    num44 = 20f;
                }
                else if (npc.type == 160)
                {
                    num40 = 590;
                    num41 = 40;
                    num42 = 15;
                    num43 = 10;
                    maxValue4 = 1;
                    knockBack3 = 3f;
                    while (npc.localAI[3] > (float)num42)
                    {
                        num42 += 15;
                    }
                }
                else if (npc.type == 20)
                {
                    num40 = 586;
                    num42 = 24;
                    num43 = 10;
                    maxValue4 = 1;
                    knockBack3 = 3f;
                }
                if (Main.expertMode)
                {
                    num41 = (int)((float)num41 * Main.expertNPCDamage);
                }
                num41 = (int)((float)num41 * num);
                npc.velocity.X = npc.velocity.X * 0.8f;
                npc.ai[1] -= 1f;
                npc.localAI[3] += 1f;
                if (npc.localAI[3] == (float)num42 && Main.netMode != 1)
                {
                    Vector2 vector5 = Vector2.Zero;
                    if (num48 != -1)
                    {
                        vector5 = npc.DirectionTo(Main.npc[num48].Center + new Vector2(0f, -num44 * MathHelper.Clamp(npc.Distance(Main.npc[num48].Center) / num45, 0f, 1f)));
                    }
                    if (vector5.HasNaNs() || Math.Sign(vector5.X) != npc.spriteDirection)
                    {
                        vector5 = new Vector2((float)npc.spriteDirection, 0f);
                    }
                    vector5 *= scaleFactor3;
                    vector5 += Utils.RandomVector2(Main.rand, -num47, num47);
                    if (npc.type == 108)
                    {
                        int num49 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							1,
							1,
							1,
							1,
							2,
							2,
							3
						});
                        for (int num50 = 0; num50 < num49; num50++)
                        {
                            Vector2 vector6 = Utils.RandomVector2(Main.rand, -3.4f, 3.4f);
                            int num51 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector5.X + vector6.X, vector5.Y + vector6.Y, num40, num41, knockBack3, Main.myPlayer, 0f, 0f);
                            Main.projectile[num51].npcProj = true;
                            Main.projectile[num51].noDropItem = true;
                        }
                    }
                    else if (npc.type == 160)
                    {
                        if (num48 != -1)
                        {
                            Vector2 vector7 = Main.npc[num48].position - Main.npc[num48].Size * 2f + Main.npc[num48].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
                            int num52 = 10;
                            while (num52 > 0 && WorldGen.SolidTile(Framing.GetTileSafely((int)vector7.X / 16, (int)vector7.Y / 16)))
                            {
                                num52--;
                                vector7 = Main.npc[num48].position - Main.npc[num48].Size * 2f + Main.npc[num48].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
                            }
                            int num53 = Projectile.NewProjectile(vector7.X, vector7.Y, 0f, 0f, num40, num41, knockBack3, Main.myPlayer, 0f, 0f);
                            Main.projectile[num53].npcProj = true;
                            Main.projectile[num53].noDropItem = true;
                        }
                    }
                    else if (npc.type == 20)
                    {
                        int num54 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector5.X, vector5.Y, num40, num41, knockBack3, Main.myPlayer, 0f, (float)npc.whoAmI);
                        Main.projectile[num54].npcProj = true;
                        Main.projectile[num54].noDropItem = true;
                    }
                    else
                    {
                        int num55 = Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * 16), npc.Center.Y - 2f, vector5.X, vector5.Y, num40, num41, knockBack3, Main.myPlayer, 0f, 0f);
                        Main.projectile[num55].npcProj = true;
                        Main.projectile[num55].noDropItem = true;
                    }
                }
                if (num46 > 0f)
                {
                    Vector3 vector8 = NPCID.Sets.MagicAuraColor[npc.type].ToVector3() * num46;
                    Lighting.AddLight(npc.Center, vector8.X, vector8.Y, vector8.Z);
                }
                if (npc.ai[1] <= 0f && !false)
                {
                    npc.ai[0] = (float)((npc.localAI[2] == 8f & flag6) ? 8 : 0);
                    npc.ai[1] = (float)(num43 + Main.rand.Next(maxValue4));
                    npc.ai[2] = 0f;
                    npc.localAI[1] = (npc.localAI[3] = (float)(num43 / 2 + Main.rand.Next(maxValue4)));
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 15f)
            {
                int num56 = 0;
                int maxValue5 = 0;
                if ((float)NPCID.Sets.AttackTime[npc.type] == npc.ai[1])
                {
                    npc.frameCounter = 0.0;
                    npc.localAI[3] = 0f;
                }
                int num57 = 0;
                float num58 = 0f;
                int num59 = 0;
                int num60 = 0;
                if (num9 == 1)
                {
                    int arg_3D77_0 = npc.spriteDirection;
                }
                if (num9 == -1)
                {
                    int arg_3D85_0 = npc.spriteDirection;
                }
                if (npc.type == 207)
                {
                    num57 = 11;
                    num60 = (num59 = 32);
                    num56 = 12;
                    maxValue5 = 6;
                    num58 = 4.25f;
                }
                else if (npc.type == 441)
                {
                    num57 = 9;
                    num60 = (num59 = 28);
                    num56 = 9;
                    maxValue5 = 3;
                    num58 = 3.5f;
                }
                else if (npc.type == 353)
                {
                    num57 = 10;
                    num60 = (num59 = 32);
                    num56 = 15;
                    maxValue5 = 8;
                    num58 = 5f;
                }
                if (Main.expertMode)
                {
                    num57 = (int)((float)num57 * Main.expertNPCDamage);
                }
                num57 = (int)((float)num57 * num);
                npc.velocity.X = npc.velocity.X * 0.8f;
                npc.ai[1] -= 1f;
                if (Main.netMode != 1)
                {
                    Tuple<Vector2, float> swingStats = npc.GetSwingStats(NPCID.Sets.AttackTime[npc.type] * 2, (int)npc.ai[1], npc.spriteDirection, num59, num60);
                    Rectangle rectangle3 = new Rectangle((int)swingStats.Item1.X, (int)swingStats.Item1.Y, num59, num60);
                    if (npc.spriteDirection == -1)
                    {
                        rectangle3.X -= num59;
                    }
                    rectangle3.Y -= num60;
                    npc.TweakSwingStats(NPCID.Sets.AttackTime[npc.type] * 2, (int)npc.ai[1], npc.spriteDirection, ref rectangle3);
                    int myPlayer = Main.myPlayer;
                    for (int num61 = 0; num61 < 200; num61++)
                    {
                        NPC nPC2 = Main.npc[num61];
                        if (nPC2.active && nPC2.immune[myPlayer] == 0 && !nPC2.dontTakeDamage && !nPC2.friendly && nPC2.damage > 0 && rectangle3.Intersects(nPC2.Hitbox) && (nPC2.noTileCollide || Collision.CanHit(npc.position, npc.width, npc.height, nPC2.position, nPC2.width, nPC2.height)))
                        {
                            nPC2.StrikeNPCNoInteraction(num57, num58, npc.spriteDirection, false, false, false);
                            if (Main.netMode != 0)
                            {
                                NetMessage.SendData(28, -1, -1, null, num61, (float)num57, num58, (float)npc.spriteDirection, 0, 0, 0);
                            }
                            nPC2.netUpdate = true;
                            nPC2.immune[myPlayer] = (int)npc.ai[1] + 2;
                        }
                    }
                }
                if (npc.ai[1] <= 0f)
                {
                    bool flag15 = false;
                    if (flag6)
                    {
                        int num62 = -num9;
                        if (!Collision.CanHit(npc.Center, 0, 0, npc.Center + Vector2.UnitX * (float)num62 * 32f, 0, 0) || npc.localAI[2] == 8f)
                        {
                            flag15 = true;
                        }
                        if (flag15)
                        {
                            int num63 = NPCID.Sets.AttackTime[npc.type];
                            int num64 = (num9 == 1) ? num11 : num10;
                            int num65 = (num9 == 1) ? num10 : num11;
                            if (num64 != -1 && !Collision.CanHit(npc.Center, 0, 0, Main.npc[num64].Center, 0, 0))
                            {
                                if (num65 != -1 && Collision.CanHit(npc.Center, 0, 0, Main.npc[num65].Center, 0, 0))
                                {
                                    num64 = num65;
                                }
                                else
                                {
                                    num64 = -1;
                                }
                            }
                            if (num64 != -1)
                            {
                                npc.ai[0] = 15f;
                                npc.ai[1] = (float)num63;
                                npc.ai[2] = 0f;
                                npc.localAI[3] = 0f;
                                npc.direction = ((npc.position.X < Main.npc[num64].position.X) ? 1 : -1);
                                npc.netUpdate = true;
                            }
                            else
                            {
                                flag15 = false;
                            }
                        }
                    }
                    if (!flag15)
                    {
                        npc.ai[0] = (float)((npc.localAI[2] == 8f & flag6) ? 8 : 0);
                        npc.ai[1] = (float)(num56 + Main.rand.Next(maxValue5));
                        npc.ai[2] = 0f;
                        npc.localAI[1] = (npc.localAI[3] = (float)(num56 / 2 + Main.rand.Next(maxValue5)));
                        npc.netUpdate = true;
                    }
                }
            }
            if (Main.netMode != 1 && (npc.townNPC || npc.type == 453) && !flag3)
            {
                bool flag16 = npc.ai[0] < 2f && !flag6;
                bool flag17 = (npc.ai[0] < 2f || npc.ai[0] == 8f) && (flag6 | flag7);
                if (npc.localAI[1] > 0f)
                {
                    npc.localAI[1] -= 1f;
                }
                if (npc.localAI[1] > 0f)
                {
                    flag17 = false;
                }
                if (flag17 && npc.type == 124 && npc.localAI[0] == 1f)
                {
                    flag17 = false;
                }
                if (flag17 && npc.type == 20)
                {
                    flag17 = false;
                    for (int num66 = 0; num66 < 200; num66++)
                    {
                        NPC nPC3 = Main.npc[num66];
                        if (nPC3.active && nPC3.townNPC && npc.Distance(nPC3.Center) <= 1200f && nPC3.FindBuffIndex(165) == -1)
                        {
                            flag17 = true;
                            break;
                        }
                    }
                }
                if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(300) == 0)
                {
                    int num67 = 420;
                    if (Main.rand.Next(2) == 0)
                    {
                        num67 *= Main.rand.Next(1, 4);
                    }
                    else
                    {
                        num67 *= Main.rand.Next(1, 3);
                    }
                    int num68 = 100;
                    int num69 = 20;
                    for (int num70 = 0; num70 < 200; num70++)
                    {
                        NPC nPC4 = Main.npc[num70];
                        bool flag18 = (nPC4.ai[0] == 1f && nPC4.closeDoor) || (nPC4.ai[0] == 1f && nPC4.ai[1] > 200f) || nPC4.ai[0] > 1f;
                        if (nPC4 != npc && nPC4.active && nPC4.CanTalk && !flag18 && nPC4.Distance(npc.Center) < (float)num68 && nPC4.Distance(npc.Center) > (float)num69 && Collision.CanHit(npc.Center, 0, 0, nPC4.Center, 0, 0))
                        {
                            int num71 = (npc.position.X < nPC4.position.X).ToDirectionInt();
                            npc.ai[0] = 3f;
                            npc.ai[1] = (float)num67;
                            npc.ai[2] = (float)num70;
                            npc.direction = num71;
                            npc.netUpdate = true;
                            nPC4.ai[0] = 4f;
                            nPC4.ai[1] = (float)num67;
                            nPC4.ai[2] = (float)npc.whoAmI;
                            nPC4.direction = -num71;
                            nPC4.netUpdate = true;
                            break;
                        }
                    }
                }
                else if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1800) == 0)
                {
                    int num72 = 420;
                    if (Main.rand.Next(2) == 0)
                    {
                        num72 *= Main.rand.Next(1, 4);
                    }
                    else
                    {
                        num72 *= Main.rand.Next(1, 3);
                    }
                    int num73 = 100;
                    int num74 = 20;
                    for (int num75 = 0; num75 < 200; num75++)
                    {
                        NPC nPC5 = Main.npc[num75];
                        bool flag19 = (nPC5.ai[0] == 1f && nPC5.closeDoor) || (nPC5.ai[0] == 1f && nPC5.ai[1] > 200f) || nPC5.ai[0] > 1f;
                        if (nPC5 != npc && nPC5.active && nPC5.CanTalk && !flag19 && nPC5.Distance(npc.Center) < (float)num73 && nPC5.Distance(npc.Center) > (float)num74 && Collision.CanHit(npc.Center, 0, 0, nPC5.Center, 0, 0))
                        {
                            int num76 = (npc.position.X < nPC5.position.X).ToDirectionInt();
                            npc.ai[0] = 16f;
                            npc.ai[1] = (float)num72;
                            npc.ai[2] = (float)num75;
                            npc.localAI[2] = (float)Main.rand.Next(4);
                            npc.localAI[3] = (float)Main.rand.Next(3 - (int)npc.localAI[2]);
                            npc.direction = num76;
                            npc.netUpdate = true;
                            nPC5.ai[0] = 17f;
                            nPC5.ai[1] = (float)num72;
                            nPC5.ai[2] = (float)npc.whoAmI;
                            nPC5.localAI[2] = 0f;
                            nPC5.localAI[3] = 0f;
                            nPC5.direction = -num76;
                            nPC5.netUpdate = true;
                            break;
                        }
                    }
                }
                else if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1200) == 0 && (npc.type == 208 || (BirthdayParty.PartyIsUp && NPCID.Sets.AttackType[npc.type] == NPCID.Sets.AttackType[208])))
                {
                    int num77 = 300;
                    int num78 = 150;
                    for (int num79 = 0; num79 < 255; num79++)
                    {
                        Player player = Main.player[num79];
                        if (player.active && !player.dead && player.Distance(npc.Center) < (float)num78 && Collision.CanHitLine(npc.Top, 0, 0, player.Top, 0, 0))
                        {
                            int direction2 = (npc.position.X < player.position.X).ToDirectionInt();
                            npc.ai[0] = 6f;
                            npc.ai[1] = (float)num77;
                            npc.ai[2] = (float)num79;
                            npc.direction = direction2;
                            npc.netUpdate = true;
                            break;
                        }
                    }
                }
                else if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(600) == 0 && npc.type == 550)
                {
                    int num80 = 300;
                    int num81 = 150;
                    for (int num82 = 0; num82 < 255; num82++)
                    {
                        Player player2 = Main.player[num82];
                        if (player2.active && !player2.dead && player2.Distance(npc.Center) < (float)num81 && Collision.CanHitLine(npc.Top, 0, 0, player2.Top, 0, 0))
                        {
                            int direction3 = (npc.position.X < player2.position.X).ToDirectionInt();
                            npc.ai[0] = 18f;
                            npc.ai[1] = (float)num80;
                            npc.ai[2] = (float)num82;
                            npc.direction = direction3;
                            npc.netUpdate = true;
                            break;
                        }
                    }
                }
                else if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1800) == 0)
                {
                    npc.ai[0] = 2f;
                    npc.ai[1] = (float)(45 * Main.rand.Next(1, 2));
                    npc.netUpdate = true;
                }
                else if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(600) == 0 && npc.type == 229 && !flag7)
                {
                    npc.ai[0] = 11f;
                    npc.ai[1] = (float)(30 * Main.rand.Next(1, 4));
                    npc.netUpdate = true;
                }
                else if (flag16 && npc.ai[0] == 0f && npc.velocity.Y == 0f && Main.rand.Next(1200) == 0)
                {
                    int num83 = 220;
                    int num84 = 150;
                    for (int num85 = 0; num85 < 255; num85++)
                    {
                        Player player3 = Main.player[num85];
                        if (player3.active && !player3.dead && player3.Distance(npc.Center) < (float)num84 && Collision.CanHitLine(npc.Top, 0, 0, player3.Top, 0, 0))
                        {
                            int direction4 = (npc.position.X < player3.position.X).ToDirectionInt();
                            npc.ai[0] = 7f;
                            npc.ai[1] = (float)num83;
                            npc.ai[2] = (float)num85;
                            npc.direction = direction4;
                            npc.netUpdate = true;
                            break;
                        }
                    }
                }
                else if (flag16 && npc.ai[0] == 1f && npc.velocity.Y == 0f && Main.rand.Next(maxValue) == 0)
                {
                    Point point2 = npc.Center.ToTileCoordinates();
                    bool flag20 = WorldGen.InWorld(point2.X, point2.Y, 1);
                    if (flag20)
                    {
                        for (int num86 = 0; num86 < 200; num86++)
                        {
                            if (Main.npc[num86].active && Main.npc[num86].aiStyle == 7 && Main.npc[num86].townNPC && Main.npc[num86].ai[0] == 5f && Main.npc[num86].Center.ToTileCoordinates() == point2)
                            {
                                flag20 = false;
                                break;
                            }
                        }
                    }
                    if (flag20)
                    {
                        Tile tile = Main.tile[point2.X, point2.Y];
                        flag20 = (tile.type == 15);
                        if (flag20 && tile.frameY == 1080)
                        {
                            flag20 = false;
                        }
                        if (flag20)
                        {
                            npc.ai[0] = 5f;
                            npc.ai[1] = (float)(900 + Main.rand.Next(10800));
                            npc.direction = ((tile.frameX == 0) ? -1 : 1);
                            npc.Bottom = new Vector2((float)(point2.X * 16 + 8 + 2 * npc.direction), (float)(point2.Y * 16 + 32));
                            npc.velocity = Vector2.Zero;
                            npc.localAI[3] = 0f;
                            npc.netUpdate = true;
                        }
                    }
                }
                else if (flag16 && npc.ai[0] == 1f && npc.velocity.Y == 0f && Main.rand.Next(600) == 0 && Utils.PlotTileLine(npc.Top, npc.Bottom, (float)npc.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs)))
                {
                    Point point3 = (npc.Center + new Vector2((float)(npc.direction * 10), 0f)).ToTileCoordinates();
                    bool flag21 = WorldGen.InWorld(point3.X, point3.Y, 1);
                    if (flag21)
                    {
                        Tile tileSafely6 = Framing.GetTileSafely(point3.X, point3.Y);
                        if (!tileSafely6.nactive() || !TileID.Sets.InteractibleByNPCs[(int)tileSafely6.type])
                        {
                            flag21 = false;
                        }
                    }
                    if (flag21)
                    {
                        npc.ai[0] = 9f;
                        npc.ai[1] = (float)(40 + Main.rand.Next(90));
                        npc.velocity = Vector2.Zero;
                        npc.localAI[3] = 0f;
                        npc.netUpdate = true;
                    }
                }
                if (npc.ai[0] < 2f && npc.velocity.Y == 0f && npc.type == 18)
                {
                    int num87 = -1;
                    for (int num88 = 0; num88 < 200; num88++)
                    {
                        NPC nPC6 = Main.npc[num88];
                        if (nPC6.active && nPC6.townNPC && nPC6.life != nPC6.lifeMax && (num87 == -1 || nPC6.lifeMax - nPC6.life > Main.npc[num87].lifeMax - Main.npc[num87].life) && Collision.CanHitLine(npc.position, npc.width, npc.height, nPC6.position, nPC6.width, nPC6.height) && npc.Distance(nPC6.Center) < 500f)
                        {
                            num87 = num88;
                        }
                    }
                    if (num87 != -1)
                    {
                        npc.ai[0] = 13f;
                        npc.ai[1] = 34f;
                        npc.ai[2] = (float)num87;
                        npc.localAI[3] = 0f;
                        npc.direction = ((npc.position.X < Main.npc[num87].position.X) ? 1 : -1);
                        npc.netUpdate = true;
                    }
                }
                if (flag17 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 0 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                {
                    int num89 = NPCID.Sets.AttackTime[npc.type];
                    int num90 = (num9 == 1) ? num11 : num10;
                    int num91 = (num9 == 1) ? num10 : num11;
                    if (num90 != -1 && !Collision.CanHit(npc.Center, 0, 0, Main.npc[num90].Center, 0, 0))
                    {
                        if (num91 != -1 && Collision.CanHit(npc.Center, 0, 0, Main.npc[num91].Center, 0, 0))
                        {
                            num90 = num91;
                        }
                        else
                        {
                            num90 = -1;
                        }
                    }
                    if (num90 != -1)
                    {
                        npc.localAI[2] = npc.ai[0];
                        npc.ai[0] = 10f;
                        npc.ai[1] = (float)num89;
                        npc.ai[2] = 0f;
                        npc.localAI[3] = 0f;
                        npc.direction = ((npc.position.X < Main.npc[num90].position.X) ? 1 : -1);
                        npc.netUpdate = true;
                    }
                }
                else if (flag17 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 1 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                {
                    int num92 = NPCID.Sets.AttackTime[npc.type];
                    int num93 = (num9 == 1) ? num11 : num10;
                    int num94 = (num9 == 1) ? num10 : num11;
                    if (num93 != -1 && !Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num93].Center, 0, 0))
                    {
                        if (num94 != -1 && Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num94].Center, 0, 0))
                        {
                            num93 = num94;
                        }
                        else
                        {
                            num93 = -1;
                        }
                    }
                    if (num93 != -1)
                    {
                        Vector2 vector9 = npc.DirectionTo(Main.npc[num93].Center);
                        if (vector9.Y <= 0.5f && vector9.Y >= -0.5f)
                        {
                            npc.localAI[2] = npc.ai[0];
                            npc.ai[0] = 12f;
                            npc.ai[1] = (float)num92;
                            npc.ai[2] = vector9.Y;
                            npc.localAI[3] = 0f;
                            npc.direction = ((npc.position.X < Main.npc[num93].position.X) ? 1 : -1);
                            npc.netUpdate = true;
                        }
                    }
                }
                if (flag17 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 2 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                {
                    int num95 = NPCID.Sets.AttackTime[npc.type];
                    int num96 = (num9 == 1) ? num11 : num10;
                    int num97 = (num9 == 1) ? num10 : num11;
                    if (num96 != -1 && !Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num96].Center, 0, 0))
                    {
                        if (num97 != -1 && Collision.CanHitLine(npc.Center, 0, 0, Main.npc[num97].Center, 0, 0))
                        {
                            num96 = num97;
                        }
                        else
                        {
                            num96 = -1;
                        }
                    }
                    if (num96 != -1)
                    {
                        npc.localAI[2] = npc.ai[0];
                        npc.ai[0] = 14f;
                        npc.ai[1] = (float)num95;
                        npc.ai[2] = 0f;
                        npc.localAI[3] = 0f;
                        npc.direction = ((npc.position.X < Main.npc[num96].position.X) ? 1 : -1);
                        npc.netUpdate = true;
                    }
                    else if (npc.type == 20)
                    {
                        npc.localAI[2] = npc.ai[0];
                        npc.ai[0] = 14f;
                        npc.ai[1] = (float)num95;
                        npc.ai[2] = 0f;
                        npc.localAI[3] = 0f;
                        npc.netUpdate = true;
                    }
                }
                if (flag17 && npc.velocity.Y == 0f && NPCID.Sets.AttackType[npc.type] == 3 && NPCID.Sets.AttackAverageChance[npc.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[npc.type] * 2) == 0)
                {
                    int num98 = NPCID.Sets.AttackTime[npc.type];
                    int num99 = (num9 == 1) ? num11 : num10;
                    int num100 = (num9 == 1) ? num10 : num11;
                    if (num99 != -1 && !Collision.CanHit(npc.Center, 0, 0, Main.npc[num99].Center, 0, 0))
                    {
                        if (num100 != -1 && Collision.CanHit(npc.Center, 0, 0, Main.npc[num100].Center, 0, 0))
                        {
                            num99 = num100;
                        }
                        else
                        {
                            num99 = -1;
                        }
                    }
                    if (num99 != -1)
                    {
                        npc.localAI[2] = npc.ai[0];
                        npc.ai[0] = 15f;
                        npc.ai[1] = (float)num98;
                        npc.ai[2] = 0f;
                        npc.localAI[3] = 0f;
                        npc.direction = ((npc.position.X < Main.npc[num99].position.X) ? 1 : -1);
                        npc.netUpdate = true;
                    }
                }
            }
        }

        // Token: 0x0600023F RID: 575 RVA: 0x0016EB50 File Offset: 0x0016CD50
        private static void AI_026_Unicorns(NPC npc)
        {
            int num = 30;
            int num2 = 10;
            bool flag = false;
            bool flag2 = false;
            bool flag3 = false;
            if (npc.velocity.Y == 0f && ((npc.velocity.X > 0f && npc.direction < 0) || (npc.velocity.X < 0f && npc.direction > 0)))
            {
                flag2 = true;
                npc.ai[3] += 1f;
            }
            if (npc.type == 546)
            {
                num2 = 4;
                bool flag4 = npc.velocity.Y == 0f;
                for (int i = 0; i < 200; i++)
                {
                    if (i != npc.whoAmI && Main.npc[i].active && Main.npc[i].type == npc.type && Math.Abs(npc.position.X - Main.npc[i].position.X) + Math.Abs(npc.position.Y - Main.npc[i].position.Y) < (float)npc.width)
                    {
                        if (npc.position.X < Main.npc[i].position.X)
                        {
                            npc.velocity.X = npc.velocity.X - 0.05f;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + 0.05f;
                        }
                        if (npc.position.Y < Main.npc[i].position.Y)
                        {
                            npc.velocity.Y = npc.velocity.Y - 0.05f;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y + 0.05f;
                        }
                    }
                }
                if (flag4)
                {
                    npc.velocity.Y = 0f;
                }
            }
            if ((npc.position.X == npc.oldPosition.X || npc.ai[3] >= (float)num) | flag2)
            {
                npc.ai[3] += 1f;
                flag3 = true;
            }
            else if (npc.ai[3] > 0f)
            {
                npc.ai[3] -= 1f;
            }
            if (npc.ai[3] > (float)(num * num2))
            {
                npc.ai[3] = 0f;
            }
            if (npc.justHit)
            {
                npc.ai[3] = 0f;
            }
            if (npc.ai[3] == (float)num)
            {
                npc.netUpdate = true;
            }
            Vector2 vector = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
            float arg_31B_0 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector.X;
            float num3 = Main.player[npc.target].position.Y - vector.Y;
            float num4 = (float)Math.Sqrt((double)(arg_31B_0 * arg_31B_0 + num3 * num3));
            if (num4 < 200f && !flag3)
            {
                npc.ai[3] = 0f;
            }
            if (npc.type == 410)
            {
                npc.ai[1] += 1f;
                bool flag5 = npc.ai[1] >= 240f;
                if (!flag5 && npc.velocity.Y == 0f)
                {
                    for (int j = 0; j < 255; j++)
                    {
                        if (Main.player[j].active && !Main.player[j].dead && Main.player[j].Distance(npc.Center) < 800f && Main.player[j].Center.Y < npc.Center.Y && Math.Abs(Main.player[j].Center.X - npc.Center.X) < 20f)
                        {
                            flag5 = true;
                            break;
                        }
                    }
                }
                if (flag5 && Main.netMode != 1)
                {
                    for (int k = 0; k < 3; k++)
                    {
                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y, (Main.rand.NextFloat() - 0.5f) * 2f, -4f - 10f * Main.rand.NextFloat(), 538, 50, 0f, Main.myPlayer, 0f, 0f);
                    }
                    npc.HitEffect(9999, 10.0);
                    npc.active = false;
                    return;
                }
            }
            else if (npc.type == 423)
            {
                if (npc.ai[2] == 1f)
                {
                    npc.ai[1] += 1f;
                    npc.velocity.X = npc.velocity.X * 0.7f;
                    if (npc.ai[1] < 30f)
                    {
                        Vector2 vector2 = npc.Center + Vector2.UnitX * (float)npc.spriteDirection * -20f;
                        Dust arg_5A4_0 = Main.dust[Dust.NewDust(vector2, 0, 0, 242, 0f, 0f, 0, default(Color), 1f)];
                        Vector2 vector3 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                        arg_5A4_0.position = vector2 + vector3 * 20f;
                        arg_5A4_0.velocity = -vector3 * 2f;
                        arg_5A4_0.scale = 0.5f + vector3.X * (float)(-(float)npc.spriteDirection);
                        arg_5A4_0.fadeIn = 1f;
                        arg_5A4_0.noGravity = true;
                    }
                    else if (npc.ai[1] == 30f)
                    {
                        for (int l = 0; l < 20; l++)
                        {
                            Vector2 vector4 = npc.Center + Vector2.UnitX * (float)npc.spriteDirection * -20f;
                            Dust arg_68B_0 = Main.dust[Dust.NewDust(vector4, 0, 0, 242, 0f, 0f, 0, default(Color), 1f)];
                            Vector2 vector5 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                            arg_68B_0.position = vector4 + vector5 * 4f;
                            arg_68B_0.velocity = vector5 * 4f + Vector2.UnitX * Main.rand.NextFloat() * (float)npc.spriteDirection * -5f;
                            arg_68B_0.scale = 0.5f + vector5.X * (float)(-(float)npc.spriteDirection);
                            arg_68B_0.fadeIn = 1f;
                            arg_68B_0.noGravity = true;
                        }
                    }
                    if (npc.velocity.X > -0.5f && npc.velocity.X < 0.5f)
                    {
                        npc.velocity.X = 0f;
                    }
                    if (npc.ai[1] == 30f && Main.netMode != 1)
                    {
                        int num5 = Main.expertMode ? 35 : 50;
                        Projectile.NewProjectile(npc.Center.X + (float)(npc.spriteDirection * -20), npc.Center.Y, (float)(npc.spriteDirection * -7), 0f, 575, num5, 0f, Main.myPlayer, (float)npc.target, 0f);
                    }
                    if (npc.ai[1] >= 60f)
                    {
                        npc.ai[1] = (float)(-(float)Main.rand.Next(320, 601));
                        npc.ai[2] = 0f;
                    }
                }
                else
                {
                    npc.ai[1] += 1f;
                    if (npc.ai[1] >= 180f && num4 < 500f && npc.velocity.Y == 0f)
                    {
                        flag = true;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 1f;
                        npc.netUpdate = true;
                    }
                    else if (npc.velocity.Y == 0f && num4 < 100f && Math.Abs(npc.velocity.X) > 3f && ((npc.Center.X < Main.player[npc.target].Center.X && npc.velocity.X > 0f) || (npc.Center.X > Main.player[npc.target].Center.X && npc.velocity.X < 0f)))
                    {
                        npc.velocity.Y = npc.velocity.Y - 4f;
                    }
                }
            }
            else if (npc.type == 155 || npc.type == 329)
            {
                if (npc.velocity.Y == 0f && num4 < 100f && Math.Abs(npc.velocity.X) > 3f && ((npc.position.X + (float)(npc.width / 2) < Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) && npc.velocity.X > 0f) || (npc.position.X + (float)(npc.width / 2) > Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2) && npc.velocity.X < 0f)))
                {
                    npc.velocity.Y = npc.velocity.Y - 4f;
                }
            }
            else if (npc.type == 546 && npc.velocity.Y == 0f && Math.Abs(npc.velocity.X) > 3f && ((npc.Center.X < Main.player[npc.target].Center.X && npc.velocity.X > 0f) || (npc.Center.X > Main.player[npc.target].Center.X && npc.velocity.X < 0f)))
            {
                npc.velocity.Y = npc.velocity.Y - 4f;
                Main.PlaySound(3, npc.Center, 11);
            }
            if (npc.ai[3] < (float)num)
            {
                if ((npc.type == 329 || npc.type == 315) && !Main.pumpkinMoon)
                {
                    if (npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                    }
                }
                else
                {
                    npc.TargetClosest(true);
                }
            }
            else
            {
                if (npc.velocity.X == 0f)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.ai[0] += 1f;
                        if (npc.ai[0] >= 2f)
                        {
                            npc.direction *= -1;
                            npc.spriteDirection = npc.direction;
                            npc.ai[0] = 0f;
                        }
                    }
                }
                else
                {
                    npc.ai[0] = 0f;
                }
                npc.directionY = -1;
                if (npc.direction == 0)
                {
                    npc.direction = 1;
                }
            }
            float num6 = 6f;
            float num7 = 0.07f;
            if (!flag && (npc.velocity.Y == 0f || npc.wet || (npc.velocity.X <= 0f && npc.direction < 0) || (npc.velocity.X >= 0f && npc.direction > 0)))
            {
                if (npc.type == 155)
                {
                    if (npc.velocity.X > 0f && npc.direction < 0)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    if (npc.velocity.X < 0f && npc.direction > 0)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                }
                else if (npc.type == 329)
                {
                    if (npc.velocity.X > 0f && npc.direction < 0)
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                    if (npc.velocity.X < 0f && npc.direction > 0)
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                    if (npc.direction > 0 && npc.velocity.X < 3f)
                    {
                        npc.velocity.X = npc.velocity.X + 0.1f;
                    }
                    if (npc.direction < 0 && npc.velocity.X > -3f)
                    {
                        npc.velocity.X = npc.velocity.X - 0.1f;
                    }
                }
                else if (npc.type == 315)
                {
                    if (npc.velocity.X > 0f && npc.direction < 0)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    if (npc.velocity.X < 0f && npc.direction > 0)
                    {
                        npc.velocity.X = npc.velocity.X * 0.95f;
                    }
                    if (npc.velocity.X < -num6 || npc.velocity.X > num6)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.velocity *= 0.8f;
                        }
                    }
                    else if (npc.velocity.X < num6 && npc.direction == 1)
                    {
                        npc.velocity.X = npc.velocity.X + 0.07f;
                        if (npc.velocity.X > num6)
                        {
                            npc.velocity.X = num6;
                        }
                    }
                    else if (npc.velocity.X > -num6 && npc.direction == -1)
                    {
                        npc.velocity.X = npc.velocity.X - 0.07f;
                        if (npc.velocity.X < -num6)
                        {
                            npc.velocity.X = -num6;
                        }
                    }
                }
                else if (npc.type == 410)
                {
                    if (Math.Sign(npc.velocity.X) != npc.direction)
                    {
                        npc.velocity.X = npc.velocity.X * 0.9f;
                    }
                    num6 = 6f;
                    num7 = 0.2f;
                }
                else if (npc.type == 423)
                {
                    if (Math.Sign(npc.velocity.X) != npc.direction)
                    {
                        npc.velocity.X = npc.velocity.X * 0.85f;
                    }
                    num6 = 10f;
                    num7 = 0.2f;
                }
                else if (npc.type == 546)
                {
                    if (Math.Sign(npc.velocity.X) != npc.direction)
                    {
                        npc.velocity.X = npc.velocity.X * 0.92f;
                    }
                    float num8 = MathHelper.Lerp(0.6f, 1f, Math.Abs(Main.windSpeedSet)) * (float)Math.Sign(Main.windSpeedSet);
                    if (!Main.player[npc.target].ZoneSandstorm)
                    {
                        num8 = 0f;
                    }
                    num6 = 5f + num8 * (float)npc.direction * 4f;
                    num7 = 0.2f;
                }
                if (npc.velocity.X < -num6 || npc.velocity.X > num6)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= 0.8f;
                    }
                }
                else if (npc.velocity.X < num6 && npc.direction == 1)
                {
                    npc.velocity.X = npc.velocity.X + num7;
                    if (npc.velocity.X > num6)
                    {
                        npc.velocity.X = num6;
                    }
                }
                else if (npc.velocity.X > -num6 && npc.direction == -1)
                {
                    npc.velocity.X = npc.velocity.X - num7;
                    if (npc.velocity.X < -num6)
                    {
                        npc.velocity.X = -num6;
                    }
                }
            }
            if (npc.velocity.Y >= 0f)
            {
                int num9 = 0;
                if (npc.velocity.X < 0f)
                {
                    num9 = -1;
                }
                if (npc.velocity.X > 0f)
                {
                    num9 = 1;
                }
                Vector2 position = npc.position;
                position.X += npc.velocity.X;
                int num10 = (int)((position.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 1) * num9)) / 16f);
                int num11 = (int)((position.Y + (float)npc.height - 1f) / 16f);
                if (Main.tile[num10, num11] == null)
                {
                    Main.tile[num10, num11] = new Tile();
                }
                if (Main.tile[num10, num11 - 1] == null)
                {
                    Main.tile[num10, num11 - 1] = new Tile();
                }
                if (Main.tile[num10, num11 - 2] == null)
                {
                    Main.tile[num10, num11 - 2] = new Tile();
                }
                if (Main.tile[num10, num11 - 3] == null)
                {
                    Main.tile[num10, num11 - 3] = new Tile();
                }
                if (Main.tile[num10, num11 + 1] == null)
                {
                    Main.tile[num10, num11 + 1] = new Tile();
                }
                if ((float)(num10 * 16) < position.X + (float)npc.width && (float)(num10 * 16 + 16) > position.X && ((Main.tile[num10, num11].nactive() && !Main.tile[num10, num11].topSlope() && !Main.tile[num10, num11 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num10, num11].type] && !Main.tileSolidTop[(int)Main.tile[num10, num11].type]) || (Main.tile[num10, num11 - 1].halfBrick() && Main.tile[num10, num11 - 1].nactive())) && (!Main.tile[num10, num11 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num10, num11 - 1].type] || Main.tileSolidTop[(int)Main.tile[num10, num11 - 1].type] || (Main.tile[num10, num11 - 1].halfBrick() && (!Main.tile[num10, num11 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num10, num11 - 4].type] || Main.tileSolidTop[(int)Main.tile[num10, num11 - 4].type]))) && (!Main.tile[num10, num11 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num10, num11 - 2].type] || Main.tileSolidTop[(int)Main.tile[num10, num11 - 2].type]) && (!Main.tile[num10, num11 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num10, num11 - 3].type] || Main.tileSolidTop[(int)Main.tile[num10, num11 - 3].type]) && (!Main.tile[num10 - num9, num11 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num10 - num9, num11 - 3].type]))
                {
                    float num12 = (float)(num11 * 16);
                    if (Main.tile[num10, num11].halfBrick())
                    {
                        num12 += 8f;
                    }
                    if (Main.tile[num10, num11 - 1].halfBrick())
                    {
                        num12 -= 8f;
                    }
                    if (num12 < position.Y + (float)npc.height)
                    {
                        float num13 = position.Y + (float)npc.height - num12;
                        if ((double)num13 <= 16.1)
                        {
                            npc.gfxOffY += npc.position.Y + (float)npc.height - num12;
                            npc.position.Y = num12 - (float)npc.height;
                            if (num13 < 9f)
                            {
                                npc.stepSpeed = 1f;
                            }
                            else
                            {
                                npc.stepSpeed = 2f;
                            }
                        }
                    }
                }
            }
            if (npc.velocity.Y == 0f)
            {
                int num14 = (int)((npc.position.X + (float)(npc.width / 2) + (float)((npc.width / 2 + 2) * npc.direction) + npc.velocity.X * 5f) / 16f);
                int num15 = (int)((npc.position.Y + (float)npc.height - 15f) / 16f);
                if (Main.tile[num14, num15] == null)
                {
                    Main.tile[num14, num15] = new Tile();
                }
                if (Main.tile[num14, num15 - 1] == null)
                {
                    Main.tile[num14, num15 - 1] = new Tile();
                }
                if (Main.tile[num14, num15 - 2] == null)
                {
                    Main.tile[num14, num15 - 2] = new Tile();
                }
                if (Main.tile[num14, num15 - 3] == null)
                {
                    Main.tile[num14, num15 - 3] = new Tile();
                }
                if (Main.tile[num14, num15 + 1] == null)
                {
                    Main.tile[num14, num15 + 1] = new Tile();
                }
                if (Main.tile[num14 + npc.direction, num15 - 1] == null)
                {
                    Main.tile[num14 + npc.direction, num15 - 1] = new Tile();
                }
                if (Main.tile[num14 + npc.direction, num15 + 1] == null)
                {
                    Main.tile[num14 + npc.direction, num15 + 1] = new Tile();
                }
                if (Main.tile[num14 - npc.direction, num15 + 1] == null)
                {
                    Main.tile[num14 - npc.direction, num15 + 1] = new Tile();
                }
                int num16 = npc.spriteDirection;
                if (npc.type == 423 || npc.type == 410 || npc.type == 546)
                {
                    num16 *= -1;
                }
                if ((npc.velocity.X < 0f && num16 == -1) || (npc.velocity.X > 0f && num16 == 1))
                {
                    bool flag6 = npc.type == 410 || npc.type == 423;
                    float num17 = 3f;
                    if (Main.tile[num14, num15 - 2].nactive() && Main.tileSolid[(int)Main.tile[num14, num15 - 2].type])
                    {
                        if (Main.tile[num14, num15 - 3].nactive() && Main.tileSolid[(int)Main.tile[num14, num15 - 3].type])
                        {
                            npc.velocity.Y = -8.5f;
                            npc.netUpdate = true;
                        }
                        else
                        {
                            npc.velocity.Y = -7.5f;
                            npc.netUpdate = true;
                        }
                    }
                    else if (Main.tile[num14, num15 - 1].nactive() && !Main.tile[num14, num15 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num14, num15 - 1].type])
                    {
                        npc.velocity.Y = -7f;
                        npc.netUpdate = true;
                    }
                    else if (npc.position.Y + (float)npc.height - (float)(num15 * 16) > 20f && Main.tile[num14, num15].nactive() && !Main.tile[num14, num15].topSlope() && Main.tileSolid[(int)Main.tile[num14, num15].type])
                    {
                        npc.velocity.Y = -6f;
                        npc.netUpdate = true;
                    }
                    else if ((npc.directionY < 0 || Math.Abs(npc.velocity.X) > num17) && (!flag6 || !Main.tile[num14, num15 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num14, num15 + 1].type]) && (!Main.tile[num14, num15 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num14, num15 + 2].type]) && (!Main.tile[num14 + npc.direction, num15 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num14 + npc.direction, num15 + 3].type]))
                    {
                        npc.velocity.Y = -8f;
                        npc.netUpdate = true;
                    }
                }
            }
            if (npc.type == 423 && Math.Abs(npc.velocity.X) >= num6 * 0.95f)
            {
                Rectangle hitbox = npc.Hitbox;
                for (int m = 0; m < 2; m++)
                {
                    if (Main.rand.Next(3) == 0)
                    {
                        Dust expr_1B5F = Main.dust[Dust.NewDust(hitbox.TopLeft(), hitbox.Width, hitbox.Height, 242, 0f, 0f, 0, default(Color), 1f)];
                        expr_1B5F.velocity = Vector2.Zero;
                        expr_1B5F.noGravity = true;
                        expr_1B5F.fadeIn = 1f;
                        expr_1B5F.scale = 0.5f + Main.rand.NextFloat();
                    }
                }
            }
            if (npc.type == 546)
            {
                npc.rotation += npc.velocity.X * 0.05f;
                npc.spriteDirection = -npc.direction;
            }
        }

        // Token: 0x06000237 RID: 567 RVA: 0x001532E0 File Offset: 0x001514E0
        private static void AI_037_Destroyer(NPC npc)
        {
            if (npc.ai[3] > 0f)
            {
                npc.realLife = (int)npc.ai[3];
            }
            if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead)
            {
                npc.TargetClosest(true);
            }
            if (npc.type >= 134 && npc.type <= 136)
            {
                npc.velocity.Length();
                if (npc.type == 134 || (npc.type != 134 && Main.npc[(int)npc.ai[1]].alpha < 128))
                {
                    if (npc.alpha != 0)
                    {
                        for (int i = 0; i < 2; i++)
                        {
                            int num = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 182, 0f, 0f, 100, default(Color), 2f);
                            Main.dust[num].noGravity = true;
                            Main.dust[num].noLight = true;
                        }
                    }
                    npc.alpha -= 42;
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                }
            }
            if (npc.type > 134)
            {
                bool flag = false;
                if (npc.ai[1] <= 0f)
                {
                    flag = true;
                }
                else if (Main.npc[(int)npc.ai[1]].life <= 0)
                {
                    flag = true;
                }
                if (flag)
                {
                    npc.life = 0;
                    npc.HitEffect(0, 10.0);
                    npc.checkDead();
                }
            }
            if (Main.netMode != 1)
            {
                if (npc.ai[0] == 0f && npc.type == 134)
                {
                    npc.ai[3] = (float)npc.whoAmI;
                    npc.realLife = npc.whoAmI;
                    int num2 = npc.whoAmI;
                    int num3 = 80;
                    for (int j = 0; j <= num3; j++)
                    {
                        int num4 = 135;
                        if (j == num3)
                        {
                            num4 = 136;
                        }
                        int num5 = NPC.NewNPC((int)(npc.position.X + (float)(npc.width / 2)), (int)(npc.position.Y + (float)npc.height), num4, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num5].ai[3] = (float)npc.whoAmI;
                        Main.npc[num5].realLife = npc.whoAmI;
                        Main.npc[num5].ai[1] = (float)num2;
                        Main.npc[num2].ai[0] = (float)num5;
                        NetMessage.SendData(23, -1, -1, null, num5, 0f, 0f, 0f, 0, 0, 0);
                        num2 = num5;
                    }
                }
                if (npc.type == 135)
                {
                    npc.localAI[0] += (float)Main.rand.Next(4);
                    if (npc.localAI[0] >= (float)Main.rand.Next(1400, 26000))
                    {
                        npc.localAI[0] = 0f;
                        npc.TargetClosest(true);
                        if (Collision.CanHit(npc.position, npc.width, npc.height, Main.player[npc.target].position, Main.player[npc.target].width, Main.player[npc.target].height))
                        {
                            float arg_48B_0 = 8f;
                            Vector2 vector = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)(npc.height / 2));
                            float num6 = Main.player[npc.target].position.X + (float)Main.player[npc.target].width * 0.5f - vector.X + (float)Main.rand.Next(-20, 21);
                            float num7 = Main.player[npc.target].position.Y + (float)Main.player[npc.target].height * 0.5f - vector.Y + (float)Main.rand.Next(-20, 21);
                            float num8 = (float)Math.Sqrt((double)(num6 * num6 + num7 * num7));
                            num8 = arg_48B_0 / num8;
                            num6 *= num8;
                            num7 *= num8;
                            num6 += (float)Main.rand.Next(-20, 21) * 0.05f;
                            num7 += (float)Main.rand.Next(-20, 21) * 0.05f;
                            int num9 = 22;
                            if (Main.expertMode)
                            {
                                num9 = 18;
                            }
                            int num10 = 100;
                            vector.X += num6 * 5f;
                            vector.Y += num7 * 5f;
                            int num11 = Projectile.NewProjectile(vector.X, vector.Y, num6, num7, num10, num9, 0f, Main.myPlayer, 0f, 0f);
                            Main.projectile[num11].timeLeft = 300;
                            npc.netUpdate = true;
                        }
                    }
                }
            }
            int num12 = (int)(npc.position.X / 16f) - 1;
            int num13 = (int)((npc.position.X + (float)npc.width) / 16f) + 2;
            int num14 = (int)(npc.position.Y / 16f) - 1;
            int num15 = (int)((npc.position.Y + (float)npc.height) / 16f) + 2;
            if (num12 < 0)
            {
                num12 = 0;
            }
            if (num13 > Main.maxTilesX)
            {
                num13 = Main.maxTilesX;
            }
            if (num14 < 0)
            {
                num14 = 0;
            }
            if (num15 > Main.maxTilesY)
            {
                num15 = Main.maxTilesY;
            }
            bool flag2 = false;
            if (!flag2)
            {
                for (int k = num12; k < num13; k++)
                {
                    for (int l = num14; l < num15; l++)
                    {
                        if (Main.tile[k, l] != null && ((Main.tile[k, l].nactive() && (Main.tileSolid[(int)Main.tile[k, l].type] || (Main.tileSolidTop[(int)Main.tile[k, l].type] && Main.tile[k, l].frameY == 0))) || Main.tile[k, l].liquid > 64))
                        {
                            Vector2 vector2;
                            vector2.X = (float)(k * 16);
                            vector2.Y = (float)(l * 16);
                            if (npc.position.X + (float)npc.width > vector2.X && npc.position.X < vector2.X + 16f && npc.position.Y + (float)npc.height > vector2.Y && npc.position.Y < vector2.Y + 16f)
                            {
                                flag2 = true;
                                break;
                            }
                        }
                    }
                }
            }
            if (!flag2)
            {
                if (npc.type != 135 || npc.ai[2] != 1f)
                {
                    Lighting.AddLight((int)((npc.position.X + (float)(npc.width / 2)) / 16f), (int)((npc.position.Y + (float)(npc.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
                }
                npc.localAI[1] = 1f;
                if (npc.type == 134)
                {
                    Rectangle rectangle = new Rectangle((int)npc.position.X, (int)npc.position.Y, npc.width, npc.height);
                    int num16 = 1000;
                    bool flag3 = true;
                    if (npc.position.Y > Main.player[npc.target].position.Y)
                    {
                        for (int m = 0; m < 255; m++)
                        {
                            if (Main.player[m].active)
                            {
                                Rectangle rectangle2 = new Rectangle((int)Main.player[m].position.X - num16, (int)Main.player[m].position.Y - num16, num16 * 2, num16 * 2);
                                if (rectangle.Intersects(rectangle2))
                                {
                                    flag3 = false;
                                    break;
                                }
                            }
                        }
                        if (flag3)
                        {
                            flag2 = true;
                        }
                    }
                }
            }
            else
            {
                npc.localAI[1] = 0f;
            }
            float num17 = 16f;
            if (Main.dayTime || Main.player[npc.target].dead)
            {
                flag2 = false;
                npc.velocity.Y = npc.velocity.Y + 1f;
                if ((double)npc.position.Y > Main.worldSurface * 16.0)
                {
                    npc.velocity.Y = npc.velocity.Y + 1f;
                    num17 = 32f;
                }
                if ((double)npc.position.Y > Main.rockLayer * 16.0)
                {
                    for (int n = 0; n < 200; n++)
                    {
                        if (Main.npc[n].aiStyle == npc.aiStyle)
                        {
                            Main.npc[n].active = false;
                        }
                    }
                }
            }
            float num18 = 0.1f;
            float num19 = 0.15f;
            Vector2 vector3 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
            float num20 = Main.player[npc.target].position.X + (float)(Main.player[npc.target].width / 2);
            float num21 = Main.player[npc.target].position.Y + (float)(Main.player[npc.target].height / 2);
            num20 = (float)((int)(num20 / 16f) * 16);
            num21 = (float)((int)(num21 / 16f) * 16);
            vector3.X = (float)((int)(vector3.X / 16f) * 16);
            vector3.Y = (float)((int)(vector3.Y / 16f) * 16);
            num20 -= vector3.X;
            num21 -= vector3.Y;
            float num22 = (float)Math.Sqrt((double)(num20 * num20 + num21 * num21));
            if (npc.ai[1] > 0f && npc.ai[1] < (float)Main.npc.Length)
            {
                try
                {
                    vector3 = new Vector2(npc.position.X + (float)npc.width * 0.5f, npc.position.Y + (float)npc.height * 0.5f);
                    num20 = Main.npc[(int)npc.ai[1]].position.X + (float)(Main.npc[(int)npc.ai[1]].width / 2) - vector3.X;
                    num21 = Main.npc[(int)npc.ai[1]].position.Y + (float)(Main.npc[(int)npc.ai[1]].height / 2) - vector3.Y;
                }
                catch
                {
                }
                npc.rotation = (float)Math.Atan2((double)num21, (double)num20) + 1.57f;
                num22 = (float)Math.Sqrt((double)(num20 * num20 + num21 * num21));
                int num23 = (int)(44f * npc.scale);
                num22 = (num22 - (float)num23) / num22;
                num20 *= num22;
                num21 *= num22;
                npc.velocity = Vector2.Zero;
                npc.position.X = npc.position.X + num20;
                npc.position.Y = npc.position.Y + num21;
                return;
            }
            if (!flag2)
            {
                npc.TargetClosest(true);
                npc.velocity.Y = npc.velocity.Y + 0.15f;
                if (npc.velocity.Y > num17)
                {
                    npc.velocity.Y = num17;
                }
                if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num17 * 0.4)
                {
                    if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - num18 * 1.1f;
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X + num18 * 1.1f;
                    }
                }
                else if (npc.velocity.Y == num17)
                {
                    if (npc.velocity.X < num20)
                    {
                        npc.velocity.X = npc.velocity.X + num18;
                    }
                    else if (npc.velocity.X > num20)
                    {
                        npc.velocity.X = npc.velocity.X - num18;
                    }
                }
                else if (npc.velocity.Y > 4f)
                {
                    if (npc.velocity.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X + num18 * 0.9f;
                    }
                    else
                    {
                        npc.velocity.X = npc.velocity.X - num18 * 0.9f;
                    }
                }
            }
            else
            {
                if (npc.soundDelay == 0)
                {
                    float num24 = num22 / 40f;
                    if (num24 < 10f)
                    {
                        num24 = 10f;
                    }
                    if (num24 > 20f)
                    {
                        num24 = 20f;
                    }
                    npc.soundDelay = (int)num24;
                    Main.PlaySound(15, (int)npc.position.X, (int)npc.position.Y, 1, 1f, 0f);
                }
                num22 = (float)Math.Sqrt((double)(num20 * num20 + num21 * num21));
                float num25 = Math.Abs(num20);
                float num26 = Math.Abs(num21);
                float num27 = num17 / num22;
                num20 *= num27;
                num21 *= num27;
                if (((npc.velocity.X > 0f && num20 > 0f) || (npc.velocity.X < 0f && num20 < 0f)) && ((npc.velocity.Y > 0f && num21 > 0f) || (npc.velocity.Y < 0f && num21 < 0f)))
                {
                    if (npc.velocity.X < num20)
                    {
                        npc.velocity.X = npc.velocity.X + num19;
                    }
                    else if (npc.velocity.X > num20)
                    {
                        npc.velocity.X = npc.velocity.X - num19;
                    }
                    if (npc.velocity.Y < num21)
                    {
                        npc.velocity.Y = npc.velocity.Y + num19;
                    }
                    else if (npc.velocity.Y > num21)
                    {
                        npc.velocity.Y = npc.velocity.Y - num19;
                    }
                }
                if ((npc.velocity.X > 0f && num20 > 0f) || (npc.velocity.X < 0f && num20 < 0f) || (npc.velocity.Y > 0f && num21 > 0f) || (npc.velocity.Y < 0f && num21 < 0f))
                {
                    if (npc.velocity.X < num20)
                    {
                        npc.velocity.X = npc.velocity.X + num18;
                    }
                    else if (npc.velocity.X > num20)
                    {
                        npc.velocity.X = npc.velocity.X - num18;
                    }
                    if (npc.velocity.Y < num21)
                    {
                        npc.velocity.Y = npc.velocity.Y + num18;
                    }
                    else if (npc.velocity.Y > num21)
                    {
                        npc.velocity.Y = npc.velocity.Y - num18;
                    }
                    if ((double)Math.Abs(num21) < (double)num17 * 0.2 && ((npc.velocity.X > 0f && num20 < 0f) || (npc.velocity.X < 0f && num20 > 0f)))
                    {
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + num18 * 2f;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y - num18 * 2f;
                        }
                    }
                    if ((double)Math.Abs(num20) < (double)num17 * 0.2 && ((npc.velocity.Y > 0f && num21 < 0f) || (npc.velocity.Y < 0f && num21 > 0f)))
                    {
                        if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + num18 * 2f;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X - num18 * 2f;
                        }
                    }
                }
                else if (num25 > num26)
                {
                    if (npc.velocity.X < num20)
                    {
                        npc.velocity.X = npc.velocity.X + num18 * 1.1f;
                    }
                    else if (npc.velocity.X > num20)
                    {
                        npc.velocity.X = npc.velocity.X - num18 * 1.1f;
                    }
                    if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num17 * 0.5)
                    {
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y + num18;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y - num18;
                        }
                    }
                }
                else
                {
                    if (npc.velocity.Y < num21)
                    {
                        npc.velocity.Y = npc.velocity.Y + num18 * 1.1f;
                    }
                    else if (npc.velocity.Y > num21)
                    {
                        npc.velocity.Y = npc.velocity.Y - num18 * 1.1f;
                    }
                    if ((double)(Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y)) < (double)num17 * 0.5)
                    {
                        if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X = npc.velocity.X + num18;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X - num18;
                        }
                    }
                }
            }
            npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X) + 1.57f;
            if (npc.type == 134)
            {
                if (flag2)
                {
                    if (npc.localAI[0] != 1f)
                    {
                        npc.netUpdate = true;
                    }
                    npc.localAI[0] = 1f;
                }
                else
                {
                    if (npc.localAI[0] != 0f)
                    {
                        npc.netUpdate = true;
                    }
                    npc.localAI[0] = 0f;
                }
                if (((npc.velocity.X > 0f && npc.oldVelocity.X < 0f) || (npc.velocity.X < 0f && npc.oldVelocity.X > 0f) || (npc.velocity.Y > 0f && npc.oldVelocity.Y < 0f) || (npc.velocity.Y < 0f && npc.oldVelocity.Y > 0f)) && !npc.justHit)
                {
                    npc.netUpdate = true;
                }
            }
        }

        // Token: 0x06000236 RID: 566 RVA: 0x00150A24 File Offset: 0x0014EC24
        private static void AI_069_DukeFishron(NPC npc)
        {
            bool expertMode = Main.expertMode;
            float num = expertMode ? (0.6f * Main.damageMultiplier) : 1f;
            bool flag = (double)npc.life <= (double)npc.lifeMax * 0.5;
            bool flag2 = expertMode && (double)npc.life <= (double)npc.lifeMax * 0.15;
            bool flag3 = npc.ai[0] > 4f;
            bool flag4 = npc.ai[0] > 9f;
            bool flag5 = npc.ai[3] < 10f;
            if (flag4)
            {
                npc.damage = (int)((float)npc.defDamage * 1.1f * num);
                npc.defense = 0;
            }
            else if (flag3)
            {
                npc.damage = (int)((float)npc.defDamage * 1.2f * num);
                npc.defense = (int)((float)npc.defDefense * 0.8f);
            }
            else
            {
                npc.damage = npc.defDamage;
                npc.defense = npc.defDefense;
            }
            int num2 = expertMode ? 40 : 60;
            float num3 = expertMode ? 0.55f : 0.45f;
            float scaleFactor = expertMode ? 8.5f : 7.5f;
            if (flag4)
            {
                num3 = 0.7f;
                scaleFactor = 12f;
                num2 = 30;
            }
            else if (flag3 & flag5)
            {
                num3 = (expertMode ? 0.6f : 0.5f);
                scaleFactor = (expertMode ? 10f : 8f);
                num2 = (expertMode ? 40 : 20);
            }
            else if (flag5 && !flag3 && !flag4)
            {
                num2 = 30;
            }
            int num4 = expertMode ? 28 : 30;
            float num5 = expertMode ? 17f : 16f;
            if (flag4)
            {
                num4 = 25;
                num5 = 27f;
            }
            else if (flag5 & flag3)
            {
                num4 = (expertMode ? 27 : 30);
                if (expertMode)
                {
                    num5 = 21f;
                }
            }
            int num6 = 80;
            int num7 = 4;
            float num8 = 0.3f;
            float scaleFactor2 = 5f;
            int num9 = 90;
            int num10 = 180;
            int num11 = 180;
            int num12 = 30;
            int num13 = 120;
            int num14 = 4;
            float scaleFactor3 = 6f;
            float scaleFactor4 = 20f;
            float num15 = 6.28318548f / (float)(num13 / 2);
            int num16 = 75;
            Vector2 vector = npc.Center;
            Player player = Main.player[npc.target];
            if (npc.target < 0 || npc.target == 255 || player.dead || !player.active)
            {
                npc.TargetClosest(true);
                player = Main.player[npc.target];
                npc.netUpdate = true;
            }
            if (player.dead || Vector2.Distance(player.Center, vector) > 5600f)
            {
                npc.velocity.Y = npc.velocity.Y - 0.4f;
                if (npc.timeLeft > 10)
                {
                    npc.timeLeft = 10;
                }
                if (npc.ai[0] > 4f)
                {
                    npc.ai[0] = 5f;
                }
                else
                {
                    npc.ai[0] = 0f;
                }
                npc.ai[2] = 0f;
            }
            if (player.position.Y < 800f || (double)player.position.Y > Main.worldSurface * 16.0 || (player.position.X > 6400f && player.position.X < (float)(Main.maxTilesX * 16 - 6400)))
            {
                num2 = 20;
                npc.damage = npc.defDamage * 2;
                npc.defense = npc.defDefense * 2;
                npc.ai[3] = 0f;
                num5 += 6f;
            }
            if (npc.localAI[0] == 0f)
            {
                npc.localAI[0] = 1f;
                npc.alpha = 255;
                npc.rotation = 0f;
                if (Main.netMode != 1)
                {
                    npc.ai[0] = -1f;
                    npc.netUpdate = true;
                }
            }
            float num17 = (float)Math.Atan2((double)(player.Center.Y - vector.Y), (double)(player.Center.X - vector.X));
            if (npc.spriteDirection == 1)
            {
                num17 += 3.14159274f;
            }
            if (num17 < 0f)
            {
                num17 += 6.28318548f;
            }
            if (num17 > 6.28318548f)
            {
                num17 -= 6.28318548f;
            }
            if (npc.ai[0] == -1f)
            {
                num17 = 0f;
            }
            if (npc.ai[0] == 3f)
            {
                num17 = 0f;
            }
            if (npc.ai[0] == 4f)
            {
                num17 = 0f;
            }
            if (npc.ai[0] == 8f)
            {
                num17 = 0f;
            }
            float num18 = 0.04f;
            if (npc.ai[0] == 1f || npc.ai[0] == 6f)
            {
                num18 = 0f;
            }
            if (npc.ai[0] == 7f)
            {
                num18 = 0f;
            }
            if (npc.ai[0] == 3f)
            {
                num18 = 0.01f;
            }
            if (npc.ai[0] == 4f)
            {
                num18 = 0.01f;
            }
            if (npc.ai[0] == 8f)
            {
                num18 = 0.01f;
            }
            if (npc.rotation < num17)
            {
                if ((double)(num17 - npc.rotation) > 3.1415926535897931)
                {
                    npc.rotation -= num18;
                }
                else
                {
                    npc.rotation += num18;
                }
            }
            if (npc.rotation > num17)
            {
                if ((double)(npc.rotation - num17) > 3.1415926535897931)
                {
                    npc.rotation += num18;
                }
                else
                {
                    npc.rotation -= num18;
                }
            }
            if (npc.rotation > num17 - num18 && npc.rotation < num17 + num18)
            {
                npc.rotation = num17;
            }
            if (npc.rotation < 0f)
            {
                npc.rotation += 6.28318548f;
            }
            if (npc.rotation > 6.28318548f)
            {
                npc.rotation -= 6.28318548f;
            }
            if (npc.rotation > num17 - num18 && npc.rotation < num17 + num18)
            {
                npc.rotation = num17;
            }
            if (npc.ai[0] != -1f && npc.ai[0] < 9f)
            {
                if (Collision.SolidCollision(npc.position, npc.width, npc.height))
                {
                    npc.alpha += 15;
                }
                else
                {
                    npc.alpha -= 15;
                }
                if (npc.alpha < 0)
                {
                    npc.alpha = 0;
                }
                if (npc.alpha > 150)
                {
                    npc.alpha = 150;
                }
            }
            if (npc.ai[0] == -1f)
            {
                npc.velocity *= 0.98f;
                int num19 = Math.Sign(player.Center.X - vector.X);
                if (num19 != 0)
                {
                    npc.direction = num19;
                    npc.spriteDirection = -npc.direction;
                }
                if (npc.ai[2] > 20f)
                {
                    npc.velocity.Y = -2f;
                    npc.alpha -= 5;
                    if (Collision.SolidCollision(npc.position, npc.width, npc.height))
                    {
                        npc.alpha += 15;
                    }
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                    if (npc.alpha > 150)
                    {
                        npc.alpha = 150;
                    }
                }
                if (npc.ai[2] == (float)(num9 - 30))
                {
                    int num20 = 36;
                    for (int i = 0; i < num20; i++)
                    {
                        Vector2 expr_80F = (Vector2.Normalize(npc.velocity) * new Vector2((float)npc.width / 2f, (float)npc.height) * 0.75f * 0.5f).RotatedBy((double)((float)(i - (num20 / 2 - 1)) * 6.28318548f / (float)num20), default(Vector2)) + npc.Center;
                        Vector2 vector2 = expr_80F - npc.Center;
                        int num21 = Dust.NewDust(expr_80F + vector2, 0, 0, 172, vector2.X * 2f, vector2.Y * 2f, 100, default(Color), 1.4f);
                        Main.dust[num21].noGravity = true;
                        Main.dust[num21].noLight = true;
                        Main.dust[num21].velocity = Vector2.Normalize(vector2) * 3f;
                    }
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num16)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 0f && !player.dead)
            {
                if (npc.ai[1] == 0f)
                {
                    npc.ai[1] = (float)(300 * Math.Sign((vector - player.Center).X));
                }
                Vector2 vector3 = Vector2.Normalize(player.Center + new Vector2(npc.ai[1], -200f) - vector - npc.velocity) * scaleFactor;
                if (npc.velocity.X < vector3.X)
                {
                    npc.velocity.X = npc.velocity.X + num3;
                    if (npc.velocity.X < 0f && vector3.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X + num3;
                    }
                }
                else if (npc.velocity.X > vector3.X)
                {
                    npc.velocity.X = npc.velocity.X - num3;
                    if (npc.velocity.X > 0f && vector3.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - num3;
                    }
                }
                if (npc.velocity.Y < vector3.Y)
                {
                    npc.velocity.Y = npc.velocity.Y + num3;
                    if (npc.velocity.Y < 0f && vector3.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + num3;
                    }
                }
                else if (npc.velocity.Y > vector3.Y)
                {
                    npc.velocity.Y = npc.velocity.Y - num3;
                    if (npc.velocity.Y > 0f && vector3.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - num3;
                    }
                }
                int num22 = Math.Sign(player.Center.X - vector.X);
                if (num22 != 0)
                {
                    if (npc.ai[2] == 0f && num22 != npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.direction = num22;
                    if (npc.spriteDirection != -npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.spriteDirection = -npc.direction;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num2)
                {
                    int num23 = 0;
                    switch ((int)npc.ai[3])
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            num23 = 1;
                            break;
                        case 10:
                            npc.ai[3] = 1f;
                            num23 = 2;
                            break;
                        case 11:
                            npc.ai[3] = 0f;
                            num23 = 3;
                            break;
                    }
                    if (flag)
                    {
                        num23 = 4;
                    }
                    if (num23 == 1)
                    {
                        npc.ai[0] = 1f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                        npc.velocity = Vector2.Normalize(player.Center - vector) * num5;
                        npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                        if (num22 != 0)
                        {
                            npc.direction = num22;
                            if (npc.spriteDirection == 1)
                            {
                                npc.rotation += 3.14159274f;
                            }
                            npc.spriteDirection = -npc.direction;
                        }
                    }
                    else if (num23 == 2)
                    {
                        npc.ai[0] = 2f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    else if (num23 == 3)
                    {
                        npc.ai[0] = 3f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    else if (num23 == 4)
                    {
                        npc.ai[0] = 4f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 1f)
            {
                int num24 = 7;
                for (int j = 0; j < num24; j++)
                {
                    Vector2 arg_E1C_0 = (Vector2.Normalize(npc.velocity) * new Vector2((float)(npc.width + 50) / 2f, (float)npc.height) * 0.75f).RotatedBy((double)(j - (num24 / 2 - 1)) * 3.1415926535897931 / (double)((float)num24), default(Vector2)) + vector;
                    Vector2 vector4 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
                    int num25 = Dust.NewDust(arg_E1C_0 + vector4, 0, 0, 172, vector4.X * 2f, vector4.Y * 2f, 100, default(Color), 1.4f);
                    Main.dust[num25].noGravity = true;
                    Main.dust[num25].noLight = true;
                    Main.dust[num25].velocity /= 4f;
                    Main.dust[num25].velocity -= npc.velocity;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num4)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] += 2f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 2f)
            {
                if (npc.ai[1] == 0f)
                {
                    npc.ai[1] = (float)(300 * Math.Sign((vector - player.Center).X));
                }
                Vector2 vector5 = Vector2.Normalize(player.Center + new Vector2(npc.ai[1], -200f) - vector - npc.velocity) * scaleFactor2;
                if (npc.velocity.X < vector5.X)
                {
                    npc.velocity.X = npc.velocity.X + num8;
                    if (npc.velocity.X < 0f && vector5.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X + num8;
                    }
                }
                else if (npc.velocity.X > vector5.X)
                {
                    npc.velocity.X = npc.velocity.X - num8;
                    if (npc.velocity.X > 0f && vector5.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - num8;
                    }
                }
                if (npc.velocity.Y < vector5.Y)
                {
                    npc.velocity.Y = npc.velocity.Y + num8;
                    if (npc.velocity.Y < 0f && vector5.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + num8;
                    }
                }
                else if (npc.velocity.Y > vector5.Y)
                {
                    npc.velocity.Y = npc.velocity.Y - num8;
                    if (npc.velocity.Y > 0f && vector5.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - num8;
                    }
                }
                if (npc.ai[2] == 0f)
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                if (npc.ai[2] % (float)num7 == 0f)
                {
                    Main.PlaySound(4, (int)npc.Center.X, (int)npc.Center.Y, 19, 1f, 0f);
                    if (Main.netMode != 1)
                    {
                        Vector2 vector6 = Vector2.Normalize(player.Center - vector) * (float)(npc.width + 20) / 2f + vector;
                        NPC.NewNPC((int)vector6.X, (int)vector6.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
                    }
                }
                int num26 = Math.Sign(player.Center.X - vector.X);
                if (num26 != 0)
                {
                    npc.direction = num26;
                    if (npc.spriteDirection != -npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.spriteDirection = -npc.direction;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num6)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 3f)
            {
                npc.velocity *= 0.98f;
                npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                if (npc.ai[2] == (float)(num9 - 30))
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 9, 1f, 0f);
                }
                if (Main.netMode != 1 && npc.ai[2] == (float)(num9 - 30))
                {
                    Vector2 vector7 = npc.rotation.ToRotationVector2() * (Vector2.UnitX * (float)npc.direction) * (float)(npc.width + 20) / 2f + vector;
                    Projectile.NewProjectile(vector7.X, vector7.Y, (float)(npc.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
                    Projectile.NewProjectile(vector7.X, vector7.Y, (float)(-(float)npc.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num9)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 4f)
            {
                npc.velocity *= 0.98f;
                npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                if (npc.ai[2] == (float)(num10 - 60))
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num10)
                {
                    npc.ai[0] = 5f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 5f && !player.dead)
            {
                if (npc.ai[1] == 0f)
                {
                    npc.ai[1] = (float)(300 * Math.Sign((vector - player.Center).X));
                }
                Vector2 vector8 = Vector2.Normalize(player.Center + new Vector2(npc.ai[1], -200f) - vector - npc.velocity) * scaleFactor;
                if (npc.velocity.X < vector8.X)
                {
                    npc.velocity.X = npc.velocity.X + num3;
                    if (npc.velocity.X < 0f && vector8.X > 0f)
                    {
                        npc.velocity.X = npc.velocity.X + num3;
                    }
                }
                else if (npc.velocity.X > vector8.X)
                {
                    npc.velocity.X = npc.velocity.X - num3;
                    if (npc.velocity.X > 0f && vector8.X < 0f)
                    {
                        npc.velocity.X = npc.velocity.X - num3;
                    }
                }
                if (npc.velocity.Y < vector8.Y)
                {
                    npc.velocity.Y = npc.velocity.Y + num3;
                    if (npc.velocity.Y < 0f && vector8.Y > 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y + num3;
                    }
                }
                else if (npc.velocity.Y > vector8.Y)
                {
                    npc.velocity.Y = npc.velocity.Y - num3;
                    if (npc.velocity.Y > 0f && vector8.Y < 0f)
                    {
                        npc.velocity.Y = npc.velocity.Y - num3;
                    }
                }
                int num27 = Math.Sign(player.Center.X - vector.X);
                if (num27 != 0)
                {
                    if (npc.ai[2] == 0f && num27 != npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.direction = num27;
                    if (npc.spriteDirection != -npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.spriteDirection = -npc.direction;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num2)
                {
                    int num28 = 0;
                    switch ((int)npc.ai[3])
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            num28 = 1;
                            break;
                        case 6:
                            npc.ai[3] = 1f;
                            num28 = 2;
                            break;
                        case 7:
                            npc.ai[3] = 0f;
                            num28 = 3;
                            break;
                    }
                    if (flag2)
                    {
                        num28 = 4;
                    }
                    if (num28 == 1)
                    {
                        npc.ai[0] = 6f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                        npc.velocity = Vector2.Normalize(player.Center - vector) * num5;
                        npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                        if (num27 != 0)
                        {
                            npc.direction = num27;
                            if (npc.spriteDirection == 1)
                            {
                                npc.rotation += 3.14159274f;
                            }
                            npc.spriteDirection = -npc.direction;
                        }
                    }
                    else if (num28 == 2)
                    {
                        npc.velocity = Vector2.Normalize(player.Center - vector) * scaleFactor4;
                        npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                        if (num27 != 0)
                        {
                            npc.direction = num27;
                            if (npc.spriteDirection == 1)
                            {
                                npc.rotation += 3.14159274f;
                            }
                            npc.spriteDirection = -npc.direction;
                        }
                        npc.ai[0] = 7f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    else if (num28 == 3)
                    {
                        npc.ai[0] = 8f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    else if (num28 == 4)
                    {
                        npc.ai[0] = 9f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 6f)
            {
                int num29 = 7;
                for (int k = 0; k < num29; k++)
                {
                    Vector2 arg_1A97_0 = (Vector2.Normalize(npc.velocity) * new Vector2((float)(npc.width + 50) / 2f, (float)npc.height) * 0.75f).RotatedBy((double)(k - (num29 / 2 - 1)) * 3.1415926535897931 / (double)((float)num29), default(Vector2)) + vector;
                    Vector2 vector9 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
                    int num30 = Dust.NewDust(arg_1A97_0 + vector9, 0, 0, 172, vector9.X * 2f, vector9.Y * 2f, 100, default(Color), 1.4f);
                    Main.dust[num30].noGravity = true;
                    Main.dust[num30].noLight = true;
                    Main.dust[num30].velocity /= 4f;
                    Main.dust[num30].velocity -= npc.velocity;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num4)
                {
                    npc.ai[0] = 5f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] += 2f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 7f)
            {
                if (npc.ai[2] == 0f)
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                if (npc.ai[2] % (float)num14 == 0f)
                {
                    Main.PlaySound(4, (int)npc.Center.X, (int)npc.Center.Y, 19, 1f, 0f);
                    if (Main.netMode != 1)
                    {
                        Vector2 vector10 = Vector2.Normalize(npc.velocity) * (float)(npc.width + 20) / 2f + vector;
                        int num31 = NPC.NewNPC((int)vector10.X, (int)vector10.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
                        Main.npc[num31].target = npc.target;
                        Main.npc[num31].velocity = Vector2.Normalize(npc.velocity).RotatedBy((double)(1.57079637f * (float)npc.direction), default(Vector2)) * scaleFactor3;
                        Main.npc[num31].netUpdate = true;
                        Main.npc[num31].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
                    }
                }
                npc.velocity = npc.velocity.RotatedBy((double)(-(double)num15 * (float)npc.direction), default(Vector2));
                npc.rotation -= num15 * (float)npc.direction;
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num13)
                {
                    npc.ai[0] = 5f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 8f)
            {
                npc.velocity *= 0.98f;
                npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                if (npc.ai[2] == (float)(num9 - 30))
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                if (Main.netMode != 1 && npc.ai[2] == (float)(num9 - 30))
                {
                    Projectile.NewProjectile(vector.X, vector.Y, 0f, 0f, 385, 0, 0f, Main.myPlayer, 1f, (float)(npc.target + 1));
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num9)
                {
                    npc.ai[0] = 5f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 9f)
            {
                if (npc.ai[2] < (float)(num11 - 90))
                {
                    if (Collision.SolidCollision(npc.position, npc.width, npc.height))
                    {
                        npc.alpha += 15;
                    }
                    else
                    {
                        npc.alpha -= 15;
                    }
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                    if (npc.alpha > 150)
                    {
                        npc.alpha = 150;
                    }
                }
                else if (npc.alpha < 255)
                {
                    npc.alpha += 4;
                    if (npc.alpha > 255)
                    {
                        npc.alpha = 255;
                    }
                }
                npc.velocity *= 0.98f;
                npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                if (npc.ai[2] == (float)(num11 - 60))
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num11)
                {
                    npc.ai[0] = 10f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] = 0f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 10f && !player.dead)
            {
                npc.dontTakeDamage = false;
                npc.chaseable = false;
                if (npc.alpha < 255)
                {
                    npc.alpha += 25;
                    if (npc.alpha > 255)
                    {
                        npc.alpha = 255;
                    }
                }
                if (npc.ai[1] == 0f)
                {
                    npc.ai[1] = (float)(360 * Math.Sign((vector - player.Center).X));
                }
                Vector2 desiredVelocity = Vector2.Normalize(player.Center + new Vector2(npc.ai[1], -200f) - vector - npc.velocity) * scaleFactor;
                npc.SimpleFlyMovement(desiredVelocity, num3);
                int num32 = Math.Sign(player.Center.X - vector.X);
                if (num32 != 0)
                {
                    if (npc.ai[2] == 0f && num32 != npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                        for (int l = 0; l < npc.oldPos.Length; l++)
                        {
                            npc.oldPos[l] = Vector2.Zero;
                        }
                    }
                    npc.direction = num32;
                    if (npc.spriteDirection != -npc.direction)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.spriteDirection = -npc.direction;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num2)
                {
                    int num33 = 0;
                    switch ((int)npc.ai[3])
                    {
                        case 0:
                        case 2:
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                            num33 = 1;
                            break;
                        case 1:
                        case 4:
                        case 8:
                            num33 = 2;
                            break;
                    }
                    if (num33 == 1)
                    {
                        npc.ai[0] = 11f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                        npc.velocity = Vector2.Normalize(player.Center - vector) * num5;
                        npc.rotation = (float)Math.Atan2((double)npc.velocity.Y, (double)npc.velocity.X);
                        if (num32 != 0)
                        {
                            npc.direction = num32;
                            if (npc.spriteDirection == 1)
                            {
                                npc.rotation += 3.14159274f;
                            }
                            npc.spriteDirection = -npc.direction;
                        }
                    }
                    else if (num33 == 2)
                    {
                        npc.ai[0] = 12f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    else if (num33 == 3)
                    {
                        npc.ai[0] = 13f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                    }
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 11f)
            {
                npc.dontTakeDamage = false;
                npc.chaseable = true;
                npc.alpha -= 25;
                if (npc.alpha < 0)
                {
                    npc.alpha = 0;
                }
                int num34 = 7;
                for (int m = 0; m < num34; m++)
                {
                    Vector2 arg_2444_0 = (Vector2.Normalize(npc.velocity) * new Vector2((float)(npc.width + 50) / 2f, (float)npc.height) * 0.75f).RotatedBy((double)(m - (num34 / 2 - 1)) * 3.1415926535897931 / (double)((float)num34), default(Vector2)) + vector;
                    Vector2 vector11 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
                    int num35 = Dust.NewDust(arg_2444_0 + vector11, 0, 0, 172, vector11.X * 2f, vector11.Y * 2f, 100, default(Color), 1.4f);
                    Main.dust[num35].noGravity = true;
                    Main.dust[num35].noLight = true;
                    Main.dust[num35].velocity /= 4f;
                    Main.dust[num35].velocity -= npc.velocity;
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num4)
                {
                    npc.ai[0] = 10f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] += 1f;
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 12f)
            {
                npc.dontTakeDamage = true;
                npc.chaseable = false;
                if (npc.alpha < 255)
                {
                    npc.alpha += 17;
                    if (npc.alpha > 255)
                    {
                        npc.alpha = 255;
                    }
                }
                npc.velocity *= 0.98f;
                npc.velocity.Y = MathHelper.Lerp(npc.velocity.Y, 0f, 0.02f);
                if (npc.ai[2] == (float)(num12 / 2))
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                if (Main.netMode != 1 && npc.ai[2] == (float)(num12 / 2))
                {
                    if (npc.ai[1] == 0f)
                    {
                        npc.ai[1] = (float)(300 * Math.Sign((vector - player.Center).X));
                    }
                    Vector2 center = player.Center + new Vector2(-npc.ai[1], -200f);
                    vector = (npc.Center = center);
                    int num36 = Math.Sign(player.Center.X - vector.X);
                    if (num36 != 0)
                    {
                        if (npc.ai[2] == 0f && num36 != npc.direction)
                        {
                            npc.rotation += 3.14159274f;
                            for (int n = 0; n < npc.oldPos.Length; n++)
                            {
                                npc.oldPos[n] = Vector2.Zero;
                            }
                        }
                        npc.direction = num36;
                        if (npc.spriteDirection != -npc.direction)
                        {
                            npc.rotation += 3.14159274f;
                        }
                        npc.spriteDirection = -npc.direction;
                    }
                }
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num12)
                {
                    npc.ai[0] = 10f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] += 1f;
                    if (npc.ai[3] >= 9f)
                    {
                        npc.ai[3] = 0f;
                    }
                    npc.netUpdate = true;
                    return;
                }
            }
            else if (npc.ai[0] == 13f)
            {
                if (npc.ai[2] == 0f)
                {
                    Main.PlaySound(29, (int)vector.X, (int)vector.Y, 20, 1f, 0f);
                }
                npc.velocity = npc.velocity.RotatedBy((double)(-(double)num15 * (float)npc.direction), default(Vector2));
                npc.rotation -= num15 * (float)npc.direction;
                npc.ai[2] += 1f;
                if (npc.ai[2] >= (float)num13)
                {
                    npc.ai[0] = 10f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] += 1f;
                    npc.netUpdate = true;
                }
            }
        }

        // Token: 0x06000241 RID: 577 RVA: 0x00173C3C File Offset: 0x00171E3C
        private static void AI_084_LunaticCultist(NPC npc)
        {
            if (npc.ai[0] != -1f && Main.rand.Next(1000) == 0)
            {
                Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, Main.rand.Next(88, 92), 1f, 0f);
            }
            bool expertMode = Main.expertMode;
            bool flag = npc.life <= npc.lifeMax / 2;
            int num = 120;
            int num2 = 35;
            if (expertMode)
            {
                num = 90;
                num2 = 25;
            }
            int num3 = 18;
            int num4 = 3;
            int num5 = 30;
            if (expertMode)
            {
                num3 = 12;
                num4 = 4;
                num5 = 20;
            }
            int num6 = 80;
            int num7 = 45;
            if (expertMode)
            {
                num6 = 40;
                num7 = 30;
            }
            int num8 = 20;
            int num9 = 2;
            if (expertMode)
            {
                num8 = 30;
                num9 = 2;
            }
            int num10 = 20;
            int num11 = 3;
            bool flag2 = npc.type == 439;
            bool flag3 = false;
            bool flag4 = false;
            if (flag)
            {
                npc.defense = (int)((float)npc.defDefense * 0.65f);
            }
            if (!flag2)
            {
                if (npc.ai[3] < 0f || !Main.npc[(int)npc.ai[3]].active || Main.npc[(int)npc.ai[3]].type != 439)
                {
                    npc.life = 0;
                    npc.HitEffect(0, 10.0);
                    npc.active = false;
                    return;
                }
                npc.ai[0] = Main.npc[(int)npc.ai[3]].ai[0];
                npc.ai[1] = Main.npc[(int)npc.ai[3]].ai[1];
                if (npc.ai[0] == 5f)
                {
                    if (npc.justHit)
                    {
                        npc.life = 0;
                        npc.HitEffect(0, 10.0);
                        npc.active = false;
                        if (Main.netMode != 1)
                        {
                            NetMessage.SendData(23, -1, -1, null, npc.whoAmI, 0f, 0f, 0f, 0, 0, 0);
                        }
                        NPC expr_20F = Main.npc[(int)npc.ai[3]];
                        expr_20F.ai[0] = 6f;
                        expr_20F.ai[1] = 0f;
                        expr_20F.netUpdate = true;
                    }
                }
                else
                {
                    flag3 = true;
                    flag4 = true;
                }
            }
            else if (npc.ai[0] == 5f && npc.ai[1] >= 120f && npc.ai[1] < 420f && npc.justHit)
            {
                npc.ai[0] = 0f;
                npc.ai[1] = 0f;
                npc.ai[3] += 1f;
                npc.velocity = Vector2.Zero;
                npc.netUpdate = true;
                List<int> list = new List<int>();
                for (int i = 0; i < 200; i++)
                {
                    if (Main.npc[i].active && Main.npc[i].type == 440 && Main.npc[i].ai[3] == (float)npc.whoAmI)
                    {
                        list.Add(i);
                    }
                }
                int num12 = 10;
                if (Main.expertMode)
                {
                    num12 = 3;
                }
                foreach (int current in list)
                {
                    NPC nPC = Main.npc[current];
                    if (nPC.localAI[1] == npc.localAI[1] && num12 > 0)
                    {
                        num12--;
                        nPC.life = 0;
                        nPC.HitEffect(0, 10.0);
                        nPC.active = false;
                        if (Main.netMode != 1)
                        {
                            NetMessage.SendData(23, -1, -1, null, current, 0f, 0f, 0f, 0, 0, 0);
                        }
                    }
                    else if (num12 > 0)
                    {
                        num12--;
                        nPC.life = 0;
                        nPC.HitEffect(0, 10.0);
                        nPC.active = false;
                    }
                }
                Main.projectile[(int)npc.ai[2]].ai[1] = -1f;
                Main.projectile[(int)npc.ai[2]].netUpdate = true;
            }
            Vector2 center = npc.Center;
            Player player = Main.player[npc.target];
            if (npc.target < 0 || npc.target == 255 || player.dead || !player.active)
            {
                npc.TargetClosest(false);
                player = Main.player[npc.target];
                npc.netUpdate = true;
            }
            if (player.dead || Vector2.Distance(player.Center, center) > 5600f)
            {
                npc.life = 0;
                npc.HitEffect(0, 10.0);
                npc.active = false;
                if (Main.netMode != 1)
                {
                    NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                }
                new List<int>().Add(npc.whoAmI);
                for (int j = 0; j < 200; j++)
                {
                    if (Main.npc[j].active && Main.npc[j].type == 440 && Main.npc[j].ai[3] == (float)npc.whoAmI)
                    {
                        Main.npc[j].life = 0;
                        Main.npc[j].HitEffect(0, 10.0);
                        Main.npc[j].active = false;
                        if (Main.netMode != 1)
                        {
                            NetMessage.SendData(28, -1, -1, null, npc.whoAmI, -1f, 0f, 0f, 0, 0, 0);
                        }
                    }
                }
            }
            float num13 = npc.ai[3];
            if (npc.localAI[0] == 0f)
            {
                Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, 89, 1f, 0f);
                npc.localAI[0] = 1f;
                npc.alpha = 255;
                npc.rotation = 0f;
                if (Main.netMode != 1)
                {
                    npc.ai[0] = -1f;
                    npc.netUpdate = true;
                }
            }
            if (npc.ai[0] == -1f)
            {
                npc.alpha -= 5;
                if (npc.alpha < 0)
                {
                    npc.alpha = 0;
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= 420f)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.netUpdate = true;
                }
                else if (npc.ai[1] > 360f)
                {
                    npc.velocity *= 0.95f;
                    if (npc.localAI[2] != 13f)
                    {
                        Main.PlaySound(29, (int)npc.position.X, (int)npc.position.Y, 105, 1f, 0f);
                    }
                    npc.localAI[2] = 13f;
                }
                else if (npc.ai[1] > 300f)
                {
                    npc.velocity = -Vector2.UnitY;
                    npc.localAI[2] = 10f;
                }
                else if (npc.ai[1] > 120f)
                {
                    npc.localAI[2] = 1f;
                }
                else
                {
                    npc.localAI[2] = 0f;
                }
                flag3 = true;
                flag4 = true;
            }
            if (npc.ai[0] == 0f)
            {
                if (npc.ai[1] == 0f)
                {
                    npc.TargetClosest(false);
                }
                npc.localAI[2] = 10f;
                int num14 = Math.Sign(player.Center.X - center.X);
                if (num14 != 0)
                {
                    npc.direction = (npc.spriteDirection = num14);
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= 40f & flag2)
                {
                    int num15 = 0;
                    if (flag)
                    {
                        switch ((int)npc.ai[3])
                        {
                            case 0:
                                num15 = 0;
                                break;
                            case 1:
                                num15 = 1;
                                break;
                            case 2:
                                num15 = 0;
                                break;
                            case 3:
                                num15 = 5;
                                break;
                            case 4:
                                num15 = 0;
                                break;
                            case 5:
                                num15 = 3;
                                break;
                            case 6:
                                num15 = 0;
                                break;
                            case 7:
                                num15 = 5;
                                break;
                            case 8:
                                num15 = 0;
                                break;
                            case 9:
                                num15 = 2;
                                break;
                            case 10:
                                num15 = 0;
                                break;
                            case 11:
                                num15 = 3;
                                break;
                            case 12:
                                num15 = 0;
                                break;
                            case 13:
                                num15 = 4;
                                npc.ai[3] = -1f;
                                break;
                            default:
                                npc.ai[3] = -1f;
                                break;
                        }
                    }
                    else
                    {
                        switch ((int)npc.ai[3])
                        {
                            case 0:
                                num15 = 0;
                                break;
                            case 1:
                                num15 = 1;
                                break;
                            case 2:
                                num15 = 0;
                                break;
                            case 3:
                                num15 = 2;
                                break;
                            case 4:
                                num15 = 0;
                                break;
                            case 5:
                                num15 = 3;
                                break;
                            case 6:
                                num15 = 0;
                                break;
                            case 7:
                                num15 = 1;
                                break;
                            case 8:
                                num15 = 0;
                                break;
                            case 9:
                                num15 = 2;
                                break;
                            case 10:
                                num15 = 0;
                                break;
                            case 11:
                                num15 = 4;
                                npc.ai[3] = -1f;
                                break;
                            default:
                                npc.ai[3] = -1f;
                                break;
                        }
                    }
                    int maxValue = 6;
                    if (npc.life < npc.lifeMax / 3)
                    {
                        maxValue = 4;
                    }
                    if (npc.life < npc.lifeMax / 4)
                    {
                        maxValue = 3;
                    }
                    if ((expertMode & flag) && Main.rand.Next(maxValue) == 0 && num15 != 0 && num15 != 4 && num15 != 5 && NPC.CountNPCS(523) < 10)
                    {
                        num15 = 6;
                    }
                    if (num15 == 0)
                    {
                        float num16 = (float)Math.Ceiling((double)((player.Center + new Vector2(0f, -100f) - center).Length() / 50f));
                        if (num16 == 0f)
                        {
                            num16 = 1f;
                        }
                        List<int> list2 = new List<int>();
                        int num17 = 0;
                        list2.Add(npc.whoAmI);
                        for (int k = 0; k < 200; k++)
                        {
                            if (Main.npc[k].active && Main.npc[k].type == 440 && Main.npc[k].ai[3] == (float)npc.whoAmI)
                            {
                                list2.Add(k);
                            }
                        }
                        bool flag5 = list2.Count % 2 == 0;
                        foreach (int current2 in list2)
                        {
                            NPC nPC2 = Main.npc[current2];
                            Vector2 center2 = nPC2.Center;
                            float num18 = (float)((num17 + flag5.ToInt() + 1) / 2) * 6.28318548f * 0.4f / (float)list2.Count;
                            if (num17 % 2 == 1)
                            {
                                num18 *= -1f;
                            }
                            if (list2.Count == 1)
                            {
                                num18 = 0f;
                            }
                            Vector2 value = new Vector2(0f, -1f).RotatedBy((double)num18, default(Vector2)) * new Vector2(300f, 200f);
                            Vector2 value2 = player.Center + value - center2;
                            nPC2.ai[0] = 1f;
                            nPC2.ai[1] = num16 * 2f;
                            nPC2.velocity = value2 / num16;
                            if (npc.whoAmI >= nPC2.whoAmI)
                            {
                                nPC2.position -= nPC2.velocity;
                            }
                            nPC2.netUpdate = true;
                            num17++;
                        }
                    }
                    if (num15 == 1)
                    {
                        npc.ai[0] = 3f;
                        npc.ai[1] = 0f;
                    }
                    else if (num15 == 2)
                    {
                        npc.ai[0] = 2f;
                        npc.ai[1] = 0f;
                    }
                    else if (num15 == 3)
                    {
                        npc.ai[0] = 4f;
                        npc.ai[1] = 0f;
                    }
                    else if (num15 == 4)
                    {
                        npc.ai[0] = 5f;
                        npc.ai[1] = 0f;
                    }
                    if (num15 == 5)
                    {
                        npc.ai[0] = 7f;
                        npc.ai[1] = 0f;
                    }
                    if (num15 == 6)
                    {
                        npc.ai[0] = 8f;
                        npc.ai[1] = 0f;
                    }
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 1f)
            {
                flag3 = true;
                npc.localAI[2] = 10f;
                if ((float)((int)npc.ai[1]) % 2f != 0f && npc.ai[1] != 1f)
                {
                    npc.position -= npc.velocity;
                }
                npc.ai[1] -= 1f;
                if (npc.ai[1] <= 0f)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 2f)
            {
                npc.localAI[2] = 11f;
                Vector2 vec = Vector2.Normalize(player.Center - center);
                if (vec.HasNaNs())
                {
                    vec = new Vector2((float)npc.direction, 0f);
                }
                if ((npc.ai[1] >= 4f & flag2) && (int)(npc.ai[1] - 4f) % num == 0)
                {
                    if (Main.netMode != 1)
                    {
                        List<int> list3 = new List<int>();
                        for (int l = 0; l < 200; l++)
                        {
                            if (Main.npc[l].active && Main.npc[l].type == 440 && Main.npc[l].ai[3] == (float)npc.whoAmI)
                            {
                                list3.Add(l);
                            }
                        }
                        foreach (int current3 in list3)
                        {
                            NPC nPC3 = Main.npc[current3];
                            Vector2 center3 = nPC3.Center;
                            int num19 = Math.Sign(player.Center.X - center3.X);
                            if (num19 != 0)
                            {
                                nPC3.direction = (nPC3.spriteDirection = num19);
                            }
                            if (Main.netMode != 1)
                            {
                                vec = Vector2.Normalize(player.Center - center3 + player.velocity * 20f);
                                if (vec.HasNaNs())
                                {
                                    vec = new Vector2((float)npc.direction, 0f);
                                }
                                Vector2 vector = center3 + new Vector2((float)(npc.direction * 30), 12f);
                                for (int m = 0; m < 1; m++)
                                {
                                    Vector2 vector2 = vec * (6f + (float)Main.rand.NextDouble() * 4f);
                                    vector2 = vector2.RotatedByRandom(0.52359879016876221);
                                    Projectile.NewProjectile(vector.X, vector.Y, vector2.X, vector2.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                }
                            }
                        }
                    }
                    if (Main.netMode != 1)
                    {
                        vec = Vector2.Normalize(player.Center - center + player.velocity * 20f);
                        if (vec.HasNaNs())
                        {
                            vec = new Vector2((float)npc.direction, 0f);
                        }
                        Vector2 vector3 = npc.Center + new Vector2((float)(npc.direction * 30), 12f);
                        for (int n = 0; n < 1; n++)
                        {
                            Vector2 vector4 = vec * 4f;
                            Projectile.NewProjectile(vector3.X, vector3.Y, vector4.X, vector4.Y, 464, num2, 0f, Main.myPlayer, 0f, 1f);
                        }
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= (float)(4 + num))
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 3f)
            {
                npc.localAI[2] = 11f;
                Vector2 vec2 = Vector2.Normalize(player.Center - center);
                if (vec2.HasNaNs())
                {
                    vec2 = new Vector2((float)npc.direction, 0f);
                }
                if ((npc.ai[1] >= 4f & flag2) && (int)(npc.ai[1] - 4f) % num3 == 0)
                {
                    if ((int)(npc.ai[1] - 4f) / num3 == 2)
                    {
                        List<int> list4 = new List<int>();
                        for (int num20 = 0; num20 < 200; num20++)
                        {
                            if (Main.npc[num20].active && Main.npc[num20].type == 440 && Main.npc[num20].ai[3] == (float)npc.whoAmI)
                            {
                                list4.Add(num20);
                            }
                        }
                        if (Main.netMode != 1)
                        {
                            foreach (int current4 in list4)
                            {
                                NPC nPC4 = Main.npc[current4];
                                Vector2 center4 = nPC4.Center;
                                int num21 = Math.Sign(player.Center.X - center4.X);
                                if (num21 != 0)
                                {
                                    nPC4.direction = (nPC4.spriteDirection = num21);
                                }
                                if (Main.netMode != 1)
                                {
                                    vec2 = Vector2.Normalize(player.Center - center4 + player.velocity * 20f);
                                    if (vec2.HasNaNs())
                                    {
                                        vec2 = new Vector2((float)npc.direction, 0f);
                                    }
                                    Vector2 vector5 = center4 + new Vector2((float)(npc.direction * 30), 12f);
                                    for (int num22 = 0; num22 < 1; num22++)
                                    {
                                        Vector2 vector6 = vec2 * (6f + (float)Main.rand.NextDouble() * 4f);
                                        vector6 = vector6.RotatedByRandom(0.52359879016876221);
                                        Projectile.NewProjectile(vector5.X, vector5.Y, vector6.X, vector6.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                    }
                                }
                            }
                        }
                    }
                    int num23 = Math.Sign(player.Center.X - center.X);
                    if (num23 != 0)
                    {
                        npc.direction = (npc.spriteDirection = num23);
                    }
                    if (Main.netMode != 1)
                    {
                        vec2 = Vector2.Normalize(player.Center - center + player.velocity * 20f);
                        if (vec2.HasNaNs())
                        {
                            vec2 = new Vector2((float)npc.direction, 0f);
                        }
                        Vector2 vector7 = npc.Center + new Vector2((float)(npc.direction * 30), 12f);
                        for (int num24 = 0; num24 < 1; num24++)
                        {
                            Vector2 vector8 = vec2 * (6f + (float)Main.rand.NextDouble() * 4f);
                            vector8 = vector8.RotatedByRandom(0.52359879016876221);
                            Projectile.NewProjectile(vector7.X, vector7.Y, vector8.X, vector8.Y, 467, num5, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= (float)(4 + num3 * num4))
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 4f)
            {
                if (flag2)
                {
                    npc.localAI[2] = 12f;
                }
                else
                {
                    npc.localAI[2] = 11f;
                }
                if ((npc.ai[1] == 20f & flag2) && Main.netMode != 1)
                {
                    List<int> list5 = new List<int>();
                    for (int num25 = 0; num25 < 200; num25++)
                    {
                        if (Main.npc[num25].active && Main.npc[num25].type == 440 && Main.npc[num25].ai[3] == (float)npc.whoAmI)
                        {
                            list5.Add(num25);
                        }
                    }
                    foreach (int current5 in list5)
                    {
                        NPC nPC5 = Main.npc[current5];
                        Vector2 center5 = nPC5.Center;
                        int num26 = Math.Sign(player.Center.X - center5.X);
                        if (num26 != 0)
                        {
                            nPC5.direction = (nPC5.spriteDirection = num26);
                        }
                        if (Main.netMode != 1)
                        {
                            Vector2 vec3 = Vector2.Normalize(player.Center - center5 + player.velocity * 20f);
                            if (vec3.HasNaNs())
                            {
                                vec3 = new Vector2((float)npc.direction, 0f);
                            }
                            Vector2 vector9 = center5 + new Vector2((float)(npc.direction * 30), 12f);
                            for (int num27 = 0; num27 < 1; num27++)
                            {
                                Vector2 vector10 = vec3 * (6f + (float)Main.rand.NextDouble() * 4f);
                                vector10 = vector10.RotatedByRandom(0.52359879016876221);
                                Projectile.NewProjectile(vector9.X, vector9.Y, vector10.X, vector10.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                            }
                        }
                    }
                    if ((int)(npc.ai[1] - 20f) % num6 == 0)
                    {
                        Projectile.NewProjectile(npc.Center.X, npc.Center.Y - 100f, 0f, 0f, 465, num7, 0f, Main.myPlayer, 0f, 0f);
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= (float)(20 + num6))
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 5f)
            {
                npc.localAI[2] = 10f;
                if (Vector2.Normalize(player.Center - center).HasNaNs())
                {
                    new Vector2((float)npc.direction, 0f);
                }
                if (npc.ai[1] >= 0f && npc.ai[1] < 30f)
                {
                    flag3 = true;
                    flag4 = true;
                    float num28 = (npc.ai[1] - 0f) / 30f;
                    npc.alpha = (int)(num28 * 255f);
                }
                else if (npc.ai[1] >= 30f && npc.ai[1] < 90f)
                {
                    if ((npc.ai[1] == 30f && Main.netMode != 1) & flag2)
                    {
                        npc.localAI[1] += 1f;
                        Vector2 spinningpoint = new Vector2(180f, 0f);
                        List<int> list6 = new List<int>();
                        for (int num29 = 0; num29 < 200; num29++)
                        {
                            if (Main.npc[num29].active && Main.npc[num29].type == 440 && Main.npc[num29].ai[3] == (float)npc.whoAmI)
                            {
                                list6.Add(num29);
                            }
                        }
                        int num30 = 6 - list6.Count;
                        if (num30 > 2)
                        {
                            num30 = 2;
                        }
                        int num31 = list6.Count + num30 + 1;
                        float[] array = new float[num31];
                        for (int num32 = 0; num32 < array.Length; num32++)
                        {
                            array[num32] = Vector2.Distance(npc.Center + spinningpoint.RotatedBy((double)((float)num32 * 6.28318548f / (float)num31 - 1.57079637f), default(Vector2)), player.Center);
                        }
                        int num33 = 0;
                        for (int num34 = 1; num34 < array.Length; num34++)
                        {
                            if (array[num33] > array[num34])
                            {
                                num33 = num34;
                            }
                        }
                        if (num33 < num31 / 2)
                        {
                            num33 += num31 / 2;
                        }
                        else
                        {
                            num33 -= num31 / 2;
                        }
                        int num35 = num30;
                        for (int num36 = 0; num36 < array.Length; num36++)
                        {
                            if (num33 != num36)
                            {
                                Vector2 vector11 = npc.Center + spinningpoint.RotatedBy((double)((float)num36 * 6.28318548f / (float)num31 - 1.57079637f), default(Vector2));
                                if (num35-- > 0)
                                {
                                    int num37 = NPC.NewNPC((int)vector11.X, (int)vector11.Y + npc.height / 2, 440, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                    Main.npc[num37].ai[3] = (float)npc.whoAmI;
                                    Main.npc[num37].netUpdate = true;
                                    Main.npc[num37].localAI[1] = npc.localAI[1];
                                }
                                else
                                {
                                    int num38 = list6[-num35 - 1];
                                    Main.npc[num38].Center = vector11;
                                    NetMessage.SendData(23, -1, -1, null, num38, 0f, 0f, 0f, 0, 0, 0);
                                }
                            }
                        }
                        npc.ai[2] = (float)Projectile.NewProjectile(npc.Center.X, npc.Center.Y, 0f, 0f, 490, 0, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                        npc.Center += spinningpoint.RotatedBy((double)((float)num33 * 6.28318548f / (float)num31 - 1.57079637f), default(Vector2));
                        npc.netUpdate = true;
                        list6.Clear();
                    }
                    flag3 = true;
                    flag4 = true;
                    npc.alpha = 255;
                    if (flag2)
                    {
                        Vector2 vector12 = Main.projectile[(int)npc.ai[2]].Center;
                        vector12 -= npc.Center;
                        if (vector12 == Vector2.Zero)
                        {
                            vector12 = -Vector2.UnitY;
                        }
                        vector12.Normalize();
                        if (Math.Abs(vector12.Y) < 0.77f)
                        {
                            npc.localAI[2] = 11f;
                        }
                        else if (vector12.Y < 0f)
                        {
                            npc.localAI[2] = 12f;
                        }
                        else
                        {
                            npc.localAI[2] = 10f;
                        }
                        int num39 = Math.Sign(vector12.X);
                        if (num39 != 0)
                        {
                            npc.direction = (npc.spriteDirection = num39);
                        }
                    }
                    else
                    {
                        Vector2 vector13 = Main.projectile[(int)Main.npc[(int)npc.ai[3]].ai[2]].Center;
                        vector13 -= npc.Center;
                        if (vector13 == Vector2.Zero)
                        {
                            vector13 = -Vector2.UnitY;
                        }
                        vector13.Normalize();
                        if (Math.Abs(vector13.Y) < 0.77f)
                        {
                            npc.localAI[2] = 11f;
                        }
                        else if (vector13.Y < 0f)
                        {
                            npc.localAI[2] = 12f;
                        }
                        else
                        {
                            npc.localAI[2] = 10f;
                        }
                        int num40 = Math.Sign(vector13.X);
                        if (num40 != 0)
                        {
                            npc.direction = (npc.spriteDirection = num40);
                        }
                    }
                }
                else if (npc.ai[1] >= 90f && npc.ai[1] < 120f)
                {
                    flag3 = true;
                    flag4 = true;
                    float num41 = (npc.ai[1] - 90f) / 30f;
                    npc.alpha = 255 - (int)(num41 * 255f);
                }
                else if (npc.ai[1] >= 120f && npc.ai[1] < 420f)
                {
                    flag4 = true;
                    npc.alpha = 0;
                    if (flag2)
                    {
                        Vector2 vector14 = Main.projectile[(int)npc.ai[2]].Center;
                        vector14 -= npc.Center;
                        if (vector14 == Vector2.Zero)
                        {
                            vector14 = -Vector2.UnitY;
                        }
                        vector14.Normalize();
                        if (Math.Abs(vector14.Y) < 0.77f)
                        {
                            npc.localAI[2] = 11f;
                        }
                        else if (vector14.Y < 0f)
                        {
                            npc.localAI[2] = 12f;
                        }
                        else
                        {
                            npc.localAI[2] = 10f;
                        }
                        int num42 = Math.Sign(vector14.X);
                        if (num42 != 0)
                        {
                            npc.direction = (npc.spriteDirection = num42);
                        }
                    }
                    else
                    {
                        Vector2 vector15 = Main.projectile[(int)Main.npc[(int)npc.ai[3]].ai[2]].Center;
                        vector15 -= npc.Center;
                        if (vector15 == Vector2.Zero)
                        {
                            vector15 = -Vector2.UnitY;
                        }
                        vector15.Normalize();
                        if (Math.Abs(vector15.Y) < 0.77f)
                        {
                            npc.localAI[2] = 11f;
                        }
                        else if (vector15.Y < 0f)
                        {
                            npc.localAI[2] = 12f;
                        }
                        else
                        {
                            npc.localAI[2] = 10f;
                        }
                        int num43 = Math.Sign(vector15.X);
                        if (num43 != 0)
                        {
                            npc.direction = (npc.spriteDirection = num43);
                        }
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= 420f)
                {
                    flag4 = true;
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 6f)
            {
                npc.localAI[2] = 13f;
                npc.ai[1] += 1f;
                if (npc.ai[1] >= 120f)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 7f)
            {
                npc.localAI[2] = 11f;
                Vector2 vec4 = Vector2.Normalize(player.Center - center);
                if (vec4.HasNaNs())
                {
                    vec4 = new Vector2((float)npc.direction, 0f);
                }
                if ((npc.ai[1] >= 4f & flag2) && (int)(npc.ai[1] - 4f) % num8 == 0)
                {
                    if ((int)(npc.ai[1] - 4f) / num8 == 2)
                    {
                        List<int> list7 = new List<int>();
                        for (int num44 = 0; num44 < 200; num44++)
                        {
                            if (Main.npc[num44].active && Main.npc[num44].type == 440 && Main.npc[num44].ai[3] == (float)npc.whoAmI)
                            {
                                list7.Add(num44);
                            }
                        }
                        foreach (int current6 in list7)
                        {
                            NPC nPC6 = Main.npc[current6];
                            Vector2 center6 = nPC6.Center;
                            int num45 = Math.Sign(player.Center.X - center6.X);
                            if (num45 != 0)
                            {
                                nPC6.direction = (nPC6.spriteDirection = num45);
                            }
                            if (Main.netMode != 1)
                            {
                                vec4 = Vector2.Normalize(player.Center - center6 + player.velocity * 20f);
                                if (vec4.HasNaNs())
                                {
                                    vec4 = new Vector2((float)npc.direction, 0f);
                                }
                                Vector2 vector16 = center6 + new Vector2((float)(npc.direction * 30), 12f);
                                int num46 = 0;
                                while ((float)num46 < 5f)
                                {
                                    Vector2 vector17 = vec4 * (6f + (float)Main.rand.NextDouble() * 4f);
                                    vector17 = vector17.RotatedByRandom(1.2566370964050293);
                                    Projectile.NewProjectile(vector16.X, vector16.Y, vector17.X, vector17.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
                                    num46++;
                                }
                            }
                        }
                    }
                    int num47 = Math.Sign(player.Center.X - center.X);
                    if (num47 != 0)
                    {
                        npc.direction = (npc.spriteDirection = num47);
                    }
                    if (Main.netMode != 1)
                    {
                        vec4 = Vector2.Normalize(player.Center - center + player.velocity * 20f);
                        if (vec4.HasNaNs())
                        {
                            vec4 = new Vector2((float)npc.direction, 0f);
                        }
                        Vector2 vector18 = npc.Center + new Vector2((float)(npc.direction * 30), 12f);
                        float scaleFactor = 8f;
                        float num48 = 0.251327425f;
                        int num49 = 0;
                        while ((float)num49 < 5f)
                        {
                            Vector2 vector19 = vec4 * scaleFactor;
                            vector19 = vector19.RotatedBy((double)(num48 * (float)num49 - (1.2566371f - num48) / 2f), default(Vector2));
                            float ai = (Main.rand.NextFloat() - 0.5f) * 0.3f * 6.28318548f / 60f;
                            int num50 = NPC.NewNPC((int)vector18.X, (int)vector18.Y + 7, 522, 0, 0f, ai, vector19.X, vector19.Y, 255);
                            Main.npc[num50].velocity = vector19;
                            num49++;
                        }
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= (float)(4 + num8 * num9))
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 8f)
            {
                npc.localAI[2] = 13f;
                if ((npc.ai[1] >= 4f & flag2) && (int)(npc.ai[1] - 4f) % num10 == 0)
                {
                    List<int> list8 = new List<int>();
                    for (int num51 = 0; num51 < 200; num51++)
                    {
                        if (Main.npc[num51].active && Main.npc[num51].type == 440 && Main.npc[num51].ai[3] == (float)npc.whoAmI)
                        {
                            list8.Add(num51);
                        }
                    }
                    int num52 = list8.Count + 1;
                    if (num52 > 3)
                    {
                        num52 = 3;
                    }
                    int num53 = Math.Sign(player.Center.X - center.X);
                    if (num53 != 0)
                    {
                        npc.direction = (npc.spriteDirection = num53);
                    }
                    if (Main.netMode != 1)
                    {
                        for (int num54 = 0; num54 < num52; num54++)
                        {
                            Point point = npc.Center.ToTileCoordinates();
                            Point point2 = Main.player[npc.target].Center.ToTileCoordinates();
                            Vector2 vector20 = Main.player[npc.target].Center - npc.Center;
                            int num55 = 20;
                            int num56 = 3;
                            int num57 = 7;
                            int num58 = 2;
                            int num59 = 0;
                            bool flag6 = false;
                            if (vector20.Length() > 2000f)
                            {
                                flag6 = true;
                            }
                            while (!flag6 && num59 < 100)
                            {
                                num59++;
                                int num60 = Main.rand.Next(point2.X - num55, point2.X + num55 + 1);
                                int num61 = Main.rand.Next(point2.Y - num55, point2.Y + num55 + 1);
                                if ((num61 < point2.Y - num57 || num61 > point2.Y + num57 || num60 < point2.X - num57 || num60 > point2.X + num57) && (num61 < point.Y - num56 || num61 > point.Y + num56 || num60 < point.X - num56 || num60 > point.X + num56) && !Main.tile[num60, num61].nactive())
                                {
                                    bool flag7 = true;
                                    if (flag7 && Collision.SolidTiles(num60 - num58, num60 + num58, num61 - num58, num61 + num58))
                                    {
                                        flag7 = false;
                                    }
                                    if (flag7)
                                    {
                                        NPC.NewNPC(num60 * 16 + 8, num61 * 16 + 8, 523, 0, (float)npc.whoAmI, 0f, 0f, 0f, 255);
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= (float)(4 + num10 * num11))
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[3] += 1f;
                    npc.velocity = Vector2.Zero;
                    npc.netUpdate = true;
                }
            }
            if (!flag2)
            {
                npc.ai[3] = num13;
            }
            npc.dontTakeDamage = flag3;
            npc.chaseable = !flag4;
        }

        // Token: 0x06000240 RID: 576 RVA: 0x00170734 File Offset: 0x0016E934
        private static void AI_107_ImprovedWalkers(NPC npc)
        {
            bool flag = npc.velocity.X == 0f && npc.velocity.Y == 0f && !npc.justHit;
            bool flag2 = false;
            bool flag3 = false;
            bool flag4 = false;
            int num = 32;
            int num2 = 15;
            float num3 = 9f;
            bool flag5 = false;
            float num4 = 40f;
            int num5 = 30;
            int num6 = 0;
            bool flag6 = false;
            bool flag7 = true;
            float num7 = 0.9f;
            bool flag8 = false;
            bool flag9 = false;
            bool flag10 = false;
            bool flag11 = false;
            bool flag12 = false;
            bool flag13 = false;
            bool flag14 = false;
            bool flag15 = true;
            int num8 = 70;
            int num9 = num8 / 2;
            float scaleFactor = 11f;
            Vector2 zero = Vector2.Zero;
            int num10 = 1;
            int num11 = 81;
            float num12 = 700f;
            float num13 = 0f;
            float num14 = 0.1f;
            Vector2? vector = null;
            float num15 = 0.5f;
            int num16 = 1;
            float scaleFactor2 = 1f;
            bool flag16 = false;
            bool flag17 = true;
            bool flag18 = false;
            int num17 = 30;
            bool flag19 = false;
            bool flag20 = false;
            bool flag21 = false;
            bool flag22 = false;
            LegacySoundStyle style = null;
            int num18 = 0;
            bool flag23 = false;
            float num19 = 1f;
            float num20 = 0.07f;
            float num21 = 0.8f;
            float num22 = (float)(npc.width / 2 + 6);
            bool flag24 = npc.directionY < 0;
            bool flag25 = false;
            int num23 = 1;
            bool flag26 = false;
            float num24 = 0.025f;
            NPCAimedTarget targetData = npc.GetTargetData(true);
            if (targetData.Type == NPCTargetType.NPC && Main.npc[npc.TranslatedTargetIndex].type == 548 && Main.npc[npc.TranslatedTargetIndex].dontTakeDamageFromHostiles)
            {
                NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
                targetData = npc.GetTargetData(true);
            }
            if (!targetData.Invalid)
            {
                flag2 = (!Collision.CanHit(npc.Center, 0, 0, targetData.Center, 0, 0) && (npc.direction == Math.Sign(targetData.Center.X - npc.Center.X) || (npc.noGravity && npc.Distance(targetData.Center) > 50f && npc.Center.Y > targetData.Center.Y)));
            }
            flag2 &= (npc.ai[0] <= 0f);
            if (flag2)
            {
                if (npc.velocity.Y == 0f || Math.Abs(targetData.Center.Y - npc.Center.Y) > 800f)
                {
                    npc.noGravity = true;
                    npc.noTileCollide = true;
                }
            }
            else
            {
                npc.noGravity = false;
                npc.noTileCollide = false;
            }
            bool flag27 = NPCID.Sets.FighterUsesDD2PortalAppearEffect[npc.type];
            bool flag28 = true;
            switch (npc.type)
            {
                case 552:
                case 553:
                case 554:
                    style = SoundID.DD2_GoblinScream;
                    num18 = 1000;
                    flag5 = true;
                    flag20 = DD2Event.EnemiesShouldChasePlayers;
                    if (npc.type == 553)
                    {
                        num20 += 0.01f;
                        num19 += 0.2f;
                    }
                    if (npc.type == 554)
                    {
                        num20 += 0.02f;
                        num19 += 0.4f;
                    }
                    if (npc.localAI[3] < 60f)
                    {
                        num20 = 0.01f + npc.localAI[3] / 60f * 0.05f;
                    }
                    break;
                case 555:
                case 556:
                case 557:
                    {
                        num18 = 800;
                        style = SoundID.DD2_GoblinBomberScream;
                        bool arg_1843_0 = npc.localAI[3] >= 60f;
                        flag20 = DD2Event.EnemiesShouldChasePlayers;
                        flag23 = true;
                        flag12 = true;
                        flag15 = (npc.ai[1] > 18f);
                        num8 = 42;
                        num9 = 18;
                        num11 = 681;
                        num10 = 10;
                        zero.Y -= 14f;
                        num14 = 0.4f;
                        num15 = 0.5f;
                        num12 = 280f;
                        scaleFactor = 6f;
                        if (!arg_1843_0)
                        {
                            num12 = 1f;
                            num20 = 0.01f + npc.localAI[3] / 60f * 0.05f;
                        }
                        if (npc.type == 555)
                        {
                            num19 = 0.88f;
                            num15 = 0.6f;
                            num10 = (Main.expertMode ? 15 : 20);
                        }
                        if (npc.type == 555)
                        {
                            num19 = 0.88f;
                            num15 = 0.6f;
                            num10 = (Main.expertMode ? 25 : 30);
                        }
                        if (npc.type == 557)
                        {
                            num19 = 1.12f;
                            num15 = 0.4f;
                            num10 = (Main.expertMode ? 35 : 40);
                        }
                        if (npc.ai[1] == (float)num9)
                        {
                            Main.PlayTrackedSound(SoundID.DD2_GoblinBomberThrow, npc.Center);
                        }
                        break;
                    }
                case 561:
                case 562:
                case 563:
                    {
                        bool arg_16F9_0 = npc.localAI[3] >= 60f;
                        if (npc.ai[1] == 82f)
                        {
                            Main.PlayTrackedSound(SoundID.DD2_JavelinThrowersAttack, npc.Center);
                            num18 = 7;
                            style = SoundID.DD2_JavelinThrowersTaunt;
                        }
                        flag20 = DD2Event.EnemiesShouldChasePlayers;
                        flag23 = true;
                        flag12 = true;
                        flag15 = (npc.ai[1] > 82f);
                        num8 = 90;
                        num9 = 82;
                        num11 = 662;
                        if (npc.type == 563)
                        {
                            num11 = 685;
                        }
                        zero.Y -= 14f;
                        num14 = 0f;
                        num15 = 0.5f;
                        num12 = 600f;
                        scaleFactor = 13f;
                        if (!arg_16F9_0)
                        {
                            num12 = 1f;
                            num20 = 0.01f + npc.localAI[3] / 60f * 0.05f;
                        }
                        if (npc.type == 561)
                        {
                            num19 = 0.88f;
                            num15 = 0.6f;
                            num10 = (Main.expertMode ? 10 : 15);
                            scaleFactor = 11.5f;
                            num12 -= 100f;
                        }
                        if (npc.type == 562)
                        {
                            num19 = 0.94f;
                            num15 = 0.5f;
                            num10 = (Main.expertMode ? 20 : 30);
                            scaleFactor = 12.2f;
                            num12 -= 50f;
                        }
                        if (npc.type == 563)
                        {
                            num19 = 1f;
                            num15 = 0.4f;
                            num10 = (Main.expertMode ? 30 : 45);
                        }
                        break;
                    }
                case 566:
                case 567:
                    {
                        DelegateMethods.v3_1 = new Vector3(0.3f, 0.05f, 0.45f) * 1.5f;
                        Utils.PlotTileLine(npc.Top, npc.Bottom, (float)npc.width, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                        flag20 = DD2Event.EnemiesShouldChasePlayers;
                        bool expr_196D = npc.localAI[3] >= 120f;
                        if (!expr_196D)
                        {
                            num20 = 0f;
                        }
                        if (expr_196D)
                        {
                            npc.dontTakeDamage = false;
                        }
                        else
                        {
                            npc.dontTakeDamage = true;
                            npc.velocity.X = 0f;
                            flag23 = true;
                            flag19 = true;
                            npc.ai[3] = 0f;
                            if (npc.localAI[3] == 0f)
                            {
                                npc.alpha = 255;
                            }
                            npc.localAI[3] += 1f;
                            float num25 = npc.localAI[3];
                            if (num25 >= 110f)
                            {
                                npc.alpha -= 26;
                                if (npc.alpha < 0)
                                {
                                    npc.alpha = 0;
                                }
                            }
                            if (num25 >= 100f)
                            {
                                int num26 = (int)npc.localAI[3] / 20;
                                float num27 = npc.Size.Length() / 2f;
                                num27 /= 20f;
                                int maxValue = 5;
                                for (int i = 0; i < num26 * 2; i++)
                                {
                                    if (Main.rand.Next(maxValue) == 0)
                                    {
                                        Dust dust = Dust.NewDustDirect(npc.position, npc.width, npc.height, 236, npc.velocity.X * 1f, 0f, 0, default(Color), 1f);
                                        dust.scale = 1f;
                                        dust.fadeIn = 0.3f;
                                        dust.velocity = new Vector2(Main.rand.NextFloatDirection() * 1f, -dust.velocity.Length()) * 1.25f * num27;
                                    }
                                }
                            }
                            else
                            {
                                int num28 = (int)npc.localAI[3] / 10;
                                float num29 = npc.Size.Length() / 2f;
                                num29 /= 20f;
                                int maxValue2 = 5;
                                int num30 = 0;
                                while ((float)num30 < (float)num28 * 1.3f)
                                {
                                    if (Main.rand.Next(maxValue2) == 0)
                                    {
                                        Dust dust2 = Dust.NewDustDirect(npc.position + new Vector2((float)(-(float)npc.width / 2), 8f), npc.width + npc.width, npc.height, 27, npc.velocity.X * 1f, 0f, 100, default(Color), 1f);
                                        dust2.scale = 1.1f;
                                        dust2.fadeIn = 0.1f;
                                        dust2.velocity = new Vector2(Main.rand.NextFloatDirection() * 0.1f, -dust2.velocity.Length()) * 1.05f * num29 * Main.rand.NextFloat();
                                        Dust expr_1C2D_cp_0_cp_0 = dust2;
                                        expr_1C2D_cp_0_cp_0.velocity.Y = expr_1C2D_cp_0_cp_0.velocity.Y * Utils.InverseLerp((float)npc.width * 0.75f, 0f, Math.Abs(dust2.position.X - npc.Center.X), true);
                                    }
                                    num30++;
                                }
                            }
                            if (num25 > 100f && (int)num25 % 4 == 0)
                            {
                                Gore expr_1CD6_cp_0_cp_0 = Gore.NewGoreDirect(npc.Left, new Vector2(0f, -3f), Utils.SelectRandom<int>(Main.rand, new int[]
								{
							971,
							972
								}), 0.85f);
                                expr_1CD6_cp_0_cp_0.velocity.X = expr_1CD6_cp_0_cp_0.velocity.X * 0.8f;
                            }
                        }
                        break;
                    }
                case 568:
                case 569:
                    num5 = 110;
                    num20 = 0.16f;
                    num21 = 0.7f;
                    num19 = 1.4f;
                    flag5 = true;
                    num4 = 600f;
                    flag20 = DD2Event.EnemiesShouldChasePlayers;
                    if (npc.localAI[3] < 60f)
                    {
                        num20 = 0.01f + npc.localAI[3] / 60f * 0.05f;
                    }
                    if (npc.ai[0] == 0f)
                    {
                        npc.localAI[1] = SlotId.Invalid.ToFloat();
                    }
                    if (npc.ai[0] == 1f)
                    {
                        npc.HitSound = SoundID.DD2_WitherBeastCrystalImpact;
                        npc.ai[0] += 1f;
                        if (Main.rand.Next(10) == 0)
                        {
                            Dust expr_13CA = Dust.NewDustDirect(npc.TopLeft, npc.width, npc.height, 271, 0f, -3f, 0, Color.Transparent, 0.6f);
                            expr_13CA.velocity.X = expr_13CA.velocity.X / 2f;
                            expr_13CA.noGravity = true;
                            expr_13CA.fadeIn = 1.5f;
                            expr_13CA.position.Y = expr_13CA.position.Y + 4f;
                        }
                        ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[1]));
                        if (activeSound == null)
                        {
                            npc.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_WitherBeastAuraPulse, npc.Center).ToFloat();
                        }
                        else
                        {
                            activeSound.Position = npc.Center;
                        }
                        npc.localAI[0] += 1f;
                        if (npc.localAI[0] > 60f && Main.rand.Next(10) == 0)
                        {
                            Vector2 vector2 = npc.Center + (Main.rand.NextFloat() * 6.28318548f).ToRotationVector2() * 400f * (0.3f + 0.7f * Main.rand.NextFloat());
                            Point point = vector2.ToTileCoordinates();
                            if (!WorldGen.SolidTile(point.X, point.Y))
                            {
                                Dust dust3 = Dust.NewDustPerfect(vector2, 27, new Vector2?(new Vector2(0f, -3f)), 0, new Color(255, 255, 255, 127), 1.5f);
                                dust3.velocity = npc.DirectionTo(dust3.position) * dust3.velocity.Length();
                                dust3.fadeIn = 1.5f;
                            }
                        }
                        if (Main.netMode != 2)
                        {
                            Player player = Main.player[Main.myPlayer];
                            if (!player.dead && player.active && (player.Center - npc.Center).Length() < 400f)
                            {
                                player.AddBuff(195, 3, false);
                            }
                        }
                        if (npc.ai[1] > 0f)
                        {
                            npc.ai[1] -= 1f;
                        }
                        if (npc.ai[1] <= 0f)
                        {
                            npc.ai[1] = 60f;
                            if (Main.netMode != 1)
                            {
                                int num31 = npc.lifeMax / 20;
                                if (num31 > npc.lifeMax - npc.life)
                                {
                                    num31 = npc.lifeMax - npc.life;
                                }
                                if (num31 > 0)
                                {
                                    npc.life += num31;
                                    npc.HealEffect(num31, true);
                                    npc.netUpdate = true;
                                }
                            }
                        }
                    }
                    break;
                case 570:
                case 571:
                    flag20 = DD2Event.EnemiesShouldChasePlayers;
                    flag23 = true;
                    flag12 = true;
                    flag15 = (npc.ai[1] > 40f);
                    num8 = 60;
                    num9 = 40;
                    if (npc.type == 571 && npc.ai[1] > 10f && npc.ai[1] <= 40f && (int)npc.ai[1] % 6 == 0)
                    {
                        num9 = (int)npc.ai[1] - 1;
                    }
                    if (npc.type == 570 && npc.ai[1] > 10f && npc.ai[1] <= 40f && (int)npc.ai[1] % 9 == 0)
                    {
                        num9 = (int)npc.ai[1] - 1;
                    }
                    num11 = 671;
                    zero.X += (float)(22 * npc.direction);
                    num14 = 0.15f;
                    num15 = 1.5f;
                    num12 = 600f;
                    scaleFactor = 13f;
                    num16 = 1;
                    scaleFactor2 = 0f;
                    if (npc.type == 570)
                    {
                        num15 = 2.5f;
                    }
                    num10 = (Main.expertMode ? 25 : 35);
                    if (npc.type == 571)
                    {
                        num10 = (Main.expertMode ? 45 : 60);
                    }
                    num19 = 0.77f;
                    if (npc.ai[0] > 0f)
                    {
                        if (npc.ai[1] == 40f)
                        {
                            Main.PlayTrackedSound(SoundID.DD2_DrakinShot, npc.Center);
                        }
                        else if (npc.ai[1] == 60f)
                        {
                            Main.PlayTrackedSound(SoundID.DD2_DrakinBreathIn, npc.Center);
                        }
                    }
                    if (npc.localAI[3] < 60f)
                    {
                        num12 = 1f;
                        num20 = 0.01f + npc.localAI[3] / 60f * 0.05f;
                    }
                    break;
                case 572:
                case 573:
                    if (npc.localAI[3] == 0f)
                    {
                        npc.localAI[0] = SlotId.Invalid.ToFloat();
                        npc.localAI[1] = SlotId.Invalid.ToFloat();
                    }
                    flag20 = DD2Event.EnemiesShouldChasePlayers;
                    if (npc.ai[1] == 2f)
                    {
                        ActiveSound activeSound2 = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[0]));
                        if (activeSound2 != null)
                        {
                            activeSound2.Stop();
                        }
                        ActiveSound activeSound3 = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[1]));
                        if (activeSound3 != null)
                        {
                            activeSound3.Stop();
                        }
                        npc.position = npc.Center;
                        npc.width = (npc.height = 192);
                        npc.Center = npc.position;
                        npc.velocity = Vector2.Zero;
                        npc.damage = (int)(80f * Main.damageMultiplier);
                        npc.alpha = 255;
                        for (int j = 0; j < 4; j++)
                        {
                            int num32 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 31, 0f, 0f, 100, default(Color), 1.5f);
                            Main.dust[num32].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 2f;
                        }
                        for (int k = 0; k < 20; k++)
                        {
                            int num33 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, 0f, 0f, 200, default(Color), 3.7f);
                            Main.dust[num33].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 2f;
                            Main.dust[num33].noGravity = true;
                            Main.dust[num33].velocity *= 3f;
                            num33 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, 0f, 0f, 100, default(Color), 1.5f);
                            Main.dust[num33].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 4f;
                            Main.dust[num33].velocity *= 2f;
                            Main.dust[num33].noGravity = true;
                            Main.dust[num33].fadeIn = 2.5f;
                        }
                        for (int l = 0; l < 6; l++)
                        {
                            int num34 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, 0f, 0f, 0, default(Color), 2.7f);
                            Main.dust[num34].position = npc.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)npc.velocity.ToRotation(), default(Vector2)) * (float)npc.width / 2f;
                            Main.dust[num34].noGravity = true;
                            Main.dust[num34].velocity *= 3f;
                        }
                        for (int m = 0; m < 12; m++)
                        {
                            int num35 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 31, 0f, 0f, 0, default(Color), 1.5f);
                            Main.dust[num35].position = npc.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)npc.velocity.ToRotation(), default(Vector2)) * (float)npc.width / 2f;
                            Main.dust[num35].noGravity = true;
                            Main.dust[num35].velocity *= 3f;
                        }
                        for (int n = 0; n < 5; n++)
                        {
                            int num36 = Gore.NewGore(npc.position + new Vector2((float)(npc.width * Main.rand.Next(100)) / 100f, (float)(npc.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
                            Main.gore[num36].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 2f;
                            Main.gore[num36].velocity *= 0.3f;
                            Gore expr_E4D_cp_0_cp_0 = Main.gore[num36];
                            expr_E4D_cp_0_cp_0.velocity.X = expr_E4D_cp_0_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
                            Gore expr_E78_cp_0_cp_0 = Main.gore[num36];
                            expr_E78_cp_0_cp_0.velocity.Y = expr_E78_cp_0_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
                        }
                        npc.ai[0] += 1f;
                        if (npc.ai[0] >= 3f)
                        {
                            Main.PlayTrackedSound(SoundID.DD2_KoboldExplosion, npc.Center);
                            npc.life = 0;
                            npc.HitEffect(0, 10.0);
                            npc.active = false;
                        }
                        return;
                    }
                    if (npc.ai[0] > 0f && npc.ai[1] == 0f && npc.life > 0)
                    {
                        if (!SlotId.FromFloat(npc.localAI[0]).IsValid)
                        {
                            npc.localAI[0] = Main.PlayTrackedSound(SoundID.DD2_KoboldIgnite, npc.Center).ToFloat();
                        }
                        npc.localAI[2] += 1f;
                        if (npc.localAI[2] == 30f)
                        {
                            npc.localAI[0] = Main.PlayTrackedSound(SoundID.DD2_KoboldIgniteLoop, npc.Center).ToFloat();
                            npc.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_KoboldScreamChargeLoop, npc.Center).ToFloat();
                        }
                    }
                    if (npc.ai[0] > 0f && npc.ai[1] == 1f)
                    {
                        npc.ai[0] = 0f;
                        npc.ai[1] = 2f;
                        npc.netUpdate = true;
                        return;
                    }
                    num19 = 0.88f;
                    if (npc.ai[0] == 1f)
                    {
                        npc.ai[1] = 1f;
                    }
                    if (npc.ai[0] == 0f && npc.ai[1] == 1f)
                    {
                        ActiveSound activeSound4 = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[0]));
                        if (activeSound4 == null)
                        {
                            npc.localAI[0] = Main.PlayTrackedSound(SoundID.DD2_KoboldIgniteLoop, npc.Center).ToFloat();
                        }
                        else
                        {
                            activeSound4.Position = npc.Center;
                        }
                        ActiveSound activeSound5 = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[1]));
                        if (activeSound5 == null)
                        {
                            npc.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_KoboldScreamChargeLoop, npc.Center).ToFloat();
                        }
                        else
                        {
                            activeSound5.Position = npc.Center;
                        }
                    }
                    if (npc.ai[1] > 0f && npc.ai[0] == 0f)
                    {
                        flag5 = true;
                        num5 = 40;
                        num4 = 64f;
                        num20 = 0.3f;
                        num19 = 4f;
                        Vector2 position = npc.Center + new Vector2((float)(npc.spriteDirection * 12), 0f);
                        if (Main.rand.Next(6) == 0)
                        {
                            Dust expr_1190 = Dust.NewDustDirect(position, 1, 1, 213, (float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3), 100, new Color(255, 255, 255, 0), 1f);
                            expr_1190.noGravity = true;
                            expr_1190.fadeIn = expr_1190.scale + 1f + 0.01f * (float)Main.rand.Next(0, 51);
                            expr_1190.velocity *= 0.3f;
                            expr_1190.velocity.X = expr_1190.velocity.X + (float)(-(float)npc.spriteDirection) * 1.2f;
                            expr_1190.velocity.Y = expr_1190.velocity.Y + -3.5f;
                            expr_1190.velocity.X = expr_1190.velocity.X + npc.velocity.X;
                        }
                        if (Main.rand.Next(12) == 0)
                        {
                            Dust expr_1250 = Dust.NewDustPerfect(position, 6, new Vector2?(npc.velocity), 100, default(Color), 1f);
                            expr_1250.noGravity = true;
                            expr_1250.velocity.Y = expr_1250.velocity.Y - (1f + Main.rand.NextFloat());
                            expr_1250.scale = 1.1f;
                            expr_1250.fadeIn = 0.5f;
                            expr_1250.customData = npc;
                        }
                    }
                    else
                    {
                        flag5 = true;
                        num5 = 40;
                        num4 = 700f;
                    }
                    if (npc.localAI[3] < 60f)
                    {
                        num20 = 0.01f + npc.localAI[3] / 60f * 0.05f;
                    }
                    break;
                case 576:
                case 577:
                    num18 = 700;
                    style = SoundID.DD2_OgreRoar;
                    num22 -= 32f;
                    flag5 = true;
                    num6 = 60;
                    num4 = 130f;
                    num5 = 44;
                    flag20 = DD2Event.EnemiesShouldChasePlayers;
                    num7 = 0.7f;
                    if (npc.localAI[0] > 0f)
                    {
                        npc.localAI[0] -= 1f;
                    }
                    if (npc.ai[0] <= 0f)
                    {
                        float num37 = npc.ai[1];
                        float num38 = npc.Distance(targetData.Center);
                        if (npc.localAI[3] >= 60f)
                        {
                            if (num38 <= num4 + 300f && npc.localAI[0] <= 0f)
                            {
                                npc.ai[1] = 2f;
                            }
                            else if (num38 > num4 + 30f)
                            {
                                npc.ai[1] = 1f;
                            }
                            else if (num38 <= num4)
                            {
                                npc.ai[1] = 0f;
                                if (num37 == 1f)
                                {
                                    npc.ai[0] = 0f;
                                }
                            }
                        }
                        if (num37 != npc.ai[1])
                        {
                            npc.netUpdate = true;
                        }
                    }
                    else if (npc.ai[1] == 2f)
                    {
                        npc.localAI[0] = 300f;
                    }
                    switch ((int)npc.ai[1])
                    {
                        case 0:
                            num5 = 44;
                            if (npc.ai[0] == 40f)
                            {
                                Main.PlayTrackedSound(SoundID.DD2_OgreAttack, npc.Center);
                            }
                            break;
                        case 1:
                            flag3 = true;
                            num5 = 90;
                            num4 = 1000f;
                            num6 = 240;
                            if (npc.type == 576)
                            {
                                num10 = (Main.expertMode ? 30 : 40);
                            }
                            else
                            {
                                num10 = (Main.expertMode ? 30 : 40);
                            }
                            flag15 = false;
                            zero = new Vector2((float)(npc.direction * 30), -70f);
                            num11 = 676;
                            if (npc.ai[0] == 80f)
                            {
                                Main.PlayTrackedSound(SoundID.DD2_OgreSpit, npc.Center);
                            }
                            break;
                        case 2:
                            num5 = 90;
                            num4 = 250f;
                            flag4 = true;
                            if (npc.type == 576)
                            {
                                num10 = (Main.expertMode ? 40 : 60);
                            }
                            else
                            {
                                num10 = (Main.expertMode ? 40 : 60);
                            }
                            num9 = 36;
                            num = 56;
                            num2 = 41;
                            num3 = 13f;
                            flag3 = true;
                            num11 = 683;
                            flag15 = false;
                            zero = new Vector2((float)(-(float)npc.direction * 20), (float)(npc.height / 2 - 1));
                            if (npc.ai[0] == 40f)
                            {
                                Main.PlayTrackedSound(SoundID.DD2_OgreGroundPound, npc.Center);
                            }
                            break;
                    }
                    if (npc.ai[0] < (float)(-(float)num6))
                    {
                        npc.ai[0] = (float)(-(float)num6);
                    }
                    break;
            }
            if (flag26)
            {
                bool flag29 = npc.velocity.Y == 0f;
                for (int num39 = 0; num39 < 200; num39++)
                {
                    if (num39 != npc.whoAmI && Main.npc[num39].active && Main.npc[num39].type == npc.type && Math.Abs(npc.position.X - Main.npc[num39].position.X) + Math.Abs(npc.position.Y - Main.npc[num39].position.Y) < (float)npc.width)
                    {
                        if (npc.position.X < Main.npc[num39].position.X)
                        {
                            npc.velocity.X = npc.velocity.X - num24;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + num24;
                        }
                        if (npc.position.Y < Main.npc[num39].position.Y)
                        {
                            npc.velocity.Y = npc.velocity.Y - num24;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y + num24;
                        }
                    }
                }
                if (flag29)
                {
                    npc.velocity.Y = 0f;
                }
            }
            if (flag27)
            {
                if (npc.localAI[3] == 0f)
                {
                    npc.alpha = 255;
                }
                if (npc.localAI[3] == 30f)
                {
                    Main.PlayTrackedSound(SoundID.DD2_EtherianPortalSpawnEnemy, npc.Center);
                }
                if (npc.localAI[3] < 60f)
                {
                    npc.localAI[3] += 1f;
                    npc.alpha -= 5;
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                    int num40 = (int)npc.localAI[3] / 10;
                    float num41 = npc.Size.Length() / 2f;
                    num41 /= 20f;
                    int maxValue3 = 5;
                    if (npc.type == 576 || npc.type == 577)
                    {
                        maxValue3 = 1;
                    }
                    for (int num42 = 0; num42 < num40; num42++)
                    {
                        if (Main.rand.Next(maxValue3) == 0)
                        {
                            Dust expr_1F66 = Dust.NewDustDirect(npc.position, npc.width, npc.height, 27, npc.velocity.X * 1f, 0f, 100, default(Color), 1f);
                            expr_1F66.scale = 0.55f;
                            expr_1F66.fadeIn = 0.7f;
                            expr_1F66.velocity *= 0.1f * num41;
                            expr_1F66.velocity += npc.velocity;
                        }
                    }
                }
            }
            bool flag30 = false;
            if ((flag12 | flag5) && npc.ai[0] > 0f)
            {
                flag17 = false;
            }
            if (flag12 && npc.ai[1] > 0f)
            {
                flag21 = true;
            }
            if (flag5 && npc.ai[0] > 0f)
            {
                flag21 = true;
            }
            if (flag5)
            {
                if (npc.ai[0] < 0f)
                {
                    npc.ai[0] += 1f;
                    flag = false;
                }
                if (npc.ai[0] == 0f && (npc.velocity.Y == 0f | flag6) && targetData.Type != NPCTargetType.None && (Collision.CanHit(npc.position, npc.width, npc.height, targetData.Position, targetData.Width, targetData.Height) || Collision.CanHitLine(npc.position, npc.width, npc.height, targetData.Position, targetData.Width, targetData.Height)) && (targetData.Center - npc.Center).Length() < num4)
                {
                    npc.ai[0] = (float)num5;
                    npc.netUpdate = true;
                }
                if (npc.ai[0] > 0f)
                {
                    npc.spriteDirection = npc.direction * num23;
                    if (flag7)
                    {
                        npc.velocity.X = npc.velocity.X * num7;
                        flag23 = true;
                        flag19 = true;
                        npc.ai[3] = 0f;
                    }
                    npc.ai[0] -= 1f;
                    if (npc.ai[0] == 0f)
                    {
                        npc.ai[0] = (float)(-(float)num6);
                    }
                }
            }
            if (flag3 && npc.ai[0] > 0f)
            {
                if (flag15)
                {
                    NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
                    targetData = npc.GetTargetData(true);
                }
                if (npc.ai[0] == (float)num9)
                {
                    Vector2 vector3 = npc.Center + zero;
                    Vector2 vector4 = targetData.Center - vector3;
                    vector4.Y -= Math.Abs(vector4.X) * num14;
                    Vector2 vector5 = vector4.SafeNormalize(-Vector2.UnitY) * scaleFactor;
                    for (int num43 = 0; num43 < num16; num43++)
                    {
                        Vector2 vector6 = vector5;
                        Vector2 vector7 = vector3;
                        if (vector.HasValue)
                        {
                            vector6 += vector.Value;
                        }
                        else
                        {
                            vector6 += Utils.RandomVector2(Main.rand, -num15, num15);
                        }
                        vector7 += vector5 * scaleFactor2;
                        if (Main.netMode != 1)
                        {
                            Projectile.NewProjectile(vector7, vector6, num11, num10, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
            }
            if (flag4 && npc.ai[0] > 0f)
            {
                if (npc.velocity.Y != 0f && npc.ai[0] < (float)num2)
                {
                    npc.ai[0] = (float)num2;
                }
                if (npc.ai[0] == (float)num)
                {
                    npc.velocity.Y = -num3;
                }
            }
            if (!flag16 & flag17)
            {
                if (npc.velocity.Y == 0f && npc.velocity.X * (float)npc.direction < 0f)
                {
                    flag18 = true;
                }
                if ((npc.position.X == npc.oldPosition.X || npc.ai[3] >= (float)num17) | flag18)
                {
                    npc.ai[3] += 1f;
                }
                else if (Math.Abs(npc.velocity.X) > 0.9f && npc.ai[3] > 0f)
                {
                    npc.ai[3] -= 1f;
                }
                if (npc.ai[3] > (float)(num17 * 10))
                {
                    npc.ai[3] = 0f;
                }
                if (npc.justHit && !flag28)
                {
                    npc.ai[3] = 0f;
                }
                if (npc.ai[3] == (float)num17)
                {
                    npc.netUpdate = true;
                    if (flag28)
                    {
                        npc.noGravity = true;
                        npc.noTileCollide = true;
                        npc.position.X = npc.position.X + (float)(npc.direction * npc.width * 2);
                        int num44 = 20;
                        float num45 = npc.Size.Length() / 2f;
                        num45 /= 20f;
                        int maxValue4 = 5;
                        if (npc.type == 576 || npc.type == 577)
                        {
                            maxValue4 = 1;
                        }
                        for (int num46 = 0; num46 < num44; num46++)
                        {
                            if (Main.rand.Next(maxValue4) == 0)
                            {
                                Dust expr_24C5 = Dust.NewDustDirect(npc.position, npc.width, npc.height, 27, npc.velocity.X * 1f, 0f, 100, default(Color), 1f);
                                expr_24C5.scale = 0.55f;
                                expr_24C5.fadeIn = 0.7f;
                                expr_24C5.velocity *= 3f * num45;
                                expr_24C5.noGravity = true;
                                expr_24C5.fadeIn = 1.5f;
                                expr_24C5.velocity *= 3f;
                            }
                        }
                        return;
                    }
                }
            }
            if (!flag19)
            {
                if (npc.ai[3] < (float)num17 & flag20)
                {
                    if (num18 > 0 && Main.rand.Next(num18) == 0)
                    {
                        Main.PlayTrackedSound(style, npc.Center);
                    }
                    NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
                    targetData = npc.GetTargetData(true);
                }
                else if (!flag21)
                {
                    if (flag22 && npc.timeLeft > 10)
                    {
                        npc.timeLeft = 10;
                    }
                    if (npc.velocity.X == 0f)
                    {
                        if (npc.velocity.Y == 0f)
                        {
                            npc.ai[2] += 1f;
                            if (npc.ai[2] >= 2f)
                            {
                                npc.direction *= -1;
                                npc.spriteDirection = npc.direction * num23;
                                npc.ai[2] = 0f;
                            }
                        }
                    }
                    else
                    {
                        npc.ai[2] = 0f;
                    }
                    if (npc.direction == 0)
                    {
                        npc.direction = 1;
                    }
                }
            }
            if (!flag23)
            {
                if (npc.velocity.X < -num19 || npc.velocity.X > num19)
                {
                    if (npc.velocity.Y == 0f)
                    {
                        npc.velocity *= num21;
                    }
                }
                else if ((npc.velocity.X < num19 && npc.direction == 1) || (npc.velocity.X > -num19 && npc.direction == -1))
                {
                    npc.velocity.X = MathHelper.Clamp(npc.velocity.X + num20 * (float)npc.direction, -num19, num19);
                }
            }
            if (flag12)
            {
                if (npc.confused)
                {
                    npc.ai[0] = 0f;
                }
                else
                {
                    if (npc.ai[1] > 0f)
                    {
                        npc.ai[1] -= 1f;
                    }
                    if (npc.justHit)
                    {
                        npc.ai[1] = 30f;
                        npc.ai[0] = 0f;
                    }
                    if (npc.ai[0] > 0f)
                    {
                        if (flag15)
                        {
                            NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
                            targetData = npc.GetTargetData(true);
                        }
                        if (npc.ai[1] == (float)num9)
                        {
                            Vector2 vector8 = npc.Center + zero;
                            Vector2 vector9 = targetData.Center - vector8;
                            vector9.Y -= Math.Abs(vector9.X) * num14;
                            Vector2 vector10 = vector9.SafeNormalize(-Vector2.UnitY) * scaleFactor;
                            for (int num47 = 0; num47 < num16; num47++)
                            {
                                Vector2 vector11 = vector8;
                                Vector2 vector12 = vector10;
                                if (vector.HasValue)
                                {
                                    vector12 += vector.Value;
                                }
                                else
                                {
                                    vector12 += Utils.RandomVector2(Main.rand, -num15, num15);
                                }
                                vector11 += vector12 * scaleFactor2;
                                if (Main.netMode != 1)
                                {
                                    Projectile.NewProjectile(vector11, vector12, num11, num10, 0f, Main.myPlayer, 0f, 0f);
                                }
                            }
                            if (Math.Abs(vector10.Y) > Math.Abs(vector10.X) * 2f)
                            {
                                npc.ai[0] = (float)((vector10.Y > 0f) ? 1 : 5);
                            }
                            else if (Math.Abs(vector10.X) > Math.Abs(vector10.Y) * 2f)
                            {
                                npc.ai[0] = 3f;
                            }
                            else
                            {
                                npc.ai[0] = (float)((vector10.Y > 0f) ? 2 : 4);
                            }
                        }
                        if ((npc.velocity.Y != 0f && !flag14) || npc.ai[1] <= 0f)
                        {
                            npc.ai[0] = 0f;
                            npc.ai[1] = 0f;
                        }
                        else if (!flag13)
                        {
                            npc.velocity.X = npc.velocity.X * 0.9f;
                            npc.spriteDirection = npc.direction * num23;
                        }
                    }
                    if ((npc.ai[0] <= 0f | flag13) && (npc.velocity.Y == 0f | flag14) && npc.ai[1] <= 0f && targetData.Type != NPCTargetType.None && Collision.CanHit(npc.position, npc.width, npc.height, targetData.Position, targetData.Width, targetData.Height))
                    {
                        Vector2 vector13 = targetData.Center - npc.Center;
                        if (vector13.Length() < num12)
                        {
                            npc.netUpdate = true;
                            npc.velocity.X = npc.velocity.X * 0.5f;
                            npc.ai[0] = 3f;
                            npc.ai[1] = (float)num8;
                            if (Math.Abs(vector13.Y) > Math.Abs(vector13.X) * 2f)
                            {
                                npc.ai[0] = (float)((vector13.Y > 0f) ? 1 : 5);
                            }
                            else if (Math.Abs(vector13.X) > Math.Abs(vector13.Y) * 2f)
                            {
                                npc.ai[0] = 3f;
                            }
                            else
                            {
                                npc.ai[0] = (float)((vector13.Y > 0f) ? 2 : 4);
                            }
                        }
                    }
                    if (npc.ai[0] <= 0f | flag13)
                    {
                        bool flag31 = npc.Distance(targetData.Center) < num13;
                        if (flag31 && Collision.CanHitLine(npc.position, npc.width, npc.height, targetData.Position, targetData.Width, targetData.Height))
                        {
                            npc.ai[3] = 0f;
                        }
                        if ((npc.velocity.X < -num19 || npc.velocity.X > num19) | flag31)
                        {
                            if (npc.velocity.Y == 0f)
                            {
                                npc.velocity.X = npc.velocity.X * num21;
                            }
                        }
                        else if ((npc.velocity.X < num19 && npc.direction == 1) || (npc.velocity.X > -num19 && npc.direction == -1))
                        {
                            npc.velocity.X = MathHelper.Clamp(npc.velocity.X + num20 * (float)npc.direction, -num19, num19);
                        }
                    }
                }
            }
            if (npc.velocity.Y == 0f)
            {
                int num48 = (int)(npc.Bottom.Y + 7f) / 16;
                int arg_2C0D_0 = (int)npc.Left.X / 16;
                int num49 = (int)npc.Right.X / 16;
                for (int num50 = arg_2C0D_0; num50 <= num49; num50++)
                {
                    num50 = Utils.Clamp<int>(num50, 0, Main.maxTilesX);
                    num48 = Utils.Clamp<int>(num48, 0, Main.maxTilesY);
                    Tile tile = Main.tile[num50, num48];
                    if (tile == null)
                    {
                        return;
                    }
                    if (tile.nactive() && Main.tileSolid[(int)tile.type])
                    {
                        flag30 = true;
                        break;
                    }
                }
            }
            Point point2 = npc.Center.ToTileCoordinates();
            if (WorldGen.InWorld(point2.X, point2.Y, 5) && !npc.noGravity)
            {
                Vector2 vector14;
                int width;
                int height;
                npc.GetTileCollisionParameters(out vector14, out width, out height);
                Vector2 value = npc.position - vector14;
                Collision.StepUp(ref vector14, ref npc.velocity, width, height, ref npc.stepSpeed, ref npc.gfxOffY, 1, false, 0);
                npc.position = vector14 + value;
            }
            if (flag30)
            {
                int num51 = (int)(npc.Center.X + num22 * (float)npc.direction) / 16;
                int num52 = ((int)npc.Bottom.Y - 15) / 16;
                bool flag32 = npc.position.Y + (float)npc.height - (float)(num52 * 16) > 20f;
                Tile tileSafely = Framing.GetTileSafely(num51 + npc.direction, num52 + 1);
                Tile tileSafely2 = Framing.GetTileSafely(num51, num52 + 1);
                Tile tileSafely3 = Framing.GetTileSafely(num51, num52);
                Tile tileSafely4 = Framing.GetTileSafely(num51, num52 - 1);
                Tile tileSafely5 = Framing.GetTileSafely(num51, num52 - 2);
                Tile tileSafely6 = Framing.GetTileSafely(num51, num52 - 3);
                if (flag8 && tileSafely4.nactive() && (tileSafely4.type == 10 || tileSafely4.type == 388))
                {
                    npc.ai[0] += 1f;
                    npc.ai[3] = 0f;
                    if (npc.ai[0] >= 60f)
                    {
                        if (flag9)
                        {
                            npc.ai[1] = 0f;
                        }
                        int num53 = 5;
                        if (Main.tile[num51, num52 - 1].type == 388)
                        {
                            num53 = 2;
                        }
                        npc.velocity.X = 0.5f * (float)(-(float)npc.direction);
                        npc.ai[1] += (float)num53;
                        bool flag33 = false;
                        if (npc.ai[1] >= 10f)
                        {
                            flag33 = true;
                            npc.ai[1] = 10f;
                        }
                        if (flag10)
                        {
                            flag33 = true;
                        }
                        WorldGen.KillTile(num51, num52 - 1, true, false, false);
                        if (Main.netMode != 1 & flag33)
                        {
                            if (flag11)
                            {
                                WorldGen.KillTile(num51, num52 - 1, false, false, false);
                                if (Main.netMode == 2)
                                {
                                    NetMessage.SendData(17, -1, -1, null, 0, (float)num51, (float)(num52 - 1), 0f, 0, 0, 0);
                                }
                            }
                            else
                            {
                                if (tileSafely4.type == 10)
                                {
                                    bool flag34 = WorldGen.OpenDoor(num51, num52 - 1, npc.direction);
                                    if (!flag34)
                                    {
                                        npc.ai[3] = (float)num17;
                                        npc.netUpdate = true;
                                    }
                                    if (Main.netMode == 2 & flag34)
                                    {
                                        NetMessage.SendData(19, -1, -1, null, 0, (float)num51, (float)(num52 - 1), (float)npc.direction, 0, 0, 0);
                                    }
                                }
                                if (tileSafely4.type == 388)
                                {
                                    bool flag35 = WorldGen.ShiftTallGate(num51, num52 - 1, false);
                                    if (!flag35)
                                    {
                                        npc.ai[3] = (float)num17;
                                        npc.netUpdate = true;
                                    }
                                    if (Main.netMode == 2 & flag35)
                                    {
                                        NetMessage.SendData(19, -1, -1, null, 4, (float)num51, (float)(num52 - 1), (float)npc.direction, 0, 0, 0);
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    int num54 = npc.spriteDirection * num23;
                    if (npc.velocity.X * (float)num54 > 0f)
                    {
                        if (npc.height >= 32 && tileSafely5.nactive() && Main.tileSolid[(int)tileSafely5.type])
                        {
                            npc.netUpdate = true;
                            npc.velocity.Y = -7f;
                            if (tileSafely6.nactive() && Main.tileSolid[(int)tileSafely6.type])
                            {
                                npc.velocity.Y = -8f;
                            }
                        }
                        else if (tileSafely4.nactive() && Main.tileSolid[(int)tileSafely4.type])
                        {
                            npc.velocity.Y = -6f;
                            npc.netUpdate = true;
                        }
                        else if (flag32 && tileSafely3.nactive() && !tileSafely3.topSlope() && Main.tileSolid[(int)tileSafely3.type])
                        {
                            npc.velocity.Y = -5f;
                            npc.netUpdate = true;
                        }
                        else if (flag24 && (!tileSafely2.nactive() || !Main.tileSolid[(int)tileSafely2.type]) && (!tileSafely.nactive() || !Main.tileSolid[(int)tileSafely.type]))
                        {
                            npc.velocity.X = npc.velocity.X * 1.5f;
                            npc.velocity.Y = -8f;
                            npc.netUpdate = true;
                        }
                        else if (flag8)
                        {
                            npc.ai[0] = 0f;
                            npc.ai[1] = 0f;
                        }
                        if ((npc.velocity.Y == 0f & flag) && npc.ai[3] == 1f)
                        {
                            npc.velocity.Y = -5f;
                            npc.netUpdate = true;
                        }
                    }
                    if (flag25 && npc.velocity.Y == 0f && Math.Abs(targetData.Center.X - npc.Center.X) < 100f && Math.Abs(targetData.Center.Y - npc.Center.Y) < 50f && Math.Abs(npc.velocity.X) >= 1f && npc.velocity.X * (float)npc.direction > 0f)
                    {
                        npc.velocity.X = MathHelper.Clamp(npc.velocity.X * 2f, -3f, 3f);
                        npc.velocity.Y = -4f;
                        npc.netAlways = true;
                    }
                }
            }
            else if (flag8)
            {
                npc.ai[0] = 0f;
                npc.ai[1] = 0f;
            }
            if (flag2 && npc.noTileCollide)
            {
                if (flag27)
                {
                    if (npc.alpha < 60)
                    {
                        npc.alpha += 20;
                    }
                    npc.localAI[3] = 40f;
                }
                bool arg_34E6_0 = npc.velocity.Y == 0f;
                if (Math.Abs(npc.Center.X - targetData.Center.X) > 200f)
                {
                    npc.spriteDirection = (npc.direction = ((targetData.Center.X > npc.Center.X) ? 1 : -1));
                    npc.velocity.X = MathHelper.Lerp(npc.velocity.X, (float)npc.direction, 0.05f);
                }
                int num55 = 80;
                int height2 = npc.height;
                Vector2 position2 = new Vector2(npc.Center.X - (float)(num55 / 2), npc.position.Y + (float)npc.height - (float)height2);
                bool flag36 = false;
                if (npc.position.Y + (float)npc.height < targetData.Position.Y + (float)targetData.Height - 16f)
                {
                    flag36 = true;
                }
                if (flag36)
                {
                    npc.velocity.Y = npc.velocity.Y + 0.5f;
                }
                else if (Collision.SolidCollision(position2, num55, height2) || targetData.Center.Y - npc.Center.Y < -100f)
                {
                    if (npc.velocity.Y > 0f)
                    {
                        npc.velocity.Y = 0f;
                    }
                    if ((double)npc.velocity.Y > -0.2)
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.025f;
                    }
                    else
                    {
                        npc.velocity.Y = npc.velocity.Y - 0.2f;
                    }
                    if (npc.velocity.Y < -4f)
                    {
                        npc.velocity.Y = -4f;
                    }
                }
                else
                {
                    if (npc.velocity.Y < 0f)
                    {
                        npc.velocity.Y = 0f;
                    }
                    if ((double)npc.velocity.Y < 0.1)
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.025f;
                    }
                    else
                    {
                        npc.velocity.Y = npc.velocity.Y + 0.5f;
                    }
                }
                if (npc.velocity.Y > 10f)
                {
                    npc.velocity.Y = 10f;
                }
                if (arg_34E6_0)
                {
                    npc.velocity.Y = 0f;
                }
            }
        }

        // Token: 0x06000242 RID: 578 RVA: 0x001764F8 File Offset: 0x001746F8
        private static void AI_108_DivingFlyer(NPC npc)
        {
            npc.rotation = npc.velocity.ToRotation();
            float num = 0.4f;
            float num2 = 10f;
            float scaleFactor = 200f;
            float num3 = 750f;
            float num4 = 30f;
            float num5 = 30f;
            float scaleFactor2 = 0.95f;
            int num6 = 50;
            float scaleFactor3 = 14f;
            float num7 = 30f;
            float num8 = 100f;
            float num9 = 20f;
            float num10 = 0f;
            float num11 = 7f;
            bool flag = true;
            bool flag2 = true;
            int num12 = 120;
            bool flag3 = false;
            bool flag4 = false;
            float num13 = 0.05f;
            float num14 = 0f;
            bool flag5 = false;
            int num15 = npc.type;
            if (num15 - 558 > 2)
            {
                if (num15 - 574 <= 1)
                {
                    flag4 = true;
                    num = 0.6f;
                    if (npc.type == 575)
                    {
                        num = 0.4f;
                    }
                    num2 = 4f;
                    scaleFactor = 400f;
                    num3 = 500f;
                    num4 = 90f;
                    num5 = 30f;
                    scaleFactor2 = 0.95f;
                    num6 = 3;
                    scaleFactor3 = 8f;
                    num7 = 30f;
                    num8 = 150f;
                    num9 = 10f;
                    num10 = 0.05f;
                    num11 = 0f;
                    num14 = -0.1f;
                    flag3 = true;
                    flag5 = true;
                }
            }
            else
            {
                flag4 = true;
                num = 0.7f;
                if (npc.type == 559)
                {
                    num = 0.5f;
                }
                if (npc.type == 560)
                {
                    num = 0.2f;
                }
                num2 = 3f;
                scaleFactor = 400f;
                num3 = 500f;
                num4 = 90f;
                num5 = 20f;
                scaleFactor2 = 0.95f;
                num6 = 0;
                scaleFactor3 = 8f;
                num7 = 30f;
                num8 = 150f;
                num9 = 60f;
                num10 = 0.05f;
                num11 = 6f;
                flag2 = false;
                flag5 = true;
            }
            NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
            NPCAimedTarget targetData = npc.GetTargetData(true);
            if (flag5)
            {
                if (npc.localAI[0] == 0f)
                {
                    npc.alpha = 255;
                }
                if (npc.localAI[0] == 30f)
                {
                    Main.PlayTrackedSound(SoundID.DD2_EtherianPortalSpawnEnemy, npc.Center);
                }
                if (npc.localAI[0] < 60f)
                {
                    npc.localAI[0] += 1f;
                    npc.alpha -= 5;
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                    int num16 = (int)npc.localAI[0] / 10;
                    float num17 = npc.Size.Length() / 2f;
                    num17 /= 20f;
                    int maxValue = 5;
                    if (npc.type == 576 || npc.type == 577)
                    {
                        maxValue = 1;
                    }
                    for (int i = 0; i < num16; i++)
                    {
                        if (Main.rand.Next(maxValue) == 0)
                        {
                            Dust expr_303 = Dust.NewDustDirect(npc.position, npc.width, npc.height, 27, npc.velocity.X * 1f, 0f, 100, default(Color), 1f);
                            expr_303.scale = 0.55f;
                            expr_303.fadeIn = 0.7f;
                            expr_303.velocity *= 0.1f * num17;
                            expr_303.velocity += npc.velocity;
                        }
                    }
                }
            }
            if (flag4)
            {
                for (int j = 0; j < 200; j++)
                {
                    if (j != npc.whoAmI && Main.npc[j].active && Main.npc[j].type == npc.type && Math.Abs(npc.position.X - Main.npc[j].position.X) + Math.Abs(npc.position.Y - Main.npc[j].position.Y) < (float)npc.width)
                    {
                        if (npc.position.X < Main.npc[j].position.X)
                        {
                            npc.velocity.X = npc.velocity.X - num13;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + num13;
                        }
                        if (npc.position.Y < Main.npc[j].position.Y)
                        {
                            npc.velocity.Y = npc.velocity.Y - num13;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y + num13;
                        }
                    }
                }
            }
            if (Math.Sign(npc.velocity.X) != 0)
            {
                npc.spriteDirection = -Math.Sign(npc.velocity.X);
            }
            if (npc.rotation < -1.57079637f)
            {
                npc.rotation += 3.14159274f;
            }
            if (npc.rotation > 1.57079637f)
            {
                npc.rotation -= 3.14159274f;
            }
            num10 *= num9;
            if (Main.expertMode)
            {
                num *= Main.expertKnockBack;
            }
            if (npc.ai[0] == 0f)
            {
                npc.knockBackResist = num;
                float scaleFactor4 = num2;
                Vector2 center = npc.Center;
                Vector2 vector = targetData.Center - center;
                Vector2 vector2 = vector - Vector2.UnitY * scaleFactor;
                float arg_5D5_0 = vector.Length();
                vector = Vector2.Normalize(vector) * scaleFactor4;
                vector2 = Vector2.Normalize(vector2) * scaleFactor4;
                bool flag6 = Collision.CanHit(npc.Center, 1, 1, targetData.Center, 1, 1);
                if (npc.ai[3] >= (float)num12)
                {
                    flag6 = true;
                }
                float num18 = 8f;
                flag6 = (flag6 && vector.ToRotation() > 3.14159274f / num18 && vector.ToRotation() < 3.14159274f - 3.14159274f / num18);
                if (arg_5D5_0 > num3 || !flag6)
                {
                    npc.velocity.X = (npc.velocity.X * (num4 - 1f) + vector2.X) / num4;
                    npc.velocity.Y = (npc.velocity.Y * (num4 - 1f) + vector2.Y) / num4;
                    if (!flag6)
                    {
                        npc.ai[3] += 1f;
                        if (npc.ai[3] == (float)num12)
                        {
                            npc.netUpdate = true;
                        }
                    }
                    else
                    {
                        npc.ai[3] = 0f;
                    }
                }
                else
                {
                    npc.ai[0] = 1f;
                    npc.ai[2] = vector.X;
                    npc.ai[3] = vector.Y;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 1f)
            {
                npc.knockBackResist = 0f;
                npc.velocity *= scaleFactor2;
                npc.velocity.Y = npc.velocity.Y + num14;
                npc.ai[1] += 1f;
                if (npc.ai[1] == num5)
                {
                    if (npc.type == 558 || npc.type == 559 || npc.type == 560)
                    {
                        npc.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_WyvernDiveDown, npc.Center).ToFloat();
                        if (Main.rand.Next(5) == 0)
                        {
                            npc.localAI[2] = Main.PlayTrackedSound(SoundID.DD2_WyvernScream, npc.Center).ToFloat();
                        }
                    }
                    else if (npc.type == 574 || npc.type == 575)
                    {
                        npc.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_KoboldFlyerChargeScream, npc.Center).ToFloat();
                        Main.PlayTrackedSound(SoundID.DD2_KoboldIgnite, npc.Center);
                    }
                }
                if (npc.ai[1] >= num5)
                {
                    npc.ai[0] = 2f;
                    npc.ai[1] = 0f;
                    npc.netUpdate = true;
                    Vector2 velocity = new Vector2(npc.ai[2], npc.ai[3]) + new Vector2((float)Main.rand.Next(-num6, num6 + 1), (float)Main.rand.Next(-num6, num6 + 1)) * 0.04f;
                    velocity.Normalize();
                    velocity *= scaleFactor3;
                    npc.velocity = velocity;
                }
            }
            else if (npc.ai[0] == 2f)
            {
                if (npc.ai[1] >= 20f && (npc.type == 574 || npc.type == 575))
                {
                    ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[2]));
                    if (activeSound == null)
                    {
                        npc.localAI[2] = Main.PlayTrackedSound(SoundID.DD2_KoboldIgniteLoop, npc.Center).ToFloat();
                    }
                    else
                    {
                        activeSound.Position = npc.Center;
                    }
                }
                npc.knockBackResist = 0f;
                float num19 = num7;
                npc.ai[1] += 1f;
                bool flag7 = Vector2.Distance(npc.Center, targetData.Center) > num8 && npc.Center.Y > targetData.Center.Y;
                if (flag3)
                {
                    flag7 = false;
                }
                if ((npc.ai[1] >= num19 & flag7) || npc.velocity.Length() < num11)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] = 0f;
                    npc.velocity /= 2f;
                    npc.netUpdate = true;
                    if (flag)
                    {
                        npc.ai[1] = 45f;
                        npc.ai[0] = 4f;
                    }
                }
                else
                {
                    Vector2 center2 = npc.Center;
                    Vector2 vec = targetData.Center - center2;
                    vec.Normalize();
                    if (vec.HasNaNs())
                    {
                        vec = new Vector2((float)npc.direction, 0f);
                    }
                    npc.velocity = (npc.velocity * (num9 - 1f) + vec * (npc.velocity.Length() + num10)) / num9;
                }
                if (flag2 && Collision.SolidCollision(npc.position, npc.width, npc.height))
                {
                    npc.ai[0] = 3f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] = 0f;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 4f)
            {
                npc.ai[1] -= 3f;
                if (npc.ai[1] <= 0f)
                {
                    npc.ai[0] = 0f;
                    npc.ai[1] = 0f;
                    npc.netUpdate = true;
                }
                npc.velocity *= 0.95f;
            }
            ActiveSound activeSound2 = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[1]));
            if (activeSound2 != null)
            {
                activeSound2.Position = npc.Center;
            }
            else
            {
                npc.localAI[1] = SlotId.Invalid.ToFloat();
            }
            if (npc.type == 558 || npc.type == 559 || npc.type == 560)
            {
                activeSound2 = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[2]));
                if (activeSound2 != null)
                {
                    activeSound2.Position = npc.Center;
                }
                else
                {
                    npc.localAI[2] = SlotId.Invalid.ToFloat();
                }
            }
            if (flag2 && npc.ai[0] != 3f && Vector2.Distance(npc.Center, targetData.Center) < 64f)
            {
                npc.ai[0] = 3f;
                npc.ai[1] = 0f;
                npc.ai[2] = 0f;
                npc.ai[3] = 0f;
                npc.netUpdate = true;
            }
            if (npc.ai[0] == 3f)
            {
                npc.position = npc.Center;
                npc.width = (npc.height = 192);
                npc.position.X = npc.position.X - (float)(npc.width / 2);
                npc.position.Y = npc.position.Y - (float)(npc.height / 2);
                npc.velocity = Vector2.Zero;
                npc.damage = (int)(80f * Main.damageMultiplier);
                npc.alpha = 255;
                if (npc.ai[1] == 0f && (npc.type == 574 || npc.type == 575))
                {
                    for (int k = 0; k < 4; k++)
                    {
                        int num20 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 31, 0f, 0f, 100, default(Color), 1.5f);
                        Main.dust[num20].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 2f;
                    }
                    for (int l = 0; l < 20; l++)
                    {
                        int num21 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, 0f, 0f, 200, default(Color), 3.7f);
                        Main.dust[num21].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 2f;
                        Main.dust[num21].noGravity = true;
                        Main.dust[num21].velocity *= 3f;
                        num21 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, 0f, 0f, 100, default(Color), 1.5f);
                        Main.dust[num21].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 4f;
                        Main.dust[num21].velocity *= 2f;
                        Main.dust[num21].noGravity = true;
                        Main.dust[num21].fadeIn = 2.5f;
                    }
                    for (int m = 0; m < 6; m++)
                    {
                        int num22 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 6, 0f, 0f, 0, default(Color), 2.7f);
                        Main.dust[num22].position = npc.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)npc.velocity.ToRotation(), default(Vector2)) * (float)npc.width / 2f;
                        Main.dust[num22].noGravity = true;
                        Main.dust[num22].velocity *= 3f;
                    }
                    for (int n = 0; n < 12; n++)
                    {
                        int num23 = Dust.NewDust(new Vector2(npc.position.X, npc.position.Y), npc.width, npc.height, 31, 0f, 0f, 0, default(Color), 1.5f);
                        Main.dust[num23].position = npc.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)npc.velocity.ToRotation(), default(Vector2)) * (float)npc.width / 2f;
                        Main.dust[num23].noGravity = true;
                        Main.dust[num23].velocity *= 3f;
                    }
                    for (int num24 = 0; num24 < 5; num24++)
                    {
                        int num25 = Gore.NewGore(npc.position + new Vector2((float)(npc.width * Main.rand.Next(100)) / 100f, (float)(npc.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
                        Main.gore[num25].position = npc.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)npc.width / 2f;
                        Main.gore[num25].velocity *= 0.3f;
                        Gore expr_122E_cp_0_cp_0 = Main.gore[num25];
                        expr_122E_cp_0_cp_0.velocity.X = expr_122E_cp_0_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
                        Gore expr_1259_cp_0_cp_0 = Main.gore[num25];
                        expr_1259_cp_0_cp_0.velocity.Y = expr_1259_cp_0_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
                    }
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= 3f)
                {
                    Main.PlaySound(SoundID.Item14, npc.position);
                    npc.life = 0;
                    npc.HitEffect(0, 10.0);
                    npc.active = false;
                }
            }
        }

        // Token: 0x06000243 RID: 579 RVA: 0x001777D8 File Offset: 0x001759D8
        private static void AI_109_DarkMage(NPC npc)
        {
            bool flag = false;
            bool flag2 = false;
            bool flag3 = true;
            bool flag4 = false;
            int num = 4;
            int num2 = 3;
            int num3 = 0;
            float num4 = 0.2f;
            float num5 = 2f;
            float num6 = -0.2f;
            float num7 = -4f;
            bool flag5 = true;
            float num8 = 2f;
            float num9 = 0.1f;
            float num10 = 1f;
            float num11 = 0.04f;
            bool flag6 = false;
            float scaleFactor = 0.96f;
            bool flag7 = true;
            NPCAimedTarget targetData = npc.GetTargetData(true);
            if (npc.type == 564 || npc.type == 565)
            {
                flag5 = false;
                npc.rotation = npc.velocity.X * 0.04f;
                npc.spriteDirection = ((npc.direction > 0) ? 1 : -1);
                num3 = 2;
                num6 = -0.05f;
                num7 = -0.4f;
                num4 = 0.05f;
                num5 = 0.2f;
                num10 = 0.5f;
                num11 = 0.02f;
                num8 = 0.5f;
                num9 = 0.1f;
                npc.localAI[2] = 0f;
                DelegateMethods.v3_1 = new Vector3(0.3f, 0.05f, 0.45f) * 1.5f;
                Utils.PlotTileLine(npc.Top, npc.Bottom, (float)npc.width, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                if (npc.ai[0] < 0f)
                {
                    npc.ai[0] = MathHelper.Min(npc.ai[0] + 1f, 0f);
                }
                if (npc.ai[0] > 0f)
                {
                    flag7 = false;
                    flag6 = true;
                    scaleFactor = 0.9f;
                    npc.ai[0] -= 1f;
                    if (npc.ai[0] == 80f && npc.ai[1] == 2f)
                    {
                        Main.PlayTrackedSound(SoundID.DD2_DarkMageSummonSkeleton, npc.Center);
                    }
                    if (npc.ai[1] == 2f && npc.ai[0] == 64f && Main.netMode != 1)
                    {
                        Projectile.NewProjectile(npc.Center + new Vector2((float)(npc.direction * 24), -40f), Vector2.Zero, 673, 0, 0f, Main.myPlayer, 0f, 0f);
                        DD2Event.RaiseGoblins(npc.Center);
                    }
                    if (npc.ai[1] == 0f && npc.ai[0] == 32f)
                    {
                        Vector2 vector = (targetData.Center - (npc.Center + new Vector2((float)(npc.direction * 10), -16f))).SafeNormalize(Vector2.UnitY) * 14f;
                        npc.direction = ((vector.X > 0f) ? 1 : -1);
                        if (Main.netMode != 1)
                        {
                            Projectile.NewProjectile(npc.Center + new Vector2((float)(npc.direction * 10), -16f), vector, 675, 40, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                    if (npc.ai[0] == 126f && npc.ai[1] == 1f)
                    {
                        Main.PlayTrackedSound(SoundID.DD2_DarkMageCastHeal, npc.Center);
                    }
                    Point p;
                    if (npc.ai[1] == 1f && Main.netMode != 1 && (npc.ai[0] == 40f || npc.ai[0] == 48f || npc.ai[0] == 56f) && WorldUtils.Find(new Vector2(npc.Center.X + (float)(npc.direction * 240), npc.Center.Y).ToTileCoordinates(), Searches.Chain(new Searches.Down(50), new GenCondition[]
					{
						new Conditions.IsSolid()
					}), out p))
                    {
                        Projectile.NewProjectile(p.ToWorldCoordinates(8f, 0f), Vector2.Zero, 674, 0, 0f, Main.myPlayer, 0f, 0f);
                    }
                    if (npc.ai[0] <= 0f)
                    {
                        float arg_467_0 = npc.ai[1];
                        npc.ai[1] += 1f;
                        if (npc.ai[1] >= 3f)
                        {
                            npc.ai[1] = 0f;
                        }
                        npc.ai[0] = -120f;
                        if (arg_467_0 == 0f)
                        {
                            npc.ai[0] = -20f;
                        }
                        npc.netUpdate = true;
                    }
                }
                if (npc.ai[0] == 0f && npc.localAI[3] >= 60f)
                {
                    bool flag8 = false;
                    Vector2 minimum = npc.Center + new Vector2(-600f, -200f);
                    Vector2 maximum = npc.Center + new Vector2(600f, 200f);
                    int num12 = 0;
                    for (int i = 0; i < 200; i++)
                    {
                        NPC nPC = Main.npc[i];
                        if (nPC.active && nPC.lifeMax != nPC.life && nPC.Center.Between(minimum, maximum) && ++num12 >= 2)
                        {
                            flag8 = true;
                            break;
                        }
                    }
                    if (!flag8)
                    {
                        npc.ai[1] = 2f;
                    }
                    if (npc.ai[1] == 2f && !DD2Event.CanRaiseGoblinsHere(npc.Center))
                    {
                        npc.ai[1] = 0f;
                    }
                    bool flag9 = true;
                    if (npc.ai[1] == 0f && (npc.Distance(targetData.Center) >= 1000f || !Collision.CanHitLine(npc.Center, 0, 0, targetData.Center, 0, 0)))
                    {
                        flag9 = false;
                    }
                    if (flag9)
                    {
                        switch ((int)npc.ai[1])
                        {
                            case 0:
                                npc.ai[0] = 97f;
                                break;
                            case 1:
                                npc.ai[0] = 127f;
                                break;
                            case 2:
                                npc.ai[0] = 183f;
                                break;
                        }
                        npc.netUpdate = true;
                        flag6 = true;
                    }
                }
                if (npc.localAI[3] == 0f)
                {
                    npc.alpha = 255;
                }
                if (npc.localAI[3] == 30f)
                {
                    Main.PlayTrackedSound(SoundID.DD2_EtherianPortalSpawnEnemy, npc.Center);
                }
                if (npc.localAI[3] < 60f)
                {
                    npc.localAI[3] += 1f;
                    npc.alpha -= 5;
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                    int num13 = (int)npc.localAI[3] / 10;
                    float num14 = npc.Size.Length() / 2f;
                    num14 /= 20f;
                    int maxValue = 5;
                    if (npc.type == 576 || npc.type == 577)
                    {
                        maxValue = 1;
                    }
                    for (int j = 0; j < num13; j++)
                    {
                        if (Main.rand.Next(maxValue) == 0)
                        {
                            Dust expr_732 = Dust.NewDustDirect(npc.position, npc.width, npc.height, 27, npc.velocity.X * 1f, 0f, 100, default(Color), 1f);
                            expr_732.scale = 0.55f;
                            expr_732.fadeIn = 0.7f;
                            expr_732.velocity *= 0.1f * num14;
                            expr_732.velocity += npc.velocity;
                        }
                    }
                }
            }
            if (npc.justHit)
            {
                npc.localAI[2] = 0f;
            }
            if (!flag2)
            {
                if (npc.localAI[2] >= 0f)
                {
                    float num15 = 16f;
                    bool flag10 = false;
                    bool flag11 = false;
                    if (npc.position.X > npc.localAI[0] - num15 && npc.position.X < npc.localAI[0] + num15)
                    {
                        flag10 = true;
                    }
                    else if ((npc.velocity.X < 0f && npc.direction > 0) || (npc.velocity.X > 0f && npc.direction < 0))
                    {
                        flag10 = true;
                        num15 += 24f;
                    }
                    if (npc.position.Y > npc.localAI[1] - num15 && npc.position.Y < npc.localAI[1] + num15)
                    {
                        flag11 = true;
                    }
                    if (flag10 & flag11)
                    {
                        npc.localAI[2] += 1f;
                        if (npc.localAI[2] >= 30f && num15 == 16f)
                        {
                            flag = true;
                        }
                        if (npc.localAI[2] >= 60f)
                        {
                            npc.localAI[2] = -180f;
                            npc.direction *= -1;
                            npc.velocity.X = npc.velocity.X * -1f;
                            npc.collideX = false;
                        }
                    }
                    else
                    {
                        npc.localAI[0] = npc.position.X;
                        npc.localAI[1] = npc.position.Y;
                        npc.localAI[2] = 0f;
                    }
                    if (flag7)
                    {
                        NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
                    }
                }
                else
                {
                    npc.localAI[2] += 1f;
                    npc.direction = ((targetData.Center.X > npc.Center.X) ? 1 : -1);
                }
            }
            int num16 = (int)((npc.position.X + (float)(npc.width / 2)) / 16f) + npc.direction * 2;
            int num17 = (int)((npc.position.Y + (float)npc.height) / 16f);
            int num18 = (int)npc.Bottom.Y / 16;
            int num19 = (int)npc.Bottom.X / 16;
            if (flag6)
            {
                npc.velocity *= scaleFactor;
                return;
            }
            for (int k = num17; k < num17 + num; k++)
            {
                if (Main.tile[num16, k] == null)
                {
                    Main.tile[num16, k] = new Tile();
                }
                if ((Main.tile[num16, k].nactive() && Main.tileSolid[(int)Main.tile[num16, k].type]) || Main.tile[num16, k].liquid > 0)
                {
                    if (k <= num17 + 1)
                    {
                        flag4 = true;
                    }
                    flag3 = false;
                    break;
                }
            }
            for (int l = num18; l < num18 + num3; l++)
            {
                if (Main.tile[num19, l] == null)
                {
                    Main.tile[num19, l] = new Tile();
                }
                if ((Main.tile[num19, l].nactive() && Main.tileSolid[(int)Main.tile[num19, l].type]) || Main.tile[num19, l].liquid > 0)
                {
                    flag4 = true;
                    flag3 = false;
                    break;
                }
            }
            if (flag5)
            {
                for (int m = num17 - num2; m < num17; m++)
                {
                    if (Main.tile[num16, m] == null)
                    {
                        Main.tile[num16, m] = new Tile();
                    }
                    if ((Main.tile[num16, m].nactive() && Main.tileSolid[(int)Main.tile[num16, m].type]) || Main.tile[num16, m].liquid > 0)
                    {
                        flag4 = false;
                        flag = true;
                        break;
                    }
                }
            }
            if (flag)
            {
                flag4 = false;
                flag3 = true;
            }
            if (flag3)
            {
                npc.velocity.Y = npc.velocity.Y + num4;
                if (npc.velocity.Y > num5)
                {
                    npc.velocity.Y = num5;
                }
            }
            else
            {
                if ((npc.directionY < 0 && npc.velocity.Y > 0f) | flag4)
                {
                    npc.velocity.Y = npc.velocity.Y + num6;
                }
                if (npc.velocity.Y < num7)
                {
                    npc.velocity.Y = num7;
                }
            }
            if (npc.collideX)
            {
                npc.velocity.X = npc.oldVelocity.X * -0.4f;
                if (npc.direction == -1 && npc.velocity.X > 0f && npc.velocity.X < 1f)
                {
                    npc.velocity.X = 1f;
                }
                if (npc.direction == 1 && npc.velocity.X < 0f && npc.velocity.X > -1f)
                {
                    npc.velocity.X = -1f;
                }
            }
            if (npc.collideY)
            {
                npc.velocity.Y = npc.oldVelocity.Y * -0.25f;
                if (npc.velocity.Y > 0f && npc.velocity.Y < 1f)
                {
                    npc.velocity.Y = 1f;
                }
                if (npc.velocity.Y < 0f && npc.velocity.Y > -1f)
                {
                    npc.velocity.Y = -1f;
                }
            }
            if (npc.direction == -1 && npc.velocity.X > -num8)
            {
                npc.velocity.X = npc.velocity.X - num9;
                if (npc.velocity.X > num8)
                {
                    npc.velocity.X = npc.velocity.X - num9;
                }
                else if (npc.velocity.X > 0f)
                {
                    npc.velocity.X = npc.velocity.X + num9 / 2f;
                }
                if (npc.velocity.X < -num8)
                {
                    npc.velocity.X = -num8;
                }
            }
            else if (npc.direction == 1 && npc.velocity.X < num8)
            {
                npc.velocity.X = npc.velocity.X + num9;
                if (npc.velocity.X < -num8)
                {
                    npc.velocity.X = npc.velocity.X + num9;
                }
                else if (npc.velocity.X < 0f)
                {
                    npc.velocity.X = npc.velocity.X - num9 / 2f;
                }
                if (npc.velocity.X > num8)
                {
                    npc.velocity.X = num8;
                }
            }
            if (npc.directionY == -1 && npc.velocity.Y > -num10)
            {
                npc.velocity.Y = npc.velocity.Y - num11;
                if (npc.velocity.Y > num10)
                {
                    npc.velocity.Y = npc.velocity.Y - num11 * 1.25f;
                }
                else if (npc.velocity.Y > 0f)
                {
                    npc.velocity.Y = npc.velocity.Y + num11 * 0.75f;
                }
                if (npc.velocity.Y < -num10)
                {
                    npc.velocity.Y = -num8;
                    return;
                }
            }
            else if (npc.directionY == 1 && npc.velocity.Y < num10)
            {
                npc.velocity.Y = npc.velocity.Y + num11;
                if (npc.velocity.Y < -num10)
                {
                    npc.velocity.Y = npc.velocity.Y + num11 * 1.25f;
                }
                else if (npc.velocity.Y < 0f)
                {
                    npc.velocity.Y = npc.velocity.Y - num11 * 0.75f;
                }
                if (npc.velocity.Y > num10)
                {
                    npc.velocity.Y = num10;
                }
            }
        }

        // Token: 0x0600023E RID: 574 RVA: 0x0016D7E0 File Offset: 0x0016B9E0
        private static void AI_110_Betsy(NPC npc)
        {
            NPCUtils.TargetClosestBetsy(npc, false, null);
            NPCAimedTarget targetData = npc.GetTargetData(true);
            int num = -1;
            float num2 = 1f;
            int num3 = 35;
            int num4 = 35;
            float num5 = 10f;
            float num6 = 0.45f;
            float scaleFactor = 7.5f;
            float num7 = 30f;
            float num8 = 30f;
            float scaleFactor2 = 23f;
            float num9 = 600f;
            float num10 = 12f;
            float num11 = 40f;
            float num12 = 80f;
            float num13 = num11 + num12;
            float num14 = 1500f;
            float num15 = 60f;
            float scaleFactor3 = 13f;
            float amount = 0.0333333351f;
            float scaleFactor4 = 12f;
            int num16 = 10;
            int num17 = 6 * num16;
            float num18 = 60f;
            float num19 = num15 + (float)num17 + num18;
            float num20 = 60f;
            float num21 = 1f;
            float num22 = 6.28318548f * (num21 / num20);
            float num23 = 0.1f;
            float scaleFactor5 = 32f;
            float num24 = 90f;
            float num25 = 20f;
            float arg_F9_0 = npc.ai[0];
            float num26;
            if (npc.ai[0] == 0f)
            {
                float[] expr_115_cp_0 = npc.ai;
                int expr_115_cp_1 = 1;
                num26 = expr_115_cp_0[expr_115_cp_1] + 1f;
                expr_115_cp_0[expr_115_cp_1] = num26;
                if (num26 >= num5)
                {
                    npc.ai[1] = 0f;
                    npc.ai[0] = 1f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                }
            }
            else if (npc.ai[0] == 1f)
            {
                if (npc.ai[2] == 0f)
                {
                    npc.ai[2] = (float)((npc.Center.X < targetData.Center.X) ? 1 : -1);
                }
                Vector2 destination = targetData.Center + new Vector2(-npc.ai[2] * 300f, -200f);
                Vector2 desiredVelocity = npc.DirectionTo(destination) * scaleFactor;
                npc.SimpleFlyMovement(desiredVelocity, num6);
                int num27 = (npc.Center.X < targetData.Center.X) ? 1 : -1;
                npc.direction = (npc.spriteDirection = num27);
                float[] expr_225_cp_0 = npc.ai;
                int expr_225_cp_1 = 1;
                num26 = expr_225_cp_0[expr_225_cp_1] + 1f;
                expr_225_cp_0[expr_225_cp_1] = num26;
                if (num26 >= num7)
                {
                    int num28 = 1;
                    if (npc.ai[3] == 5f && Main.rand.Next(3) == 0)
                    {
                        npc.ai[3] += 1f;
                    }
                    switch ((int)npc.ai[3])
                    {
                        case 0:
                        case 1:
                        case 3:
                            num28 = 2;
                            break;
                        case 2:
                            num28 = 3;
                            break;
                        case 4:
                            num28 = 4;
                            break;
                        case 5:
                            num28 = 5;
                            break;
                        case 6:
                            num28 = 3;
                            break;
                        case 7:
                            num28 = 6;
                            break;
                    }
                    npc.ai[0] = (float)num28;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.ai[3] += 1f;
                    npc.netUpdate = true;
                    if (npc.ai[3] >= 8f)
                    {
                        npc.ai[3] = 0f;
                    }
                    switch (num28)
                    {
                        case 2:
                            {
                                Vector2 vector = npc.DirectionTo(targetData.Center);
                                npc.spriteDirection = ((vector.X > 0f) ? 1 : -1);
                                npc.rotation = vector.ToRotation();
                                if (npc.spriteDirection == -1)
                                {
                                    npc.rotation += 3.14159274f;
                                }
                                npc.velocity = vector * scaleFactor2;
                                break;
                            }
                        case 3:
                            {
                                Vector2 vector2 = new Vector2((float)((targetData.Center.X > npc.Center.X) ? 1 : -1), 0f);
                                npc.spriteDirection = ((vector2.X > 0f) ? 1 : -1);
                                npc.velocity = vector2 * -2f;
                                break;
                            }
                        case 5:
                            {
                                Vector2 vector3 = npc.DirectionTo(targetData.Center);
                                npc.spriteDirection = ((vector3.X > 0f) ? 1 : -1);
                                npc.rotation = vector3.ToRotation();
                                if (npc.spriteDirection == -1)
                                {
                                    npc.rotation += 3.14159274f;
                                }
                                npc.velocity = vector3 * scaleFactor5;
                                break;
                            }
                    }
                }
            }
            else if (npc.ai[0] == 2f)
            {
                if (npc.ai[1] == 0f)
                {
                    Main.PlayTrackedSound(SoundID.DD2_BetsyWindAttack, npc.Center);
                }
                float[] expr_498_cp_0 = npc.ai;
                int expr_498_cp_1 = 1;
                num26 = expr_498_cp_0[expr_498_cp_1] + 1f;
                expr_498_cp_0[expr_498_cp_1] = num26;
                if (num26 >= num8)
                {
                    npc.ai[0] = 1f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                }
            }
            else if (npc.ai[0] == 3f)
            {
                ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(npc.localAI[2]));
                if (activeSound != null)
                {
                    activeSound.Position = npc.Center;
                }
                npc.ai[1] += 1f;
                int num29 = (npc.Center.X < targetData.Center.X) ? 1 : -1;
                npc.ai[2] = (float)num29;
                if (npc.ai[1] < num11)
                {
                    Vector2 vector4 = targetData.Center + new Vector2((float)num29 * -num9, -250f);
                    Vector2 value = npc.DirectionTo(vector4) * num10;
                    if (npc.Distance(vector4) < num10)
                    {
                        npc.Center = vector4;
                    }
                    else
                    {
                        npc.position += value;
                    }
                    if (Vector2.Distance(vector4, npc.Center) < 16f)
                    {
                        npc.ai[1] = num11 - 1f;
                    }
                    num2 = 1.5f;
                }
                if (npc.ai[1] == num11)
                {
                    int num30 = (targetData.Center.X > npc.Center.X) ? 1 : -1;
                    npc.velocity = new Vector2((float)num30, 0f) * 10f;
                    npc.direction = (npc.spriteDirection = num30);
                    if (Main.netMode != 1)
                    {
                        Projectile.NewProjectile(npc.Center, npc.velocity, 687, num3, 0f, Main.myPlayer, 0f, (float)npc.whoAmI);
                    }
                    npc.localAI[2] = Main.PlayTrackedSound(SoundID.DD2_BetsyFlameBreath, npc.Center).ToFloat();
                }
                if (npc.ai[1] >= num11)
                {
                    num2 = 1.5f;
                    if (Math.Abs(targetData.Center.X - npc.Center.X) > 550f && Math.Abs(npc.velocity.X) < 20f)
                    {
                        npc.velocity.X = npc.velocity.X + (float)Math.Sign(npc.velocity.X) * 0.5f;
                    }
                }
                if (npc.ai[1] >= num13)
                {
                    npc.ai[0] = 1f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                }
            }
            else if (npc.ai[0] == 4f)
            {
                int num31 = (npc.Center.X < targetData.Center.X) ? 1 : -1;
                npc.ai[2] = (float)num31;
                if (npc.ai[1] < num15)
                {
                    Vector2 vector5 = targetData.Center + new Vector2((float)num31 * -num14, -350f);
                    Vector2 value2 = npc.DirectionTo(vector5) * scaleFactor3;
                    npc.velocity = Vector2.Lerp(npc.velocity, value2, amount);
                    int num32 = (npc.Center.X < targetData.Center.X) ? 1 : -1;
                    npc.direction = (npc.spriteDirection = num32);
                    if (Vector2.Distance(vector5, npc.Center) < 16f)
                    {
                        npc.ai[1] = num15 - 1f;
                    }
                    num2 = 1.5f;
                }
                else if (npc.ai[1] == num15)
                {
                    Vector2 vector6 = npc.DirectionTo(targetData.Center);
                    vector6.Y *= 0.25f;
                    vector6 = vector6.SafeNormalize(Vector2.UnitX * (float)npc.direction);
                    npc.spriteDirection = ((vector6.X > 0f) ? 1 : -1);
                    npc.rotation = vector6.ToRotation();
                    if (npc.spriteDirection == -1)
                    {
                        npc.rotation += 3.14159274f;
                    }
                    npc.velocity = vector6 * scaleFactor4;
                }
                else
                {
                    npc.position.X = npc.position.X + npc.DirectionTo(targetData.Center).X * 7f;
                    npc.position.Y = npc.position.Y + npc.DirectionTo(targetData.Center + new Vector2(0f, -400f)).Y * 6f;
                    if (npc.ai[1] <= num19 - num18)
                    {
                        num2 = 1.5f;
                    }
                    float num33 = 30f;
                    Vector2 position = npc.Center + new Vector2((110f + num33) * (float)npc.direction, 20f).RotatedBy((double)npc.rotation, default(Vector2));
                    int num34 = (int)(npc.ai[1] - num15 + 1f);
                    if (num34 <= num17 && num34 % num16 == 0 && Main.netMode != 1)
                    {
                        Projectile.NewProjectile(position, npc.velocity, 686, num4, 0f, Main.myPlayer, 0f, 0f);
                    }
                }
                if (npc.ai[1] > num19 - num18)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.1f;
                }
                npc.ai[1] += 1f;
                if (npc.ai[1] >= num19)
                {
                    npc.ai[0] = 1f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                }
            }
            else if (npc.ai[0] == 5f)
            {
                npc.velocity = npc.velocity.RotatedBy((double)(-(double)num22 * (float)npc.direction), default(Vector2));
                npc.position.Y = npc.position.Y - num23;
                npc.position += npc.DirectionTo(targetData.Center) * 10f;
                npc.rotation -= num22 * (float)npc.direction;
                num2 *= 0.7f;
                if (npc.ai[1] == 1f)
                {
                    Main.PlayTrackedSound(SoundID.DD2_BetsyFlyingCircleAttack, npc.Center);
                }
                float[] expr_B0F_cp_0 = npc.ai;
                int expr_B0F_cp_1 = 1;
                num26 = expr_B0F_cp_0[expr_B0F_cp_1] + 1f;
                expr_B0F_cp_0[expr_B0F_cp_1] = num26;
                if (num26 >= num20)
                {
                    npc.ai[0] = 1f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.velocity /= 2f;
                }
            }
            else if (npc.ai[0] == 6f)
            {
                if (npc.ai[1] == 0f)
                {
                    Vector2 destination2 = targetData.Center + new Vector2(0f, -200f);
                    Vector2 desiredVelocity2 = npc.DirectionTo(destination2) * scaleFactor * 2f;
                    npc.SimpleFlyMovement(desiredVelocity2, num6 * 2f);
                    int num35 = (npc.Center.X < targetData.Center.X) ? 1 : -1;
                    npc.direction = (npc.spriteDirection = num35);
                    npc.ai[2] += 1f;
                    if (npc.Distance(targetData.Center) < 350f || npc.ai[2] >= 180f)
                    {
                        npc.ai[1] = 1f;
                        npc.netUpdate = true;
                    }
                }
                else
                {
                    if (npc.ai[1] == 1f)
                    {
                        Main.PlayTrackedSound(SoundID.DD2_BetsyScream);
                    }
                    if (npc.ai[1] < num25)
                    {
                        npc.velocity *= 0.95f;
                    }
                    else
                    {
                        npc.velocity *= 0.98f;
                    }
                    if (npc.ai[1] == num25)
                    {
                        if (npc.velocity.Y > 0f)
                        {
                            npc.velocity.Y = npc.velocity.Y / 3f;
                        }
                        npc.velocity.Y = npc.velocity.Y - 3f;
                    }
                    num2 *= 0.85f;
                    if (npc.ai[1] == 20f || npc.ai[1] == 25f || npc.ai[1] == 30f)
                    {
                        Point point = npc.Center.ToTileCoordinates();
                        int num36 = 30;
                        int num37 = 35;
                        int num38 = 4;
                        for (int i = point.X - num36; i <= point.X + num36; i++)
                        {
                            bool flag = false;
                            for (int j = point.Y - num37 / 3; j < point.Y + num37; j++)
                            {
                                Tile tileSafely = Framing.GetTileSafely(i, j);
                                bool flag2 = tileSafely.active() && Main.tileSolid[(int)tileSafely.type] && !Main.tileFrameImportant[(int)tileSafely.type];
                                if (flag & flag2)
                                {
                                    int num39 = WorldGen.KillTile_GetTileDustAmount(true, tileSafely);
                                    for (int k = 0; k < num39; k++)
                                    {
                                        Dust expr_DD1 = Main.dust[WorldGen.KillTile_MakeTileDust(i, j, tileSafely)];
                                        expr_DD1.velocity.Y = expr_DD1.velocity.Y - (3f + (float)num38 * 1.5f);
                                        expr_DD1.velocity.Y = expr_DD1.velocity.Y * Main.rand.NextFloat();
                                        expr_DD1.scale += (float)num38 * 0.03f;
                                    }
                                    for (int l = 0; l < num39 - 1; l++)
                                    {
                                        Dust expr_E3F = Main.dust[WorldGen.KillTile_MakeTileDust(i, j, tileSafely)];
                                        expr_E3F.velocity.Y = expr_E3F.velocity.Y - (1f + (float)num38);
                                        expr_E3F.velocity.Y = expr_E3F.velocity.Y * Main.rand.NextFloat();
                                    }
                                    if (num39 > 0 && Main.rand.Next(3) != 0)
                                    {
                                        float num40 = (float)(Math.Abs(point.X - i) / (num36 / 2));
                                        Gore expr_EE2 = Gore.NewGoreDirect(npc.position, Vector2.Zero, 61 + Main.rand.Next(3), 1f - (float)num38 * 0.15f + num40 * 0.5f);
                                        expr_EE2.velocity.Y = expr_EE2.velocity.Y - (0.1f + (float)num38 * 0.5f + num40 * (float)num38 * 1f);
                                        expr_EE2.velocity.Y = expr_EE2.velocity.Y * Main.rand.NextFloat();
                                        expr_EE2.position = new Vector2((float)(i * 16 + 20), (float)(j * 16 + 20));
                                    }
                                }
                                flag = !flag2;
                            }
                        }
                    }
                    bool flag3 = npc.ai[1] == 20f || npc.ai[1] == 45f || npc.ai[1] == 70f;
                    if (NPC.CountNPCS(560) > 4)
                    {
                        flag3 = false;
                    }
                    if (flag3 && Main.netMode != 1)
                    {
                        for (int m = 0; m < 1; m++)
                        {
                            Vector2 vector7 = npc.Center + (6.28318548f * Main.rand.NextFloat()).ToRotationVector2() * new Vector2(2f, 1f) * 300f * (0.6f + Main.rand.NextFloat() * 0.4f);
                            if (Vector2.Distance(vector7, targetData.Center) > 100f)
                            {
                                Point point2 = vector7.ToPoint();
                                NPC.NewNPC(point2.X, point2.Y, 560, npc.whoAmI, 0f, 0f, 0f, 0f, 255);
                                Main.PlayTrackedSound(SoundID.DD2_BetsySummon, vector7);
                            }
                        }
                        List<NPC> list = new List<NPC>();
                        for (int n = 0; n < 200; n++)
                        {
                            NPC nPC = Main.npc[n];
                            if (nPC.active && nPC.type == 549)
                            {
                                list.Add(nPC);
                            }
                        }
                        if (list.Count > 0)
                        {
                            for (int num41 = 0; num41 < 3; num41++)
                            {
                                NPC nPC2 = list[Main.rand.Next(list.Count)];
                                Point point3 = nPC2.Center.ToPoint();
                                NPC.NewNPC(point3.X, point3.Y, 560, 0, 0f, 0f, 0f, 0f, 255);
                                Main.PlayTrackedSound(SoundID.DD2_BetsySummon, nPC2.Center);
                            }
                        }
                    }
                    npc.ai[1] += 1f;
                }
                if (npc.ai[1] >= num24)
                {
                    npc.ai[0] = 1f;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                }
            }
            npc.localAI[0] += num2;
            if (npc.localAI[0] >= 36f)
            {
                npc.localAI[0] = 0f;
            }
            if (num != -1)
            {
                npc.localAI[0] = (float)(num * 4);
            }
            float[] expr_11FC_cp_0 = npc.localAI;
            int expr_11FC_cp_1 = 1;
            num26 = expr_11FC_cp_0[expr_11FC_cp_1] + 1f;
            expr_11FC_cp_0[expr_11FC_cp_1] = num26;
            if (num26 >= 60f)
            {
                npc.localAI[1] = 0f;
            }
            float num42 = npc.DirectionTo(targetData.Center).ToRotation();
            float num43 = 0.04f;
            switch ((int)npc.ai[0])
            {
                case 2:
                case 5:
                    num43 = 0f;
                    break;
                case 3:
                    num43 = 0.01f;
                    num42 = 0f;
                    if (npc.spriteDirection == -1)
                    {
                        num42 -= 3.14159274f;
                    }
                    if (npc.ai[1] >= num11)
                    {
                        num42 += (float)npc.spriteDirection * 3.14159274f / 12f;
                        num43 = 0.05f;
                    }
                    break;
                case 4:
                    num43 = 0.01f;
                    num42 = 3.14159274f;
                    if (npc.spriteDirection == 1)
                    {
                        num42 += 3.14159274f;
                    }
                    break;
                case 6:
                    num43 = 0.02f;
                    num42 = 0f;
                    if (npc.spriteDirection == -1)
                    {
                        num42 -= 3.14159274f;
                    }
                    break;
            }
            if (npc.spriteDirection == -1)
            {
                num42 += 3.14159274f;
            }
            if (num43 != 0f)
            {
                npc.rotation = npc.rotation.AngleTowards(num42, num43);
            }
            if (Main.GetActiveSound(SlotId.FromFloat(npc.localAI[2])) == null)
            {
                npc.localAI[2] = SlotId.Invalid.ToFloat();
            }
        }

        // Token: 0x06000244 RID: 580 RVA: 0x00178794 File Offset: 0x00176994
        private static void AI_111_DD2LightningBug(NPC npc)
        {
            bool flag = true;
            float scaleFactor = 7f;
            float num = 60f;
            float num2 = 60f;
            float num3 = 1f;
            float scaleFactor2 = 0.96f;
            int num4 = 30;
            int num5 = 20;
            float num6 = 200f;
            int num7 = 40;
            int num8 = 438;
            float scaleFactor3 = 10f;
            float num9 = 100f;
            bool flag2 = false;
            float num10 = 0.05f;
            Vector2 vector = npc.Center;
            NPCUtils.TargetClosestOldOnesInvasion(npc, true, null);
            NPCAimedTarget targetData = npc.GetTargetData(true);
            bool flag3 = false;
            int num11 = npc.type;
            if (num11 == 578)
            {
                scaleFactor = 4f;
                num = 20f;
                num2 = 20f;
                flag3 = true;
                flag2 = true;
                num10 = 0.1f;
                num8 = 682;
                num7 = 10;
                scaleFactor3 = 10f;
                num9 = 50f;
                num4 = 5;
                num5 = 30;
                vector += new Vector2((float)(-(float)npc.spriteDirection * 20), 10f);
                if (Main.rand.Next(15) == 0)
                {
                    Vector2 position = npc.position;
                    if (npc.direction == -1)
                    {
                        position.X += (float)(npc.width / 2);
                    }
                    Dust dust = Dust.NewDustDirect(position, npc.width / 2, npc.height, 272, 0f, 0f, 0, default(Color), 1f);
                    dust.scale = 0.65f;
                    Dust expr_16E_cp_0_cp_0 = dust;
                    expr_16E_cp_0_cp_0.velocity.Y = expr_16E_cp_0_cp_0.velocity.Y - 0.8f;
                    if (dust.velocity.X * (float)npc.direction > 0f)
                    {
                        Dust expr_19E_cp_0_cp_0 = dust;
                        expr_19E_cp_0_cp_0.velocity.X = expr_19E_cp_0_cp_0.velocity.X * -1f;
                    }
                    if (dust.velocity.Y > 0f)
                    {
                        dust.velocity *= -0.5f;
                    }
                }
                if (Main.rand.Next(80) == 0)
                {
                    Vector2 vector2 = (Main.rand.NextFloat() * 6.28318548f).ToRotationVector2();
                    Dust expr_220 = Dust.NewDustPerfect(npc.Center, 272, new Vector2?(vector2), 0, default(Color), 1f);
                    expr_220.velocity *= 1.1f;
                    expr_220.noGravity = true;
                    expr_220.customData = npc;
                    Dust expr_26A = Dust.NewDustPerfect(npc.Center, 272, new Vector2?(vector2), 0, default(Color), 1f);
                    expr_26A.velocity *= 1.5f;
                    expr_26A.noGravity = true;
                    expr_26A.customData = npc;
                }
            }
            if (flag3)
            {
                if (npc.localAI[1] == 0f)
                {
                    npc.alpha = 255;
                }
                if (npc.localAI[1] == 30f)
                {
                    Main.PlayTrackedSound(SoundID.DD2_EtherianPortalSpawnEnemy, npc.Center);
                }
                if (npc.localAI[1] < 60f)
                {
                    npc.localAI[1] += 1f;
                    npc.alpha -= 5;
                    if (npc.alpha < 0)
                    {
                        npc.alpha = 0;
                    }
                    int num12 = (int)npc.localAI[1] / 10;
                    float num13 = npc.Size.Length() / 2f;
                    num13 /= 20f;
                    int maxValue = 5;
                    if (npc.type == 576 || npc.type == 577)
                    {
                        maxValue = 1;
                    }
                    for (int i = 0; i < num12; i++)
                    {
                        if (Main.rand.Next(maxValue) == 0)
                        {
                            Dust expr_3BB = Dust.NewDustDirect(npc.position, npc.width, npc.height, 27, npc.velocity.X * 1f, 0f, 100, default(Color), 1f);
                            expr_3BB.scale = 0.55f;
                            expr_3BB.fadeIn = 0.7f;
                            expr_3BB.velocity *= 0.1f * num13;
                            expr_3BB.velocity += npc.velocity;
                        }
                    }
                }
            }
            if (flag2)
            {
                for (int j = 0; j < 200; j++)
                {
                    if (j != npc.whoAmI && Main.npc[j].active && Main.npc[j].type == npc.type && Math.Abs(npc.position.X - Main.npc[j].position.X) + Math.Abs(npc.position.Y - Main.npc[j].position.Y) < (float)npc.width)
                    {
                        if (npc.position.X < Main.npc[j].position.X)
                        {
                            npc.velocity.X = npc.velocity.X - num10;
                        }
                        else
                        {
                            npc.velocity.X = npc.velocity.X + num10;
                        }
                        if (npc.position.Y < Main.npc[j].position.Y)
                        {
                            npc.velocity.Y = npc.velocity.Y - num10;
                        }
                        else
                        {
                            npc.velocity.Y = npc.velocity.Y + num10;
                        }
                    }
                }
            }
            npc.rotation = Math.Abs(npc.velocity.X) * (float)npc.direction * 0.1f;
            npc.spriteDirection = npc.direction;
            Vector2 vector3 = vector;
            Vector2 vector4 = targetData.Center - vector3;
            Vector2 vector5 = vector4.SafeNormalize(Vector2.UnitY) * scaleFactor;
            bool flag4 = Collision.CanHit(npc.Center, 1, 1, targetData.Center, 1, 1);
            if (npc.localAI[0] < 0f)
            {
                npc.localAI[0] += 1f;
            }
            if (!flag)
            {
                npc.velocity = (npc.velocity * (num - 1f) + vector5) / num;
                if (npc.timeLeft > 10)
                {
                    npc.timeLeft = 10;
                    return;
                }
            }
            else
            {
                if (vector4.Length() > num6 || !flag4)
                {
                    npc.velocity = (npc.velocity * (num2 - 1f) + vector5) / num2;
                    return;
                }
                if (vector4.Y < num9)
                {
                    npc.velocity.Y = npc.velocity.Y - 0.03f;
                    return;
                }
                if (npc.localAI[0] >= 0f)
                {
                    npc.velocity *= scaleFactor2;
                    if (npc.velocity.Length() < num3 && Main.netMode != 1)
                    {
                        npc.localAI[0] += 1f;
                        if (npc.localAI[0] >= (float)num4)
                        {
                            npc.localAI[0] = (float)(-(float)num5);
                            npc.direction = (npc.spriteDirection = ((vector5.X > 0f) ? 1 : -1));
                            vector5 = vector4 + Utils.RandomVector2(Main.rand, -25f, 25f);
                            vector5.X *= 1f + (float)Main.rand.Next(-20, 21) * 0.005f;
                            vector5.Y *= 1f + (float)Main.rand.Next(-20, 21) * 0.005f;
                            vector5 = vector5.SafeNormalize(Vector2.UnitY) * scaleFactor3;
                            vector5.X *= 1f + (float)Main.rand.Next(-20, 21) * 0.00625f;
                            vector5.Y *= 1f + (float)Main.rand.Next(-20, 21) * 0.00625f;
                            Projectile.NewProjectile(vector3, vector5, num8, num7, 0f, Main.myPlayer, 0f, 0f);
                        }
                    }
                }
            }
        }

    }
}
